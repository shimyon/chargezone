{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\src\\\\views\\\\app\\\\pages\\\\UpdateUser.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, FormGroup, Card, CardBody, Label, Input, Button, Alert } from 'reactstrap';\nimport Select from 'react-select';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport { adminRoot, updateUserAPI, getUserRolesAPI, getUserByIdAPI } from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst UpdateUser = () => {\n  //alert states\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        alertVisible = _useState2[0],\n        setAlertVisible = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        alertMsg = _useState4[0],\n        setAlertMsg = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        alertColor = _useState6[0],\n        setAlertColor = _useState6[1]; //multiSelect state\n\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        selectedOptions = _useState8[0],\n        setSelectedOptions = _useState8[1]; //user roles\n\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        userRolesList = _useState10[0],\n        setUserRolesList = _useState10[1]; //user details state\n\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        name = _useState12[0],\n        setName = _useState12[1];\n\n  const _useState13 = useState(\"\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        email = _useState14[0],\n        setEmail = _useState14[1];\n\n  const _useState15 = useState(\"\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        contactNumber = _useState16[0],\n        setContactNumber = _useState16[1];\n\n  const _useState17 = useState(\"\"),\n        _useState18 = _slicedToArray(_useState17, 2),\n        username = _useState18[0],\n        setUsername = _useState18[1]; //state to disable button on click\n\n\n  const _useState19 = useState(false),\n        _useState20 = _slicedToArray(_useState19, 2),\n        buttonDisabled = _useState20[0],\n        setButtonDisabled = _useState20[1]; // error state\n\n\n  const _useState21 = useState(false),\n        _useState22 = _slicedToArray(_useState21, 2),\n        errorConfirmPassword = _useState22[0],\n        setErrorConfirmPassword = _useState22[1];\n\n  const history = useHistory();\n  const location = useLocation();\n  useEffect(() => {\n    getUserRolesAPICall();\n    getUserByIdAPICall();\n  }, []); //API CALLS\n\n  const getUserRolesAPICall = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context.next = 3;\n            return axios.get(getUserRolesAPI, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n              let userRoles = [];\n\n              if (responseData.status === 1) {\n                responseData.data.map((item, index) => {\n                  userRoles.push({\n                    label: item.name,\n                    value: item.id,\n                    key: index\n                  });\n                });\n                setUserRolesList(userRoles);\n              } else {\n                console.log(responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function getUserRolesAPICall() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const getUserByIdAPICall = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context2.next = 3;\n            return axios.post(getUserByIdAPI, {\n              user_id: location.state.user_id\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n              let tempData = [];\n\n              if (responseData.status === 1) {\n                setName(responseData.data.name);\n                setEmail(responseData.data.email);\n                setContactNumber(responseData.data.contact_number);\n                setUsername(responseData.data.username);\n                responseData.data.roles.map((item, index) => {\n                  tempData.push({\n                    label: item.name,\n                    value: item.id,\n                    key: index\n                  });\n                });\n                setSelectedOptions(tempData);\n              } else {\n                console.log(responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function getUserByIdAPICall() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const updateUserAPICall = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            setButtonDisabled(true);\n            currentUser = getCurrentUser();\n            _context3.next = 4;\n            return axios.post(updateUserAPI, params, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                history.push({\n                  pathname: adminRoot + '/pages/user',\n                  state: {\n                    responseStatus: responseData.status,\n                    responseMsg: responseData.msg\n                  }\n                });\n              } else {\n                setButtonDisabled(false);\n                updateUserAlert(responseData.msg);\n              }\n            }).catch(error => {\n              setButtonDisabled(false);\n              console.log(error);\n            });\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n\n    return function updateUserAPICall(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); //Alert helper methods\n\n\n  const updateUserAlert = msg => {\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  };\n\n  const onDismissAlert = () => {\n    setAlertVisible(false);\n  }; //handle password confirmation\n  // const handleConfirmPassword = (value)=>{\n  //   setConfirmPassword(value);\n  //   if (password === value) {\n  //     setErrorConfirmPassword(false);\n  //   } else {\n  //     setErrorConfirmPassword(true);\n  //   }\n  // }\n  //Form Validation Schema\n\n\n  const UserDetailsValidationSchema = yup.object().shape({\n    name: yup.string().required(\"Name name is required\"),\n    email: yup.string().email(\"Inavlid email format\").required(\"Email is required\"),\n    contact_number: yup.string().nullable().matches(/\\+?\\d[\\d -]{8,12}\\d/, \"Invalid contact number\").length(10, \"Invalid contact number length\").required(\"Contact number is required\"),\n    username: yup.string().required(\"Username is required\"),\n    password: yup.string(),\n    confirm_password: yup.string().equals([yup.ref('password')], \"Passwords must match\")\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"page_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"Update User\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"User\",\n    className: \"mt-2 btn-primary default btn-sm float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 20\n    }\n  }), \" User List\")), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      name: name,\n      email: email,\n      contact_number: contactNumber,\n      username: username,\n      password: \"\",\n      confirm_password: \"\"\n    },\n    validationSchema: UserDetailsValidationSchema,\n    onSubmit: values => {\n      setErrorConfirmPassword(false);\n\n      if (values.password === values.confirm_password) {\n        let roleValue;\n\n        if (Array.isArray(selectedOptions)) {\n          roleValue = selectedOptions[0].label;\n        } else {\n          roleValue = selectedOptions.label;\n        }\n\n        const params = {\n          user_id: location.state.user_id,\n          name: values.name,\n          email: values.email,\n          roles: [roleValue],\n          contact_number: values.contact_number,\n          username: values.username,\n          password: values.password\n        };\n        updateUserAPICall(params);\n      } else {\n        setErrorConfirmPassword(true);\n        return;\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, ({\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    values,\n    touched,\n    errors\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: alertColor,\n    isOpen: alertVisible,\n    toggle: onDismissAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }\n  }, alertMsg)), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 33\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Full Name \",\n    name: \"name\",\n    value: values.name,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.name && touched.name ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 33\n    }\n  }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 35\n    }\n  }, errors.name))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 33\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Email\",\n    value: values.email,\n    name: \"email\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.email && touched.email ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 33\n    }\n  }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 35\n    }\n  }, errors.email))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }, \"Role\"), /*#__PURE__*/React.createElement(Select, {\n    components: {\n      Input: CustomSelectInput\n    },\n    className: \"react-select\",\n    classNamePrefix: \"react-select\",\n    name: \"form-field-name\",\n    value: selectedOptions,\n    onChange: setSelectedOptions,\n    options: userRolesList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 33\n    }\n  }, \"Contact Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Contact Number\",\n    name: \"contact_number\",\n    value: values.contact_number,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.contact_number && touched.contact_number ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 33\n    }\n  }), errors.contact_number && touched.contact_number && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 35\n    }\n  }, errors.contact_number))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 33\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Username\",\n    value: values.username,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.username && touched.username ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 33\n    }\n  }), errors.username && touched.username && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 35\n    }\n  }, errors.username))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 33\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: values.password,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.password && touched.password ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 33\n    }\n  }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 35\n    }\n  }, errors.password))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 33\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"confirm_password\",\n    value: values.confirm_password,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.confirm_password && touched.confirm_password ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 33\n    }\n  }), errors.confirm_password && touched.confirm_password && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 35\n    }\n  }, errors.confirm_password), errorConfirmPassword && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 35\n    }\n  }, \"\\n\" + \"Please confirm Password\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"default mr-2\",\n    onClick: handleSubmit,\n    disabled: buttonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 35\n    }\n  }, \"Update\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"light\",\n    className: \"default\",\n    onClick: () => {\n      history.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 35\n    }\n  }, \"Cancel\")))))))))));\n};\n\nexport default UpdateUser;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/pages/UpdateUser.js"],"names":["React","useState","useEffect","Row","FormGroup","Card","CardBody","Label","Input","Button","Alert","Select","Colxx","Separator","CustomSelectInput","getCurrentUser","adminRoot","updateUserAPI","getUserRolesAPI","getUserByIdAPI","axios","Formik","yup","useHistory","useLocation","UpdateUser","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","selectedOptions","setSelectedOptions","userRolesList","setUserRolesList","name","setName","email","setEmail","contactNumber","setContactNumber","username","setUsername","buttonDisabled","setButtonDisabled","errorConfirmPassword","setErrorConfirmPassword","history","location","getUserRolesAPICall","getUserByIdAPICall","currentUser","get","headers","Authorization","token","then","response","responseData","data","userRoles","status","map","item","index","push","label","value","id","key","console","log","msg","catch","error","post","user_id","state","tempData","contact_number","roles","updateUserAPICall","params","pathname","responseStatus","responseMsg","updateUserAlert","onDismissAlert","UserDetailsValidationSchema","object","shape","string","required","nullable","matches","length","password","confirm_password","equals","ref","values","roleValue","Array","isArray","handleChange","handleBlur","handleSubmit","touched","errors","goBack"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA2C,OAA3C;AACA,SACEC,GADF,EACMC,SADN,EACiBC,IADjB,EACuBC,QADvB,EAEEC,KAFF,EAEQC,KAFR,EAEeC,MAFf,EAEsBC,KAFtB,QAGO,YAHP;AAIA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,4CAAjC;AACA,OAAOC,iBAAP,MAA8B,8CAA9B;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAAQC,SAAR,EAAmBC,aAAnB,EAAiCC,eAAjC,EAAiDC,cAAjD,QAAsE,kCAAtE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,UAAT,EAAoBC,WAApB,QAAuC,kBAAvC;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB;AADuB,oBAEgBxB,QAAQ,CAAC,KAAD,CAFxB;AAAA;AAAA,QAEhByB,YAFgB;AAAA,QAEHC,eAFG;;AAAA,qBAGQ1B,QAAQ,CAAC,EAAD,CAHhB;AAAA;AAAA,QAGhB2B,QAHgB;AAAA,QAGPC,WAHO;;AAAA,qBAIY5B,QAAQ,CAAC,EAAD,CAJpB;AAAA;AAAA,QAIhB6B,UAJgB;AAAA,QAILC,aAJK,kBAKvB;;;AALuB,qBAMuB9B,QAAQ,CAAC,EAAD,CAN/B;AAAA;AAAA,QAMhB+B,eANgB;AAAA,QAMCC,kBAND,kBAOvB;;;AAPuB,qBAQkBhC,QAAQ,CAAC,EAAD,CAR1B;AAAA;AAAA,QAQhBiC,aARgB;AAAA,QAQFC,gBARE,mBASvB;;;AATuB,sBAUAlC,QAAQ,CAAC,EAAD,CAVR;AAAA;AAAA,QAUhBmC,IAVgB;AAAA,QAUXC,OAVW;;AAAA,sBAWEpC,QAAQ,CAAC,EAAD,CAXV;AAAA;AAAA,QAWhBqC,KAXgB;AAAA,QAWVC,QAXU;;AAAA,sBAYkBtC,QAAQ,CAAC,EAAD,CAZ1B;AAAA;AAAA,QAYhBuC,aAZgB;AAAA,QAYFC,gBAZE;;AAAA,sBAaQxC,QAAQ,CAAC,EAAD,CAbhB;AAAA;AAAA,QAahByC,QAbgB;AAAA,QAaPC,WAbO,mBAcvB;;;AAduB,sBAeoB1C,QAAQ,CAAC,KAAD,CAf5B;AAAA;AAAA,QAehB2C,cAfgB;AAAA,QAeDC,iBAfC,mBAgBvB;;;AAhBuB,sBAiBgC5C,QAAQ,CAAC,KAAD,CAjBxC;AAAA;AAAA,QAiBhB6C,oBAjBgB;AAAA,QAiBKC,uBAjBL;;AAmBvB,QAAMC,OAAO,GAAGzB,UAAU,EAA1B;AACA,QAAM0B,QAAQ,GAAGzB,WAAW,EAA5B;AAGAtB,EAAAA,SAAS,CAAC,MAAI;AACZgD,IAAAA,mBAAmB;AACnBC,IAAAA,kBAAkB;AACnB,GAHQ,EAGP,EAHO,CAAT,CAvBuB,CA4BtB;;AACA,QAAMD,mBAAmB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AACrBE,YAAAA,WADqB,GACPrC,cAAc,EADP;AAAA;AAAA,mBAErBK,KAAK,CAACiC,GAAN,CAAUnC,eAAV,EACJ;AAACoC,cAAAA,OAAO,EAAC;AAACC,gBAAAA,aAAa,mBAAYH,WAAW,CAACI,KAAxB;AAAd;AAAT,aADI,EAEHC,IAFG,CAEEC,QAAQ,IAAE;AACd,oBAAMC,YAAY,GAAGD,QAAQ,CAACE,IAA9B;AACA,kBAAIC,SAAS,GAAC,EAAd;;AACA,kBAAIF,YAAY,CAACG,MAAb,KAAwB,CAA5B,EAA+B;AAC7BH,gBAAAA,YAAY,CAACC,IAAb,CAAkBG,GAAlB,CAAsB,CAACC,IAAD,EAAMC,KAAN,KAAc;AACnCJ,kBAAAA,SAAS,CAACK,IAAV,CAAe;AAACC,oBAAAA,KAAK,EAACH,IAAI,CAAC5B,IAAZ;AAAiBgC,oBAAAA,KAAK,EAACJ,IAAI,CAACK,EAA5B;AAA+BC,oBAAAA,GAAG,EAACL;AAAnC,mBAAf;AACD,iBAFA;AAGD9B,gBAAAA,gBAAgB,CAAC0B,SAAD,CAAhB;AACA,eALD,MAKK;AACHU,gBAAAA,OAAO,CAACC,GAAR,CAAYb,YAAY,CAACc,GAAzB;AACD;AACF,aAbG,EAaDC,KAbC,CAaKC,KAAK,IAAE;AACdJ,cAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,aAfG,CAFqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAnBzB,mBAAmB;AAAA;AAAA;AAAA,KAAzB;;AAoBD,QAAMC,kBAAkB;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AACnBC,YAAAA,WADmB,GACLrC,cAAc,EADT;AAAA;AAAA,mBAEnBK,KAAK,CAACwD,IAAN,CAAWzD,cAAX,EACN;AACI0D,cAAAA,OAAO,EAAC5B,QAAQ,CAAC6B,KAAT,CAAeD;AAD3B,aADM,EAIN;AAACvB,cAAAA,OAAO,EAAC;AAACC,gBAAAA,aAAa,mBAAYH,WAAW,CAACI,KAAxB;AAAd;AAAT,aAJM,EAKLC,IALK,CAKAC,QAAQ,IAAE;AACZ,oBAAMC,YAAY,GAAGD,QAAQ,CAACE,IAA9B;AACA,kBAAImB,QAAQ,GAAG,EAAf;;AACA,kBAAIpB,YAAY,CAACG,MAAb,KAAwB,CAA5B,EAA+B;AAC/BzB,gBAAAA,OAAO,CAACsB,YAAY,CAACC,IAAb,CAAkBxB,IAAnB,CAAP;AACAG,gBAAAA,QAAQ,CAACoB,YAAY,CAACC,IAAb,CAAkBtB,KAAnB,CAAR;AACAG,gBAAAA,gBAAgB,CAACkB,YAAY,CAACC,IAAb,CAAkBoB,cAAnB,CAAhB;AACArC,gBAAAA,WAAW,CAACgB,YAAY,CAACC,IAAb,CAAkBlB,QAAnB,CAAX;AACAiB,gBAAAA,YAAY,CAACC,IAAb,CAAkBqB,KAAlB,CAAwBlB,GAAxB,CAA4B,CAACC,IAAD,EAAMC,KAAN,KAAc;AACtCc,kBAAAA,QAAQ,CAACb,IAAT,CAAc;AAACC,oBAAAA,KAAK,EAACH,IAAI,CAAC5B,IAAZ;AAAiBgC,oBAAAA,KAAK,EAACJ,IAAI,CAACK,EAA5B;AAA+BC,oBAAAA,GAAG,EAACL;AAAnC,mBAAd;AACH,iBAFD;AAGAhC,gBAAAA,kBAAkB,CAAC8C,QAAD,CAAlB;AACC,eATD,MASK;AACLR,gBAAAA,OAAO,CAACC,GAAR,CAAYb,YAAY,CAACc,GAAzB;AACC;AACJ,aApBK,EAoBHC,KApBG,CAoBGC,KAAK,IAAE;AACZJ,cAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,aAtBK,CAFmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAlBxB,kBAAkB;AAAA;AAAA;AAAA,KAAxB;;AA2BA,QAAM+B,iBAAiB;AAAA,yEAAG,kBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AACxBtC,YAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACMO,YAAAA,WAFkB,GAEJrC,cAAc,EAFV;AAAA;AAAA,mBAGlBK,KAAK,CAACwD,IAAN,CAAW3D,aAAX,EACNkE,MADM,EAEN;AAAC7B,cAAAA,OAAO,EAAC;AAACC,gBAAAA,aAAa,mBAAYH,WAAW,CAACI,KAAxB;AAAd;AAAT,aAFM,EAGLC,IAHK,CAGAC,QAAQ,IAAE;AACZ,oBAAMC,YAAY,GAAGD,QAAQ,CAACE,IAA9B;;AACA,kBAAID,YAAY,CAACG,MAAb,KAAwB,CAA5B,EAA+B;AAC7Bd,gBAAAA,OAAO,CAACkB,IAAR,CAAa;AACXkB,kBAAAA,QAAQ,EAACpE,SAAS,GAAC,aADR;AAEX8D,kBAAAA,KAAK,EAAC;AACJO,oBAAAA,cAAc,EAAC1B,YAAY,CAACG,MADxB;AAEJwB,oBAAAA,WAAW,EAAC3B,YAAY,CAACc;AAFrB;AAFK,iBAAb;AAOD,eARD,MAQK;AACH5B,gBAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA0C,gBAAAA,eAAe,CAAC5B,YAAY,CAACc,GAAd,CAAf;AACD;AACJ,aAjBK,EAiBHC,KAjBG,CAiBGC,KAAK,IAAE;AACZ9B,cAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA0B,cAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACH,aApBK,CAHkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAjBO,iBAAiB;AAAA;AAAA;AAAA,KAAvB,CA5EuB,CAqGvB;;;AACA,QAAMK,eAAe,GAAId,GAAD,IAAO;AAC7B9C,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,IAAAA,WAAW,CAAC4C,GAAD,CAAX;AACA1C,IAAAA,aAAa,CAAC,QAAD,CAAb;AACD,GAJD;;AAKA,QAAMyD,cAAc,GAAG,MAAI;AACzB7D,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD,CA3GuB,CA8GvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,QAAM8D,2BAA2B,GAAGnE,GAAG,CAACoE,MAAJ,GAAaC,KAAb,CAAmB;AACrDvD,IAAAA,IAAI,EAACd,GAAG,CAACsE,MAAJ,GACAC,QADA,CACS,uBADT,CADgD;AAGrDvD,IAAAA,KAAK,EAAChB,GAAG,CAACsE,MAAJ,GACDtD,KADC,CACK,sBADL,EAEDuD,QAFC,CAEQ,mBAFR,CAH+C;AAMrDb,IAAAA,cAAc,EAAC1D,GAAG,CAACsE,MAAJ,GACFE,QADE,GAEFC,OAFE,CAEM,qBAFN,EAE4B,wBAF5B,EAGFC,MAHE,CAGK,EAHL,EAGQ,+BAHR,EAIFH,QAJE,CAIO,4BAJP,CANsC;AAWrDnD,IAAAA,QAAQ,EAACpB,GAAG,CAACsE,MAAJ,GACJC,QADI,CACK,sBADL,CAX4C;AAarDI,IAAAA,QAAQ,EAAC3E,GAAG,CAACsE,MAAJ,EAb4C;AAcrDM,IAAAA,gBAAgB,EAAC5E,GAAG,CAACsE,MAAJ,GACZO,MADY,CACL,CAAC7E,GAAG,CAAC8E,GAAJ,CAAQ,UAAR,CAAD,CADK,EACkB,sBADlB;AAdoC,GAAnB,CAApC;AAkBA,sBACE,uDACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAG,IAAA,IAAI,EAAC,MAAR;AAAe,IAAA,SAAS,EAAC,6CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAG,IAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,eADJ,CAFJ,eAKE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF,eAUE,oBAAC,MAAD;AACE,IAAA,kBAAkB,EAAE,IADtB;AAEE,IAAA,aAAa,EAAE;AACXhE,MAAAA,IAAI,EAACA,IADM;AAEXE,MAAAA,KAAK,EAACA,KAFK;AAGX0C,MAAAA,cAAc,EAACxC,aAHJ;AAIXE,MAAAA,QAAQ,EAACA,QAJE;AAKXuD,MAAAA,QAAQ,EAAC,EALE;AAMXC,MAAAA,gBAAgB,EAAC;AANN,KAFjB;AAUE,IAAA,gBAAgB,EAAET,2BAVpB;AAWE,IAAA,QAAQ,EAAGY,MAAD,IAAU;AAClBtD,MAAAA,uBAAuB,CAAC,KAAD,CAAvB;;AACA,UAAIsD,MAAM,CAACJ,QAAP,KAAoBI,MAAM,CAACH,gBAA/B,EAAiD;AAC/C,YAAII,SAAJ;;AACA,YAAIC,KAAK,CAACC,OAAN,CAAcxE,eAAd,CAAJ,EAAoC;AAClCsE,UAAAA,SAAS,GAAGtE,eAAe,CAAC,CAAD,CAAf,CAAmBmC,KAA/B;AACD,SAFD,MAEO;AACLmC,UAAAA,SAAS,GAAGtE,eAAe,CAACmC,KAA5B;AACD;;AACD,cAAMgB,MAAM,GAAG;AACbN,UAAAA,OAAO,EAAC5B,QAAQ,CAAC6B,KAAT,CAAeD,OADV;AAEbzC,UAAAA,IAAI,EAACiE,MAAM,CAACjE,IAFC;AAGbE,UAAAA,KAAK,EAAC+D,MAAM,CAAC/D,KAHA;AAIb2C,UAAAA,KAAK,EAAC,CAACqB,SAAD,CAJO;AAKbtB,UAAAA,cAAc,EAACqB,MAAM,CAACrB,cALT;AAMbtC,UAAAA,QAAQ,EAAC2D,MAAM,CAAC3D,QANH;AAObuD,UAAAA,QAAQ,EAACI,MAAM,CAACJ;AAPH,SAAf;AASFf,QAAAA,iBAAiB,CAACC,MAAD,CAAjB;AACC,OAjBD,MAiBO;AACLpC,QAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACA;AACD;AACF,KAlCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAmCK,CAAC;AAAC0D,IAAAA,YAAD;AAAcC,IAAAA,UAAd;AAAyBC,IAAAA,YAAzB;AAAsCN,IAAAA,MAAtC;AAA6CO,IAAAA,OAA7C;AAAqDC,IAAAA;AAArD,GAAD,kBACC,uDACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,IAAX;AAAgB,IAAA,SAAS,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE/E,UAAd;AAA0B,IAAA,MAAM,EAAEJ,YAAlC;AAAgD,IAAA,MAAM,EAAE8D,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG5D,QADH,CADJ,CADF,eAME,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,YAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEyE,MAAM,CAACjE,IAJhB;AAKE,IAAA,QAAQ,EAAEqE,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAOE,IAAA,SAAS,EAAEG,MAAM,CAACzE,IAAP,IAAewE,OAAO,CAACxE,IAAvB,GAA8B,aAA9B,GAA4C,IAPzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAaGyE,MAAM,CAACzE,IAAP,IAAewE,OAAO,CAACxE,IAAvB,iBACC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyByE,MAAM,CAACzE,IAAhC,CAdJ,CADF,CANF,eAyBE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,KAAK,EAAEiE,MAAM,CAAC/D,KAHhB;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,QAAQ,EAAEmE,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAOE,IAAA,SAAS,EAAEG,MAAM,CAACvE,KAAP,IAAgBsE,OAAO,CAACtE,KAAxB,GAAgC,aAAhC,GAA8C,IAP3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAaGuE,MAAM,CAACvE,KAAP,IAAgBsE,OAAO,CAACtE,KAAxB,iBACC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBuE,MAAM,CAACvE,KAAhC,CAdJ,CADF,CAzBF,eA4CE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE;AAAE9B,MAAAA,KAAK,EAAEM;AAAT,KADd;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,eAAe,EAAC,cAHlB;AAIE,IAAA,IAAI,EAAC,iBAJP;AAKE,IAAA,KAAK,EAAEkB,eALT;AAME,IAAA,QAAQ,EAAEC,kBANZ;AAOE,IAAA,OAAO,EAAEC,aAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CA5CF,eA4DE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,gBAFd;AAGE,IAAA,IAAI,EAAC,gBAHP;AAIE,IAAA,KAAK,EAAEmE,MAAM,CAACrB,cAJhB;AAKE,IAAA,QAAQ,EAAEyB,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAOE,IAAA,SAAS,EAAEG,MAAM,CAAC7B,cAAP,IAAyB4B,OAAO,CAAC5B,cAAjC,GAAkD,aAAlD,GAAgE,IAP7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAaG6B,MAAM,CAAC7B,cAAP,IAAyB4B,OAAO,CAAC5B,cAAjC,iBACC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB6B,MAAM,CAAC7B,cAAhC,CAdJ,CADF,CA5DF,eA+EE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,KAAK,EAAEqB,MAAM,CAAC3D,QAJhB;AAKE,IAAA,QAAQ,EAAE+D,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAOE,IAAA,SAAS,EAAEG,MAAM,CAACnE,QAAP,IAAmBkE,OAAO,CAAClE,QAA3B,GAAsC,aAAtC,GAAoD,IAPjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAaImE,MAAM,CAACnE,QAAP,IAAmBkE,OAAO,CAAClE,QAA3B,iBACA;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBmE,MAAM,CAACnE,QAAhC,CAdJ,CADF,CA/EF,eAkGE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAE2D,MAAM,CAACJ,QAJhB;AAKE,IAAA,QAAQ,EAAEQ,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAOE,IAAA,SAAS,EAAEG,MAAM,CAACZ,QAAP,IAAmBW,OAAO,CAACX,QAA3B,GAAsC,aAAtC,GAAoD,IAPjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAaGY,MAAM,CAACZ,QAAP,IAAmBW,OAAO,CAACX,QAA3B,iBACC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBY,MAAM,CAACZ,QAAhC,CAdJ,CADF,CAlGF,eAqHE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,IAAI,EAAC,kBAHP;AAIE,IAAA,KAAK,EAAEI,MAAM,CAACH,gBAJhB;AAKE,IAAA,QAAQ,EAAEO,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAOE,IAAA,SAAS,EAAEG,MAAM,CAACX,gBAAP,IAA2BU,OAAO,CAACV,gBAAnC,GAAsD,aAAtD,GAAoE,IAPjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAaGW,MAAM,CAACX,gBAAP,IAA2BU,OAAO,CAACV,gBAAnC,iBACC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBW,MAAM,CAACX,gBAAhC,CAdJ,EAgBGpD,oBAAoB,iBACnB;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB,OAAK,yBAA9B,CAjBJ,CADF,CArHF,CADJ,eA4KI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,IAAV;AAAe,IAAA,SAAS,EAAC,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,SAAS,EAAC,cAAlC;AAAiD,IAAA,OAAO,EAAE6D,YAA1D;AAAwE,IAAA,QAAQ,EAAE/D,cAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,SAAS,EAAC,SAAhC;AAA0C,IAAA,OAAO,EAAE,MAAI;AAACI,MAAAA,OAAO,CAAC8D,MAAR;AAAiB,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAJF,CADF,CA5KJ,CADJ,CADF,CADF,CADF,CApCN,CAVF,CADF;AAkPD,CA5XD;;AA8XA,eAAerF,UAAf","sourcesContent":["import React, { useState,useEffect }  from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot, updateUserAPI,getUserRolesAPI,getUserByIdAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport { useHistory,useLocation } from \"react-router-dom\";\n\nconst UpdateUser = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //multiSelect state\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  //user roles\n  const [userRolesList,setUserRolesList] = useState([]);\n  //user details state\n  const [name,setName] = useState(\"\");\n  const [email,setEmail] = useState(\"\");\n  const [contactNumber,setContactNumber] = useState(\"\");\n  const [username,setUsername] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  // error state\n  const [errorConfirmPassword,setErrorConfirmPassword] = useState(false);\n\n  const history = useHistory();\n  const location = useLocation();\n\n\n  useEffect(()=>{\n    getUserRolesAPICall();\n    getUserByIdAPICall();\n  },[])\n\n   //API CALLS\n   const getUserRolesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getUserRolesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let userRoles=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           userRoles.push({label:item.name,value:item.id,key:index})\n         })\n         setUserRolesList(userRoles);\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const getUserByIdAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getUserByIdAPI,\n    {\n        user_id:location.state.user_id\n    },\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        let tempData = [];\n        if (responseData.status === 1) {\n        setName(responseData.data.name);\n        setEmail(responseData.data.email);\n        setContactNumber(responseData.data.contact_number);\n        setUsername(responseData.data.username);\n        responseData.data.roles.map((item,index)=>{\n            tempData.push({label:item.name,value:item.id,key:index})\n        })\n        setSelectedOptions(tempData);\n        }else{\n        console.log(responseData.msg);\n        }\n    }).catch(error=>{\n        console.log(error);\n    })\n  }\n\n  const updateUserAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(updateUserAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/user',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          updateUserAlert(responseData.msg);\n        }\n    }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n    })\n  }\n  //Alert helper methods\n  const updateUserAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle password confirmation\n  // const handleConfirmPassword = (value)=>{\n  //   setConfirmPassword(value);\n  //   if (password === value) {\n  //     setErrorConfirmPassword(false);\n  //   } else {\n  //     setErrorConfirmPassword(true);\n  //   }\n  // }\n  //Form Validation Schema\n  const UserDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name name is required\"),\n    email:yup.string()\n        .email(\"Inavlid email format\")\n        .required(\"Email is required\"),\n    contact_number:yup.string()\n                .nullable()\n                .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n                .length(10,\"Invalid contact number length\")\n                .required(\"Contact number is required\"),\n    username:yup.string()\n        .required(\"Username is required\"),\n    password:yup.string(),\n    confirm_password:yup.string()\n        .equals([yup.ref('password')], \"Passwords must match\")\n  });\n  \n  return (    \n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update User</span>\n            <a href=\"User\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> User List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true} \n        initialValues={{\n            name:name,\n            email:email,\n            contact_number:contactNumber,\n            username:username,\n            password:\"\",\n            confirm_password:\"\",\n        }}\n        validationSchema={UserDetailsValidationSchema} \n        onSubmit={(values)=>{\n          setErrorConfirmPassword(false);\n          if (values.password === values.confirm_password) {\n            let roleValue;\n            if (Array.isArray(selectedOptions)) {\n              roleValue = selectedOptions[0].label;\n            } else {\n              roleValue = selectedOptions.label;\n            }\n            const params = {\n              user_id:location.state.user_id,\n              name:values.name,\n              email:values.email,\n              roles:[roleValue],\n              contact_number:values.contact_number,\n              username:values.username,\n              password:values.password\n            }\n          updateUserAPICall(params);\n          } else {\n            setErrorConfirmPassword(true);\n            return;\n          }\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                  {alertMsg}\n                                </Alert>\n                              </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Full Name \"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Email\"\n                                  value={values.email}\n                                  name=\"email\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.email && touched.email ? \"input-error\":null}\n                                />\n                                {errors.email && touched.email &&(\n                                  <span className=\"error\">{errors.email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Role\n                                </Label>\n                                <Select\n                                  components={{ Input: CustomSelectInput }}\n                                  className=\"react-select\"\n                                  classNamePrefix=\"react-select\"\n                                  name=\"form-field-name\"\n                                  value={selectedOptions}\n                                  onChange={setSelectedOptions}\n                                  options={userRolesList}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Username\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"username\"\n                                  placeholder=\"Username\"\n                                  value={values.username}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.username && touched.username ? \"input-error\":null}\n                                />\n                                 {errors.username && touched.username &&(\n                                  <span className=\"error\">{errors.username}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Password\n                                </Label>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Password\"\n                                  name=\"password\"\n                                  value={values.password}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.password && touched.password ? \"input-error\":null}\n                                />\n                                {errors.password && touched.password &&(\n                                  <span className=\"error\">{errors.password}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Confirm Password\n                                </Label>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Confirm Password\"\n                                  name=\"confirm_password\"\n                                  value={values.confirm_password}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.confirm_password && touched.confirm_password ? \"input-error\":null}\n                                />\n                                {errors.confirm_password && touched.confirm_password &&(\n                                  <span className=\"error\">{errors.confirm_password}</span>\n                                )}\n                                {errorConfirmPassword && \n                                  <span className=\"error\">{\"\\n\"+\"Please confirm Password\"}</span>\n                                }\n                              </FormGroup>\n                            </Colxx>\n                            {/* <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Password\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Password\"\n                                  name=\"password\"\n                                  value={password}\n                                  onChange={e=>setPassword(e.target.value)}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Confirm Password\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Confirm Password\"\n                                  name=\"confirm_password\"\n                                  value={confirmPassword}\n                                  onChange={e=>handleConfirmPassword(e.target.value)}\n                                />\n                                {errorConfirmPassword && \n                                  <span className=\"error\">Passwords must match</span>\n                                }\n                              </FormGroup>\n                            </Colxx> */}\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default UpdateUser;"]},"metadata":{},"sourceType":"module"}