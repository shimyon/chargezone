{"ast":null,"code":"import _objectWithoutProperties from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{Route,Redirect}from'react-router-dom';import{getCurrentUser}from'./Utils';import{isAuthGuardActive}from'../constants/defaultValues';const ProtectedRoute=(_ref)=>{let Component=_ref.component,_ref$roles=_ref.roles,roles=_ref$roles===void 0?undefined:_ref$roles,rest=_objectWithoutProperties(_ref,[\"component\",\"roles\"]);const setComponent=props=>{if(isAuthGuardActive){const currentUser=getCurrentUser();if(currentUser){if(roles){if(roles.includes(currentUser.user_detail.roles[0])){return/*#__PURE__*/React.createElement(Component,props);}else{return/*#__PURE__*/React.createElement(Redirect,{to:{pathname:'/unauthorized',state:{from:props.location}}});}}else{return/*#__PURE__*/React.createElement(Component,props);}}else{return/*#__PURE__*/React.createElement(Redirect,{to:{pathname:'/user/login',state:{from:props.location}}});}}else{return/*#__PURE__*/React.createElement(Component,props);}};return/*#__PURE__*/React.createElement(Route,Object.assign({},rest,{render:setComponent}));};const UserRole={Admin:3,Operator:1,Manager:4};export{ProtectedRoute,UserRole};","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/helpers/authHelper.js"],"names":["React","Route","Redirect","getCurrentUser","isAuthGuardActive","ProtectedRoute","Component","component","roles","undefined","rest","setComponent","props","currentUser","includes","user_detail","pathname","state","from","location","UserRole","Admin","Operator","Manager"],"mappings":"kNACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACIC,KADJ,CAEIC,QAFJ,KAGO,kBAHP,CAIA,OAASC,cAAT,KAA+B,SAA/B,CACA,OAASC,iBAAT,KAAkC,4BAAlC,CAEA,KAAMC,CAAAA,cAAc,CAAG,QAA0D,IAA5CC,CAAAA,SAA4C,MAAvDC,SAAuD,iBAAjCC,KAAiC,CAAjCA,KAAiC,qBAAzBC,SAAyB,YAAXC,IAAW,sDAC7E,KAAMC,CAAAA,YAAY,CAAIC,KAAD,EAAW,CAC5B,GAAIR,iBAAJ,CAAuB,CACnB,KAAMS,CAAAA,WAAW,CAAGV,cAAc,EAAlC,CACA,GAAIU,WAAJ,CAAiB,CACb,GAAIL,KAAJ,CAAW,CACP,GAAIA,KAAK,CAACM,QAAN,CAAeD,WAAW,CAACE,WAAZ,CAAwBP,KAAxB,CAA8B,CAA9B,CAAf,CAAJ,CAAsD,CAClD,mBAAO,oBAAC,SAAD,CAAeI,KAAf,CAAP,CACH,CAFD,IAEO,CACH,mBAAO,oBAAC,QAAD,EACH,EAAE,CAAE,CACAI,QAAQ,CAAE,eADV,CAEAC,KAAK,CAAE,CAAEC,IAAI,CAAEN,KAAK,CAACO,QAAd,CAFP,CADD,EAAP,CAKH,CACJ,CAVD,IAUO,CACH,mBAAO,oBAAC,SAAD,CAAeP,KAAf,CAAP,CACH,CACJ,CAdD,IAcO,CACH,mBAAO,oBAAC,QAAD,EACH,EAAE,CAAE,CACAI,QAAQ,CAAE,aADV,CAEAC,KAAK,CAAE,CAAEC,IAAI,CAAEN,KAAK,CAACO,QAAd,CAFP,CADD,EAAP,CAKH,CACJ,CAvBD,IAuBO,CACH,mBAAO,oBAAC,SAAD,CAAeP,KAAf,CAAP,CACH,CAEJ,CA5BD,CA8BA,mBACI,oBAAC,KAAD,kBACQF,IADR,EAEI,MAAM,CAAEC,YAFZ,GADJ,CAMH,CArCD,CAsCA,KAAMS,CAAAA,QAAQ,CAAG,CACbC,KAAK,CAAE,CADM,CAEbC,QAAQ,CAAE,CAFG,CAGbC,OAAO,CAAE,CAHI,CAAjB,CAMA,OAASlB,cAAT,CAAyBe,QAAzB","sourcesContent":["\nimport React from 'react';\nimport {\n    Route,\n    Redirect,\n} from 'react-router-dom';\nimport { getCurrentUser } from './Utils'\nimport { isAuthGuardActive } from '../constants/defaultValues';\n\nconst ProtectedRoute = ({ component: Component, roles = undefined, ...rest }) => {\n    const setComponent = (props) => {\n        if (isAuthGuardActive) {\n            const currentUser = getCurrentUser();\n            if (currentUser) {\n                if (roles) {\n                    if (roles.includes(currentUser.user_detail.roles[0])) {\n                        return <Component {...props} />;\n                    } else {\n                        return <Redirect\n                            to={{\n                                pathname: '/unauthorized',\n                                state: { from: props.location },\n                            }} />\n                    }\n                } else {\n                    return <Component {...props} />;\n                }\n            } else {\n                return <Redirect\n                    to={{\n                        pathname: '/user/login',\n                        state: { from: props.location },\n                    }} />\n            }\n        } else {\n            return <Component {...props} />;\n        }\n\n    }\n\n    return (\n        <Route\n            {...rest}\n            render={setComponent}\n        />\n    );\n}\nconst UserRole = {\n    Admin: 3,\n    Operator: 1,\n    Manager: 4\n}\n\nexport { ProtectedRoute, UserRole };\n"]},"metadata":{},"sourceType":"module"}