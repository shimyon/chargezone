{"ast":null,"code":"import _objectWithoutProperties from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\src\\\\helpers\\\\authHelper.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { getCurrentUser } from './Utils';\nimport { isAuthGuardActive } from '../constants/defaultValues';\n\nconst ProtectedRoute = (_ref) => {\n  let Component = _ref.component,\n      _ref$roles = _ref.roles,\n      roles = _ref$roles === void 0 ? undefined : _ref$roles,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"roles\"]);\n\n  const setComponent = props => {\n    if (isAuthGuardActive) {\n      const currentUser = getCurrentUser();\n\n      if (currentUser) {\n        if (roles) {\n          if (roles.includes(currentUser.user_detail.roles[0])) {\n            return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 17,\n                columnNumber: 32\n              }\n            }));\n          } else {\n            return /*#__PURE__*/React.createElement(Redirect, {\n              to: {\n                pathname: '/unauthorized',\n                state: {\n                  from: props.location\n                }\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 32\n              }\n            });\n          }\n        } else {\n          return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 28\n            }\n          }));\n        }\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: '/user/login',\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 24\n          }\n        });\n      }\n    } else {\n      return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }\n      }));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: setComponent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst UserRole = {\n  Admin: 3,\n  Operator: 1,\n  Manager: 4\n};\nexport { ProtectedRoute, UserRole };","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/helpers/authHelper.js"],"names":["React","Route","Redirect","getCurrentUser","isAuthGuardActive","ProtectedRoute","Component","component","roles","undefined","rest","setComponent","props","currentUser","includes","user_detail","pathname","state","from","location","UserRole","Admin","Operator","Manager"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,KADJ,EAEIC,QAFJ,QAGO,kBAHP;AAIA,SAASC,cAAT,QAA+B,SAA/B;AACA,SAASC,iBAAT,QAAkC,4BAAlC;;AAEA,MAAMC,cAAc,GAAG,UAA0D;AAAA,MAA5CC,SAA4C,QAAvDC,SAAuD;AAAA,wBAAjCC,KAAiC;AAAA,MAAjCA,KAAiC,2BAAzBC,SAAyB;AAAA,MAAXC,IAAW;;AAC7E,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC5B,QAAIR,iBAAJ,EAAuB;AACnB,YAAMS,WAAW,GAAGV,cAAc,EAAlC;;AACA,UAAIU,WAAJ,EAAiB;AACb,YAAIL,KAAJ,EAAW;AACP,cAAIA,KAAK,CAACM,QAAN,CAAeD,WAAW,CAACE,WAAZ,CAAwBP,KAAxB,CAA8B,CAA9B,CAAf,CAAJ,EAAsD;AAClD,gCAAO,oBAAC,SAAD,oBAAeI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACH,WAFD,MAEO;AACH,gCAAO,oBAAC,QAAD;AACH,cAAA,EAAE,EAAE;AACAI,gBAAAA,QAAQ,EAAE,eADV;AAEAC,gBAAAA,KAAK,EAAE;AAAEC,kBAAAA,IAAI,EAAEN,KAAK,CAACO;AAAd;AAFP,eADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AAKH;AACJ,SAVD,MAUO;AACH,8BAAO,oBAAC,SAAD,oBAAeP,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACH;AACJ,OAdD,MAcO;AACH,4BAAO,oBAAC,QAAD;AACH,UAAA,EAAE,EAAE;AACAI,YAAAA,QAAQ,EAAE,aADV;AAEAC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAEN,KAAK,CAACO;AAAd;AAFP,WADD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH;AACJ,KAvBD,MAuBO;AACH,0BAAO,oBAAC,SAAD,oBAAeP,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACH;AAEJ,GA5BD;;AA8BA,sBACI,oBAAC,KAAD,oBACQF,IADR;AAEI,IAAA,MAAM,EAAEC,YAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAMH,CArCD;;AAsCA,MAAMS,QAAQ,GAAG;AACbC,EAAAA,KAAK,EAAE,CADM;AAEbC,EAAAA,QAAQ,EAAE,CAFG;AAGbC,EAAAA,OAAO,EAAE;AAHI,CAAjB;AAMA,SAASlB,cAAT,EAAyBe,QAAzB","sourcesContent":["\nimport React from 'react';\nimport {\n    Route,\n    Redirect,\n} from 'react-router-dom';\nimport { getCurrentUser } from './Utils'\nimport { isAuthGuardActive } from '../constants/defaultValues';\n\nconst ProtectedRoute = ({ component: Component, roles = undefined, ...rest }) => {\n    const setComponent = (props) => {\n        if (isAuthGuardActive) {\n            const currentUser = getCurrentUser();\n            if (currentUser) {\n                if (roles) {\n                    if (roles.includes(currentUser.user_detail.roles[0])) {\n                        return <Component {...props} />;\n                    } else {\n                        return <Redirect\n                            to={{\n                                pathname: '/unauthorized',\n                                state: { from: props.location },\n                            }} />\n                    }\n                } else {\n                    return <Component {...props} />;\n                }\n            } else {\n                return <Redirect\n                    to={{\n                        pathname: '/user/login',\n                        state: { from: props.location },\n                    }} />\n            }\n        } else {\n            return <Component {...props} />;\n        }\n\n    }\n\n    return (\n        <Route\n            {...rest}\n            render={setComponent}\n        />\n    );\n}\nconst UserRole = {\n    Admin: 3,\n    Operator: 1,\n    Manager: 4\n}\n\nexport { ProtectedRoute, UserRole };\n"]},"metadata":{},"sourceType":"module"}