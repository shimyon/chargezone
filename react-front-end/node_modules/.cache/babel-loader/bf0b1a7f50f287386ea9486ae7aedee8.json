{"ast":null,"code":"var _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\src\\\\components\\\\common\\\\react-notifications\\\\NotificationContainer.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport NotificationManager from './NotificationManager';\nimport Notifications from './Notifications';\n\nclass NotificationContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentWillUnmount = () => {\n      NotificationManager.removeChangeListener(this.handleStoreChange);\n    };\n\n    this.handleStoreChange = notifications => {\n      this.setState({\n        notifications\n      });\n    };\n\n    this.handleRequestHide = notification => {\n      NotificationManager.remove(notification);\n    };\n\n    NotificationManager.addChangeListener(this.handleStoreChange);\n    this.state = {\n      notifications: []\n    };\n  }\n\n  render() {\n    const notifications = this.state.notifications;\n    const _this$props = this.props,\n          enterTimeout = _this$props.enterTimeout,\n          leaveTimeout = _this$props.leaveTimeout;\n    return /*#__PURE__*/React.createElement(Notifications, {\n      enterTimeout: enterTimeout,\n      leaveTimeout: leaveTimeout,\n      notifications: notifications,\n      onRequestHide: this.handleRequestHide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nNotificationContainer.propTypes = {\n  enterTimeout: PropTypes.number,\n  leaveTimeout: PropTypes.number\n};\nNotificationContainer.defaultProps = {\n  enterTimeout: 400,\n  leaveTimeout: 400\n};\nexport default NotificationContainer;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/components/common/react-notifications/NotificationContainer.js"],"names":["React","PropTypes","NotificationManager","Notifications","NotificationContainer","Component","constructor","props","componentWillUnmount","removeChangeListener","handleStoreChange","notifications","setState","handleRequestHide","notification","remove","addChangeListener","state","render","enterTimeout","leaveTimeout","propTypes","number","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,qBAAN,SAAoCJ,KAAK,CAACK,SAA1C,CAAoD;AAClDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,oBARmB,GAQI,MAAM;AAC3BN,MAAAA,mBAAmB,CAACO,oBAApB,CAAyC,KAAKC,iBAA9C;AACD,KAVkB;;AAAA,SAYnBA,iBAZmB,GAYEC,aAAD,IAAmB;AACrC,WAAKC,QAAL,CAAc;AACZD,QAAAA;AADY,OAAd;AAGD,KAhBkB;;AAAA,SAkBnBE,iBAlBmB,GAkBEC,YAAD,IAAkB;AACpCZ,MAAAA,mBAAmB,CAACa,MAApB,CAA2BD,YAA3B;AACD,KApBkB;;AAEjBZ,IAAAA,mBAAmB,CAACc,iBAApB,CAAsC,KAAKN,iBAA3C;AACA,SAAKO,KAAL,GAAa;AACXN,MAAAA,aAAa,EAAE;AADJ,KAAb;AAGD;;AAgBDO,EAAAA,MAAM,GAAG;AAAA,UACCP,aADD,GACmB,KAAKM,KADxB,CACCN,aADD;AAAA,wBAEgC,KAAKJ,KAFrC;AAAA,UAECY,YAFD,eAECA,YAFD;AAAA,UAEeC,YAFf,eAEeA,YAFf;AAGP,wBACE,oBAAC,aAAD;AACE,MAAA,YAAY,EAAED,YADhB;AAEE,MAAA,YAAY,EAAEC,YAFhB;AAGE,MAAA,aAAa,EAAET,aAHjB;AAIE,MAAA,aAAa,EAAE,KAAKE,iBAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD;;AAlCiD;;AAqCpDT,qBAAqB,CAACiB,SAAtB,GAAkC;AAChCF,EAAAA,YAAY,EAAElB,SAAS,CAACqB,MADQ;AAEhCF,EAAAA,YAAY,EAAEnB,SAAS,CAACqB;AAFQ,CAAlC;AAKAlB,qBAAqB,CAACmB,YAAtB,GAAqC;AACnCJ,EAAAA,YAAY,EAAE,GADqB;AAEnCC,EAAAA,YAAY,EAAE;AAFqB,CAArC;AAKA,eAAehB,qBAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport NotificationManager from './NotificationManager';\nimport Notifications from './Notifications';\n\nclass NotificationContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    NotificationManager.addChangeListener(this.handleStoreChange);\n    this.state = {\n      notifications: [],\n    };\n  }\n\n  componentWillUnmount = () => {\n    NotificationManager.removeChangeListener(this.handleStoreChange);\n  };\n\n  handleStoreChange = (notifications) => {\n    this.setState({\n      notifications,\n    });\n  };\n\n  handleRequestHide = (notification) => {\n    NotificationManager.remove(notification);\n  };\n\n  render() {\n    const { notifications } = this.state;\n    const { enterTimeout, leaveTimeout } = this.props;\n    return (\n      <Notifications\n        enterTimeout={enterTimeout}\n        leaveTimeout={leaveTimeout}\n        notifications={notifications}\n        onRequestHide={this.handleRequestHide}\n      />\n    );\n  }\n}\n\nNotificationContainer.propTypes = {\n  enterTimeout: PropTypes.number,\n  leaveTimeout: PropTypes.number,\n};\n\nNotificationContainer.defaultProps = {\n  enterTimeout: 400,\n  leaveTimeout: 400,\n};\n\nexport default NotificationContainer;\n"]},"metadata":{},"sourceType":"module"}