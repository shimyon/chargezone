{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\src\\\\views\\\\app\\\\pages\\\\AddSwappingStation.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, FormGroup, Card, CardBody, Label, Input, Button, Alert } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport { addSwappingStationAPI, getCountriesAPI, getStatesByCountryAPI, getCitiesByStateAPI, adminRoot } from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nconst AddSwappingStation = () => {\n  //alert states\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        alertVisible = _useState2[0],\n        setAlertVisible = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        alertMsg = _useState4[0],\n        setAlertMsg = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        alertColor = _useState6[0],\n        setAlertColor = _useState6[1]; //state to disable button on click\n\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        buttonDisabled = _useState8[0],\n        setButtonDisabled = _useState8[1]; // list state\n\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        countryList = _useState10[0],\n        setCountryList = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        stateList = _useState12[0],\n        setStateList = _useState12[1];\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        cityList = _useState14[0],\n        setCityList = _useState14[1];\n\n  const _useState15 = useState(\"\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        countryId = _useState16[0],\n        setCountryId = _useState16[1];\n\n  const _useState17 = useState(\"\"),\n        _useState18 = _slicedToArray(_useState17, 2),\n        stateId = _useState18[0],\n        setStateId = _useState18[1];\n\n  const _useState19 = useState(\"\"),\n        _useState20 = _slicedToArray(_useState19, 2),\n        cityId = _useState20[0],\n        setCityId = _useState20[1];\n\n  const history = useHistory();\n  useEffect(() => {\n    getCountryNamesAPICall();\n  }, []); //API calls\n\n  const getCountryNamesAPICall = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context.next = 3;\n            return axios.get(getCountriesAPI, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setCountryList(responseData.data);\n              } else {\n                console.log(responseData.status, responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function getCountryNamesAPICall() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const getStateNamesAPICall = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(country) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context2.next = 3;\n            return axios.post(getStatesByCountryAPI, {\n              country_id: country\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setStateList(responseData.data);\n              } else {\n                console.log(responseData.status, responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function getStateNamesAPICall(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const getCityNamesAPICall = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(state) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context3.next = 3;\n            return axios.post(getCitiesByStateAPI, {\n              state_id: state\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setCityList(responseData.data);\n              } else {\n                console.log(responseData.status, responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n\n    return function getCityNamesAPICall(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  const addSwappingStationAPICall = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(params) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            setButtonDisabled(true);\n            currentUser = getCurrentUser();\n            _context4.next = 4;\n            return axios.post(addSwappingStationAPI, params, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                history.push({\n                  pathname: adminRoot + '/pages/swapping_station',\n                  state: {\n                    responseStatus: responseData.status,\n                    responseMsg: responseData.msg\n                  }\n                });\n              } else {\n                setButtonDisabled(false);\n                stationAddedAlert(responseData.msg);\n              }\n            }).catch(error => {\n              setButtonDisabled(false);\n              console.log(error);\n            });\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n\n    return function addSwappingStationAPICall(_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }(); //helper methods\n  //Alert helper methods\n\n\n  const stationAddedAlert = msg => {\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  };\n\n  const onDismissAlert = () => {\n    setAlertVisible(false);\n  }; //handle country select\n\n\n  const handleCountrySelect = country => {\n    setCountryId(country);\n    getStateNamesAPICall(country);\n  }; //handle state select\n\n\n  const handleStateSelect = state => {\n    setStateId(state);\n    console.log(state);\n    getCityNamesAPICall(state);\n  }; //handle city select\n\n\n  const handleCitySelect = city => {\n    setCityId(city);\n  }; //Form Validation Schema\n\n\n  const StationDetailsValidationSchema = yup.object().shape({\n    name: yup.string().required(\"Station name is required\"),\n    ev_capacity: yup.string().matches(/^\\d+$/, \"Only numbers allowed\").required(\"EV capacity is required\"),\n    address: yup.string().required(\"Address is required\")\n  });\n  const initialValues = {\n    name: \"\",\n    ev_capacity: \"\",\n    latitude: \"\",\n    longitude: \"\",\n    address: \"\",\n    remark_1: \"\",\n    remark_2: \"\"\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"page_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Add Swapping Station\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"swapping_station\",\n    className: \"btn-primary default btn-sm float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 20\n    }\n  }), \" Swapping Station List\")), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: StationDetailsValidationSchema,\n    onSubmit: values => {\n      const params = {\n        name: values.name,\n        ev_capacity: values.ev_capacity,\n        latitude: values.latitude,\n        longitude: values.longitude,\n        address: values.address,\n        remark_1: values.remark_1,\n        remark_2: values.remark_2,\n        country_id: countryId,\n        state_id: stateId,\n        city_id: cityId\n      };\n      addSwappingStationAPICall(params);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, ({\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    values,\n    touched,\n    errors\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: alertColor,\n    isOpen: alertVisible,\n    toggle: onDismissAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 31\n    }\n  }, alertMsg)), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 33\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: values.name,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.name && touched.name ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 33\n    }\n  }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 35\n    }\n  }, errors.name))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 33\n    }\n  }, \"EV Capacity\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"EV Capacity\",\n    value: values.ev_capacity,\n    name: \"ev_capacity\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.ev_capacity && touched.ev_capacity ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 33\n    }\n  }), errors.ev_capacity && touched.ev_capacity && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 35\n    }\n  }, errors.ev_capacity))), /*#__PURE__*/React.createElement(Colxx, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 33\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"country_id\",\n    value: countryId,\n    onChange: e => handleCountrySelect(e.target.value),\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 35\n    }\n  }, \"Select Country\"), countryList.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 37\n    }\n  }, item.country_name))), errors.country_id && touched.country_id && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 37\n    }\n  }, errors.country_id))), /*#__PURE__*/React.createElement(Colxx, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 33\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"state_id\",\n    value: stateId,\n    onChange: e => handleStateSelect(e.target.value),\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 35\n    }\n  }, \"Select State\"), stateList.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 37\n    }\n  }, item.state_name))), errors.country_id && touched.country_id && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 37\n    }\n  }, errors.country_id))), /*#__PURE__*/React.createElement(Colxx, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 33\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"city_id\",\n    value: cityId,\n    onChange: e => handleCitySelect(e.target.value),\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 35\n    }\n  }, \"Select City\"), cityList.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 37\n    }\n  }, item.city_name))), errors.country_id && touched.country_id && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 37\n    }\n  }, errors.country_id))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 33\n    }\n  }, \"Longitude\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    name: \"longitude\",\n    placeholder: \"Longitude\",\n    value: values.longitude,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 33\n    }\n  }, \"Latitude\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    name: \"latitude\",\n    placeholder: \"Latitude\",\n    value: values.latitude,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 33\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"address\",\n    placeholder: \"Address\",\n    value: values.address,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.address && touched.address ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 33\n    }\n  }), errors.address && touched.address && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 35\n    }\n  }, errors.address))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 33\n    }\n  }, \"Remark1\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"remark_1\",\n    placeholder: \"Remark1\",\n    value: values.remark_1,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 33\n    }\n  }, \"Remark2\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"remark_2\",\n    placeholder: \"Remark2\",\n    value: values.remark_2,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"default mr-2\",\n    onClick: handleSubmit,\n    disabled: buttonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 35\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"light\",\n    className: \"default\",\n    onClick: () => {\n      history.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 35\n    }\n  }, \"Cancel\")))))))))));\n};\n\nexport default AddSwappingStation;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/pages/AddSwappingStation.js"],"names":["React","useState","useEffect","Row","FormGroup","Card","CardBody","Label","Input","Button","Alert","Colxx","Separator","getCurrentUser","addSwappingStationAPI","getCountriesAPI","getStatesByCountryAPI","getCitiesByStateAPI","adminRoot","axios","useHistory","Formik","yup","AddSwappingStation","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","buttonDisabled","setButtonDisabled","countryList","setCountryList","stateList","setStateList","cityList","setCityList","countryId","setCountryId","stateId","setStateId","cityId","setCityId","history","getCountryNamesAPICall","currentUser","get","headers","Authorization","token","then","response","responseData","data","status","console","log","msg","catch","error","getStateNamesAPICall","country","post","country_id","getCityNamesAPICall","state","state_id","addSwappingStationAPICall","params","push","pathname","responseStatus","responseMsg","stationAddedAlert","onDismissAlert","handleCountrySelect","handleStateSelect","handleCitySelect","city","StationDetailsValidationSchema","object","shape","name","string","required","ev_capacity","matches","address","initialValues","latitude","longitude","remark_1","remark_2","values","city_id","handleChange","handleBlur","handleSubmit","touched","errors","e","target","value","map","item","index","id","country_name","state_name","city_name","goBack"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,\n  Alert,\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {addSwappingStationAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst AddSwappingStation = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n  },[])\n\n  //API calls\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addSwappingStationAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addSwappingStationAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/swapping_station',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          stationAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n  //helper methods\n  //Alert helper methods\n  const stationAddedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    console.log(state);\n    getCityNamesAPICall(state);\n  }\n  //handle city select\n  const handleCitySelect = (city) => {\n    setCityId(city);\n  }\n  //Form Validation Schema\n  const StationDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Station name is required\"),\n    ev_capacity:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"EV capacity is required\"),\n    address:yup.string()\n        .required(\"Address is required\")\n  });\n\n  const initialValues = {\n    name:\"\",\n    ev_capacity:\"\",\n    latitude:\"\",\n    longitude:\"\",\n    address:\"\",\n    remark_1:\"\",\n    remark_2:\"\"\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Swapping Station</span>\n            <a href=\"swapping_station\" className=\"btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Swapping Station List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={StationDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n            name:values.name,\n            ev_capacity:values.ev_capacity,\n            latitude:values.latitude,\n            longitude:values.longitude,\n            address:values.address,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2,\n            country_id:countryId,\n            state_id:stateId,\n            city_id:cityId\n          }\n          addSwappingStationAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                EV Capacity\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"EV Capacity\"\n                                  value={values.ev_capacity}\n                                  name=\"ev_capacity\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.ev_capacity && touched.ev_capacity ? \"input-error\":null}\n                                />\n                                {errors.ev_capacity && touched.ev_capacity &&(\n                                  <span className=\"error\">{errors.ev_capacity}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  Country\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"country_id\"\n                                value={countryId}\n                                onChange={e=>handleCountrySelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select Country</option>\n                                  {countryList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.country_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  State\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"state_id\"\n                                value={stateId}\n                                onChange={e=>handleStateSelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select State</option>\n                                  {stateList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.state_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  City\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"city_id\"\n                                value={cityId}\n                                onChange={e=>handleCitySelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select City</option>\n                                  {cityList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.city_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Longitude\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  name=\"longitude\"\n                                  placeholder=\"Longitude\"\n                                  value={values.longitude}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Latitude\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  name=\"latitude\"\n                                  placeholder=\"Latitude\"\n                                  value={values.latitude}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"address\"\n                                  placeholder=\"Address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default AddSwappingStation;\n"]},"metadata":{},"sourceType":"module"}