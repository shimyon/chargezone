{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Row,FormGroup,Card,CardBody,Label,Input,Button,Alert}from'reactstrap';import{Colxx,Separator}from'../../../components/common/CustomBootstrap';import{getCurrentUser}from'../../../helpers/Utils';import{addSwappingStationAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,adminRoot}from'../../../constants/defaultValues';import axios from'axios';import{useHistory}from\"react-router-dom\";import{Formik}from'formik';import*as yup from'yup';const AddSwappingStation=()=>{//alert states\nconst _useState=useState(false),_useState2=_slicedToArray(_useState,2),alertVisible=_useState2[0],setAlertVisible=_useState2[1];const _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),alertMsg=_useState4[0],setAlertMsg=_useState4[1];const _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),alertColor=_useState6[0],setAlertColor=_useState6[1];//state to disable button on click\nconst _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),buttonDisabled=_useState8[0],setButtonDisabled=_useState8[1];// list state\nconst _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),countryList=_useState10[0],setCountryList=_useState10[1];const _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),stateList=_useState12[0],setStateList=_useState12[1];const _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),cityList=_useState14[0],setCityList=_useState14[1];const _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),countryId=_useState16[0],setCountryId=_useState16[1];const _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),stateId=_useState18[0],setStateId=_useState18[1];const _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),cityId=_useState20[0],setCityId=_useState20[1];const history=useHistory();useEffect(()=>{getCountryNamesAPICall();},[]);//API calls\nconst getCountryNamesAPICall=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var currentUser;return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:currentUser=getCurrentUser();_context.next=3;return axios.get(getCountriesAPI,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setCountryList(responseData.data);}else{console.log(responseData.status,responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context.stop();}},_callee);}));return function getCountryNamesAPICall(){return _ref.apply(this,arguments);};}();const getStateNamesAPICall=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(country){var currentUser;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:currentUser=getCurrentUser();_context2.next=3;return axios.post(getStatesByCountryAPI,{country_id:country},{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setStateList(responseData.data);}else{console.log(responseData.status,responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context2.stop();}},_callee2);}));return function getStateNamesAPICall(_x){return _ref2.apply(this,arguments);};}();const getCityNamesAPICall=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(state){var currentUser;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:currentUser=getCurrentUser();_context3.next=3;return axios.post(getCitiesByStateAPI,{state_id:state},{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setCityList(responseData.data);}else{console.log(responseData.status,responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context3.stop();}},_callee3);}));return function getCityNamesAPICall(_x2){return _ref3.apply(this,arguments);};}();const addSwappingStationAPICall=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(params){var currentUser;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:setButtonDisabled(true);currentUser=getCurrentUser();_context4.next=4;return axios.post(addSwappingStationAPI,params,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){history.push({pathname:adminRoot+'/pages/swapping_station',state:{responseStatus:responseData.status,responseMsg:responseData.msg}});}else{setButtonDisabled(false);stationAddedAlert(responseData.msg);}}).catch(error=>{setButtonDisabled(false);console.log(error);});case 4:case\"end\":return _context4.stop();}},_callee4);}));return function addSwappingStationAPICall(_x3){return _ref4.apply(this,arguments);};}();//helper methods\n//Alert helper methods\nconst stationAddedAlert=msg=>{setAlertVisible(true);setAlertMsg(msg);setAlertColor(\"danger\");};const onDismissAlert=()=>{setAlertVisible(false);};//handle country select\nconst handleCountrySelect=country=>{setCountryId(country);getStateNamesAPICall(country);};//handle state select\nconst handleStateSelect=state=>{setStateId(state);console.log(state);getCityNamesAPICall(state);};//handle city select\nconst handleCitySelect=city=>{setCityId(city);};//Form Validation Schema\nconst StationDetailsValidationSchema=yup.object().shape({name:yup.string().required(\"Station name is required\"),ev_capacity:yup.string().matches(/^\\d+$/,\"Only numbers allowed\").required(\"EV capacity is required\"),address:yup.string().required(\"Address is required\")});const initialValues={name:\"\",ev_capacity:\"\",latitude:\"\",longitude:\"\",address:\"\",remark_1:\"\",remark_2:\"\"};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\"},/*#__PURE__*/React.createElement(\"span\",{className:\"page_title\"},\"Add Swapping Station\"),/*#__PURE__*/React.createElement(\"a\",{href:\"swapping_station\",className:\"btn-primary default btn-sm float-right\"},/*#__PURE__*/React.createElement(\"b\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-list\"}),\" Swapping Station List\")),/*#__PURE__*/React.createElement(Separator,{className:\"mb-5 mt-1\"}))),/*#__PURE__*/React.createElement(Formik,{initialValues:initialValues,validationSchema:StationDetailsValidationSchema,onSubmit:values=>{const params={name:values.name,ev_capacity:values.ev_capacity,latitude:values.latitude,longitude:values.longitude,address:values.address,remark_1:values.remark_1,remark_2:values.remark_2,country_id:countryId,state_id:stateId,city_id:cityId};addSwappingStationAPICall(params);}},({handleChange,handleBlur,handleSubmit,values,touched,errors})=>/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",className:\"mb-4\"},/*#__PURE__*/React.createElement(Card,{className:\"mb-4\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"12\"},/*#__PURE__*/React.createElement(Alert,{color:alertColor,isOpen:alertVisible,toggle:onDismissAlert},alertMsg)),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Name\",name:\"name\",value:values.name,onChange:handleChange,onBlur:handleBlur,className:errors.name&&touched.name?\"input-error\":null}),errors.name&&touched.name&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.name))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"EV Capacity\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"EV Capacity\",value:values.ev_capacity,name:\"ev_capacity\",onChange:handleChange,onBlur:handleBlur,className:errors.ev_capacity&&touched.ev_capacity?\"input-error\":null}),errors.ev_capacity&&touched.ev_capacity&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.ev_capacity))),/*#__PURE__*/React.createElement(Colxx,{md:\"4\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Country\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"country_id\",value:countryId,onChange:e=>handleCountrySelect(e.target.value),onBlur:handleBlur},/*#__PURE__*/React.createElement(\"option\",{key:0},\"Select Country\"),countryList.map((item,index)=>/*#__PURE__*/React.createElement(\"option\",{key:index,value:item.id},item.country_name))),errors.country_id&&touched.country_id&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.country_id))),/*#__PURE__*/React.createElement(Colxx,{md:\"4\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"State\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"state_id\",value:stateId,onChange:e=>handleStateSelect(e.target.value),onBlur:handleBlur},/*#__PURE__*/React.createElement(\"option\",{key:0},\"Select State\"),stateList.map((item,index)=>/*#__PURE__*/React.createElement(\"option\",{key:index,value:item.id},item.state_name))),errors.country_id&&touched.country_id&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.country_id))),/*#__PURE__*/React.createElement(Colxx,{md:\"4\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"City\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"city_id\",value:cityId,onChange:e=>handleCitySelect(e.target.value),onBlur:handleBlur},/*#__PURE__*/React.createElement(\"option\",{key:0},\"Select City\"),cityList.map((item,index)=>/*#__PURE__*/React.createElement(\"option\",{key:index,value:item.id},item.city_name))),errors.country_id&&touched.country_id&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.country_id))),/*#__PURE__*/React.createElement(Colxx,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Longitude\"),/*#__PURE__*/React.createElement(Input,{type:\"number\",name:\"longitude\",placeholder:\"Longitude\",value:values.longitude,onChange:handleChange,onBlur:handleBlur}))),/*#__PURE__*/React.createElement(Colxx,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Latitude\"),/*#__PURE__*/React.createElement(Input,{type:\"number\",name:\"latitude\",placeholder:\"Latitude\",value:values.latitude,onChange:handleChange,onBlur:handleBlur}))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Address\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"address\",placeholder:\"Address\",value:values.address,onChange:handleChange,onBlur:handleBlur,className:errors.address&&touched.address?\"input-error\":null}),errors.address&&touched.address&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.address))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Remark1\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"remark_1\",placeholder:\"Remark1\",value:values.remark_1,onChange:handleChange,onBlur:handleBlur}))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Remark2\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"remark_2\",placeholder:\"Remark2\",value:values.remark_2,onChange:handleChange,onBlur:handleBlur})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"12\",className:\"text-center\"},/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"default mr-2\",onClick:handleSubmit,disabled:buttonDisabled},/*#__PURE__*/React.createElement(\"b\",null,\"Add\")),/*#__PURE__*/React.createElement(Button,{color:\"light\",className:\"default\",onClick:()=>{history.goBack();}},/*#__PURE__*/React.createElement(\"b\",null,\"Cancel\")))))))))));};export default AddSwappingStation;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/pages/AddSwappingStation.js"],"names":["React","useState","useEffect","Row","FormGroup","Card","CardBody","Label","Input","Button","Alert","Colxx","Separator","getCurrentUser","addSwappingStationAPI","getCountriesAPI","getStatesByCountryAPI","getCitiesByStateAPI","adminRoot","axios","useHistory","Formik","yup","AddSwappingStation","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","buttonDisabled","setButtonDisabled","countryList","setCountryList","stateList","setStateList","cityList","setCityList","countryId","setCountryId","stateId","setStateId","cityId","setCityId","history","getCountryNamesAPICall","currentUser","get","headers","Authorization","token","then","response","responseData","data","status","console","log","msg","catch","error","getStateNamesAPICall","country","post","country_id","getCityNamesAPICall","state","state_id","addSwappingStationAPICall","params","push","pathname","responseStatus","responseMsg","stationAddedAlert","onDismissAlert","handleCountrySelect","handleStateSelect","handleCitySelect","city","StationDetailsValidationSchema","object","shape","name","string","required","ev_capacity","matches","address","initialValues","latitude","longitude","remark_1","remark_2","values","city_id","handleChange","handleBlur","handleSubmit","touched","errors","e","target","value","map","item","index","id","country_name","state_name","city_name","goBack"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,\n  Alert,\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {addSwappingStationAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst AddSwappingStation = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n  },[])\n\n  //API calls\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addSwappingStationAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addSwappingStationAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/swapping_station',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          stationAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n  //helper methods\n  //Alert helper methods\n  const stationAddedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    console.log(state);\n    getCityNamesAPICall(state);\n  }\n  //handle city select\n  const handleCitySelect = (city) => {\n    setCityId(city);\n  }\n  //Form Validation Schema\n  const StationDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Station name is required\"),\n    ev_capacity:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"EV capacity is required\"),\n    address:yup.string()\n        .required(\"Address is required\")\n  });\n\n  const initialValues = {\n    name:\"\",\n    ev_capacity:\"\",\n    latitude:\"\",\n    longitude:\"\",\n    address:\"\",\n    remark_1:\"\",\n    remark_2:\"\"\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Swapping Station</span>\n            <a href=\"swapping_station\" className=\"btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Swapping Station List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={StationDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n            name:values.name,\n            ev_capacity:values.ev_capacity,\n            latitude:values.latitude,\n            longitude:values.longitude,\n            address:values.address,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2,\n            country_id:countryId,\n            state_id:stateId,\n            city_id:cityId\n          }\n          addSwappingStationAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                EV Capacity\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"EV Capacity\"\n                                  value={values.ev_capacity}\n                                  name=\"ev_capacity\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.ev_capacity && touched.ev_capacity ? \"input-error\":null}\n                                />\n                                {errors.ev_capacity && touched.ev_capacity &&(\n                                  <span className=\"error\">{errors.ev_capacity}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  Country\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"country_id\"\n                                value={countryId}\n                                onChange={e=>handleCountrySelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select Country</option>\n                                  {countryList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.country_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  State\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"state_id\"\n                                value={stateId}\n                                onChange={e=>handleStateSelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select State</option>\n                                  {stateList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.state_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  City\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"city_id\"\n                                value={cityId}\n                                onChange={e=>handleCitySelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select City</option>\n                                  {cityList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.city_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Longitude\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  name=\"longitude\"\n                                  placeholder=\"Longitude\"\n                                  value={values.longitude}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Latitude\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  name=\"latitude\"\n                                  placeholder=\"Latitude\"\n                                  value={values.latitude}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"address\"\n                                  placeholder=\"Address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default AddSwappingStation;\n"]},"metadata":{},"sourceType":"module"}