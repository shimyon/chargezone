{"ast":null,"code":"var _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\src\\\\views\\\\app\\\\dashboard\\\\operator\\\\BatteryStatusChart.js\";\nimport React from 'react';\nimport { Card, CardBody, CardTitle, Progress, Spinner } from 'reactstrap';\nimport IntlMessages from '../../../../helpers/IntlMessages';\n\nconst BatteryStatusChart = ({\n  cardClass = 'dashboard-donut-chart'\n}) => {\n  return /*#__PURE__*/React.createElement(Card, {\n    className: cardClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"dashboard.batteries\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  })), loading3 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    color: \"primary\",\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"dashboard.loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 23\n    }\n  }))), !loading3 && !blankMsg && data.map((s, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }\n    }, s.title, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"float-right text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }, s.status, \"/\", s.total)), /*#__PURE__*/React.createElement(Progress, {\n      value: s.status / s.total * 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }\n    }));\n  }), blankMsg && data1.map((s, index) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, s.title, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"float-right text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, s.status, \"/\", s.total)), /*#__PURE__*/React.createElement(Progress, {\n      value: s.status / s.total * 100,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }));\n  })));\n};\n\nconst setBlankMsg = value => {\n  blankMsg = value;\n};\n\nlet blankMsg = false;\nconst data = [{\n  title: 'In Charge',\n  total: 0,\n  status: 0\n}, {\n  title: 'Charged',\n  total: 0,\n  status: 0\n}, {\n  title: 'Discharged',\n  total: 0,\n  status: 0\n}, {\n  title: 'Faulty',\n  total: 0,\n  status: 0\n}, {\n  title: 'Out',\n  total: 0,\n  status: 0\n}];\nconst data1 = [{\n  title: 'In Charge',\n  total: 0,\n  status: 0\n}, {\n  title: 'Charged',\n  total: 0,\n  status: 0\n}, {\n  title: 'Discharged',\n  total: 0,\n  status: 0\n}, {\n  title: 'Faulty',\n  total: 0,\n  status: 0\n}, {\n  title: 'Out',\n  total: 0,\n  status: 0\n}];\n\nconst setBatteryChartData = (index, total, status) => {\n  data[index].status = status;\n  data[index].total = total;\n  setBlankMsg(false);\n\n  if (data[0].total == 0 && data[1].total == 0 && data[2].total == 0 && data[3].total == 0 && data[4].total == 0) {\n    setBlankMsg(true);\n  }\n};\n\nlet loading3 = false;\n\nconst setLoading3 = value => {\n  loading3 = value;\n};\n\nexport { BatteryStatusChart, setBatteryChartData, setLoading3 };","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/dashboard/operator/BatteryStatusChart.js"],"names":["React","Card","CardBody","CardTitle","Progress","Spinner","IntlMessages","BatteryStatusChart","cardClass","loading3","blankMsg","data","map","s","index","title","status","total","data1","setBlankMsg","value","setBatteryChartData","setLoading3"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, CardBody, CardTitle ,Progress,Spinner} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\n\n\nconst BatteryStatusChart =  ({ cardClass = 'dashboard-donut-chart' }) => {\n  return (\n    <Card className={cardClass}>\n      <CardBody>\n        <CardTitle>\n          <IntlMessages id=\"dashboard.batteries\" />\n        </CardTitle>\n        {loading3 && (\n                  <div className=\"text-center pt-3\">\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"dashboard.loading\" />\n                    </p>\n                  </div>\n                ) }\n        {(!loading3 && !blankMsg) && data.map((s, index) => {\n          return (\n            <div key={index} className=\"mb-4\">\n              <p className=\"mb-2\">\n                {s.title}\n                <span className=\"float-right text-muted\">\n                  {s.status}/{s.total}\n                </span>\n              </p>\n              <Progress value={(s.status / s.total) * 100} />\n            </div>\n          );\n        })}\n\n{(blankMsg) && data1.map((s, index) => {\n          return (\n            <div key={index} className=\"mb-4\">\n              <p className=\"mb-2\">\n                {s.title}\n                <span className=\"float-right text-muted\">\n                  {s.status}/{s.total}\n                </span>\n              </p>\n              <Progress value={(s.status / s.total) * 100} />\n            </div>\n          );\n        })}\n\n        \n        \n      </CardBody>\n    </Card>\n  );\n};\nconst  setBlankMsg = (value) => {blankMsg=value};\nlet blankMsg=false;\nconst data = [\n  {\n    title: 'In Charge',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Charged',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Discharged',\n    total: 0,\n    status: 0,\n    \n  },\n  {\n    title: 'Faulty',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Out',\n    total: 0,\n    status: 0,\n  },\n \n];\nconst data1 = [\n  {\n    title: 'In Charge',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Charged',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Discharged',\n    total: 0,\n    status: 0,\n    \n  },\n  {\n    title: 'Faulty',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Out',\n    total: 0,\n    status: 0,\n  },\n \n];\n\nconst setBatteryChartData = (index,total,status) => {data[index].status=status;data[index].total=total;\n\n  setBlankMsg(false);\n if(data[0].total==0 && data[1].total==0 && data[2].total==0 && data[3].total==0 && data[4].total==0)\n {\n   setBlankMsg(true);\n   \n }\n};\nlet loading3= false;\nconst  setLoading3 = (value) => {loading3=value};\n\nexport  {BatteryStatusChart,setBatteryChartData,setLoading3};\n"]},"metadata":{},"sourceType":"module"}