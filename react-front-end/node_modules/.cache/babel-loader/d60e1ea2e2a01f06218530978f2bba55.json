{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Row,FormGroup,Card,CardBody,Label,Input,Button,Alert}from'reactstrap';import{Colxx,Separator}from'../../../components/common/CustomBootstrap';import{getCurrentUser}from'../../../helpers/Utils';import{updateSwappingStationAPI,getStationByIdAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,adminRoot}from'../../../constants/defaultValues';import axios from'axios';import{useHistory,useLocation}from\"react-router-dom\";import{Formik}from'formik';import*as yup from'yup';const UpdateSwappingStation=()=>{const history=useHistory();const location=useLocation();//states\nconst _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),stationName=_useState2[0],setStationName=_useState2[1];const _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),evCapacity=_useState4[0],setEvCapacity=_useState4[1];const _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),longitude=_useState6[0],setLongitude=_useState6[1];const _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),latitude=_useState8[0],setLatitude=_useState8[1];const _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),stationAddress=_useState10[0],setStationAddress=_useState10[1];const _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),remark1=_useState12[0],setRemark1=_useState12[1];const _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),remark2=_useState14[0],setRemark2=_useState14[1];//alert states\nconst _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),alertVisible=_useState16[0],setAlertVisible=_useState16[1];const _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),alertMsg=_useState18[0],setAlertMsg=_useState18[1];const _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),alertColor=_useState20[0],setAlertColor=_useState20[1];//state to disable button on click\nconst _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),buttonDisabled=_useState22[0],setButtonDisabled=_useState22[1];// list state\nconst _useState23=useState([]),_useState24=_slicedToArray(_useState23,2),countryList=_useState24[0],setCountryList=_useState24[1];const _useState25=useState([]),_useState26=_slicedToArray(_useState25,2),stateList=_useState26[0],setStateList=_useState26[1];const _useState27=useState([]),_useState28=_slicedToArray(_useState27,2),cityList=_useState28[0],setCityList=_useState28[1];const _useState29=useState(\"\"),_useState30=_slicedToArray(_useState29,2),countryId=_useState30[0],setCountryId=_useState30[1];const _useState31=useState(\"\"),_useState32=_slicedToArray(_useState31,2),stateId=_useState32[0],setStateId=_useState32[1];const _useState33=useState(\"\"),_useState34=_slicedToArray(_useState33,2),cityId=_useState34[0],setCityId=_useState34[1];useEffect(()=>{getStationByIdAPICall();getCountryNamesAPICall();},[]);//API calls\nconst getCountryNamesAPICall=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var currentUser;return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:currentUser=getCurrentUser();_context.next=3;return axios.get(getCountriesAPI,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setCountryList(responseData.data);}else{console.log(responseData.status,responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context.stop();}},_callee);}));return function getCountryNamesAPICall(){return _ref.apply(this,arguments);};}();const getStateNamesAPICall=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(country){var currentUser;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:currentUser=getCurrentUser();_context2.next=3;return axios.post(getStatesByCountryAPI,{country_id:country},{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setStateList(responseData.data);}else{console.log(responseData.status,responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context2.stop();}},_callee2);}));return function getStateNamesAPICall(_x){return _ref2.apply(this,arguments);};}();const getCityNamesAPICall=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(state){var currentUser;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:currentUser=getCurrentUser();_context3.next=3;return axios.post(getCitiesByStateAPI,{state_id:state},{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setCityList(responseData.data);}else{console.log(responseData.status,responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context3.stop();}},_callee3);}));return function getCityNamesAPICall(_x2){return _ref3.apply(this,arguments);};}();const getStationByIdAPICall=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var currentUser;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:currentUser=getCurrentUser();_context4.next=3;return axios.post(getStationByIdAPI,{hub_master_id:location.state.station_id},{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){getStateNamesAPICall(responseData.data.country_id);getCityNamesAPICall(responseData.data.state_id);setStationName(responseData.data.name);setStationAddress(responseData.data.address);setEvCapacity(responseData.data.ev_capacity);setLongitude(responseData.data.longitude);setLatitude(responseData.data.latitude);setRemark1(responseData.data.remark_1);setRemark2(responseData.data.remark_2);setCountryId(responseData.data.country_id);setStateId(responseData.data.state_id);setCityId(responseData.data.city_id);}else{stationUpdatedAlert(responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context4.stop();}},_callee4);}));return function getStationByIdAPICall(){return _ref4.apply(this,arguments);};}();const updateSwappingStationAPICall=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(params){var currentUser;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:setButtonDisabled(true);currentUser=getCurrentUser();_context5.next=4;return axios.post(updateSwappingStationAPI,params,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){history.push({pathname:adminRoot+'/pages/swapping_station',state:{responseStatus:responseData.status,responseMsg:responseData.msg}});}else{setButtonDisabled(false);stationUpdatedAlert(responseData.msg);}}).catch(error=>{setButtonDisabled(false);console.log(error);});case 4:case\"end\":return _context5.stop();}},_callee5);}));return function updateSwappingStationAPICall(_x3){return _ref5.apply(this,arguments);};}();//helper methods\n//Alert helper methods\nconst stationUpdatedAlert=msg=>{setAlertVisible(true);setAlertMsg(msg);setAlertColor(\"danger\");};const onDismissAlert=()=>{setAlertVisible(false);};//handle country select\nconst handleCountrySelect=country=>{setCountryId(country);getStateNamesAPICall(country);};//handle state select\nconst handleStateSelect=state=>{setStateId(state);console.log(state);getCityNamesAPICall(state);};//handle city select\nconst handleCitySelect=city=>{setCityId(city);};//Form Validation Schema\nconst StationDetailsValidationSchema=yup.object().shape({name:yup.string().required(\"Station name is required\"),ev_capacity:yup.string().matches(/^\\d+$/,\"Only numbers allowed\").required(\"EV capacity is required\"),address:yup.string().nullable().required(\"Address is required\")});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\"},/*#__PURE__*/React.createElement(\"span\",{className:\"page_title\"},\"Update Swapping Station\"),/*#__PURE__*/React.createElement(\"a\",{href:\"swapping_station\",className:\"btn-primary default btn-sm float-right\"},/*#__PURE__*/React.createElement(\"b\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-list\"}),\" Swapping Station List\")),/*#__PURE__*/React.createElement(Separator,{className:\"mb-5 mt-1\"}))),/*#__PURE__*/React.createElement(Formik,{enableReinitialize:true,initialValues:{name:stationName,ev_capacity:evCapacity,latitude:latitude,longitude:longitude,address:stationAddress,remark_1:remark1,remark_2:remark2},validationSchema:StationDetailsValidationSchema,onSubmit:values=>{const params={hub_master_id:location.state.station_id,name:values.name,address:values.address,ev_capacity:values.ev_capacity,remark_1:values.remark_1,remark_2:values.remark_2,latitude:values.latitude,longitude:values.longitude,country_id:countryId,state_id:stateId,city_id:cityId};updateSwappingStationAPICall(params);}},({handleChange,handleBlur,handleSubmit,values,touched,errors})=>/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",className:\"mb-4\"},/*#__PURE__*/React.createElement(Card,{className:\"mb-4\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"12\"},/*#__PURE__*/React.createElement(Alert,{color:alertColor,isOpen:alertVisible,toggle:onDismissAlert},alertMsg)),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Name\",name:\"name\",value:values.name,onChange:handleChange,onBlur:handleBlur,className:errors.name&&touched.name?\"input-error\":null}),errors.name&&touched.name&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.name))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"EV Capacity\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"EV Capacity\",value:values.ev_capacity,name:\"ev_capacity\",onChange:handleChange,onBlur:handleBlur,className:errors.ev_capacity&&touched.ev_capacity?\"input-error\":null}),errors.ev_capacity&&touched.ev_capacity&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.ev_capacity))),/*#__PURE__*/React.createElement(Colxx,{md:\"4\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Country\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"country_id\",value:countryId,onChange:e=>handleCountrySelect(e.target.value),onBlur:handleBlur},/*#__PURE__*/React.createElement(\"option\",{key:0},\"Select Country\"),countryList.map((item,index)=>/*#__PURE__*/React.createElement(\"option\",{key:index,value:item.id},item.country_name))),errors.country_id&&touched.country_id&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.country_id))),/*#__PURE__*/React.createElement(Colxx,{md:\"4\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"State\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"state_id\",value:stateId,onChange:e=>handleStateSelect(e.target.value),onBlur:handleBlur},/*#__PURE__*/React.createElement(\"option\",{key:0},\"Select State\"),stateList.map((item,index)=>/*#__PURE__*/React.createElement(\"option\",{key:index,value:item.id},item.state_name))),errors.country_id&&touched.country_id&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.country_id))),/*#__PURE__*/React.createElement(Colxx,{md:\"4\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"City\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"city_id\",value:cityId,onChange:e=>handleCitySelect(e.target.value),onBlur:handleBlur},/*#__PURE__*/React.createElement(\"option\",{key:0},\"Select City\"),cityList.map((item,index)=>/*#__PURE__*/React.createElement(\"option\",{key:index,value:item.id},item.city_name))),errors.country_id&&touched.country_id&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.country_id))),/*#__PURE__*/React.createElement(Colxx,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Longitude\"),/*#__PURE__*/React.createElement(Input,{type:\"number\",name:\"longitude\",placeholder:\"Longitude\",value:values.longitude,onChange:handleChange,onBlur:handleBlur}))),/*#__PURE__*/React.createElement(Colxx,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Latitude\"),/*#__PURE__*/React.createElement(Input,{type:\"number\",name:\"latitude\",placeholder:\"Latitude\",value:values.latitude,onChange:handleChange,onBlur:handleBlur}))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Address\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"address\",placeholder:\"Address\",value:values.address,onChange:handleChange,onBlur:handleBlur,className:errors.address&&touched.address?\"input-error\":null}),errors.address&&touched.address&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.address))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Remark1\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"remark_1\",placeholder:\"Remark1\",value:values.remark_1,onChange:handleChange,onBlur:handleBlur}))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Remark2\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"remark_2\",placeholder:\"Remark2\",value:values.remark_2,onChange:handleChange,onBlur:handleBlur})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"12\",className:\"text-center\"},/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"default mr-2\",onClick:handleSubmit,disabled:buttonDisabled},/*#__PURE__*/React.createElement(\"b\",null,\"Update\")),/*#__PURE__*/React.createElement(Button,{color:\"light\",className:\"default\",onClick:()=>{history.goBack();}},/*#__PURE__*/React.createElement(\"b\",null,\"Cancel\")))))))))));};export default UpdateSwappingStation;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/pages/UpdateSwappingStation.js"],"names":["React","useEffect","useState","Row","FormGroup","Card","CardBody","Label","Input","Button","Alert","Colxx","Separator","getCurrentUser","updateSwappingStationAPI","getStationByIdAPI","getCountriesAPI","getStatesByCountryAPI","getCitiesByStateAPI","adminRoot","axios","useHistory","useLocation","Formik","yup","UpdateSwappingStation","history","location","stationName","setStationName","evCapacity","setEvCapacity","longitude","setLongitude","latitude","setLatitude","stationAddress","setStationAddress","remark1","setRemark1","remark2","setRemark2","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","buttonDisabled","setButtonDisabled","countryList","setCountryList","stateList","setStateList","cityList","setCityList","countryId","setCountryId","stateId","setStateId","cityId","setCityId","getStationByIdAPICall","getCountryNamesAPICall","currentUser","get","headers","Authorization","token","then","response","responseData","data","status","console","log","msg","catch","error","getStateNamesAPICall","country","post","country_id","getCityNamesAPICall","state","state_id","hub_master_id","station_id","name","address","ev_capacity","remark_1","remark_2","city_id","stationUpdatedAlert","updateSwappingStationAPICall","params","push","pathname","responseStatus","responseMsg","onDismissAlert","handleCountrySelect","handleStateSelect","handleCitySelect","city","StationDetailsValidationSchema","object","shape","string","required","matches","nullable","values","handleChange","handleBlur","handleSubmit","touched","errors","e","target","value","map","item","index","id","country_name","state_name","city_name","goBack"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,\n  Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {updateSwappingStationAPI,getStationByIdAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateSwappingStation = () => {\n  const history = useHistory();\n  const location = useLocation();\n  //states\n  const [stationName,setStationName] = useState(\"\");\n  const [evCapacity,setEvCapacity] = useState(\"\");\n  const [longitude,setLongitude] = useState(\"\");\n  const [latitude,setLatitude] = useState(\"\");\n  const [stationAddress,setStationAddress] = useState(\"\");\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n\n  useEffect(()=>{\n      getStationByIdAPICall();\n      getCountryNamesAPICall();\n  },[])\n\n  //API calls\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStationByIdAPICall = async() => {\n      const currentUser = getCurrentUser();\n      await axios.post(getStationByIdAPI,\n      {\n          hub_master_id:location.state.station_id\n      },\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n          const responseData = response.data;\n          if (responseData.status === 1) {\n          getStateNamesAPICall(responseData.data.country_id);\n          getCityNamesAPICall(responseData.data.state_id);\n          setStationName(responseData.data.name);\n          setStationAddress(responseData.data.address);\n          setEvCapacity(responseData.data.ev_capacity);\n          setLongitude(responseData.data.longitude);\n          setLatitude(responseData.data.latitude);\n          setRemark1(responseData.data.remark_1);\n          setRemark2(responseData.data.remark_2);\n          setCountryId(responseData.data.country_id);\n          setStateId(responseData.data.state_id);\n          setCityId(responseData.data.city_id);\n          }else{\n            stationUpdatedAlert(responseData.msg);\n          }\n      }).catch(error=>{\n          console.log(error);\n      })\n  }\n\n  const updateSwappingStationAPICall = async(params) => {\n      setButtonDisabled(true);\n      const currentUser = getCurrentUser();\n      await axios.post(updateSwappingStationAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n          const responseData = response.data;\n          if (responseData.status === 1) {\n            history.push({\n              pathname:adminRoot+'/pages/swapping_station',\n              state:{\n                responseStatus:responseData.status,\n                responseMsg:responseData.msg\n              }\n            })\n          }else{\n            setButtonDisabled(false);\n            stationUpdatedAlert(responseData.msg);\n          }\n      }).catch(error=>{\n          setButtonDisabled(false);\n          console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const stationUpdatedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    console.log(state);\n    getCityNamesAPICall(state);\n  }\n  //handle city select\n  const handleCitySelect = (city) => {\n    setCityId(city);\n  }\n  //Form Validation Schema\n  const StationDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Station name is required\"),\n    ev_capacity:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"EV capacity is required\"),\n    address:yup.string()\n        .nullable()\n        .required(\"Address is required\")\n  });\n\n  \n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Swapping Station</span>\n            <a href=\"swapping_station\" className=\"btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Swapping Station List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true} \n        initialValues={{\n          name:stationName,\n          ev_capacity:evCapacity,\n          latitude:latitude,\n          longitude:longitude,\n          address:stationAddress,\n          remark_1:remark1,\n          remark_2:remark2\n        }}\n        validationSchema={StationDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n            hub_master_id: location.state.station_id,\n            name:values.name,\n            address:values.address,\n            ev_capacity:values.ev_capacity,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2,\n            latitude:values.latitude,\n            longitude:values.longitude,\n            country_id:countryId,\n            state_id:stateId,\n            city_id:cityId\n          }\n          updateSwappingStationAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                          <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                EV Capacity\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"EV Capacity\"\n                                  value={values.ev_capacity}\n                                  name=\"ev_capacity\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.ev_capacity && touched.ev_capacity ? \"input-error\":null}\n                                />\n                                {errors.ev_capacity && touched.ev_capacity &&(\n                                  <span className=\"error\">{errors.ev_capacity}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  Country\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"country_id\"\n                                value={countryId}\n                                onChange={e=>handleCountrySelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select Country</option>\n                                  {countryList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.country_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  State\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"state_id\"\n                                value={stateId}\n                                onChange={e=>handleStateSelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select State</option>\n                                  {stateList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.state_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  City\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"city_id\"\n                                value={cityId}\n                                onChange={e=>handleCitySelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select City</option>\n                                  {cityList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.city_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Longitude\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  name=\"longitude\"\n                                  placeholder=\"Longitude\"\n                                  value={values.longitude}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Latitude\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  name=\"latitude\"\n                                  placeholder=\"Latitude\"\n                                  value={values.latitude}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"address\"\n                                  placeholder=\"Address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default UpdateSwappingStation;\n"]},"metadata":{},"sourceType":"module"}