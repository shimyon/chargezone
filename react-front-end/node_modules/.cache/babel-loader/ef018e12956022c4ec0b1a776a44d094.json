{"ast":null,"code":"/* eslint-disable react/no-array-index-key */import React from'react';import{Breadcrumb,BreadcrumbItem}from'reactstrap';import{NavLink}from'react-router-dom';import IntlMessages from'../../helpers/IntlMessages';import{adminRoot}from'../../constants/defaultValues';const getMenuTitle=sub=>{if('/'+sub===adminRoot)return/*#__PURE__*/React.createElement(IntlMessages,{id:\"menu.home\"});return/*#__PURE__*/React.createElement(IntlMessages,{id:\"menu.\".concat(sub)});};const getUrl=(path,sub,index)=>{return path.split(sub)[0]+sub;};const BreadcrumbContainer=({heading,match})=>{return/*#__PURE__*/React.createElement(React.Fragment,null,heading&&/*#__PURE__*/React.createElement(\"h1\",null,/*#__PURE__*/React.createElement(IntlMessages,{id:heading})),/*#__PURE__*/React.createElement(BreadcrumbItems,{match:match}));};const BreadcrumbItems=({match})=>{const path=match.path.substr(1);let paths=path.split('/');if(paths[paths.length-1].indexOf(':')>-1){paths=paths.filter(x=>x.indexOf(':')===-1);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Breadcrumb,{className:\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\"},paths.map((sub,index)=>{return/*#__PURE__*/React.createElement(BreadcrumbItem,{key:index,active:paths.length===index+1},paths.length!==index+1?/*#__PURE__*/React.createElement(NavLink,{to:\"/\".concat(getUrl(path,sub,index))},getMenuTitle(sub)):getMenuTitle(sub));})));};export default BreadcrumbContainer;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/containers/navs/Breadcrumb.js"],"names":["React","Breadcrumb","BreadcrumbItem","NavLink","IntlMessages","adminRoot","getMenuTitle","sub","getUrl","path","index","split","BreadcrumbContainer","heading","match","BreadcrumbItems","substr","paths","length","indexOf","filter","x","map"],"mappings":"AAAA,6CACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,cAArB,KAA2C,YAA3C,CACA,OAASC,OAAT,KAAwB,kBAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,4BAAzB,CACA,OAASC,SAAT,KAA0B,+BAA1B,CAEA,KAAMC,CAAAA,YAAY,CAAIC,GAAD,EAAS,CAC5B,GAAG,IAAIA,GAAJ,GAAUF,SAAb,CAAwB,mBAAO,oBAAC,YAAD,EAAc,EAAE,CAAC,WAAjB,EAAP,CACxB,mBAAO,oBAAC,YAAD,EAAc,EAAE,gBAAUE,GAAV,CAAhB,EAAP,CACD,CAHD,CAKA,KAAMC,CAAAA,MAAM,CAAG,CAACC,IAAD,CAAOF,GAAP,CAAYG,KAAZ,GAAsB,CACnC,MAAOD,CAAAA,IAAI,CAACE,KAAL,CAAWJ,GAAX,EAAgB,CAAhB,EAAqBA,GAA5B,CACD,CAFD,CAIA,KAAMK,CAAAA,mBAAmB,CAAG,CAAC,CAAEC,OAAF,CAAWC,KAAX,CAAD,GAAwB,CAClD,mBACE,wCACGD,OAAO,eACN,2CACE,oBAAC,YAAD,EAAc,EAAE,CAAEA,OAAlB,EADF,CAFJ,cAME,oBAAC,eAAD,EAAiB,KAAK,CAAEC,KAAxB,EANF,CADF,CAUD,CAXD,CAaA,KAAMC,CAAAA,eAAe,CAAG,CAAC,CAAED,KAAF,CAAD,GAAe,CACrC,KAAML,CAAAA,IAAI,CAAGK,KAAK,CAACL,IAAN,CAAWO,MAAX,CAAkB,CAAlB,CAAb,CACA,GAAIC,CAAAA,KAAK,CAAGR,IAAI,CAACE,KAAL,CAAW,GAAX,CAAZ,CACA,GAAIM,KAAK,CAACA,KAAK,CAACC,MAAN,CAAe,CAAhB,CAAL,CAAwBC,OAAxB,CAAgC,GAAhC,EAAuC,CAAC,CAA5C,CAA+C,CAC7CF,KAAK,CAAGA,KAAK,CAACG,MAAN,CAAcC,CAAD,EAAOA,CAAC,CAACF,OAAF,CAAU,GAAV,IAAmB,CAAC,CAAxC,CAAR,CACD,CACD,mBACE,qDACE,oBAAC,UAAD,EAAY,SAAS,CAAC,+DAAtB,EACGF,KAAK,CAACK,GAAN,CAAU,CAACf,GAAD,CAAMG,KAAN,GAAgB,CACzB,mBACE,oBAAC,cAAD,EAAgB,GAAG,CAAEA,KAArB,CAA4B,MAAM,CAAEO,KAAK,CAACC,MAAN,GAAiBR,KAAK,CAAG,CAA7D,EACGO,KAAK,CAACC,MAAN,GAAiBR,KAAK,CAAG,CAAzB,cACC,oBAAC,OAAD,EAAS,EAAE,YAAMF,MAAM,CAACC,IAAD,CAAOF,GAAP,CAAYG,KAAZ,CAAZ,CAAX,EACGJ,YAAY,CAACC,GAAD,CADf,CADD,CAKCD,YAAY,CAACC,GAAD,CANhB,CADF,CAWD,CAZA,CADH,CADF,CADF,CAmBD,CAzBD,CA2BA,cAAeK,CAAAA,mBAAf","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if('/'+sub===adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub, index) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n"]},"metadata":{},"sourceType":"module"}