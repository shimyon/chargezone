{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Row,FormGroup,Card,CardBody,Label,Input,Button,Alert}from'reactstrap';import Select from'react-select';import{Colxx,Separator}from'../../../components/common/CustomBootstrap';import CustomSelectInput from'../../../components/common/CustomSelectInput';import{getCurrentUser}from'../../../helpers/Utils';import{adminRoot,updateUserAPI,getUserRolesAPI,getUserByIdAPI}from'../../../constants/defaultValues';import axios from'axios';import{Formik}from'formik';import*as yup from'yup';import{useHistory,useLocation}from\"react-router-dom\";const UpdateUser=()=>{//alert states\nconst _useState=useState(false),_useState2=_slicedToArray(_useState,2),alertVisible=_useState2[0],setAlertVisible=_useState2[1];const _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),alertMsg=_useState4[0],setAlertMsg=_useState4[1];const _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),alertColor=_useState6[0],setAlertColor=_useState6[1];//multiSelect state\nconst _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),selectedOptions=_useState8[0],setSelectedOptions=_useState8[1];//user roles\nconst _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),userRolesList=_useState10[0],setUserRolesList=_useState10[1];//user details state\nconst _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),name=_useState12[0],setName=_useState12[1];const _useState13=useState(\"\"),_useState14=_slicedToArray(_useState13,2),email=_useState14[0],setEmail=_useState14[1];const _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),contactNumber=_useState16[0],setContactNumber=_useState16[1];const _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),username=_useState18[0],setUsername=_useState18[1];//state to disable button on click\nconst _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),buttonDisabled=_useState20[0],setButtonDisabled=_useState20[1];// error state\nconst _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),errorConfirmPassword=_useState22[0],setErrorConfirmPassword=_useState22[1];const history=useHistory();const location=useLocation();useEffect(()=>{getUserRolesAPICall();getUserByIdAPICall();},[]);//API CALLS\nconst getUserRolesAPICall=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var currentUser;return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:currentUser=getCurrentUser();_context.next=3;return axios.get(getUserRolesAPI,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;let userRoles=[];if(responseData.status===1){responseData.data.map((item,index)=>{userRoles.push({label:item.name,value:item.id,key:index});});setUserRolesList(userRoles);}else{console.log(responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context.stop();}},_callee);}));return function getUserRolesAPICall(){return _ref.apply(this,arguments);};}();const getUserByIdAPICall=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var currentUser;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:currentUser=getCurrentUser();_context2.next=3;return axios.post(getUserByIdAPI,{user_id:location.state.user_id},{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;let tempData=[];if(responseData.status===1){setName(responseData.data.name);setEmail(responseData.data.email);setContactNumber(responseData.data.contact_number);setUsername(responseData.data.username);responseData.data.roles.map((item,index)=>{tempData.push({label:item.name,value:item.id,key:index});});setSelectedOptions(tempData);}else{console.log(responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context2.stop();}},_callee2);}));return function getUserByIdAPICall(){return _ref2.apply(this,arguments);};}();const updateUserAPICall=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params){var currentUser;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:setButtonDisabled(true);currentUser=getCurrentUser();_context3.next=4;return axios.post(updateUserAPI,params,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){history.push({pathname:adminRoot+'/pages/user',state:{responseStatus:responseData.status,responseMsg:responseData.msg}});}else{setButtonDisabled(false);updateUserAlert(responseData.msg);}}).catch(error=>{setButtonDisabled(false);console.log(error);});case 4:case\"end\":return _context3.stop();}},_callee3);}));return function updateUserAPICall(_x){return _ref3.apply(this,arguments);};}();//Alert helper methods\nconst updateUserAlert=msg=>{setAlertVisible(true);setAlertMsg(msg);setAlertColor(\"danger\");};const onDismissAlert=()=>{setAlertVisible(false);};//handle password confirmation\n// const handleConfirmPassword = (value)=>{\n//   setConfirmPassword(value);\n//   if (password === value) {\n//     setErrorConfirmPassword(false);\n//   } else {\n//     setErrorConfirmPassword(true);\n//   }\n// }\n//Form Validation Schema\nconst UserDetailsValidationSchema=yup.object().shape({name:yup.string().required(\"Name name is required\"),email:yup.string().email(\"Inavlid email format\").required(\"Email is required\"),contact_number:yup.string().nullable().matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\").length(10,\"Invalid contact number length\").required(\"Contact number is required\"),username:yup.string().required(\"Username is required\"),password:yup.string(),confirm_password:yup.string().equals([yup.ref('password')],\"Passwords must match\")});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\"},/*#__PURE__*/React.createElement(\"span\",{className:\"page_title\"},\"Update User\"),/*#__PURE__*/React.createElement(\"a\",{href:\"User\",className:\"mt-2 btn-primary default btn-sm float-right\"},/*#__PURE__*/React.createElement(\"b\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-list\"}),\" User List\")),/*#__PURE__*/React.createElement(Separator,{className:\"mb-5 mt-1\"}))),/*#__PURE__*/React.createElement(Formik,{enableReinitialize:true,initialValues:{name:name,email:email,contact_number:contactNumber,username:username,password:\"\",confirm_password:\"\"},validationSchema:UserDetailsValidationSchema,onSubmit:values=>{setErrorConfirmPassword(false);if(values.password===values.confirm_password){let roleValue;if(Array.isArray(selectedOptions)){roleValue=selectedOptions[0].label;}else{roleValue=selectedOptions.label;}const params={user_id:location.state.user_id,name:values.name,email:values.email,roles:[roleValue],contact_number:values.contact_number,username:values.username,password:values.password};updateUserAPICall(params);}else{setErrorConfirmPassword(true);return;}}},({handleChange,handleBlur,handleSubmit,values,touched,errors})=>/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",className:\"mb-4\"},/*#__PURE__*/React.createElement(Card,{className:\"mb-4\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"12\"},/*#__PURE__*/React.createElement(Alert,{color:alertColor,isOpen:alertVisible,toggle:onDismissAlert},alertMsg)),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Full Name \",name:\"name\",value:values.name,onChange:handleChange,onBlur:handleBlur,className:errors.name&&touched.name?\"input-error\":null}),errors.name&&touched.name&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.name))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Email\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Email\",value:values.email,name:\"email\",onChange:handleChange,onBlur:handleBlur,className:errors.email&&touched.email?\"input-error\":null}),errors.email&&touched.email&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.email))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Role\"),/*#__PURE__*/React.createElement(Select,{components:{Input:CustomSelectInput},className:\"react-select\",classNamePrefix:\"react-select\",name:\"form-field-name\",value:selectedOptions,onChange:setSelectedOptions,options:userRolesList}))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Contact Number\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Contact Number\",name:\"contact_number\",value:values.contact_number,onChange:handleChange,onBlur:handleBlur,className:errors.contact_number&&touched.contact_number?\"input-error\":null}),errors.contact_number&&touched.contact_number&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.contact_number))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Username\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"username\",placeholder:\"Username\",value:values.username,onChange:handleChange,onBlur:handleBlur,className:errors.username&&touched.username?\"input-error\":null}),errors.username&&touched.username&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.username))),/*#__PURE__*/React.createElement(Colxx,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Password\"),/*#__PURE__*/React.createElement(Input,{type:\"password\",placeholder:\"Password\",name:\"password\",value:values.password,onChange:handleChange,onBlur:handleBlur,className:errors.password&&touched.password?\"input-error\":null}),errors.password&&touched.password&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.password))),/*#__PURE__*/React.createElement(Colxx,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Confirm Password\"),/*#__PURE__*/React.createElement(Input,{type:\"password\",placeholder:\"Confirm Password\",name:\"confirm_password\",value:values.confirm_password,onChange:handleChange,onBlur:handleBlur,className:errors.confirm_password&&touched.confirm_password?\"input-error\":null}),errors.confirm_password&&touched.confirm_password&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.confirm_password),errorConfirmPassword&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},\"\\n\"+\"Please confirm Password\")))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"12\",className:\"text-center\"},/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"default mr-2\",onClick:handleSubmit,disabled:buttonDisabled},/*#__PURE__*/React.createElement(\"b\",null,\"Update\")),/*#__PURE__*/React.createElement(Button,{color:\"light\",className:\"default\",onClick:()=>{history.goBack();}},/*#__PURE__*/React.createElement(\"b\",null,\"Cancel\")))))))))));};export default UpdateUser;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/pages/UpdateUser.js"],"names":["React","useState","useEffect","Row","FormGroup","Card","CardBody","Label","Input","Button","Alert","Select","Colxx","Separator","CustomSelectInput","getCurrentUser","adminRoot","updateUserAPI","getUserRolesAPI","getUserByIdAPI","axios","Formik","yup","useHistory","useLocation","UpdateUser","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","selectedOptions","setSelectedOptions","userRolesList","setUserRolesList","name","setName","email","setEmail","contactNumber","setContactNumber","username","setUsername","buttonDisabled","setButtonDisabled","errorConfirmPassword","setErrorConfirmPassword","history","location","getUserRolesAPICall","getUserByIdAPICall","currentUser","get","headers","Authorization","token","then","response","responseData","data","userRoles","status","map","item","index","push","label","value","id","key","console","log","msg","catch","error","post","user_id","state","tempData","contact_number","roles","updateUserAPICall","params","pathname","responseStatus","responseMsg","updateUserAlert","onDismissAlert","UserDetailsValidationSchema","object","shape","string","required","nullable","matches","length","password","confirm_password","equals","ref","values","roleValue","Array","isArray","handleChange","handleBlur","handleSubmit","touched","errors","goBack"],"mappings":"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","sourcesContent":["import React, { useState,useEffect }  from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot, updateUserAPI,getUserRolesAPI,getUserByIdAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport { useHistory,useLocation } from \"react-router-dom\";\n\nconst UpdateUser = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //multiSelect state\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  //user roles\n  const [userRolesList,setUserRolesList] = useState([]);\n  //user details state\n  const [name,setName] = useState(\"\");\n  const [email,setEmail] = useState(\"\");\n  const [contactNumber,setContactNumber] = useState(\"\");\n  const [username,setUsername] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  // error state\n  const [errorConfirmPassword,setErrorConfirmPassword] = useState(false);\n\n  const history = useHistory();\n  const location = useLocation();\n\n\n  useEffect(()=>{\n    getUserRolesAPICall();\n    getUserByIdAPICall();\n  },[])\n\n   //API CALLS\n   const getUserRolesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getUserRolesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let userRoles=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           userRoles.push({label:item.name,value:item.id,key:index})\n         })\n         setUserRolesList(userRoles);\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const getUserByIdAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getUserByIdAPI,\n    {\n        user_id:location.state.user_id\n    },\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        let tempData = [];\n        if (responseData.status === 1) {\n        setName(responseData.data.name);\n        setEmail(responseData.data.email);\n        setContactNumber(responseData.data.contact_number);\n        setUsername(responseData.data.username);\n        responseData.data.roles.map((item,index)=>{\n            tempData.push({label:item.name,value:item.id,key:index})\n        })\n        setSelectedOptions(tempData);\n        }else{\n        console.log(responseData.msg);\n        }\n    }).catch(error=>{\n        console.log(error);\n    })\n  }\n\n  const updateUserAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(updateUserAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/user',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          updateUserAlert(responseData.msg);\n        }\n    }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n    })\n  }\n  //Alert helper methods\n  const updateUserAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle password confirmation\n  // const handleConfirmPassword = (value)=>{\n  //   setConfirmPassword(value);\n  //   if (password === value) {\n  //     setErrorConfirmPassword(false);\n  //   } else {\n  //     setErrorConfirmPassword(true);\n  //   }\n  // }\n  //Form Validation Schema\n  const UserDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name name is required\"),\n    email:yup.string()\n        .email(\"Inavlid email format\")\n        .required(\"Email is required\"),\n    contact_number:yup.string()\n                .nullable()\n                .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n                .length(10,\"Invalid contact number length\")\n                .required(\"Contact number is required\"),\n    username:yup.string()\n        .required(\"Username is required\"),\n    password:yup.string(),\n    confirm_password:yup.string()\n        .equals([yup.ref('password')], \"Passwords must match\")\n  });\n  \n  return (    \n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update User</span>\n            <a href=\"User\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> User List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true} \n        initialValues={{\n            name:name,\n            email:email,\n            contact_number:contactNumber,\n            username:username,\n            password:\"\",\n            confirm_password:\"\",\n        }}\n        validationSchema={UserDetailsValidationSchema} \n        onSubmit={(values)=>{\n          setErrorConfirmPassword(false);\n          if (values.password === values.confirm_password) {\n            let roleValue;\n            if (Array.isArray(selectedOptions)) {\n              roleValue = selectedOptions[0].label;\n            } else {\n              roleValue = selectedOptions.label;\n            }\n            const params = {\n              user_id:location.state.user_id,\n              name:values.name,\n              email:values.email,\n              roles:[roleValue],\n              contact_number:values.contact_number,\n              username:values.username,\n              password:values.password\n            }\n          updateUserAPICall(params);\n          } else {\n            setErrorConfirmPassword(true);\n            return;\n          }\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                  {alertMsg}\n                                </Alert>\n                              </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Full Name \"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Email\"\n                                  value={values.email}\n                                  name=\"email\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.email && touched.email ? \"input-error\":null}\n                                />\n                                {errors.email && touched.email &&(\n                                  <span className=\"error\">{errors.email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Role\n                                </Label>\n                                <Select\n                                  components={{ Input: CustomSelectInput }}\n                                  className=\"react-select\"\n                                  classNamePrefix=\"react-select\"\n                                  name=\"form-field-name\"\n                                  value={selectedOptions}\n                                  onChange={setSelectedOptions}\n                                  options={userRolesList}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Username\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"username\"\n                                  placeholder=\"Username\"\n                                  value={values.username}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.username && touched.username ? \"input-error\":null}\n                                />\n                                 {errors.username && touched.username &&(\n                                  <span className=\"error\">{errors.username}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Password\n                                </Label>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Password\"\n                                  name=\"password\"\n                                  value={values.password}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.password && touched.password ? \"input-error\":null}\n                                />\n                                {errors.password && touched.password &&(\n                                  <span className=\"error\">{errors.password}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Confirm Password\n                                </Label>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Confirm Password\"\n                                  name=\"confirm_password\"\n                                  value={values.confirm_password}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.confirm_password && touched.confirm_password ? \"input-error\":null}\n                                />\n                                {errors.confirm_password && touched.confirm_password &&(\n                                  <span className=\"error\">{errors.confirm_password}</span>\n                                )}\n                                {errorConfirmPassword && \n                                  <span className=\"error\">{\"\\n\"+\"Please confirm Password\"}</span>\n                                }\n                              </FormGroup>\n                            </Colxx>\n                            {/* <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Password\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Password\"\n                                  name=\"password\"\n                                  value={password}\n                                  onChange={e=>setPassword(e.target.value)}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Confirm Password\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Confirm Password\"\n                                  name=\"confirm_password\"\n                                  value={confirmPassword}\n                                  onChange={e=>handleConfirmPassword(e.target.value)}\n                                />\n                                {errorConfirmPassword && \n                                  <span className=\"error\">Passwords must match</span>\n                                }\n                              </FormGroup>\n                            </Colxx> */}\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default UpdateUser;"]},"metadata":{},"sourceType":"module"}