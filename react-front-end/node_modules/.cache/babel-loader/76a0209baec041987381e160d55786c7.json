{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\src\\\\views\\\\app\\\\reports\\\\batteryHistoricalData.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, Card, CardBody, FormGroup, Label, Input, Button, Alert } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport { historyReportAPI } from '../../../constants/defaultValues';\nimport axios from 'axios';\n\nconst BatteryHistoricalData = ({}) => {\n  //date states\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        fromDate = _useState2[0],\n        setFromDate = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        toDate = _useState4[0],\n        setToDate = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bin = _useState6[0],\n        setBin = _useState6[1]; //alert states\n\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        alertVisible = _useState8[0],\n        setAlertVisible = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        alertMsg = _useState10[0],\n        setAlertMsg = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        alertColor = _useState12[0],\n        setAlertColor = _useState12[1]; //state to disable button on click\n\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        buttonDisabled = _useState14[0],\n        setButtonDisabled = _useState14[1]; //loader state\n\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        isLoading = _useState16[0],\n        setIsLoading = _useState16[1]; //helper methods\n  //Alert helper methods\n\n\n  const onDismissAlert = () => {\n    setAlertVisible(false);\n  };\n\n  const downloadExcelReport = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var currentUser, tempFromDate, tempToDate, params;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            setAlertVisible(false);\n            currentUser = getCurrentUser();\n            tempFromDate = null, tempToDate = null;\n\n            if (fromDate != null && fromDate != \"\") {\n              tempFromDate = fromDate.getDate() + \"-\" + (fromDate.getMonth() + 1) + \"-\" + fromDate.getFullYear() + \" \" + fromDate.getHours() + \":\" + fromDate.getMinutes() + \":\" + fromDate.getSeconds();\n            }\n\n            if (toDate != null && toDate != \"\") {\n              tempToDate = toDate.getDate() + \"-\" + (toDate.getMonth() + 1) + \"-\" + toDate.getFullYear() + \" \" + toDate.getHours() + \":\" + toDate.getMinutes() + \":\" + toDate.getSeconds();\n            }\n\n            if (!(tempToDate == null || tempFromDate == null)) {\n              _context.next = 10;\n              break;\n            }\n\n            setAlertVisible(true);\n            setAlertMsg(\"Please Select From and To date.\");\n            setAlertColor(\"danger\");\n            return _context.abrupt(\"return\");\n\n          case 10:\n            setButtonDisabled(true);\n            setIsLoading(true);\n            params = {\n              bin: bin,\n              from_date: tempFromDate,\n              to_date: tempToDate\n            };\n            _context.next = 15;\n            return axios.post(historyReportAPI, params, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                const link = document.createElement('a');\n                link.href = responseData.data.file;\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n              } else {\n                setAlertVisible(true);\n                setAlertMsg(responseData.msg);\n                setAlertColor(\"danger\");\n              }\n\n              setButtonDisabled(false);\n              setIsLoading(false);\n            }).catch(error => {\n              setButtonDisabled(false);\n              setIsLoading(false);\n              console.log(error);\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function downloadExcelReport() {\n      return _ref.apply(this, arguments);\n    };\n  }(); //Form Validation Schema\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"page_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, \"Battery Historical Data\"), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }\n  }, \"Select Option\"), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: alertColor,\n    isOpen: alertVisible,\n    toggle: onDismissAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }\n  }, alertMsg)), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, \"BIN\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"BIN\",\n    name: \"bin\",\n    value: bin,\n    onChange: e => setBin(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, \"From Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n    showTimeInput: true,\n    placeholderText: \"From Date\",\n    selected: fromDate,\n    onChange: date => setFromDate(date),\n    dateFormat: \"dd/MM/yyyy hh:mm aa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, \"To Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n    showTimeInput: true,\n    placeholderText: \"From Date\",\n    selected: toDate,\n    onChange: date => setToDate(date),\n    dateFormat: \"dd/MM/yyyy hh:mm aa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    md: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"default mt-4\",\n    onClick: () => downloadExcelReport(),\n    disabled: buttonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-check font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 91\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 1\n    }\n  }, \"Please Wait\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 28\n    }\n  }, \"Download Excel Report\"))))))))));\n};\n\nexport default BatteryHistoricalData;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/reports/batteryHistoricalData.js"],"names":["React","useState","useEffect","Row","Card","CardBody","FormGroup","Label","Input","Button","Alert","DatePicker","Colxx","Separator","getCurrentUser","historyReportAPI","axios","BatteryHistoricalData","fromDate","setFromDate","toDate","setToDate","bin","setBin","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","buttonDisabled","setButtonDisabled","isLoading","setIsLoading","onDismissAlert","downloadExcelReport","currentUser","tempFromDate","tempToDate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","params","from_date","to_date","post","headers","Authorization","token","then","response","responseData","data","status","link","document","createElement","href","file","body","appendChild","click","removeChild","msg","catch","error","console","log","e","target","value","date"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody, FormGroup, Label,\n  Input, Button,Alert\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {historyReportAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\n\nconst BatteryHistoricalData = ({}) => {\n  //date states\n  const [fromDate,setFromDate] = useState();\n  const [toDate,setToDate] = useState();\n  const [bin,setBin] = useState();\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(false);\n\n  //helper methods\n  //Alert helper methods\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const downloadExcelReport = async() => {\n    setAlertVisible(false);\n    \n    const currentUser = getCurrentUser();\n    let tempFromDate=null,tempToDate=null;\n    if (fromDate != null && fromDate !=\"\") {\n      tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear()+\" \"+fromDate.getHours()+\":\"+fromDate.getMinutes()+\":\"+fromDate.getSeconds();\n    }\n    if (toDate != null && toDate !=\"\") {\n      tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear()+\" \"+toDate.getHours()+\":\"+toDate.getMinutes()+\":\"+toDate.getSeconds();\n    }\n    if (tempToDate == null || tempFromDate ==null) {\n      setAlertVisible(true);\n      setAlertMsg(\"Please Select From and To date.\");\n      setAlertColor(\"danger\");\n      return; \n    }\n    setButtonDisabled(true);\n    setIsLoading(true);\n    \n    const params = {\n      bin:bin,\n      from_date:tempFromDate,\n      to_date:tempToDate\n    }\n    \n    await axios.post(historyReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          const link = document.createElement('a');\n          link.href = responseData.data.file;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }else{\n          setAlertVisible(true);\n          setAlertMsg(responseData.msg);\n          setAlertColor(\"danger\");\n        }        \n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n  //Form Validation Schema\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Battery Historical Data</span>\n        <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n            <Card>\n                <CardBody>\n                  <h3>Select Option</h3>\n                  <hr/>\n                  <Row>\n                    <Colxx md=\"12\">\n                      <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                        {alertMsg}\n                      </Alert>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          BIN\n                        </Label>\n                        <Input \n                          type=\"text\"\n                          placeholder=\"BIN\"\n                          name=\"bin\"\n                          value={bin}\n                          onChange={e=>setBin(e.target.value)}\n                        ></Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          From Date\n                        </Label>\n                        <DatePicker\n                        showTimeInput\n                        placeholderText=\"From Date\"\n                        selected={fromDate}\n                        onChange={date=>setFromDate(date)}\n                        dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          To Date\n                        </Label>\n                        <DatePicker\n                        showTimeInput\n                        placeholderText=\"From Date\"\n                        selected={toDate}\n                        onChange={date=>setToDate(date)}\n                        dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx md=\"3\">\n                      <Button color=\"primary\" className=\"default mt-4\" onClick={() => downloadExcelReport()} disabled={buttonDisabled}>\n                        <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>{isLoading ?\n<span>Please Wait</span> : <span>Download Excel Report</span>}</b>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </CardBody>\n            </Card>\n        </Colxx>\n      </Row>    \n    </>\n  );\n};\n\nexport default BatteryHistoricalData;\n"]},"metadata":{},"sourceType":"module"}