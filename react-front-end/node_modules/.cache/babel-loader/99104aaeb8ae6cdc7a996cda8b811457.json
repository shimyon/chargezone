{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Row,FormGroup,Card,CardBody,Label,Input,Button,Alert}from'reactstrap';import{Colxx,Separator}from'../../../components/common/CustomBootstrap';import{getCurrentUser}from'../../../helpers/Utils';import{adminRoot,getOemAPI,updateFaultAPI,getFaultByIdAPI}from'../../../constants/defaultValues';import axios from'axios';import{Formik}from'formik';import*as yup from'yup';import{useHistory,useLocation}from\"react-router-dom\";const UpdateFault=()=>{const history=useHistory();const location=useLocation();//state\nconst _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),oemId=_useState2[0],setOemId=_useState2[1];const _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),oemList=_useState4[0],setOemList=_useState4[1];const _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),type=_useState6[0],setType=_useState6[1];const _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),faultTitle=_useState8[0],setFaultTitle=_useState8[1];const _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),position=_useState10[0],setPosition=_useState10[1];//error flags\nconst _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),errorTypeFlag=_useState12[0],setErrorTypeFlag=_useState12[1];const _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),errorOemFlag=_useState14[0],setErrorOemFlag=_useState14[1];//alert states\nconst _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),alertVisible=_useState16[0],setAlertVisible=_useState16[1];const _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),alertMsg=_useState18[0],setAlertMsg=_useState18[1];const _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),alertColor=_useState20[0],setAlertColor=_useState20[1];//state to disable button on click\nconst _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),buttonDisabled=_useState22[0],setButtonDisabled=_useState22[1];useEffect(()=>{getFaultByIdAPICall();},[]);//API calls\nconst getOemAPICall=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(typeId){var currentUser;return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:setAlertVisible(false);currentUser=getCurrentUser();_context.next=4;return axios.post(getOemAPI,{type:typeId},{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setOemList(responseData.data);}else{setOemList([]);faultUpdatedAlert(\"OEM data for selectd type not found\");}}).catch(error=>{console.log(error);});case 4:case\"end\":return _context.stop();}},_callee);}));return function getOemAPICall(_x){return _ref.apply(this,arguments);};}();const getFaultByIdAPICall=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var currentUser;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:currentUser=getCurrentUser();_context2.next=3;return axios.post(getFaultByIdAPI,{fault_master_id:location.state.fault_master_id},{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setType(responseData.data.type);responseData.data.type==4?getOemAPICall(3):getOemAPICall(responseData.data.type);setOemId(responseData.data.oem_id);setFaultTitle(responseData.data.title);setPosition(responseData.data.bit_position);}else{faultUpdatedAlert(responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context2.stop();}},_callee2);}));return function getFaultByIdAPICall(){return _ref2.apply(this,arguments);};}();const updateFaultAPICall=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params){var currentUser;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:setButtonDisabled(true);currentUser=getCurrentUser();_context3.next=4;return axios.post(updateFaultAPI,params,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){history.push({pathname:adminRoot+'/pages/fault',state:{responseStatus:responseData.status,responseMsg:responseData.msg}});}else{setButtonDisabled(false);faultUpdatedAlert(responseData.msg);}}).catch(error=>{setButtonDisabled(false);console.log(error);});case 4:case\"end\":return _context3.stop();}},_callee3);}));return function updateFaultAPICall(_x2){return _ref3.apply(this,arguments);};}();//helper methods\n//Alert helper methods\nconst faultUpdatedAlert=msg=>{setAlertVisible(true);setAlertMsg(msg);setAlertColor(\"danger\");};const onDismissAlert=()=>{setAlertVisible(false);};//type select method\nconst handleTypeSelect=typeValue=>{setOemId(\"\");setType(typeValue);if(typeValue==4){getOemAPICall(3);}else{getOemAPICall(typeValue);}};//type blur\nconst handleTypeBlur=typeValue=>{setErrorTypeFlag(false);if(typeValue==0){setErrorTypeFlag(true);}};//OEM select method\nconst handleOemSelect=oemValue=>{if(oemValue==0){setOemId(\" \");}else{setOemId(oemValue);}};//oem blur\nconst handleOemBlur=oemValue=>{setErrorOemFlag(false);if(oemValue==0){setErrorOemFlag(true);}};//Form Validation Schema\nconst FaultDetailsValidationSchema=yup.object().shape({title:yup.string().required(\"Fault title is required\"),bit_position:yup.string().required(\"Position is required\")});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\"},/*#__PURE__*/React.createElement(\"span\",{className:\"page_title\"},\"Update Fault\"),/*#__PURE__*/React.createElement(\"a\",{href:\"fault\",className:\"mt-2 btn-primary default btn-sm float-right\"},/*#__PURE__*/React.createElement(\"b\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-list\"}),\" Fault List\")),/*#__PURE__*/React.createElement(Separator,{className:\"mb-5 mt-1\"}))),/*#__PURE__*/React.createElement(Formik,{enableReinitialize:true,initialValues:{title:faultTitle,bit_position:position},validationSchema:FaultDetailsValidationSchema,onSubmit:values=>{const params={fault_master_id:location.state.fault_master_id,type:type,title:values.title,oem_id:oemId,bit_position:values.bit_position};updateFaultAPICall(params);}},({handleChange,handleBlur,handleSubmit,values,touched,errors})=>/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",className:\"mb-4\"},/*#__PURE__*/React.createElement(Card,{className:\"mb-4\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"12\"},/*#__PURE__*/React.createElement(Alert,{color:alertColor,isOpen:alertVisible,toggle:onDismissAlert},alertMsg)),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Type\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"type\",value:type,onChange:e=>handleTypeSelect(e.target.value),onBlur:e=>handleTypeBlur(e.target.value)},/*#__PURE__*/React.createElement(\"option\",{key:0,value:0},\"Select\"),/*#__PURE__*/React.createElement(\"option\",{key:1,value:1},\"Battery\"),/*#__PURE__*/React.createElement(\"option\",{key:2,value:2},\"EV\"),/*#__PURE__*/React.createElement(\"option\",{key:3,value:3},\"Charger\"),/*#__PURE__*/React.createElement(\"option\",{key:4,value:4},\"Connector\")),errorTypeFlag&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},\"Type is required\"))),/*#__PURE__*/React.createElement(Colxx,{sm:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"OEM\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"oem_id\",value:oemId,onChange:e=>handleOemSelect(e.target.value),onBlur:e=>handleOemBlur(e.target.value)},/*#__PURE__*/React.createElement(\"option\",{key:0,value:0},\"Select\"),oemList.map((item,index)=>/*#__PURE__*/React.createElement(\"option\",{key:index,value:item.oem_id},item.name))),errorOemFlag&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},\"OEM is required\"))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Fault Title\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Fault title \",name:\"title\",value:values.title,onChange:handleChange,onBlur:handleBlur,className:errors.title&&touched.title?\"input-error\":null}),errors.title&&touched.title&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.title))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Position\"),/*#__PURE__*/React.createElement(Input,{type:\"number\",placeholder:\"Position \",name:\"bit_position\",value:values.bit_position,onChange:handleChange,onBlur:handleBlur,className:errors.bit_position&&touched.bit_position?\"input-error\":null}),errors.bit_position&&touched.bit_position&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.bit_position)))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"12\",className:\"text-center\"},/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"default mr-2\",onClick:handleSubmit,disabled:buttonDisabled},/*#__PURE__*/React.createElement(\"b\",null,\"Update\")),/*#__PURE__*/React.createElement(Button,{color:\"light\",className:\"default\",onClick:()=>{history.goBack();}},/*#__PURE__*/React.createElement(\"b\",null,\"Cancel\")))))))))));};export default UpdateFault;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/pages/UpdateFault.js"],"names":["React","useState","useEffect","Row","FormGroup","Card","CardBody","Label","Input","Button","Alert","Colxx","Separator","getCurrentUser","adminRoot","getOemAPI","updateFaultAPI","getFaultByIdAPI","axios","Formik","yup","useHistory","useLocation","UpdateFault","history","location","oemId","setOemId","oemList","setOemList","type","setType","faultTitle","setFaultTitle","position","setPosition","errorTypeFlag","setErrorTypeFlag","errorOemFlag","setErrorOemFlag","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","buttonDisabled","setButtonDisabled","getFaultByIdAPICall","getOemAPICall","typeId","currentUser","post","headers","Authorization","token","then","response","responseData","data","status","faultUpdatedAlert","catch","error","console","log","fault_master_id","state","oem_id","title","bit_position","msg","updateFaultAPICall","params","push","pathname","responseStatus","responseMsg","onDismissAlert","handleTypeSelect","typeValue","handleTypeBlur","handleOemSelect","oemValue","handleOemBlur","FaultDetailsValidationSchema","object","shape","string","required","values","handleChange","handleBlur","handleSubmit","touched","errors","e","target","value","map","item","index","name","goBack"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot,getOemAPI,updateFaultAPI,getFaultByIdAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport { useHistory,useLocation } from \"react-router-dom\";\n\nconst UpdateFault = () => {\n  const history = useHistory();\n  const location = useLocation();\n  //state\n  const [oemId,setOemId] = useState(\"\");\n  const [oemList,setOemList] = useState([]);\n  const [type,setType] = useState(0);\n  const [faultTitle,setFaultTitle] = useState(\"\");\n  const [position,setPosition] = useState(\"\");\n  //error flags\n  const [errorTypeFlag,setErrorTypeFlag] = useState(false);\n  const [errorOemFlag,setErrorOemFlag] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n\n  useEffect(()=>{\n      getFaultByIdAPICall();\n    },[])\n\n\n  //API calls\n  const getOemAPICall = async(typeId) => {\n    setAlertVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:typeId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {          \n          setOemList(responseData.data);\n        }else{\n          setOemList([]);\n          faultUpdatedAlert(\"OEM data for selectd type not found\");\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getFaultByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getFaultByIdAPI,\n        {\n            fault_master_id:location.state.fault_master_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n                setType(responseData.data.type);\n                responseData.data.type==4?getOemAPICall(3):getOemAPICall(responseData.data.type);\n                setOemId(responseData.data.oem_id);\n                setFaultTitle(responseData.data.title);\n                setPosition(responseData.data.bit_position);\n            }else{                \n              faultUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n\n    const updateFaultAPICall = async(params) => {\n        setButtonDisabled(true);\n        const currentUser = getCurrentUser();\n        await axios.post(updateFaultAPI,\n        params,\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n              history.push({\n                pathname:adminRoot+'/pages/fault',\n                state:{\n                  responseStatus:responseData.status,\n                  responseMsg:responseData.msg\n                }\n              })\n            }else{\n              setButtonDisabled(false);\n              faultUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            setButtonDisabled(false);\n            console.log(error);\n        })\n    }\n\n  //helper methods\n  //Alert helper methods\n  const faultUpdatedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //type select method\n  const handleTypeSelect = (typeValue) => {\n    setOemId(\"\");\n    setType(typeValue);\n    if (typeValue == 4) {\n      getOemAPICall(3);\n    } else {\n      getOemAPICall(typeValue); \n    }\n  }\n  //type blur\n  const handleTypeBlur = (typeValue) => {\n    setErrorTypeFlag(false);\n    if (typeValue == 0) {\n      setErrorTypeFlag(true);\n    }\n  }\n  //OEM select method\n  const handleOemSelect = (oemValue) => {\n    if (oemValue == 0) {\n      setOemId(\" \");\n    } else {\n      setOemId(oemValue); \n    }\n  }\n  //oem blur\n  const handleOemBlur = (oemValue) => {\n    setErrorOemFlag(false);\n    if (oemValue == 0) {\n      setErrorOemFlag(true);\n    }\n  }\n  //Form Validation Schema\n  const FaultDetailsValidationSchema = yup.object().shape({\n    title:yup.string()\n        .required(\"Fault title is required\"),\n    bit_position:yup.string()\n        .required(\"Position is required\"),\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Fault</span>\n            <a href=\"fault\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Fault List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            title:faultTitle,\n            bit_position:position,\n        }}\n        validationSchema={FaultDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n              fault_master_id:location.state.fault_master_id,\n              type:type,\n              title:values.title,\n              oem_id:oemId,\n              bit_position:values.bit_position\n            }\n          updateFaultAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                        <Row>\n                          <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                                Type\n                              </Label>\n                              <Input type=\"select\" \n                              name=\"type\"\n                              value={type}\n                              onChange={(e)=>handleTypeSelect(e.target.value)}\n                              onBlur={(e)=>handleTypeBlur(e.target.value)}>\n                                  <option key={0} value={0}>Select</option>\n                                  <option key={1} value={1}>Battery</option>\n                                  <option key={2} value={2}>EV</option>\n                                  <option key={3} value={3}>Charger</option>\n                                  <option key={4} value={4}>Connector</option>\n                              </Input>\n                              {errorTypeFlag &&(\n                                  <span className=\"error\">Type is required</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  OEM\n                                </Label>\n                                <Input type=\"select\" \n                                name=\"oem_id\"\n                                value={oemId}\n                                onChange={(e)=>handleOemSelect(e.target.value)}\n                                onBlur={(e)=>handleOemBlur(e.target.value)}>\n                                    <option key={0} value={0}>Select</option>\n                                    {oemList.map((item,index)=>\n                                      <option key={index} value={item.oem_id}>{item.name}</option>\n                                    )}\n                                </Input>\n                                {errorOemFlag &&(\n                                    <span className=\"error\">OEM is required</span>\n                                  )}   \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Fault Title\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Fault title \"\n                                  name=\"title\"\n                                  value={values.title}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.title && touched.title ? \"input-error\":null}\n                                />\n                                {errors.title && touched.title &&(\n                                  <span className=\"error\">{errors.title}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Position\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  placeholder=\"Position \"\n                                  name=\"bit_position\"\n                                  value={values.bit_position}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.bit_position && touched.bit_position ? \"input-error\":null}\n                                />\n                                {errors.bit_position && touched.bit_position &&(\n                                  <span className=\"error\">{errors.bit_position}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default UpdateFault;\n"]},"metadata":{},"sourceType":"module"}