{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\src\\\\views\\\\app\\\\pages\\\\AddUser.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, FormGroup, Card, CardBody, Label, Input, Button, Alert } from 'reactstrap';\nimport Select from 'react-select';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport { adminRoot, addUserAPI, getUserRolesAPI } from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from \"react-router-dom\";\n\nconst AddUser = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedOptions = _useState2[0],\n        setSelectedOptions = _useState2[1]; //user roles\n\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userRolesList = _useState4[0],\n        setUserRolesList = _useState4[1]; //state to disable button on click\n\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        buttonDisabled = _useState6[0],\n        setButtonDisabled = _useState6[1]; //alert states\n\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        alertVisible = _useState8[0],\n        setAlertVisible = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        alertMsg = _useState10[0],\n        setAlertMsg = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        alertColor = _useState12[0],\n        setAlertColor = _useState12[1];\n\n  const history = useHistory();\n  useEffect(() => {\n    getUserRolesAPICall();\n  }, []); //API CALLS\n\n  const getUserRolesAPICall = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context.next = 3;\n            return axios.get(getUserRolesAPI, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n              let userRoles = [];\n\n              if (responseData.status === 1) {\n                responseData.data.map((item, index) => {\n                  userRoles.push({\n                    label: item.name,\n                    value: item.id,\n                    key: index\n                  });\n                });\n                setUserRolesList(userRoles);\n              } else {\n                console.log(responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function getUserRolesAPICall() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const addUserAPICall = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            setButtonDisabled(true);\n            currentUser = getCurrentUser();\n            _context2.next = 4;\n            return axios.post(addUserAPI, params, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                history.push({\n                  pathname: adminRoot + '/pages/user',\n                  state: {\n                    responseStatus: responseData.status,\n                    responseMsg: responseData.msg\n                  }\n                });\n              } else {\n                addUserAlert(responseData.msg);\n                setButtonDisabled(false);\n              }\n            }).catch(error => {\n              setButtonDisabled(false);\n              console.log(error);\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function addUserAPICall(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); //Alert helper methods\n\n\n  const addUserAlert = msg => {\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  };\n\n  const onDismissAlert = () => {\n    setAlertVisible(false);\n  }; //Form Validation Schema\n\n\n  const UserDetailsValidationSchema = yup.object().shape({\n    name: yup.string().required(\"Name name is required\"),\n    email: yup.string().email(\"Inavlid email format\").required(\"Email is required\"),\n    contact_number: yup.string().matches(/\\+?\\d[\\d -]{8,12}\\d/, \"Invalid contact number\").length(10, \"Invalid contact number length\").required(\"Contact number is required\"),\n    username: yup.string().required(\"Username is required\"),\n    password: yup.string().required(\"Password is required\"),\n    confirm_password: yup.string().equals([yup.ref('password')], \"Passwords must match\").required(\"Password is required\")\n  });\n  const initialValues = {\n    name: \"\",\n    email: \"\",\n    contact_number: \"\",\n    username: \"\",\n    password: \"\",\n    confirm_password: \"\"\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"page_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Add User\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"User\",\n    className: \"mt-2 btn-primary default btn-sm float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 20\n    }\n  }), \" User List\")), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: UserDetailsValidationSchema,\n    onSubmit: values => {\n      const params = {\n        name: values.name,\n        email: values.email,\n        roles: [selectedOptions.label],\n        contact_number: values.contact_number,\n        username: values.username,\n        password: values.password\n      };\n      addUserAPICall(params);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, ({\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    values,\n    touched,\n    errors\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: alertColor,\n    isOpen: alertVisible,\n    toggle: onDismissAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 31\n    }\n  }, alertMsg)), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Full Name \",\n    name: \"name\",\n    value: values.name,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.name && touched.name ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 33\n    }\n  }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 35\n    }\n  }, errors.name))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 33\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Email\",\n    value: values.email,\n    name: \"email\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.email && touched.email ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 33\n    }\n  }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 35\n    }\n  }, errors.email))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  }, \"Role\"), /*#__PURE__*/React.createElement(Select, {\n    components: {\n      Input: CustomSelectInput\n    },\n    className: \"react-select\",\n    classNamePrefix: \"react-select\",\n    name: \"form-field-name\",\n    value: selectedOptions,\n    onChange: setSelectedOptions,\n    options: userRolesList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 33\n    }\n  }, \"Contact Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Contact Number\",\n    name: \"contact_number\",\n    value: values.contact_number,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.contact_number && touched.contact_number ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 33\n    }\n  }), errors.contact_number && touched.contact_number && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 35\n    }\n  }, errors.contact_number))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 33\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Username\",\n    value: values.username,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.username && touched.username ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 33\n    }\n  }), errors.username && touched.username && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 35\n    }\n  }, errors.username))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 33\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Password\",\n    name: \"password\",\n    value: values.password,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.password && touched.password ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 35\n    }\n  }, errors.password))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 33\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Confirm Password\",\n    name: \"confirm_password\",\n    value: values.confirm_password,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.confirm_password && touched.confirm_password ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 33\n    }\n  }), errors.confirm_password && touched.confirm_password && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 35\n    }\n  }, errors.confirm_password)))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"default mr-2\",\n    onClick: handleSubmit,\n    disabled: buttonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 35\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"light\",\n    className: \"default\",\n    onClick: () => {\n      history.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 35\n    }\n  }, \"Cancel\")))))))))));\n};\n\nexport default AddUser;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/pages/AddUser.js"],"names":["React","useState","useEffect","Row","FormGroup","Card","CardBody","Label","Input","Button","Alert","Select","Colxx","Separator","CustomSelectInput","getCurrentUser","adminRoot","addUserAPI","getUserRolesAPI","axios","Formik","yup","useHistory","AddUser","selectedOptions","setSelectedOptions","userRolesList","setUserRolesList","buttonDisabled","setButtonDisabled","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","history","getUserRolesAPICall","currentUser","get","headers","Authorization","token","then","response","responseData","data","userRoles","status","map","item","index","push","label","name","value","id","key","console","log","msg","catch","error","addUserAPICall","params","post","pathname","state","responseStatus","responseMsg","addUserAlert","onDismissAlert","UserDetailsValidationSchema","object","shape","string","required","email","contact_number","matches","length","username","password","confirm_password","equals","ref","initialValues","values","roles","handleChange","handleBlur","handleSubmit","touched","errors","goBack"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA2C,OAA3C;AACA,SACEC,GADF,EACMC,SADN,EACiBC,IADjB,EACuBC,QADvB,EAEEC,KAFF,EAEQC,KAFR,EAEeC,MAFf,EAEsBC,KAFtB,QAGO,YAHP;AAIA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,4CAAjC;AACA,OAAOC,iBAAP,MAA8B,8CAA9B;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAAQC,SAAR,EAAmBC,UAAnB,EAA8BC,eAA9B,QAAoD,kCAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,QAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA,oBAC0BtB,QAAQ,CAAC,EAAD,CADlC;AAAA;AAAA,QACbuB,eADa;AAAA,QACIC,kBADJ,kBAEpB;;;AAFoB,qBAGqBxB,QAAQ,CAAC,EAAD,CAH7B;AAAA;AAAA,QAGbyB,aAHa;AAAA,QAGCC,gBAHD,kBAIpB;;;AAJoB,qBAKuB1B,QAAQ,CAAC,KAAD,CAL/B;AAAA;AAAA,QAKb2B,cALa;AAAA,QAKEC,iBALF,kBAMpB;;;AANoB,qBAOmB5B,QAAQ,CAAC,KAAD,CAP3B;AAAA;AAAA,QAOb6B,YAPa;AAAA,QAOAC,eAPA;;AAAA,qBAQW9B,QAAQ,CAAC,EAAD,CARnB;AAAA;AAAA,QAQb+B,QARa;AAAA,QAQJC,WARI;;AAAA,sBASehC,QAAQ,CAAC,EAAD,CATvB;AAAA;AAAA,QASbiC,UATa;AAAA,QASFC,aATE;;AAWpB,QAAMC,OAAO,GAAGd,UAAU,EAA1B;AAEApB,EAAAA,SAAS,CAAC,MAAI;AACZmC,IAAAA,mBAAmB;AACpB,GAFQ,EAEP,EAFO,CAAT,CAboB,CAiBnB;;AACA,QAAMA,mBAAmB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AACrBC,YAAAA,WADqB,GACPvB,cAAc,EADP;AAAA;AAAA,mBAErBI,KAAK,CAACoB,GAAN,CAAUrB,eAAV,EACJ;AAACsB,cAAAA,OAAO,EAAC;AAACC,gBAAAA,aAAa,mBAAYH,WAAW,CAACI,KAAxB;AAAd;AAAT,aADI,EAEHC,IAFG,CAEEC,QAAQ,IAAE;AACd,oBAAMC,YAAY,GAAGD,QAAQ,CAACE,IAA9B;AACA,kBAAIC,SAAS,GAAC,EAAd;;AACA,kBAAIF,YAAY,CAACG,MAAb,KAAwB,CAA5B,EAA+B;AAC7BH,gBAAAA,YAAY,CAACC,IAAb,CAAkBG,GAAlB,CAAsB,CAACC,IAAD,EAAMC,KAAN,KAAc;AACnCJ,kBAAAA,SAAS,CAACK,IAAV,CAAe;AAACC,oBAAAA,KAAK,EAACH,IAAI,CAACI,IAAZ;AAAiBC,oBAAAA,KAAK,EAACL,IAAI,CAACM,EAA5B;AAA+BC,oBAAAA,GAAG,EAACN;AAAnC,mBAAf;AACD,iBAFA;AAGDxB,gBAAAA,gBAAgB,CAACoB,SAAD,CAAhB;AACA,eALD,MAKK;AACHW,gBAAAA,OAAO,CAACC,GAAR,CAAYd,YAAY,CAACe,GAAzB;AACD;AACF,aAbG,EAaDC,KAbC,CAaKC,KAAK,IAAE;AACdJ,cAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,aAfG,CAFqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAnBzB,mBAAmB;AAAA;AAAA;AAAA,KAAzB;;AAmBD,QAAM0B,cAAc;AAAA,yEAAG,kBAAMC,MAAN;AAAA;AAAA;AAAA;AAAA;AACrBnC,YAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACMS,YAAAA,WAFe,GAEDvB,cAAc,EAFb;AAAA;AAAA,mBAGfI,KAAK,CAAC8C,IAAN,CAAWhD,UAAX,EACJ+C,MADI,EAEJ;AAACxB,cAAAA,OAAO,EAAC;AAACC,gBAAAA,aAAa,mBAAYH,WAAW,CAACI,KAAxB;AAAd;AAAT,aAFI,EAGHC,IAHG,CAGEC,QAAQ,IAAE;AACd,oBAAMC,YAAY,GAAGD,QAAQ,CAACE,IAA9B;;AACA,kBAAID,YAAY,CAACG,MAAb,KAAwB,CAA5B,EAA+B;AAC7BZ,gBAAAA,OAAO,CAACgB,IAAR,CAAa;AACXc,kBAAAA,QAAQ,EAAClD,SAAS,GAAC,aADR;AAEXmD,kBAAAA,KAAK,EAAC;AACJC,oBAAAA,cAAc,EAACvB,YAAY,CAACG,MADxB;AAEJqB,oBAAAA,WAAW,EAACxB,YAAY,CAACe;AAFrB;AAFK,iBAAb;AAOD,eARD,MAQK;AACHU,gBAAAA,YAAY,CAACzB,YAAY,CAACe,GAAd,CAAZ;AACA/B,gBAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD;AACF,aAjBG,EAiBDgC,KAjBC,CAiBKC,KAAK,IAAE;AACdjC,cAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACA6B,cAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,aApBG,CAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdC,cAAc;AAAA;AAAA;AAAA,KAApB,CArCoB,CA+DpB;;;AACA,QAAMO,YAAY,GAAIV,GAAD,IAAO;AAC1B7B,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,IAAAA,WAAW,CAAC2B,GAAD,CAAX;AACAzB,IAAAA,aAAa,CAAC,QAAD,CAAb;AACD,GAJD;;AAKA,QAAMoC,cAAc,GAAG,MAAI;AACzBxC,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAFD,CArEoB,CAwEpB;;;AACA,QAAMyC,2BAA2B,GAAGnD,GAAG,CAACoD,MAAJ,GAAaC,KAAb,CAAmB;AACrDpB,IAAAA,IAAI,EAACjC,GAAG,CAACsD,MAAJ,GACAC,QADA,CACS,uBADT,CADgD;AAGrDC,IAAAA,KAAK,EAACxD,GAAG,CAACsD,MAAJ,GACDE,KADC,CACK,sBADL,EAEDD,QAFC,CAEQ,mBAFR,CAH+C;AAMrDE,IAAAA,cAAc,EAACzD,GAAG,CAACsD,MAAJ,GACVI,OADU,CACF,qBADE,EACoB,wBADpB,EAEVC,MAFU,CAEH,EAFG,EAEA,+BAFA,EAGVJ,QAHU,CAGD,4BAHC,CANsC;AAUrDK,IAAAA,QAAQ,EAAC5D,GAAG,CAACsD,MAAJ,GACJC,QADI,CACK,sBADL,CAV4C;AAYrDM,IAAAA,QAAQ,EAAC7D,GAAG,CAACsD,MAAJ,GACJC,QADI,CACK,sBADL,CAZ4C;AAcrDO,IAAAA,gBAAgB,EAAC9D,GAAG,CAACsD,MAAJ,GACZS,MADY,CACL,CAAC/D,GAAG,CAACgE,GAAJ,CAAQ,UAAR,CAAD,CADK,EACkB,sBADlB,EAEZT,QAFY,CAEH,sBAFG;AAdoC,GAAnB,CAApC;AAmBA,QAAMU,aAAa,GAAG;AACpBhC,IAAAA,IAAI,EAAC,EADe;AAEpBuB,IAAAA,KAAK,EAAC,EAFc;AAGpBC,IAAAA,cAAc,EAAC,EAHK;AAIpBG,IAAAA,QAAQ,EAAC,EAJW;AAKpBC,IAAAA,QAAQ,EAAC,EALW;AAMpBC,IAAAA,gBAAgB,EAAC;AANG,GAAtB;AASA,sBACE,uDACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,IAAA,IAAI,EAAC,MAAR;AAAe,IAAA,SAAS,EAAC,6CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAG,IAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,eADJ,CAFJ,eAKE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF,eAUE,oBAAC,MAAD;AACE,IAAA,aAAa,EAAEG,aADjB;AAEE,IAAA,gBAAgB,EAAEd,2BAFpB;AAGE,IAAA,QAAQ,EAAGe,MAAD,IAAU;AAClB,YAAMvB,MAAM,GAAG;AACbV,QAAAA,IAAI,EAACiC,MAAM,CAACjC,IADC;AAEbuB,QAAAA,KAAK,EAACU,MAAM,CAACV,KAFA;AAGbW,QAAAA,KAAK,EAAC,CAAChE,eAAe,CAAC6B,KAAjB,CAHO;AAIbyB,QAAAA,cAAc,EAACS,MAAM,CAACT,cAJT;AAKbG,QAAAA,QAAQ,EAACM,MAAM,CAACN,QALH;AAMbC,QAAAA,QAAQ,EAACK,MAAM,CAACL;AANH,OAAf;AAQAnB,MAAAA,cAAc,CAACC,MAAD,CAAd;AACD,KAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAcK,CAAC;AAACyB,IAAAA,YAAD;AAAcC,IAAAA,UAAd;AAAyBC,IAAAA,YAAzB;AAAsCJ,IAAAA,MAAtC;AAA6CK,IAAAA,OAA7C;AAAqDC,IAAAA;AAArD,GAAD,kBACC,uDACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,IAAX;AAAgB,IAAA,SAAS,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE3D,UAAd;AAA0B,IAAA,MAAM,EAAEJ,YAAlC;AAAgD,IAAA,MAAM,EAAEyC,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvC,QADH,CADF,CADF,eAME,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,YAFd;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEuD,MAAM,CAACjC,IAJhB;AAKE,IAAA,QAAQ,EAAEmC,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAOE,IAAA,SAAS,EAAEG,MAAM,CAACvC,IAAP,IAAesC,OAAO,CAACtC,IAAvB,GAA8B,aAA9B,GAA4C,IAPzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAaGuC,MAAM,CAACvC,IAAP,IAAesC,OAAO,CAACtC,IAAvB,iBACC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBuC,MAAM,CAACvC,IAAhC,CAdJ,CADF,CANF,eAyBE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,KAAK,EAAEiC,MAAM,CAACV,KAHhB;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,QAAQ,EAAEY,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAOE,IAAA,SAAS,EAAEG,MAAM,CAAChB,KAAP,IAAgBe,OAAO,CAACf,KAAxB,GAAgC,aAAhC,GAA8C,IAP3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAaGgB,MAAM,CAAChB,KAAP,IAAgBe,OAAO,CAACf,KAAxB,iBACC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBgB,MAAM,CAAChB,KAAhC,CAdJ,CADF,CAzBF,eA4CE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE;AAAErE,MAAAA,KAAK,EAAEM;AAAT,KADd;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,eAAe,EAAC,cAHlB;AAIE,IAAA,IAAI,EAAC,iBAJP;AAKE,IAAA,KAAK,EAAEU,eALT;AAME,IAAA,QAAQ,EAAEC,kBANZ;AAOE,IAAA,OAAO,EAAEC,aAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CA5CF,eA4DE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,gBAFd;AAGE,IAAA,IAAI,EAAC,gBAHP;AAIE,IAAA,KAAK,EAAE6D,MAAM,CAACT,cAJhB;AAKE,IAAA,QAAQ,EAAEW,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAOE,IAAA,SAAS,EAAEG,MAAM,CAACf,cAAP,IAAyBc,OAAO,CAACd,cAAjC,GAAkD,aAAlD,GAAgE,IAP7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAaGe,MAAM,CAACf,cAAP,IAAyBc,OAAO,CAACd,cAAjC,iBACC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBe,MAAM,CAACf,cAAhC,CAdJ,CADF,CA5DF,eA+EE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,KAAK,EAAES,MAAM,CAACN,QAJhB;AAKE,IAAA,QAAQ,EAAEQ,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAOE,IAAA,SAAS,EAAEG,MAAM,CAACZ,QAAP,IAAmBW,OAAO,CAACX,QAA3B,GAAsC,aAAtC,GAAoD,IAPjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAaIY,MAAM,CAACZ,QAAP,IAAmBW,OAAO,CAACX,QAA3B,iBACA;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBY,MAAM,CAACZ,QAAhC,CAdJ,CADF,CA/EF,eAkGE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAEM,MAAM,CAACL,QAJhB;AAKE,IAAA,QAAQ,EAAEO,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAOE,IAAA,SAAS,EAAEG,MAAM,CAACX,QAAP,IAAmBU,OAAO,CAACV,QAA3B,GAAsC,aAAtC,GAAoD,IAPjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAaGW,MAAM,CAACX,QAAP,IAAmBU,OAAO,CAACV,QAA3B,iBACC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBW,MAAM,CAACX,QAAhC,CAdJ,CADF,CAlGF,eAqHE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,WAAW,EAAC,kBAFd;AAGE,IAAA,IAAI,EAAC,kBAHP;AAIE,IAAA,KAAK,EAAEK,MAAM,CAACJ,gBAJhB;AAKE,IAAA,QAAQ,EAAEM,YALZ;AAME,IAAA,MAAM,EAAEC,UANV;AAOE,IAAA,SAAS,EAAEG,MAAM,CAACV,gBAAP,IAA2BS,OAAO,CAACT,gBAAnC,GAAsD,aAAtD,GAAoE,IAPjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAaGU,MAAM,CAACV,gBAAP,IAA2BS,OAAO,CAACT,gBAAnC,iBACC;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBU,MAAM,CAACV,gBAAhC,CAdJ,CADF,CArHF,CADJ,eA0II,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,IAAV;AAAe,IAAA,SAAS,EAAC,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,SAAS,EAAC,cAAlC;AAAiD,IAAA,OAAO,EAAEQ,YAA1D;AAAwE,IAAA,QAAQ,EAAE/D,cAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAsB,IAAA,SAAS,EAAC,SAAhC;AAA0C,IAAA,OAAO,EAAE,MAAI;AAACQ,MAAAA,OAAO,CAAC0D,MAAR;AAAiB,KAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAJF,CADF,CA1IJ,CADJ,CADF,CADF,CADF,CAfN,CAVF,CADF;AA2LD,CAhSD;;AAkSA,eAAevE,OAAf","sourcesContent":["import React, { useState,useEffect }  from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot, addUserAPI,getUserRolesAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nimport { useHistory } from \"react-router-dom\";\n\nconst AddUser = () => {\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  //user roles\n  const [userRolesList,setUserRolesList] = useState([]);\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    getUserRolesAPICall();\n  },[])\n\n   //API CALLS\n   const getUserRolesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getUserRolesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let userRoles=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           userRoles.push({label:item.name,value:item.id,key:index})\n         })\n         setUserRolesList(userRoles);\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addUserAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addUserAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/user',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          addUserAlert(responseData.msg);\n          setButtonDisabled(false);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Alert helper methods\n  const addUserAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const UserDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name name is required\"),\n    email:yup.string()\n        .email(\"Inavlid email format\")\n        .required(\"Email is required\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n        .required(\"Contact number is required\"),\n    username:yup.string()\n        .required(\"Username is required\"),\n    password:yup.string()\n        .required(\"Password is required\"),\n    confirm_password:yup.string()\n        .equals([yup.ref('password')], \"Passwords must match\")\n        .required(\"Password is required\"),\n  });\n\n  const initialValues = {\n    name:\"\",\n    email:\"\",\n    contact_number:\"\",\n    username:\"\",\n    password:\"\",\n    confirm_password:\"\",\n  };\n  \n  return (    \n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add User</span>\n            <a href=\"User\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> User List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={UserDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n            name:values.name,\n            email:values.email,\n            roles:[selectedOptions.label],\n            contact_number:values.contact_number,\n            username:values.username,\n            password:values.password\n          }\n          addUserAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Full Name \"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Email\"\n                                  value={values.email}\n                                  name=\"email\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.email && touched.email ? \"input-error\":null}\n                                />\n                                {errors.email && touched.email &&(\n                                  <span className=\"error\">{errors.email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Role\n                                </Label>\n                                <Select\n                                  components={{ Input: CustomSelectInput }}\n                                  className=\"react-select\"\n                                  classNamePrefix=\"react-select\"\n                                  name=\"form-field-name\"\n                                  value={selectedOptions}\n                                  onChange={setSelectedOptions}\n                                  options={userRolesList}                                  \n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Username\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"username\"\n                                  placeholder=\"Username\"\n                                  value={values.username}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.username && touched.username ? \"input-error\":null}\n                                />\n                                 {errors.username && touched.username &&(\n                                  <span className=\"error\">{errors.username}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Password\n                                </Label>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Password\"\n                                  name=\"password\"\n                                  value={values.password}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.password && touched.password ? \"input-error\":null}\n                                />\n                                {errors.password && touched.password &&(\n                                  <span className=\"error\">{errors.password}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Confirm Password\n                                </Label>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Confirm Password\"\n                                  name=\"confirm_password\"\n                                  value={values.confirm_password}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.confirm_password && touched.confirm_password ? \"input-error\":null}\n                                />\n                                {errors.confirm_password && touched.confirm_password &&(\n                                  <span className=\"error\">{errors.confirm_password}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default AddUser;"]},"metadata":{},"sourceType":"module"}