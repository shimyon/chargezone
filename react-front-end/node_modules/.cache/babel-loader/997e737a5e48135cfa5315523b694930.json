{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Row,FormGroup,Card,CardBody,Label,Input,Button,Alert}from'reactstrap';import{Colxx,Separator}from'../../../components/common/CustomBootstrap';import CustomSelectInput from'../../../components/common/CustomSelectInput';import Select from'react-select';import{getCurrentUser}from'../../../helpers/Utils';import{addFleetOperatorAPI,getUsersByRolesAPI,adminRoot}from'../../../constants/defaultValues';import axios from'axios';import{useHistory}from\"react-router-dom\";import{Formik}from'formik';import*as yup from'yup';const AddFleet=()=>{//alert states\nconst _useState=useState(false),_useState2=_slicedToArray(_useState,2),alertVisible=_useState2[0],setAlertVisible=_useState2[1];const _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),alertMsg=_useState4[0],setAlertMsg=_useState4[1];const _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),alertColor=_useState6[0],setAlertColor=_useState6[1];//multiSelect state\nconst _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),selectedOptions=_useState8[0],setSelectedOptions=_useState8[1];//fleet users list \nconst _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),fleetOperatorUsers=_useState10[0],setFleetOperatorUsers=_useState10[1];//state to disable button on click\nconst _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),buttonDisabled=_useState12[0],setButtonDisabled=_useState12[1];const history=useHistory();useEffect(()=>{getFleetOperatorUsersAPICall();},[]);//API calls\nconst getFleetOperatorUsersAPICall=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var currentUser;return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:currentUser=getCurrentUser();_context.next=3;return axios.post(getUsersByRolesAPI,{user_role:\"fleet operator\"},{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;let users=[];if(responseData.status===1){responseData.data.map(item=>{users.push({label:item.name,value:item.id,key:item.id});});setFleetOperatorUsers(users);}else{fleetAddedAlert(responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context.stop();}},_callee);}));return function getFleetOperatorUsersAPICall(){return _ref.apply(this,arguments);};}();const addFleetOperatorAPICall=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params){var currentUser;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:setButtonDisabled(true);currentUser=getCurrentUser();_context2.next=4;return axios.post(addFleetOperatorAPI,params,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){history.push({pathname:adminRoot+'/pages/fleetoperator',state:{responseStatus:responseData.status,responseMsg:responseData.msg}});}else{setButtonDisabled(false);fleetAddedAlert(responseData.msg);}}).catch(error=>{setButtonDisabled(false);console.log(error);});case 4:case\"end\":return _context2.stop();}},_callee2);}));return function addFleetOperatorAPICall(_x){return _ref2.apply(this,arguments);};}();//helper methods\n//Alert helper methods\nconst fleetAddedAlert=msg=>{setAlertVisible(true);setAlertMsg(msg);setAlertColor(\"danger\");};const onDismissAlert=()=>{setAlertVisible(false);};//Form Validation Schema\nconst FleetOperatorDetailsValidationSchema=yup.object().shape({name:yup.string().required(\"Name is required\"),address:yup.string().required(\"Address is required\"),contact_person:yup.string().required(\"Contact Person is required\"),contact_email:yup.string().email(\"Invalid Email format\").required(\"Contact email is required\"),contact_number:yup.string().matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\").length(10,\"Invalid contact number length\").required(\"Contact number is required\")});const initialValues={name:\"\",contact_person:\"\",contact_email:\"\",contact_number:\"\",address:\"\",remark_1:\"\",remark_2:\"\"};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\"},/*#__PURE__*/React.createElement(\"span\",{className:\"page_title\"},\"Add Fleet Operator\"),/*#__PURE__*/React.createElement(\"a\",{href:\"fleetoperator\",className:\"mt-2 btn-primary default btn-sm float-right\"},/*#__PURE__*/React.createElement(\"b\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-list\"}),\" Fleet Operator List\")),/*#__PURE__*/React.createElement(Separator,{className:\"mb-5 mt-1\"}))),/*#__PURE__*/React.createElement(Formik,{initialValues:initialValues,validationSchema:FleetOperatorDetailsValidationSchema,onSubmit:values=>{const usersSelected=[];selectedOptions.map(item=>{usersSelected.push(item.value);});const params={name:values.name,users:usersSelected,contact_person:values.contact_person,contact_email:values.contact_email,contact_number:values.contact_number,address:values.address,remark_1:values.remark_1,remark_2:values.remark_2};addFleetOperatorAPICall(params);}},({handleChange,handleBlur,handleSubmit,values,touched,errors})=>/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",className:\"mb-4\"},/*#__PURE__*/React.createElement(Card,{className:\"mb-4\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"12\"},/*#__PURE__*/React.createElement(Alert,{color:alertColor,isOpen:alertVisible,toggle:onDismissAlert},alertMsg)),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Name\",name:\"name\",value:values.name,onChange:handleChange,onBlur:handleBlur,className:errors.name&&touched.name?\"input-error\":null}),errors.name&&touched.name&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.name))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Users\"),/*#__PURE__*/React.createElement(Select,{components:{Input:CustomSelectInput},className:\"react-select\",classNamePrefix:\"react-select\",isMulti:true,name:\"form-field-name\",value:selectedOptions,onChange:setSelectedOptions,options:fleetOperatorUsers}))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Contact Person\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Contact Person\",name:\"contact_person\",value:values.contact_person,onChange:handleChange,onBlur:handleBlur,className:errors.contact_person&&touched.contact_person?\"input-error\":null}),errors.contact_person&&touched.contact_person&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.contact_person))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Contact Email\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Contact Email\",name:\"contact_email\",value:values.contact_email,onChange:handleChange,onBlur:handleBlur,className:errors.contact_email&&touched.contact_email?\"input-error\":null}),errors.contact_email&&touched.contact_email&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.contact_email))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Contact Number\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Contact Number\",name:\"contact_number\",value:values.contact_number,onChange:handleChange,onBlur:handleBlur,className:errors.contact_number&&touched.contact_number?\"input-error\":null}),errors.contact_number&&touched.contact_number&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.contact_number))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Address\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Address\",name:\"address\",value:values.address,onChange:handleChange,onBlur:handleBlur,className:errors.address&&touched.address?\"input-error\":null}),errors.address&&touched.address&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.address))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Remark1\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"remark_1\",placeholder:\"Remark1\",value:values.remark_1,onChange:handleChange,onBlur:handleBlur}))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Remark2\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"remark_2\",placeholder:\"Remark2\",value:values.remark_2,onChange:handleChange,onBlur:handleBlur})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"12\",className:\"text-center\"},/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"default mr-2\",onClick:handleSubmit,disabled:buttonDisabled},/*#__PURE__*/React.createElement(\"b\",null,\"Add\")),/*#__PURE__*/React.createElement(Button,{color:\"light\",className:\"default\",onClick:()=>{history.goBack();}},/*#__PURE__*/React.createElement(\"b\",null,\"Cancel\")))))))))));};export default AddFleet;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/pages/AddFleet.js"],"names":["React","useState","useEffect","Row","FormGroup","Card","CardBody","Label","Input","Button","Alert","Colxx","Separator","CustomSelectInput","Select","getCurrentUser","addFleetOperatorAPI","getUsersByRolesAPI","adminRoot","axios","useHistory","Formik","yup","AddFleet","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","selectedOptions","setSelectedOptions","fleetOperatorUsers","setFleetOperatorUsers","buttonDisabled","setButtonDisabled","history","getFleetOperatorUsersAPICall","currentUser","post","user_role","headers","Authorization","token","then","response","responseData","data","users","status","map","item","push","label","name","value","id","key","fleetAddedAlert","msg","catch","error","console","log","addFleetOperatorAPICall","params","pathname","state","responseStatus","responseMsg","onDismissAlert","FleetOperatorDetailsValidationSchema","object","shape","string","required","address","contact_person","contact_email","email","contact_number","matches","length","initialValues","remark_1","remark_2","values","usersSelected","handleChange","handleBlur","handleSubmit","touched","errors","goBack"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {addFleetOperatorAPI,getUsersByRolesAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst AddFleet = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //multiSelect state\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  //fleet users list \n  const [fleetOperatorUsers, setFleetOperatorUsers] = useState([]);\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    getFleetOperatorUsersAPICall();\n  },[])\n\n  //API calls\n  const getFleetOperatorUsersAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getUsersByRolesAPI,\n      {user_role:\"fleet operator\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let users=[];\n        if (responseData.status === 1) {\n          responseData.data.map(item=>{\n           users.push({label:item.name,value:item.id,key:item.id})\n         })\n         setFleetOperatorUsers(users);\n        }else{\n          fleetAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addFleetOperatorAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addFleetOperatorAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/fleetoperator',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          fleetAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const fleetAddedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const FleetOperatorDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name is required\"),\n    address:yup.string()\n        .required(\"Address is required\"),\n    contact_person:yup.string()\n        .required(\"Contact Person is required\"),\n    contact_email:yup.string()\n        .email(\"Invalid Email format\")\n        .required(\"Contact email is required\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n        .required(\"Contact number is required\"),\n  });\n\n  const initialValues = {\n    name:\"\",\n    contact_person:\"\",\n    contact_email:\"\",\n    contact_number:\"\",\n    address:\"\",\n    remark_1:\"\",\n    remark_2:\"\"\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Fleet Operator</span>\n            <a href=\"fleetoperator\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Fleet Operator List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={FleetOperatorDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const usersSelected = [];\n          selectedOptions.map(item=>{\n            usersSelected.push(item.value)\n          })\n          const params = {\n            name:values.name,\n            users:usersSelected,\n            contact_person:values.contact_person,\n            contact_email:values.contact_email,\n            contact_number:values.contact_number,\n            address:values.address,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2\n          }\n          addFleetOperatorAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Users\n                                </Label>\n                                  <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={selectedOptions}\n                                    onChange={setSelectedOptions}\n                                    options={fleetOperatorUsers}\n                                  />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Person\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Person\"\n                                  name=\"contact_person\"\n                                  value={values.contact_person}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_person && touched.contact_person ? \"input-error\":null}\n                                />\n                                {errors.contact_person && touched.contact_person &&(\n                                  <span className=\"error\">{errors.contact_person}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Email\"\n                                  name=\"contact_email\"\n                                  value={values.contact_email}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_email && touched.contact_email ? \"input-error\":null}\n                                />\n                                {errors.contact_email && touched.contact_email &&(\n                                  <span className=\"error\">{errors.contact_email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Address\"\n                                  name=\"address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik> \n    </>\n  );\n};\n\nexport default AddFleet;"]},"metadata":{},"sourceType":"module"}