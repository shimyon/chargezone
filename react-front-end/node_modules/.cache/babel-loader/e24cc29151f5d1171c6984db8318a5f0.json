{"ast":null,"code":"import _objectSpread from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\src\\\\views\\\\app\\\\inventory\\\\UpdateChargerInventory.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, FormGroup, Card, CardSubtitle, CardBody, Label, Input, Button, Alert } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport { getOwnersAPI, getChargerAPI, getStationsAPI, getChargerInventoryByIdAPI, updateChargerInventoryAPI, adminRoot } from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Formik, Field, FieldArray, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateChargerInventory = () => {\n  //state to disable button on click\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        buttonDisabled = _useState2[0],\n        setButtonDisabled = _useState2[1]; //alert states\n\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        alertVisible = _useState4[0],\n        setAlertVisible = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        alertMsg = _useState6[0],\n        setAlertMsg = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        alertColor = _useState8[0],\n        setAlertColor = _useState8[1]; //dropdown states\n\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        stationNameData = _useState10[0],\n        setStationNameData = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        ownerNameData = _useState12[0],\n        setOwnerNameData = _useState12[1];\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        chargerMasterData = _useState14[0],\n        setChargerMasterData = _useState14[1]; //charger data default states\n\n\n  const _useState15 = useState(\"\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        chargerId = _useState16[0],\n        setChargerId = _useState16[1];\n\n  const _useState17 = useState(\"\"),\n        _useState18 = _slicedToArray(_useState17, 2),\n        hubId = _useState18[0],\n        setHubId = _useState18[1];\n\n  const _useState19 = useState(\"\"),\n        _useState20 = _slicedToArray(_useState19, 2),\n        qrCode = _useState20[0],\n        setQrCode = _useState20[1];\n\n  const _useState21 = useState(\"\"),\n        _useState22 = _slicedToArray(_useState21, 2),\n        chargerMasterId = _useState22[0],\n        setChargerMasterId = _useState22[1];\n\n  const _useState23 = useState(\"\"),\n        _useState24 = _slicedToArray(_useState23, 2),\n        noOfSlot = _useState24[0],\n        setNoOfSlot = _useState24[1];\n\n  const _useState25 = useState([]),\n        _useState26 = _slicedToArray(_useState25, 2),\n        slotData = _useState26[0],\n        setSlotData = _useState26[1];\n\n  const _useState27 = useState(\"\"),\n        _useState28 = _slicedToArray(_useState27, 2),\n        ownBy = _useState28[0],\n        setOwnBy = _useState28[1];\n\n  const _useState29 = useState(\"\"),\n        _useState30 = _slicedToArray(_useState29, 2),\n        remark1 = _useState30[0],\n        setRemark1 = _useState30[1];\n\n  const _useState31 = useState(\"\"),\n        _useState32 = _slicedToArray(_useState31, 2),\n        remark2 = _useState32[0],\n        setRemark2 = _useState32[1];\n\n  const history = useHistory();\n  const location = useLocation();\n  useEffect(() => {\n    GetStationNamesAPICall();\n    GetOwnerNamesAPICall();\n    GetChargerMasterAPICall();\n    getChargerInventoryByIdAPICall();\n  }, []); //API calls\n\n  const GetStationNamesAPICall = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context.next = 3;\n            return axios.get(getStationsAPI, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setStationNameData(responseData.data);\n              } else {\n                console.log(responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function GetStationNamesAPICall() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const GetOwnerNamesAPICall = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context2.next = 3;\n            return axios.get(getOwnersAPI, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setOwnerNameData(responseData.data);\n              } else {\n                console.log(responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function GetOwnerNamesAPICall() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const GetChargerMasterAPICall = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context3.next = 3;\n            return axios.get(getChargerAPI, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setChargerMasterData(responseData.data);\n              } else {\n                console.log(responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n\n    return function GetChargerMasterAPICall() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  const getChargerInventoryByIdAPICall = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context4.next = 3;\n            return axios.post(getChargerInventoryByIdAPI, {\n              charger_inventory_id: location.state.charger_inventory_id\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setChargerId(responseData.data.charger_id);\n                setQrCode(responseData.data.qr_code);\n                setHubId(responseData.data.hub_id);\n                setOwnBy(responseData.data.own_by);\n                setChargerMasterId(responseData.data.charger_master_id);\n                setNoOfSlot(responseData.data.no_of_slot);\n                setSlotData(responseData.data.slots);\n                setRemark1(responseData.data.remark_1);\n                setRemark2(responseData.data.remark_2);\n              } else {\n                console.log(responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n\n    return function getChargerInventoryByIdAPICall() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  const updateChargerInventoryAPICall = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(params) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            setButtonDisabled(true);\n            currentUser = getCurrentUser();\n            _context5.next = 4;\n            return axios.post(updateChargerInventoryAPI, params, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                history.push({\n                  pathname: adminRoot + '/inventory/charger',\n                  state: {\n                    responseStatus: responseData.status,\n                    responseMsg: responseData.msg\n                  }\n                });\n              } else {\n                setButtonDisabled(false);\n                updateChargerInventoryAlert(responseData.msg);\n              }\n            }).catch(error => {\n              setButtonDisabled(false);\n              console.log(error);\n            });\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n\n    return function updateChargerInventoryAPICall(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }(); //Form Validation Schema\n\n\n  const ChargerInventoryDetailsValidationSchema = yup.object().shape({\n    charger_id: yup.string().required(\"Charger ID is required\"),\n    hub_id: yup.string().required(\"Station is required\"),\n    qr_code: yup.string().matches(/^\\d+$/, \"Only numbers allowed\").required(\"QR Code capacity is required\"),\n    own_by: yup.string().required(\"Owned By is required\"),\n    charger_master_id: yup.string().required(\"Owned By is required\"),\n    numberOfSlots: yup.string().required('Number of slots is required'),\n    slots: yup.array().of(yup.object().shape({\n      // charger_id: yup.string()\n      //     .required('Charger Id is required'),\n      slot_id: yup.string().required('Slot Id is required')\n    }))\n  }); //helper\n  //Alert helper methods\n\n  const updateChargerInventoryAlert = msg => {\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  };\n\n  const onDismissAlert = () => {\n    setAlertVisible(false);\n  };\n\n  function onChangeSlots(e, field, values, setValues) {\n    // update dynamic form\n    const slots = [...values.slots];\n    const numberOfSlots = e.target.value || 0;\n    const previousNumber = parseInt(field.value || '0');\n\n    if (previousNumber < numberOfSlots) {\n      for (let i = previousNumber; i < numberOfSlots; i++) {\n        slots.push({\n          charger_id: '',\n          slot_id: ''\n        });\n      }\n    } else {\n      for (let i = previousNumber; i >= numberOfSlots; i--) {\n        slots.splice(i, 1);\n      }\n    }\n\n    setValues(_objectSpread(_objectSpread({}, values), {}, {\n      slots\n    })); // call formik onChange method\n\n    field.onChange(e);\n  }\n\n  function onSubmit(fields) {\n    // display form field values on success\n    const params = {\n      charger_inventory_id: location.state.charger_inventory_id,\n      charger_id: fields.charger_id,\n      qr_code: fields.qr_code,\n      hub_id: fields.hub_id,\n      own_by: fields.own_by,\n      charger_master_id: fields.charger_master_id,\n      no_of_slot: fields.numberOfSlots,\n      slots_data: fields.slots,\n      remark_1: fields.remark_1,\n      remark_2: fields.remark_2\n    };\n    updateChargerInventoryAPICall(params);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"page_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, \"Update Charger Inventory\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"charger\",\n    className: \"mt-2 btn-primary default btn-sm float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 20\n    }\n  }), \" Charger Inventory List\")), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      charger_id: chargerId,\n      hub_id: hubId,\n      qr_code: qrCode,\n      charger_master_id: chargerMasterId,\n      own_by: ownBy,\n      remark_1: remark1,\n      remark_2: remark2,\n      numberOfSlots: noOfSlot,\n      slots: slotData\n    },\n    validationSchema: ChargerInventoryDetailsValidationSchema,\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }\n  }, ({\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    values,\n    touched,\n    errors,\n    setValues\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CardSubtitle, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: alertColor,\n    isOpen: alertVisible,\n    toggle: onDismissAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 27\n    }\n  }, alertMsg)), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 33\n    }\n  }, \"Charger Id\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Charger Id\",\n    name: \"charger_id\",\n    value: values.charger_id,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.charger_id && touched.charger_id ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 33\n    }\n  }), errors.charger_id && touched.charger_id && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 35\n    }\n  }, errors.charger_id))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 33\n    }\n  }, \"QR Code\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"QR Code \",\n    value: values.qr_code,\n    name: \"qr_code\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.qr_code && touched.qr_code ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 33\n    }\n  }), errors.qr_code && touched.qr_code && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 35\n    }\n  }, errors.qr_code))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 33\n    }\n  }, \"Station\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"hub_id\",\n    placeholder: \"Station\",\n    value: values.hub_id,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 35\n    }\n  }, \"Select Station\"), stationNameData.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    value: item.hub_master_id,\n    key: item.hub_master_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 37\n    }\n  }, item.name))), errors.hub_id && touched.hub_id && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 35\n    }\n  }, errors.hub_id))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 33\n    }\n  }, \"Owned By\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"own_by\",\n    value: values.own_by,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 35\n    }\n  }, \"Select Owned By\"), ownerNameData.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    value: item.owner_master_id,\n    key: item.owner_master_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 37\n    }\n  }, item.name))), errors.own_by && touched.own_by && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 35\n    }\n  }, errors.own_by))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 33\n    }\n  }, \"Charger\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"charger_master_id\",\n    value: values.charger_master_id,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 35\n    }\n  }, \"Select Charger\"), chargerMasterData.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    value: item.id,\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 37\n    }\n  }, item.make + \"-\" + item.model + \"-\" + item.dimension))), errors.charger_master_id && touched.charger_master_id && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 35\n    }\n  }, errors.charger_master_id))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 33\n    }\n  }, \"Number of Slots\"), /*#__PURE__*/React.createElement(Field, {\n    name: \"numberOfSlots\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 33\n    }\n  }, ({\n    field\n  }) => /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    type: \"number\"\n  }, field, {\n    className: 'form-control' + (errors.numberOfSlots && touched.numberOfSlots ? ' is-invalid' : ''),\n    onChange: e => onChangeSlots(e, field, values, setValues),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 41\n    }\n  }))), errors.numberOfSlots && touched.numberOfSlots && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 35\n    }\n  }, errors.numberOfSlots))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FieldArray, {\n    name: \"slots\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 29\n    }\n  }, () => values.slots.map((ticket, i) => {\n    var _errors$slots, _touched$slots;\n\n    const ticketErrors = ((_errors$slots = errors.slots) === null || _errors$slots === void 0 ? void 0 : _errors$slots.length) && errors.slots[i] || {};\n    const ticketTouched = ((_touched$slots = touched.slots) === null || _touched$slots === void 0 ? void 0 : _touched$slots.length) && touched.slots[i] || {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: i,\n      className: \"list-group list-group-flush\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-group-item p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-1 mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 53\n      }\n    }, \"Slot#\", i + 1)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 55\n      }\n    }, \"Slot ID\"), /*#__PURE__*/React.createElement(Field, {\n      name: \"slots.\".concat(i, \".slot_id\"),\n      type: \"text\",\n      className: 'form-control' + (ticketErrors.slot_id && ticketTouched.slot_id ? ' is-invalid' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 55\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"slots.\".concat(i, \".slot_id\"),\n      component: \"div\",\n      className: \"invalid-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 55\n      }\n    })))));\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 33\n    }\n  }, \"Remark 1\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"remark_1\",\n    placeholder: \"Remark 1\",\n    value: values.remark_1,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 33\n    }\n  }, \"Remark 2\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"remark_2\",\n    placeholder: \"Remark 2\",\n    value: values.remark_2,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"default mr-2\",\n    onClick: handleSubmit,\n    disabled: buttonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 35\n    }\n  }, \"Update\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"light\",\n    className: \"default\",\n    onClick: () => {\n      history.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 35\n    }\n  }, \"Cancel\")))))))))));\n};\n\nexport default UpdateChargerInventory;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/inventory/UpdateChargerInventory.js"],"names":["React","useState","useEffect","Row","FormGroup","Card","CardSubtitle","CardBody","Label","Input","Button","Alert","Colxx","Separator","getCurrentUser","getOwnersAPI","getChargerAPI","getStationsAPI","getChargerInventoryByIdAPI","updateChargerInventoryAPI","adminRoot","axios","useHistory","useLocation","Formik","Field","FieldArray","ErrorMessage","yup","UpdateChargerInventory","buttonDisabled","setButtonDisabled","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","stationNameData","setStationNameData","ownerNameData","setOwnerNameData","chargerMasterData","setChargerMasterData","chargerId","setChargerId","hubId","setHubId","qrCode","setQrCode","chargerMasterId","setChargerMasterId","noOfSlot","setNoOfSlot","slotData","setSlotData","ownBy","setOwnBy","remark1","setRemark1","remark2","setRemark2","history","location","GetStationNamesAPICall","GetOwnerNamesAPICall","GetChargerMasterAPICall","getChargerInventoryByIdAPICall","currentUser","get","headers","Authorization","token","then","response","responseData","data","status","console","log","msg","catch","error","post","charger_inventory_id","state","charger_id","qr_code","hub_id","own_by","charger_master_id","no_of_slot","slots","remark_1","remark_2","updateChargerInventoryAPICall","params","push","pathname","responseStatus","responseMsg","updateChargerInventoryAlert","ChargerInventoryDetailsValidationSchema","object","shape","string","required","matches","numberOfSlots","array","of","slot_id","onDismissAlert","onChangeSlots","e","field","values","setValues","target","value","previousNumber","parseInt","i","splice","onChange","onSubmit","fields","slots_data","handleChange","handleBlur","handleSubmit","touched","errors","map","item","hub_master_id","name","owner_master_id","id","make","model","dimension","ticket","ticketErrors","length","ticketTouched","goBack"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { \n  Row,FormGroup, Card,CardSubtitle, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getOwnersAPI,getChargerAPI,getStationsAPI,getChargerInventoryByIdAPI,updateChargerInventoryAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport { Formik, Field, FieldArray, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateChargerInventory = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //dropdown states\n  const [stationNameData,setStationNameData] = useState([]);\n  const [ownerNameData,setOwnerNameData] = useState([]);\n  const [chargerMasterData,setChargerMasterData] = useState([]);\n  //charger data default states\n  const [chargerId,setChargerId] = useState(\"\");\n  const [hubId,setHubId] = useState(\"\");\n  const [qrCode,setQrCode] = useState(\"\");\n  const [chargerMasterId,setChargerMasterId] = useState(\"\");\n  const [noOfSlot,setNoOfSlot] = useState(\"\");\n  const [slotData,setSlotData] = useState([]);\n  const [ownBy,setOwnBy] = useState(\"\");\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n    GetOwnerNamesAPICall();\n    GetChargerMasterAPICall();\n    getChargerInventoryByIdAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetOwnerNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getOwnersAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setOwnerNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetChargerMasterAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getChargerAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setChargerMasterData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n    const getChargerInventoryByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getChargerInventoryByIdAPI,\n        {\n            charger_inventory_id:location.state.charger_inventory_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n            setChargerId(responseData.data.charger_id);\n            setQrCode(responseData.data.qr_code);\n            setHubId(responseData.data.hub_id);\n            setOwnBy(responseData.data.own_by);\n            setChargerMasterId(responseData.data.charger_master_id);\n            setNoOfSlot(responseData.data.no_of_slot);\n            setSlotData(responseData.data.slots);\n            setRemark1(responseData.data.remark_1);\n            setRemark2(responseData.data.remark_2);\n            }else{\n            console.log(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n  const updateChargerInventoryAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(updateChargerInventoryAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/inventory/charger',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          updateChargerInventoryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const ChargerInventoryDetailsValidationSchema = yup.object().shape({\n    charger_id:yup.string()\n        .required(\"Charger ID is required\"),\n    hub_id:yup.string()\n        .required(\"Station is required\"),\n    qr_code:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"QR Code capacity is required\"),\n    own_by:yup.string()\n        .required(\"Owned By is required\"),\n    charger_master_id:yup.string()\n        .required(\"Owned By is required\"),\n    numberOfSlots: yup.string()\n        .required('Number of slots is required'),\n    slots: yup.array().of(\n      yup.object().shape({\n            // charger_id: yup.string()\n            //     .required('Charger Id is required'),\n            slot_id: yup.string()\n                .required('Slot Id is required')\n        })\n    )\n  });\n\n  //helper\n  //Alert helper methods\n  const updateChargerInventoryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  function onChangeSlots(e, field, values, setValues) {\n    // update dynamic form\n    const slots = [...values.slots];\n    const numberOfSlots = e.target.value || 0;\n    const previousNumber = parseInt(field.value || '0');\n    if (previousNumber < numberOfSlots) {\n        for (let i = previousNumber; i < numberOfSlots; i++) {\n            slots.push({ charger_id: '', slot_id: '' });\n        }\n    } else {\n        for (let i = previousNumber; i >= numberOfSlots; i--) {\n            slots.splice(i, 1);\n        }\n    }\n    setValues({ ...values, slots });\n\n    // call formik onChange method\n    field.onChange(e);\n  }\n  function onSubmit(fields) {\n      // display form field values on success\n      const params = {\n        charger_inventory_id:location.state.charger_inventory_id,\n        charger_id:fields.charger_id,\n        qr_code:fields.qr_code,\n        hub_id:fields.hub_id,\n        own_by:fields.own_by,\n        charger_master_id:fields.charger_master_id,\n        no_of_slot:fields.numberOfSlots,\n        slots_data:fields.slots,\n        remark_1:fields.remark_1,\n        remark_2:fields.remark_2,\n      }\n      updateChargerInventoryAPICall(params);\n  }\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Charger Inventory</span>\n            <a href=\"charger\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Charger Inventory List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            charger_id:chargerId,\n            hub_id:hubId,\n            qr_code:qrCode,\n            charger_master_id:chargerMasterId,\n            own_by:ownBy,\n            remark_1:remark1,\n            remark_2:remark2,\n            numberOfSlots: noOfSlot,\n            slots: slotData\n        }}\n        validationSchema={ChargerInventoryDetailsValidationSchema} \n        onSubmit={onSubmit} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors,setValues})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody>\n                        <CardSubtitle className=\"mb-3\">\n                          <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                            {alertMsg}\n                          </Alert>\n                        </CardSubtitle> \n                          <Row>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Charger Id\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Charger Id\"\n                                  name=\"charger_id\"\n                                  value={values.charger_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.charger_id && touched.charger_id ? \"input-error\":null}\n                                />\n                                {errors.charger_id && touched.charger_id &&(\n                                  <span className=\"error\">{errors.charger_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                QR Code\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"QR Code \"\n                                  value={values.qr_code}\n                                  name=\"qr_code\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.qr_code && touched.qr_code ? \"input-error\":null}\n                                />\n                                {errors.qr_code && touched.qr_code &&(\n                                  <span className=\"error\">{errors.qr_code}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Station\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"hub_id\"\n                                  placeholder=\"Station\"\n                                  value={values.hub_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Station</option>\n                                  {stationNameData.map((item)=>\n                                    <option value={item.hub_master_id} key={item.hub_master_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.hub_id && touched.hub_id &&(\n                                  <span className=\"error\">{errors.hub_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Owned By\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"own_by\"\n                                  value={values.own_by}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Owned By</option>\n                                  {ownerNameData.map(item=>\n                                    <option value={item.owner_master_id} key={item.owner_master_id}>{item.name}</option>\n                                    )}\n                                </Input>\n                                {errors.own_by && touched.own_by &&(\n                                  <span className=\"error\">{errors.own_by}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Charger\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"charger_master_id\"\n                                  value={values.charger_master_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Charger</option>\n                                  {chargerMasterData.map(item=>\n                                    <option value={item.id} key={item.id}>{item.make+\"-\"+item.model+\"-\"+item.dimension}</option>\n                                    )}\n                                </Input>\n                                {errors.charger_master_id && touched.charger_master_id &&(\n                                  <span className=\"error\">{errors.charger_master_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Number of Slots\n                                </Label>\n                                <Field name=\"numberOfSlots\">\n                                    {({ field }) => (\n                                        <input type=\"number\" {...field} className={'form-control' + (errors.numberOfSlots && touched.numberOfSlots ? ' is-invalid' : '')} onChange={e => onChangeSlots(e, field, values, setValues)} />                                            \n                                    )}\n                                    </Field>\n                                {errors.numberOfSlots && touched.numberOfSlots &&(\n                                  <span className=\"error\">{errors.numberOfSlots}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={12}>\n                            <FieldArray name=\"slots\">\n                              {() => (values.slots.map((ticket, i) => {\n                                  const ticketErrors = errors.slots?.length && errors.slots[i] || {};\n                                  const ticketTouched = touched.slots?.length && touched.slots[i] || {};\n                                  return (\n                                      <div key={i} className=\"list-group list-group-flush\">\n                                          <div className=\"list-group-item p-0\">\n                                              <div className=\"form-row\">\n                                                  <div className=\"form-group col-1 mt-3\">\n                                                    <h5 className=\"card-title\">Slot#{i + 1}</h5>\n                                                  </div>\n                                                  {/* <div className=\"form-group col-5\">\n                                                      <label>Charger ID</label>\n                                                      <Field name={`slots.${i}.charger_id`} type=\"text\" className={'form-control' + (ticketErrors.charger_id && ticketTouched.charger_id ? ' is-invalid' : '' )} />\n                                                      <ErrorMessage name={`slots.${i}.charger_id`} component=\"div\" className=\"invalid-feedback\" />\n                                                  </div> */}\n                                                  <div className=\"form-group col-6\">\n                                                      <label>Slot ID</label>\n                                                      <Field name={`slots.${i}.slot_id`} type=\"text\" className={'form-control' + (ticketErrors.slot_id && ticketTouched.slot_id ? ' is-invalid' : '' )} />\n                                                      <ErrorMessage name={`slots.${i}.slot_id`} component=\"div\" className=\"invalid-feedback\" />\n                                                  </div>\n                                              </div>\n                                          </div>\n                                      </div>\n                                  );\n                              }))}\n                          </FieldArray>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark 1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark 1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark 2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark 2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default UpdateChargerInventory;\n"]},"metadata":{},"sourceType":"module"}