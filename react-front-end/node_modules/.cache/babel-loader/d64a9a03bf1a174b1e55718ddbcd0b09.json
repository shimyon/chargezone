{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\src\\\\views\\\\app\\\\pages\\\\AddFault.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, FormGroup, Card, CardBody, Label, Input, Button, Alert } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport { adminRoot, getOemAPI, addFaultAPI } from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from \"react-router-dom\";\n\nconst AddFault = () => {\n  const history = useHistory(); //dropdown state\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        oemList = _useState2[0],\n        setOemList = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        oemId = _useState4[0],\n        setOemId = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        type = _useState6[0],\n        setType = _useState6[1]; //error flags\n\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        errorTypeFlag = _useState8[0],\n        setErrorTypeFlag = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        errorOemFlag = _useState10[0],\n        setErrorOemFlag = _useState10[1]; //alert states\n\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        alertVisible = _useState12[0],\n        setAlertVisible = _useState12[1];\n\n  const _useState13 = useState(\"\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        alertMsg = _useState14[0],\n        setAlertMsg = _useState14[1];\n\n  const _useState15 = useState(\"\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        alertColor = _useState16[0],\n        setAlertColor = _useState16[1]; //state to disable button on click\n\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        buttonDisabled = _useState18[0],\n        setButtonDisabled = _useState18[1]; //API calls\n\n\n  const getOemAPICall = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(typeId) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            setAlertVisible(false);\n            currentUser = getCurrentUser();\n            _context.next = 4;\n            return axios.post(getOemAPI, {\n              type: typeId\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setOemList(responseData.data);\n              } else {\n                setOemList([]);\n                faultAddedAlert(\"OEM data for selectd type not found\");\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function getOemAPICall(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const addFaultAPICall = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            setButtonDisabled(true);\n            currentUser = getCurrentUser();\n            _context2.next = 4;\n            return axios.post(addFaultAPI, params, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                history.push({\n                  pathname: adminRoot + '/pages/fault',\n                  state: {\n                    responseStatus: responseData.status,\n                    responseMsg: responseData.msg\n                  }\n                });\n              } else {\n                setButtonDisabled(false);\n                faultAddedAlert(responseData.msg);\n              }\n            }).catch(error => {\n              setButtonDisabled(false);\n              console.log(error);\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function addFaultAPICall(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); //helper methods\n  //Alert helper methods\n\n\n  const faultAddedAlert = msg => {\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  };\n\n  const onDismissAlert = () => {\n    setAlertVisible(false);\n  }; //type select method\n\n\n  const handleTypeSelect = typeValue => {\n    setOemId(\"\");\n    setType(typeValue);\n\n    if (typeValue == 4) {\n      getOemAPICall(3);\n    } else {\n      getOemAPICall(typeValue);\n    }\n  }; //type blur\n\n\n  const handleTypeBlur = typeValue => {\n    setErrorTypeFlag(false);\n\n    if (typeValue == 0) {\n      setErrorTypeFlag(true);\n    }\n  }; //OEM select method\n\n\n  const handleOemSelect = oemValue => {\n    if (oemValue == 0) {\n      setOemId(\" \");\n    } else {\n      setOemId(oemValue);\n    }\n  }; //oem blur\n\n\n  const handleOemBlur = oemValue => {\n    setErrorOemFlag(false);\n\n    if (oemValue == 0) {\n      setErrorOemFlag(true);\n    }\n  }; //Form Validation Schema\n\n\n  const FaultDetailsValidationSchema = yup.object().shape({\n    title: yup.string().required(\"Fault title is required\"),\n    bit_position: yup.string().required(\"Position is required\")\n  });\n  const initialValues = {\n    title: \"\",\n    bit_position: \"\"\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"page_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"Add Fault\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"fault\",\n    className: \"mt-2 btn-primary default btn-sm float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 20\n    }\n  }), \" Fault List\")), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: FaultDetailsValidationSchema,\n    onSubmit: values => {\n      const params = {\n        type: type,\n        title: values.title,\n        bit_position: values.bit_position,\n        oem_id: oemId\n      };\n      addFaultAPICall(params);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, ({\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    values,\n    touched,\n    errors\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: alertColor,\n    isOpen: alertVisible,\n    toggle: onDismissAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }, alertMsg)), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 31\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"type\",\n    value: type,\n    onChange: e => handleTypeSelect(e.target.value),\n    onBlur: e => handleTypeBlur(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: 0,\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 35\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: 1,\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 35\n    }\n  }, \"Battery\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: 2,\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 35\n    }\n  }, \"EV\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: 3,\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 35\n    }\n  }, \"Charger\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: 4,\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 35\n    }\n  }, \"Connector\")), errorTypeFlag && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 35\n    }\n  }, \"Type is required\"))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, \"OEM\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"oem_id\",\n    value: oemId,\n    onChange: e => handleOemSelect(e.target.value),\n    onBlur: e => handleOemBlur(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: 0,\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 37\n    }\n  }, \"Select\"), oemList.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item.oem_id,\n    value: item.oem_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 39\n    }\n  }, item.name))), errorOemFlag && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 37\n    }\n  }, \"OEM is required\"))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 33\n    }\n  }, \"Fault Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Fault title \",\n    name: \"title\",\n    value: values.title,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.title && touched.title ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 33\n    }\n  }), errors.title && touched.title && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 35\n    }\n  }, errors.title))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 33\n    }\n  }, \"Position\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    placeholder: \"Position \",\n    name: \"bit_position\",\n    value: values.bit_position,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.bit_position && touched.bit_position ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 33\n    }\n  }), errors.bit_position && touched.bit_position && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 35\n    }\n  }, errors.bit_position)))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"default mr-2\",\n    onClick: handleSubmit,\n    disabled: buttonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 35\n    }\n  }, \"Add\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"light\",\n    className: \"default\",\n    onClick: () => {\n      history.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 35\n    }\n  }, \"Cancel\")))))))))));\n};\n\nexport default AddFault;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/pages/AddFault.js"],"names":["React","useState","useEffect","Row","FormGroup","Card","CardBody","Label","Input","Button","Alert","Colxx","Separator","getCurrentUser","adminRoot","getOemAPI","addFaultAPI","axios","Formik","yup","useHistory","AddFault","history","oemList","setOemList","oemId","setOemId","type","setType","errorTypeFlag","setErrorTypeFlag","errorOemFlag","setErrorOemFlag","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","buttonDisabled","setButtonDisabled","getOemAPICall","typeId","currentUser","post","headers","Authorization","token","then","response","responseData","data","status","faultAddedAlert","catch","error","console","log","addFaultAPICall","params","push","pathname","state","responseStatus","responseMsg","msg","onDismissAlert","handleTypeSelect","typeValue","handleTypeBlur","handleOemSelect","oemValue","handleOemBlur","FaultDetailsValidationSchema","object","shape","title","string","required","bit_position","initialValues","values","oem_id","handleChange","handleBlur","handleSubmit","touched","errors","e","target","value","map","item","name","goBack"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot,getOemAPI,addFaultAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from \"react-router-dom\";\n\nconst AddFault = () => {\n  const history = useHistory();\n  //dropdown state\n  const [oemList,setOemList] = useState([]);\n  const [oemId,setOemId] = useState(\"\");\n  const [type,setType] = useState(\"\");\n  //error flags\n  const [errorTypeFlag,setErrorTypeFlag] = useState(false);\n  const [errorOemFlag,setErrorOemFlag] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n\n  //API calls\n  const getOemAPICall = async(typeId) => {\n    setAlertVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:typeId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {          \n          setOemList(responseData.data);\n        }else{\n          setOemList([]);\n          faultAddedAlert(\"OEM data for selectd type not found\");\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addFaultAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addFaultAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/fault',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          faultAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const faultAddedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //type select method\n  const handleTypeSelect = (typeValue) => {\n    setOemId(\"\");\n    setType(typeValue);\n    if (typeValue == 4) {\n      getOemAPICall(3);\n    } else {\n      getOemAPICall(typeValue); \n    }\n  }\n  //type blur\n  const handleTypeBlur = (typeValue) => {\n    setErrorTypeFlag(false);\n    if (typeValue == 0) {\n      setErrorTypeFlag(true);\n    }\n  }\n  //OEM select method\n  const handleOemSelect = (oemValue) => {\n    if (oemValue == 0) {\n      setOemId(\" \");\n    } else {\n      setOemId(oemValue); \n    }\n  }\n  //oem blur\n  const handleOemBlur = (oemValue) => {\n    setErrorOemFlag(false);\n    if (oemValue == 0) {\n      setErrorOemFlag(true);\n    }\n  }\n  //Form Validation Schema\n  const FaultDetailsValidationSchema = yup.object().shape({\n    title:yup.string()\n        .required(\"Fault title is required\"),\n    bit_position:yup.string()\n        .required(\"Position is required\"),\n  });\n\n  const initialValues = {\n    title:\"\",\n    bit_position:\"\",\n  };\n\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Fault</span>\n            <a href=\"fault\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Fault List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={FaultDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n            type:type,\n            title:values.title,\n            bit_position:values.bit_position,\n            oem_id:oemId\n          }\n          addFaultAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                        <Row>\n                          <Colxx md=\"12\">\n                            <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                              {alertMsg}\n                            </Alert>\n                          </Colxx>\n                          <Colxx sm={6}>\n                            <FormGroup>\n                              <Label>\n                                Type\n                              </Label>\n                              <Input \n                              type=\"select\" \n                              name=\"type\"\n                              value={type}\n                              onChange={(e)=>handleTypeSelect(e.target.value)}\n                              onBlur={(e)=>handleTypeBlur(e.target.value)}>\n                                  <option key={0} value={0}>Select</option>\n                                  <option key={1} value={1}>Battery</option>\n                                  <option key={2} value={2}>EV</option>\n                                  <option key={3} value={3}>Charger</option>\n                                  <option key={4} value={4}>Connector</option>\n                              </Input>\n                              {errorTypeFlag &&(\n                                  <span className=\"error\">Type is required</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  OEM\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"oem_id\"\n                                value={oemId}\n                                onChange={(e)=>handleOemSelect(e.target.value)}\n                                onBlur={(e)=>handleOemBlur(e.target.value)}>\n                                    <option key={0} value={0}>Select</option>\n                                    {oemList.map(item=>\n                                      <option key={item.oem_id} value={item.oem_id}>{item.name}</option>\n                                    )}\n                                </Input>\n                                {errorOemFlag &&(\n                                    <span className=\"error\">OEM is required</span>\n                                  )}   \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Fault Title\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Fault title \"\n                                  name=\"title\"\n                                  value={values.title}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.title && touched.title ? \"input-error\":null}\n                                />\n                                {errors.title && touched.title &&(\n                                  <span className=\"error\">{errors.title}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Position\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  placeholder=\"Position \"\n                                  name=\"bit_position\"\n                                  value={values.bit_position}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.bit_position && touched.bit_position ? \"input-error\":null}\n                                />\n                                {errors.bit_position && touched.bit_position &&(\n                                  <span className=\"error\">{errors.bit_position}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default AddFault;\n"]},"metadata":{},"sourceType":"module"}