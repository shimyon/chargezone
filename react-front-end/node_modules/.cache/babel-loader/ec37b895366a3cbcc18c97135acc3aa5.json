{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\src\\\\views\\\\app\\\\reports\\\\batterySwappingNetworkReport.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, Card, CardBody, FormGroup, Label, DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown, Input, Table, Button } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport { getCountriesAPI, getStatesByCountryAPI, getCitiesByStateAPI, getStationsByCityAPI, bsnReportAPI, downloadBsnReportAPI } from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport { Formik } from 'formik';\n\nconst BatterySwappingNetworkReport = ({}) => {\n  //date states\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        fromDate = _useState2[0],\n        setFromDate = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        toDate = _useState4[0],\n        setToDate = _useState4[1]; //station List\n\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        stationNames = _useState6[0],\n        setStationNames = _useState6[1]; //Pagination states\n\n\n  const _useState7 = useState(\"1\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        pageCount = _useState8[0],\n        setPageCount = _useState8[1];\n\n  const _useState9 = useState(\"1\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        lastPageCount = _useState10[0],\n        setLastPageCount = _useState10[1]; //state to disable button on click\n\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        buttonDisabled = _useState12[0],\n        setButtonDisabled = _useState12[1]; //loader state\n\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        isLoading = _useState14[0],\n        setIsLoading = _useState14[1]; // list state\n\n\n  const _useState15 = useState([]),\n        _useState16 = _slicedToArray(_useState15, 2),\n        countryList = _useState16[0],\n        setCountryList = _useState16[1];\n\n  const _useState17 = useState([]),\n        _useState18 = _slicedToArray(_useState17, 2),\n        stateList = _useState18[0],\n        setStateList = _useState18[1];\n\n  const _useState19 = useState([]),\n        _useState20 = _slicedToArray(_useState19, 2),\n        cityList = _useState20[0],\n        setCityList = _useState20[1];\n\n  const _useState21 = useState([]),\n        _useState22 = _slicedToArray(_useState21, 2),\n        report = _useState22[0],\n        setReport = _useState22[1];\n\n  const _useState23 = useState(\"\"),\n        _useState24 = _slicedToArray(_useState23, 2),\n        countryId = _useState24[0],\n        setCountryId = _useState24[1];\n\n  const _useState25 = useState(\"\"),\n        _useState26 = _slicedToArray(_useState25, 2),\n        stateId = _useState26[0],\n        setStateId = _useState26[1];\n\n  const _useState27 = useState(\"\"),\n        _useState28 = _slicedToArray(_useState27, 2),\n        cityId = _useState28[0],\n        setCityId = _useState28[1];\n\n  const _useState29 = useState(\"\"),\n        _useState30 = _slicedToArray(_useState29, 2),\n        stationId = _useState30[0],\n        setStationId = _useState30[1];\n\n  useEffect(() => {\n    getCountryNamesAPICall();\n  }, []);\n  useEffect(() => {\n    GetStationNamesAPICall(countryId, stateId, cityId);\n  }, [countryId, stateId, cityId]); //API calls\n\n  const GetStationNamesAPICall = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(country, state, city) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context.next = 3;\n            return axios.get(getStationsByCityAPI + \"country_id=\" + country + \"&state_id=\" + state + \"&city_id=\" + city, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setStationNames(responseData.data);\n              } else {\n                setStationNames([]);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function GetStationNamesAPICall(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const getCountryNamesAPICall = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context2.next = 3;\n            return axios.get(getCountriesAPI, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setCountryList(responseData.data);\n              } else {\n                console.log(\"coutries\", responseData.status, responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function getCountryNamesAPICall() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const getStateNamesAPICall = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(country) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context3.next = 3;\n            return axios.post(getStatesByCountryAPI, {\n              country_id: country\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setStateList(responseData.data);\n              } else {\n                setStateList([]);\n                setCityList([]);\n                setStationNames([]);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n\n    return function getStateNamesAPICall(_x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  const getCityNamesAPICall = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(state) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context4.next = 3;\n            return axios.post(getCitiesByStateAPI, {\n              state_id: state\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setCityList(responseData.data);\n              } else {\n                setCityList([]);\n                setStationNames([]);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n\n    return function getCityNamesAPICall(_x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  const getBSNReportAPICall = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var currentUser, params;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            setButtonDisabled(true);\n            setReport([]);\n            setIsLoading(true);\n            currentUser = getCurrentUser(); // let tempFromDate,tempToDate;\n            // if (fromDate == null | fromDate ==\"\") {\n            //   tempFromDate = fromDate;\n            // }else{\n            //   tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear();\n            // }\n            // if (toDate == null) {\n            //   tempToDate = toDate;\n            // }else{\n            //   tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear();\n            // }\n\n            params = {\n              country_id: countryId,\n              state_id: stateId,\n              city_id: cityId,\n              hub_id: stationId,\n              // from_date:tempFromDate,\n              // to_date:tempToDate,\n              page: pageCount\n            };\n            _context5.next = 7;\n            return axios.post(bsnReportAPI, params, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setLastPageCount(responseData.data.last_page);\n                setReport(responseData.data.data);\n              } else {\n                console.log(responseData.msg);\n              }\n\n              setButtonDisabled(false);\n              setIsLoading(false);\n            }).catch(error => {\n              setButtonDisabled(false);\n              setIsLoading(false);\n              console.log(error);\n            });\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n\n    return function getBSNReportAPICall() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  const downloadBSNReportAPICall = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var currentUser, params;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            setButtonDisabled(true);\n            setIsLoading(true);\n            currentUser = getCurrentUser();\n            params = {\n              country_id: countryId,\n              state_id: stateId,\n              city_id: cityId,\n              hub_id: stationId\n            };\n            _context6.next = 6;\n            return axios.post(downloadBsnReportAPI, params, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                const link = document.createElement('a');\n                link.href = responseData.data.file;\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n              } else {\n                alert(responseData.msg);\n              }\n\n              setButtonDisabled(false);\n              setIsLoading(false);\n            }).catch(error => {\n              setButtonDisabled(false);\n              setIsLoading(false);\n              console.log(error);\n            });\n\n          case 6:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }));\n\n    return function downloadBSNReportAPICall() {\n      return _ref6.apply(this, arguments);\n    };\n  }(); //helper methods\n  //handle country select\n\n\n  const handleCountrySelect = country => {\n    setCountryId(country);\n    setStateId(\"\");\n    setCityId(\"\");\n    setStationId(\"\");\n    getStateNamesAPICall(country);\n  }; //handle state select\n\n\n  const handleStateSelect = state => {\n    setStateId(state);\n    setCityId(\"\");\n    setStationId(\"\");\n    getCityNamesAPICall(state);\n  }; //handle city select\n\n\n  const handleCitySelect = city => {\n    setCityId(city);\n    setStationId(\"\");\n  }; //pagination method\n\n\n  const handlePageChange = index => {\n    setPageCount(index + 1);\n    getBSNReportAPICall();\n  };\n\n  const renderPageList = () => {\n    const pageNumbers = [];\n\n    for (let i = 0; i < lastPageCount; i += 1) {\n      pageNumbers.push( /*#__PURE__*/React.createElement(DropdownItem, {\n        key: i,\n        onClick: () => handlePageChange(i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 9\n        }\n      }, i + 1));\n    }\n\n    return pageNumbers;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"page_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, \"Battery Swapping Network Report\"), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    lg: 2,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 27\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"country_id\",\n    value: countryId,\n    onChange: e => handleCountrySelect(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: \"\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 29\n    }\n  }, \"All Countries\"), countryList.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 31\n    }\n  }, item.country_name))))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 2,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 27\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"state_id\",\n    value: stateId,\n    onChange: e => handleStateSelect(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: \"\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 29\n    }\n  }, \"All States\"), stateList.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 31\n    }\n  }, item.state_name))))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 2,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 27\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"city_id\",\n    value: cityId,\n    onChange: e => handleCitySelect(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: \"\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 29\n    }\n  }, \"All Cities\"), cityList.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 31\n    }\n  }, item.city_name))))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 2,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 27\n    }\n  }, \"Station\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"station\",\n    value: stationId,\n    onChange: e => setStationId(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: \"\",\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 29\n    }\n  }, \"All Station\"), stationNames.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.hub_master_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 31\n    }\n  }, item.name))))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 2,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"default mt-4 custom_btn\",\n    onClick: () => {\n      setPageCount(1);\n      getBSNReportAPICall();\n    },\n    disabled: buttonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-check font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 27\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 93\n    }\n  }, \"Generate Report\"))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 2,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    className: \"default mt-4 custom_btn\",\n    onClick: () => {\n      downloadBSNReportAPICall();\n    },\n    disabled: buttonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-download font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 27\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 96\n    }\n  }, \"Download Report\")))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    sm: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 21\n    }\n  }, \"Battery Swapping Network Report Detail\")), report.length > 0 && /*#__PURE__*/React.createElement(Colxx, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-right mr-2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 25\n    }\n  }, \"Page \"), /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    className: \"d-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    caret: true,\n    color: \"outline-primary\",\n    size: \"xs\",\n    \"data-display\": \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 27\n    }\n  }, pageCount), /*#__PURE__*/React.createElement(DropdownMenu, {\n    className: \"dropdownMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 27\n    }\n  }, renderPageList())), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 25\n    }\n  }, \" of \"), lastPageCount))), /*#__PURE__*/React.createElement(Table, {\n    responsive: true,\n    bordered: true,\n    striped: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 23\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 23\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 23\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 23\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 23\n    }\n  }, \"Station\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 23\n    }\n  }, \"Total No. of EV\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 23\n    }\n  }, \"Total No. of Charger\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 23\n    }\n  }, \"Total No. of Connectors\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 23\n    }\n  }, \"Total No. of Batteries\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 19\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-center\",\n    colSpan: \"9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-list-loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 67\n    }\n  }))) : report.length > 0 ? report.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 31\n    }\n  }, pageCount == 1 ? index + 1 : (pageCount - 1) * 10 + index + 1), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 31\n    }\n  }, item.country_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 31\n    }\n  }, item.state_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 31\n    }\n  }, item.city_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 31\n    }\n  }, item.hub_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 31\n    }\n  }, item.total_ev), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 31\n    }\n  }, item.total_charger), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 31\n    }\n  }, item.total_connector), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 31\n    }\n  }, item.total_batteries))) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-center text-danger\",\n    colSpan: \"9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 27\n    }\n  }, \"Data  Not  Found\")))))))));\n};\n\nexport default BatterySwappingNetworkReport;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/reports/batterySwappingNetworkReport.js"],"names":["React","useState","useEffect","Row","Card","CardBody","FormGroup","Label","DropdownItem","DropdownMenu","DropdownToggle","UncontrolledDropdown","Input","Table","Button","DatePicker","Colxx","Separator","getCurrentUser","getCountriesAPI","getStatesByCountryAPI","getCitiesByStateAPI","getStationsByCityAPI","bsnReportAPI","downloadBsnReportAPI","axios","Formik","BatterySwappingNetworkReport","fromDate","setFromDate","toDate","setToDate","stationNames","setStationNames","pageCount","setPageCount","lastPageCount","setLastPageCount","buttonDisabled","setButtonDisabled","isLoading","setIsLoading","countryList","setCountryList","stateList","setStateList","cityList","setCityList","report","setReport","countryId","setCountryId","stateId","setStateId","cityId","setCityId","stationId","setStationId","getCountryNamesAPICall","GetStationNamesAPICall","country","state","city","currentUser","get","headers","Authorization","token","then","response","responseData","data","status","catch","error","console","log","msg","getStateNamesAPICall","post","country_id","getCityNamesAPICall","state_id","getBSNReportAPICall","params","city_id","hub_id","page","last_page","downloadBSNReportAPICall","link","document","createElement","href","file","body","appendChild","click","removeChild","alert","handleCountrySelect","handleStateSelect","handleCitySelect","handlePageChange","index","renderPageList","pageNumbers","i","push","e","target","value","map","item","id","country_name","state_name","city_name","hub_master_id","name","length","hub_name","total_ev","total_charger","total_connector","total_batteries"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody,  \n  FormGroup, Label,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Input, Table,Button\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,getStationsByCityAPI,bsnReportAPI,downloadBsnReportAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\n\nconst BatterySwappingNetworkReport = ({}) => {\n  //date states\n  const [fromDate,setFromDate] = useState(null);\n  const [toDate,setToDate] = useState(null);\n  //station List\n  const [stationNames,setStationNames] = useState([]);\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(false);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [report,setReport] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n  const [stationId,setStationId] = useState(\"\");\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n  },[]);\n\n  useEffect(()=>{\n    GetStationNamesAPICall(countryId,stateId,cityId);\n  },[countryId,stateId,cityId])\n\n  //API calls\n  const GetStationNamesAPICall = async(country,state,city) => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsByCityAPI+\"country_id=\"+country+\"&state_id=\"+state+\"&city_id=\"+city,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNames(responseData.data)\n      }else{\n        setStationNames([]);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(\"coutries\",responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          setStateList([]);\n          setCityList([]);\n          setStationNames([]);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          setCityList([]);\n          setStationNames([]);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getBSNReportAPICall = async() => {\n    setButtonDisabled(true);\n    setReport([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    // let tempFromDate,tempToDate;\n    // if (fromDate == null | fromDate ==\"\") {\n    //   tempFromDate = fromDate;\n    // }else{\n    //   tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear();\n    // }\n    // if (toDate == null) {\n    //   tempToDate = toDate;\n    // }else{\n    //   tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear();\n    // }\n    const params = {\n      country_id:countryId,\n      state_id:stateId,\n      city_id:cityId,\n      hub_id:stationId,\n      // from_date:tempFromDate,\n      // to_date:tempToDate,\n      page:pageCount\n    }\n    \n    await axios.post(bsnReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page);\n          setReport(responseData.data.data);\n        }else{\n            console.log(responseData.msg);\n        }\n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n  const downloadBSNReportAPICall = async() => {\n    setButtonDisabled(true);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    const params = {\n      country_id:countryId,\n      state_id:stateId,\n      city_id:cityId,\n      hub_id:stationId,\n    }\n    \n    await axios.post(downloadBsnReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          const link = document.createElement('a');\n          link.href = responseData.data.file;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }else{\n          alert(responseData.msg);\n        }    \n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    setStateId(\"\");\n    setCityId(\"\");\n    setStationId(\"\");\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    setCityId(\"\");\n    setStationId(\"\");\n    getCityNamesAPICall(state);\n  }\n  //handle city select\n  const handleCitySelect = (city) => {\n    setCityId(city);\n    setStationId(\"\");\n  }\n  //pagination method\n  const handlePageChange = (index) =>{\n    setPageCount(index+1)\n    getBSNReportAPICall();\n  }\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={()=>handlePageChange(i)}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Battery Swapping Network Report</span>\n        <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n          <Colxx xxs=\"12\" className=\"mb-4\">\n              <Card>\n                  <CardBody>\n                    <Row>\n                      <Colxx lg={2} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            Country\n                          </Label>\n                          <Input \n                          type=\"select\"\n                          name=\"country_id\"\n                          value={countryId}\n                          onChange={e=>handleCountrySelect(e.target.value)}\n                          >\n                            <option key=\"\" value=\"\">All Countries</option>\n                            {countryList.map((item,index)=>\n                              <option key={index} value={item.id}>{item.country_name}</option>\n                            )}\n                          </Input>\n                        </FormGroup>\n                      </Colxx>\n                      <Colxx lg={2} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            State\n                          </Label>\n                          <Input \n                          type=\"select\"\n                          name=\"state_id\"\n                          value={stateId}\n                          onChange={e=>handleStateSelect(e.target.value)}\n                          >\n                            <option key=\"\" value=\"\">All States</option>\n                            {stateList.map((item,index)=>\n                              <option key={index} value={item.id}>{item.state_name}</option>\n                            )}\n                          </Input>\n                        </FormGroup>\n                      </Colxx>\n                      <Colxx lg={2} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            City\n                          </Label>\n                          <Input \n                          type=\"select\"\n                          name=\"city_id\"\n                          value={cityId}\n                          onChange={e=>handleCitySelect(e.target.value)}\n                          >\n                            <option key=\"\" value=\"\">All Cities</option>\n                            {cityList.map((item,index)=>\n                              <option key={index} value={item.id}>{item.city_name}</option>\n                            )}\n                          </Input>\n                        </FormGroup>\n                      </Colxx>\n                      <Colxx lg={2} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            Station\n                          </Label>\n                          <Input \n                          type=\"select\"\n                          name=\"station\"\n                          value={stationId}\n                          onChange={e=> setStationId(e.target.value)}>\n                            <option key=\"\" value=\"\">All Station</option>\n                            {stationNames.map((item,index)=>\n                              <option key={index} value={item.hub_master_id}>{item.name}</option>\n                            )}\n                          </Input>\n                        </FormGroup>\n                      </Colxx>\n                      {/* <Colxx lg={3} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            From Date\n                          </Label>\n                          <DatePicker\n                          placeholderText=\"From Date\"\n                          selected={fromDate}\n                          onChange={date=>setFromDate(date)}\n                          dateFormat=\"dd/MM/yyyy\"\n                          />\n                        </FormGroup>\n                      </Colxx>\n                      <Colxx lg={3} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            To Date\n                          </Label>\n                          <DatePicker\n                          placeholderText=\"To Date\"\n                          selected={toDate}\n                          onChange={date=>setToDate(date)}\n                          dateFormat=\"dd/MM/yyyy\"\n                          />\n                        </FormGroup>\n                      </Colxx> */}\n                      <Colxx  lg={2} sm={12}>\n                        <Button color=\"primary\" className=\"default mt-4 custom_btn\" onClick={() =>{setPageCount(1);getBSNReportAPICall();}} disabled={buttonDisabled}>\n                          <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Generate Report</b>\n                        </Button>\n                      </Colxx>\n                      <Colxx  lg={2} sm={12}>\n                        <Button color=\"success\" className=\"default mt-4 custom_btn\" onClick={() =>{downloadBSNReportAPICall();}} disabled={buttonDisabled}>\n                          <i className=\"glyph-icon simple-icon-download font-weight-bold\"></i> <b>Download Report</b>\n                        </Button>\n                      </Colxx>\n                    </Row>\n                  </CardBody>\n              </Card>\n          </Colxx>\n        </Row>\n      <Row>\n          <Colxx sm={12} lg={12}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Colxx md=\"6\">\n                    <h3>Battery Swapping Network Report Detail</h3>\n                  </Colxx>\n                  {report.length>0 &&\n                    <Colxx md=\"6\">\n                      <div className=\"text-right mr-2 \">\n                        <span>Page </span>\n                        <UncontrolledDropdown className=\"d-inline-block\">\n                          <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                            {pageCount}\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdownMenu\">\n                            {renderPageList()}\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <span> of </span>\n                        {lastPageCount}\n                      </div>\n                    </Colxx>\n                  }\n                </Row>\n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Country</th>\n                      <th>State</th>\n                      <th>City</th>\n                      <th>Station</th>\n                      <th>Total No. of EV</th>\n                      <th>Total No. of Charger</th>\n                      <th>Total No. of Connectors</th>\t\t\t\t\t\t\t\t\t\n                      <th>Total No. of Batteries</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"9\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                      report.length > 0 ?\n                          report.map((item,index)=>\n                            <tr key={index}>\n                              <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                              <td>{item.country_name}</td>\n                              <td>{item.state_name}</td>\n                              <td>{item.city_name}</td>\n                              <td>{item.hub_name}</td>\n                              <td>{item.total_ev}</td>\n                              <td>{item.total_charger}</td>\n                              <td>{item.total_connector}</td>\n                              <td>{item.total_batteries}</td>\n                            </tr>\n                          ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"9\">Data  Not  Found</td>\n                      </tr>\n                  }\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default BatterySwappingNetworkReport;\n"]},"metadata":{},"sourceType":"module"}