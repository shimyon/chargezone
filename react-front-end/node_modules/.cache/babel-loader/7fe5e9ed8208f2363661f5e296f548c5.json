{"ast":null,"code":"import _objectSpread from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(watchLoginUser),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loginWithEmailPassword),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(watchRegisterUser),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(registerWithEmailPassword),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogoutUser),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(logout),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchForgotPassword),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(forgotPassword),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchResetPassword),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(resetPassword),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(rootSaga);\n\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { auth } from '../../helpers/Firebase';\nimport axios from 'axios';\nimport { LOGIN_USER, REGISTER_USER, LOGOUT_USER, FORGOT_PASSWORD, RESET_PASSWORD } from '../actions';\nimport { loginUserSuccess, loginUserError, registerUserSuccess, registerUserError, forgotPasswordSuccess, forgotPasswordError, resetPasswordSuccess, resetPasswordError } from './actions';\nimport { adminRoot, currentUser, loginAPI } from \"../../constants/defaultValues\";\nimport { setCurrentUser, getCurrentUser } from '../../helpers/Utils';\nexport function watchLoginUser() {\n  return _regeneratorRuntime.wrap(function watchLoginUser$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.next = 2;\n        return takeEvery(LOGIN_USER, loginWithEmailPassword);\n\n      case 2:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked);\n}\n\nconst loginWithEmailPasswordAsync = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(credentials) {\n    return _regeneratorRuntime.wrap(function _callee$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return axios.post(loginAPI, credentials).then(user => user).catch(res => {//console.log(res);\n          });\n\n        case 2:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee);\n  }));\n\n  return function loginWithEmailPasswordAsync(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nfunction loginWithEmailPassword({\n  payload\n}) {\n  var _payload$user, email, password, history, credentials, loginUser, item;\n\n  return _regeneratorRuntime.wrap(function loginWithEmailPassword$(_context3) {\n    while (1) switch (_context3.prev = _context3.next) {\n      case 0:\n        _payload$user = payload.user, email = _payload$user.email, password = _payload$user.password;\n        history = payload.history;\n        credentials = new FormData();\n        credentials.append(\"username\", email);\n        credentials.append(\"password\", password);\n        _context3.prev = 5;\n        _context3.next = 8;\n        return call(loginWithEmailPasswordAsync, credentials);\n\n      case 8:\n        loginUser = _context3.sent;\n\n        if (!(loginUser.data.status === 1)) {\n          _context3.next = 17;\n          break;\n        }\n\n        //const item = { uid: loginUser.user.uid, ...currentUser };\n        item = loginUser.data.data;\n        setCurrentUser(item);\n        _context3.next = 14;\n        return put(loginUserSuccess(item));\n\n      case 14:\n        if (item.roles[0] == 1) {\n          history.push(adminRoot + \"/dashboard/operator\");\n        } else if (item.roles[0] == 4) {\n          history.push(adminRoot + \"/dashboard/manager\");\n        } else if (item.roles[0] == 3) {\n          history.push(adminRoot + \"/dashboard/admin\");\n        } else {//history.push(adminRoot+\"/gogo/start\");\n        }\n\n        _context3.next = 19;\n        break;\n\n      case 17:\n        _context3.next = 19;\n        return put(loginUserError(loginUser.data.msg));\n\n      case 19:\n        _context3.next = 25;\n        break;\n\n      case 21:\n        _context3.prev = 21;\n        _context3.t0 = _context3[\"catch\"](5);\n        _context3.next = 25;\n        return put(loginUserError(_context3.t0));\n\n      case 25:\n      case \"end\":\n        return _context3.stop();\n    }\n  }, _marked2, null, [[5, 21]]);\n}\n\nexport function watchRegisterUser() {\n  return _regeneratorRuntime.wrap(function watchRegisterUser$(_context4) {\n    while (1) switch (_context4.prev = _context4.next) {\n      case 0:\n        _context4.next = 2;\n        return takeEvery(REGISTER_USER, registerWithEmailPassword);\n\n      case 2:\n      case \"end\":\n        return _context4.stop();\n    }\n  }, _marked3);\n}\n\nconst registerWithEmailPasswordAsync = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email, password) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return auth.createUserWithEmailAndPassword(email, password).then(user => user).catch(error => error);\n\n        case 2:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 3:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee2);\n  }));\n\n  return function registerWithEmailPasswordAsync(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction registerWithEmailPassword({\n  payload\n}) {\n  var _payload$user2, email, password, history, registerUser, item;\n\n  return _regeneratorRuntime.wrap(function registerWithEmailPassword$(_context6) {\n    while (1) switch (_context6.prev = _context6.next) {\n      case 0:\n        _payload$user2 = payload.user, email = _payload$user2.email, password = _payload$user2.password;\n        history = payload.history;\n        _context6.prev = 2;\n        _context6.next = 5;\n        return call(registerWithEmailPasswordAsync, email, password);\n\n      case 5:\n        registerUser = _context6.sent;\n\n        if (registerUser.message) {\n          _context6.next = 14;\n          break;\n        }\n\n        item = _objectSpread({\n          uid: registerUser.user.uid\n        }, currentUser);\n        setCurrentUser(item);\n        _context6.next = 11;\n        return put(registerUserSuccess(item));\n\n      case 11:\n        history.push(adminRoot);\n        _context6.next = 16;\n        break;\n\n      case 14:\n        _context6.next = 16;\n        return put(registerUserError(registerUser.message));\n\n      case 16:\n        _context6.next = 22;\n        break;\n\n      case 18:\n        _context6.prev = 18;\n        _context6.t0 = _context6[\"catch\"](2);\n        _context6.next = 22;\n        return put(registerUserError(_context6.t0));\n\n      case 22:\n      case \"end\":\n        return _context6.stop();\n    }\n  }, _marked4, null, [[2, 18]]);\n}\n\nexport function watchLogoutUser() {\n  return _regeneratorRuntime.wrap(function watchLogoutUser$(_context7) {\n    while (1) switch (_context7.prev = _context7.next) {\n      case 0:\n        _context7.next = 2;\n        return takeEvery(LOGOUT_USER, logout);\n\n      case 2:\n      case \"end\":\n        return _context7.stop();\n    }\n  }, _marked5);\n}\n\nconst logoutAsync = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(history) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context8) {\n      while (1) switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return auth.signOut().then(user => user).catch(error => error);\n\n        case 2:\n          history.push(adminRoot);\n\n        case 3:\n        case \"end\":\n          return _context8.stop();\n      }\n    }, _callee3);\n  }));\n\n  return function logoutAsync(_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nfunction logout({\n  payload\n}) {\n  var history;\n  return _regeneratorRuntime.wrap(function logout$(_context9) {\n    while (1) switch (_context9.prev = _context9.next) {\n      case 0:\n        history = payload.history;\n        setCurrentUser();\n        _context9.next = 4;\n        return call(logoutAsync, history);\n\n      case 4:\n      case \"end\":\n        return _context9.stop();\n    }\n  }, _marked6);\n}\n\nexport function watchForgotPassword() {\n  return _regeneratorRuntime.wrap(function watchForgotPassword$(_context10) {\n    while (1) switch (_context10.prev = _context10.next) {\n      case 0:\n        _context10.next = 2;\n        return takeEvery(FORGOT_PASSWORD, forgotPassword);\n\n      case 2:\n      case \"end\":\n        return _context10.stop();\n    }\n  }, _marked7);\n}\n\nconst forgotPasswordAsync = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(email) {\n    return _regeneratorRuntime.wrap(function _callee4$(_context11) {\n      while (1) switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return auth.sendPasswordResetEmail(email).then(user => user).catch(error => error);\n\n        case 2:\n          return _context11.abrupt(\"return\", _context11.sent);\n\n        case 3:\n        case \"end\":\n          return _context11.stop();\n      }\n    }, _callee4);\n  }));\n\n  return function forgotPasswordAsync(_x5) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nfunction forgotPassword({\n  payload\n}) {\n  var email, forgotPasswordStatus;\n  return _regeneratorRuntime.wrap(function forgotPassword$(_context12) {\n    while (1) switch (_context12.prev = _context12.next) {\n      case 0:\n        email = payload.forgotUserMail.email;\n        _context12.prev = 1;\n        _context12.next = 4;\n        return call(forgotPasswordAsync, email);\n\n      case 4:\n        forgotPasswordStatus = _context12.sent;\n\n        if (forgotPasswordStatus) {\n          _context12.next = 10;\n          break;\n        }\n\n        _context12.next = 8;\n        return put(forgotPasswordSuccess('success'));\n\n      case 8:\n        _context12.next = 12;\n        break;\n\n      case 10:\n        _context12.next = 12;\n        return put(forgotPasswordError(forgotPasswordStatus.message));\n\n      case 12:\n        _context12.next = 18;\n        break;\n\n      case 14:\n        _context12.prev = 14;\n        _context12.t0 = _context12[\"catch\"](1);\n        _context12.next = 18;\n        return put(forgotPasswordError(_context12.t0));\n\n      case 18:\n      case \"end\":\n        return _context12.stop();\n    }\n  }, _marked8, null, [[1, 14]]);\n}\n\nexport function watchResetPassword() {\n  return _regeneratorRuntime.wrap(function watchResetPassword$(_context13) {\n    while (1) switch (_context13.prev = _context13.next) {\n      case 0:\n        _context13.next = 2;\n        return takeEvery(RESET_PASSWORD, resetPassword);\n\n      case 2:\n      case \"end\":\n        return _context13.stop();\n    }\n  }, _marked9);\n}\n\nconst resetPasswordAsync = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(resetPasswordCode, newPassword) {\n    return _regeneratorRuntime.wrap(function _callee5$(_context14) {\n      while (1) switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return auth.confirmPasswordReset(resetPasswordCode, newPassword).then(user => user).catch(error => error);\n\n        case 2:\n          return _context14.abrupt(\"return\", _context14.sent);\n\n        case 3:\n        case \"end\":\n          return _context14.stop();\n      }\n    }, _callee5);\n  }));\n\n  return function resetPasswordAsync(_x6, _x7) {\n    return _ref5.apply(this, arguments);\n  };\n}();\n\nfunction resetPassword({\n  payload\n}) {\n  var newPassword, resetPasswordCode, resetPasswordStatus;\n  return _regeneratorRuntime.wrap(function resetPassword$(_context15) {\n    while (1) switch (_context15.prev = _context15.next) {\n      case 0:\n        newPassword = payload.newPassword, resetPasswordCode = payload.resetPasswordCode;\n        _context15.prev = 1;\n        _context15.next = 4;\n        return call(resetPasswordAsync, resetPasswordCode, newPassword);\n\n      case 4:\n        resetPasswordStatus = _context15.sent;\n\n        if (resetPasswordStatus) {\n          _context15.next = 10;\n          break;\n        }\n\n        _context15.next = 8;\n        return put(resetPasswordSuccess('success'));\n\n      case 8:\n        _context15.next = 12;\n        break;\n\n      case 10:\n        _context15.next = 12;\n        return put(resetPasswordError(resetPasswordStatus.message));\n\n      case 12:\n        _context15.next = 18;\n        break;\n\n      case 14:\n        _context15.prev = 14;\n        _context15.t0 = _context15[\"catch\"](1);\n        _context15.next = 18;\n        return put(resetPasswordError(_context15.t0));\n\n      case 18:\n      case \"end\":\n        return _context15.stop();\n    }\n  }, _marked10, null, [[1, 14]]);\n}\n\nexport default function rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context16) {\n    while (1) switch (_context16.prev = _context16.next) {\n      case 0:\n        _context16.next = 2;\n        return all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgotPassword), fork(watchResetPassword)]);\n\n      case 2:\n      case \"end\":\n        return _context16.stop();\n    }\n  }, _marked11);\n}","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/redux/auth/saga.js"],"names":["watchLoginUser","loginWithEmailPassword","watchRegisterUser","registerWithEmailPassword","watchLogoutUser","logout","watchForgotPassword","forgotPassword","watchResetPassword","resetPassword","rootSaga","all","call","fork","put","takeEvery","auth","axios","LOGIN_USER","REGISTER_USER","LOGOUT_USER","FORGOT_PASSWORD","RESET_PASSWORD","loginUserSuccess","loginUserError","registerUserSuccess","registerUserError","forgotPasswordSuccess","forgotPasswordError","resetPasswordSuccess","resetPasswordError","adminRoot","currentUser","loginAPI","setCurrentUser","getCurrentUser","loginWithEmailPasswordAsync","credentials","post","then","user","catch","res","payload","email","password","history","FormData","append","loginUser","data","status","item","roles","push","msg","registerWithEmailPasswordAsync","createUserWithEmailAndPassword","error","registerUser","message","uid","logoutAsync","signOut","forgotPasswordAsync","sendPasswordResetEmail","forgotUserMail","forgotPasswordStatus","resetPasswordAsync","resetPasswordCode","newPassword","confirmPasswordReset","resetPasswordStatus"],"mappings":"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","sourcesContent":["import { all, call, fork, put, takeEvery } from 'redux-saga/effects';\nimport { auth } from '../../helpers/Firebase';\nimport axios from 'axios';\n\nimport {\n  LOGIN_USER,\n  REGISTER_USER,\n  LOGOUT_USER,\n  FORGOT_PASSWORD,\n  RESET_PASSWORD,\n} from '../actions';\n\nimport {\n  loginUserSuccess,\n  loginUserError,\n  registerUserSuccess,\n  registerUserError,\n  forgotPasswordSuccess,\n  forgotPasswordError,\n  resetPasswordSuccess,\n  resetPasswordError,\n} from './actions';\n\nimport { adminRoot, currentUser,loginAPI } from \"../../constants/defaultValues\"\nimport { setCurrentUser,getCurrentUser } from '../../helpers/Utils';\n\nexport function* watchLoginUser() {\n  yield takeEvery(LOGIN_USER, loginWithEmailPassword);\n}\n\nconst loginWithEmailPasswordAsync = async (credentials) =>\n \n\n\n  await  axios.post(loginAPI,  credentials )\n      .then((user) => user)\n      .catch(res => {\n        //console.log(res);\n      });\n\nfunction* loginWithEmailPassword({ payload }) {\n  const { email, password } = payload.user;\n  const { history } = payload;\n     const credentials = new FormData();\n      credentials.append(\"username\", email);\n      credentials.append(\"password\", password);\n  try {\n    const loginUser = yield call(loginWithEmailPasswordAsync, credentials);\n     // const item = { uid: loginUser.data.msg, ...currentUser };\n     // const item = { uid: loginUser.data.userdetail.id,...currentUser };\n    if (loginUser.data.status===1) {\n      //const item = { uid: loginUser.user.uid, ...currentUser };\n      const item = loginUser.data.data;\n      setCurrentUser(item);\n      yield put(loginUserSuccess(item));\n      if(item.roles[0] == 1){\n        history.push(adminRoot+\"/dashboard/operator\");\n      }\n      else if(item.roles[0] == 4){\n        history.push(adminRoot+\"/dashboard/manager\");\n      }\n      else if(item.roles[0] == 3){\n        history.push(adminRoot+\"/dashboard/admin\");\n      }\n      else{\n        //history.push(adminRoot+\"/gogo/start\");\n      } \n    } else {\n      yield put(loginUserError(loginUser.data.msg));\n    }\n  } catch (error) {\n    yield put(loginUserError(error));\n  }\n}\n\nexport function* watchRegisterUser() {\n  yield takeEvery(REGISTER_USER, registerWithEmailPassword);\n}\n\nconst registerWithEmailPasswordAsync = async (email, password) =>\n  await auth\n    .createUserWithEmailAndPassword(email, password)\n    .then((user) => user)\n    .catch((error) => error);\n\nfunction* registerWithEmailPassword({ payload }) {\n  const { email, password } = payload.user;\n  const { history } = payload;\n  try {\n    const registerUser = yield call(\n      registerWithEmailPasswordAsync,\n      email,\n      password\n    );\n    if (!registerUser.message) {\n      const item = { uid: registerUser.user.uid, ...currentUser };\n      setCurrentUser(item);\n      yield put(registerUserSuccess(item));\n      history.push(adminRoot);\n    } else {\n      yield put(registerUserError(registerUser.message));\n    }\n  } catch (error) {\n    yield put(registerUserError(error));\n  }\n}\n\nexport function* watchLogoutUser() {\n  yield takeEvery(LOGOUT_USER, logout);\n}\n\nconst logoutAsync = async (history) => {\n  await auth\n    .signOut()\n    .then((user) => user)\n    .catch((error) => error);\n  history.push(adminRoot);\n};\n\nfunction* logout({ payload }) {\n  const { history } = payload;\n  setCurrentUser();\n  yield call(logoutAsync, history);\n}\n\nexport function* watchForgotPassword() {\n  yield takeEvery(FORGOT_PASSWORD, forgotPassword);\n}\n\nconst forgotPasswordAsync = async (email) => {\n  return await auth\n    .sendPasswordResetEmail(email)\n    .then((user) => user)\n    .catch((error) => error);\n};\n\nfunction* forgotPassword({ payload }) {\n  const { email } = payload.forgotUserMail;\n  try {\n    const forgotPasswordStatus = yield call(forgotPasswordAsync, email);\n    if (!forgotPasswordStatus) {\n      yield put(forgotPasswordSuccess('success'));\n    } else {\n      yield put(forgotPasswordError(forgotPasswordStatus.message));\n    }\n  } catch (error) {\n    yield put(forgotPasswordError(error));\n  }\n}\n\nexport function* watchResetPassword() {\n  yield takeEvery(RESET_PASSWORD, resetPassword);\n}\n\nconst resetPasswordAsync = async (resetPasswordCode, newPassword) => {\n  return await auth\n    .confirmPasswordReset(resetPasswordCode, newPassword)\n    .then((user) => user)\n    .catch((error) => error);\n};\n\nfunction* resetPassword({ payload }) {\n  const { newPassword, resetPasswordCode } = payload;\n  try {\n    const resetPasswordStatus = yield call(\n      resetPasswordAsync,\n      resetPasswordCode,\n      newPassword\n    );\n    if (!resetPasswordStatus) {\n      yield put(resetPasswordSuccess('success'));\n    } else {\n      yield put(resetPasswordError(resetPasswordStatus.message));\n    }\n  } catch (error) {\n    yield put(resetPasswordError(error));\n  }\n}\n\nexport default function* rootSaga() {\n  yield all([\n    fork(watchLoginUser),\n    fork(watchLogoutUser),\n    fork(watchRegisterUser),\n    fork(watchForgotPassword),\n    fork(watchResetPassword),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}