{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\src\\\\views\\\\app\\\\mapping\\\\StationDetail.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardBody, CardHeader, CardTitle, FormGroup, Alert, Row, Button, Input, Table, Modal, ModalHeader } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport { getFleetOperatorMappingListAPI, getUserMappingListByRoleAPI, mapFleetOperatorAPI, mapByRoleAPI } from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nconst StationDetail = () => {\n  //alert states\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        alertVisible = _useState2[0],\n        setAlertVisible = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        alertMsg = _useState4[0],\n        setAlertMsg = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        alertColor = _useState6[0],\n        setAlertColor = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        unmapAlertVisible = _useState8[0],\n        setUnmapAlertVisible = _useState8[1]; //Modal States\n\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        modalVisible = _useState10[0],\n        setModalVisible = _useState10[1]; //flag to dislpay list\n\n\n  const _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        listFlag = _useState12[0],\n        setListFlag = _useState12[1]; //button selected\n\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        fleetOutline = _useState14[0],\n        setFleetOutline = _useState14[1]; //if outline false then button selected\n\n\n  const _useState15 = useState(true),\n        _useState16 = _slicedToArray(_useState15, 2),\n        operatorOutline = _useState16[0],\n        setOperatorOutline = _useState16[1];\n\n  const _useState17 = useState(true),\n        _useState18 = _slicedToArray(_useState17, 2),\n        managerOutline = _useState18[0],\n        setManagerOutline = _useState18[1]; //user role\n\n\n  const _useState19 = useState(\"Fleet Operator\"),\n        _useState20 = _slicedToArray(_useState19, 2),\n        userRole = _useState20[0],\n        setUserRole = _useState20[1]; //fleet/operator/manager id to map\n\n\n  const _useState21 = useState(\"0\"),\n        _useState22 = _slicedToArray(_useState21, 2),\n        mappingId = _useState22[0],\n        setMappingId = _useState22[1]; //fleet/operator/manager id to Unmap\n\n\n  const _useState23 = useState(\"\"),\n        _useState24 = _slicedToArray(_useState23, 2),\n        unmapId = _useState24[0],\n        setUnmapId = _useState24[1]; //map-unmap list\n\n\n  const _useState25 = useState([]),\n        _useState26 = _slicedToArray(_useState25, 2),\n        mappedList = _useState26[0],\n        setMappedList = _useState26[1];\n\n  const _useState27 = useState([]),\n        _useState28 = _slicedToArray(_useState27, 2),\n        unmappedList = _useState28[0],\n        setUnmappedList = _useState28[1]; //set id for unmap\n\n\n  const _useState29 = useState(false),\n        _useState30 = _slicedToArray(_useState29, 2),\n        isUpdate = _useState30[0],\n        setIsUpdate = _useState30[1];\n\n  const location = useLocation();\n  useEffect(() => {\n    getMappingListByRoleAPICall();\n  }, [isUpdate, userRole]); //API calls\n\n  const getMappingListByRoleAPICall = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            setMappedList([]);\n            setUnmappedList([]);\n            _context.t0 = userRole;\n            _context.next = _context.t0 === \"Fleet Operator\" ? 5 : _context.t0 === \"Operator\" ? 7 : _context.t0 === \"Manager\" ? 9 : 11;\n            break;\n\n          case 5:\n            getFleetOperatorMappingListAPICall();\n            return _context.abrupt(\"break\", 13);\n\n          case 7:\n            getOperatorMappingListAPICall();\n            return _context.abrupt(\"break\", 13);\n\n          case 9:\n            getManagerMappingListAPICall();\n            return _context.abrupt(\"break\", 13);\n\n          case 11:\n            getFleetOperatorMappingListAPICall();\n            return _context.abrupt(\"break\", 13);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function getMappingListByRoleAPICall() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const getFleetOperatorMappingListAPICall = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context2.next = 3;\n            return axios.post(getFleetOperatorMappingListAPI, {\n              hub_id: location.state.hub_id\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setMappedList(responseData.data.mapped_fleet_operator);\n                setUnmappedList(responseData.data.other_fleet_operator);\n\n                if (responseData.data.mapped_fleet_operator.length > 0) {\n                  setListFlag(responseData.status);\n                } else {\n                  setListFlag(0);\n                }\n              } else {\n                setListFlag(responseData.status);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function getFleetOperatorMappingListAPICall() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const getOperatorMappingListAPICall = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            setMappedList([]);\n            currentUser = getCurrentUser();\n            _context3.next = 4;\n            return axios.post(getUserMappingListByRoleAPI, {\n              user_role: \"Operator\",\n              hub_id: location.state.hub_id\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setMappedList(responseData.data.mapped_user);\n                setUnmappedList(responseData.data.other_user);\n\n                if (responseData.data.mapped_user.length > 0) {\n                  setListFlag(responseData.status);\n                } else {\n                  setListFlag(0);\n                }\n              } else {\n                setListFlag(responseData.status);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n\n    return function getOperatorMappingListAPICall() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  const getManagerMappingListAPICall = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context4.next = 3;\n            return axios.post(getUserMappingListByRoleAPI, {\n              user_role: \"Manager\",\n              hub_id: location.state.hub_id\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setMappedList(responseData.data.mapped_user);\n                setUnmappedList(responseData.data.other_user);\n\n                if (responseData.data.mapped_user.length > 0) {\n                  setListFlag(responseData.status);\n                } else {\n                  setListFlag(0);\n                }\n              } else {\n                setListFlag(responseData.status);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n\n    return function getManagerMappingListAPICall() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  const MapByRoleAPICall = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(stationId, idToMap, mapstate) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.t0 = userRole;\n            _context5.next = _context5.t0 === \"Fleet Operator\" ? 3 : _context5.t0 === \"Operator\" ? 5 : _context5.t0 === \"Manager\" ? 7 : 9;\n            break;\n\n          case 3:\n            MapStationWithFleetAPICall(stationId, idToMap, mapstate);\n            return _context5.abrupt(\"break\", 9);\n\n          case 5:\n            MapStationWithOperatorAPICall(stationId, idToMap, mapstate);\n            return _context5.abrupt(\"break\", 9);\n\n          case 7:\n            MapStationWithManagerAPICall(stationId, idToMap, mapstate);\n            return _context5.abrupt(\"break\", 9);\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n\n    return function MapByRoleAPICall(_x, _x2, _x3) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  const MapStationWithFleetAPICall = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(stationId, fleetId, mapstate) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            setModalVisible(false);\n            currentUser = getCurrentUser();\n            _context6.next = 4;\n            return axios.post(mapFleetOperatorAPI, {\n              hub_id: stationId,\n              fleet_operator_id: fleetId\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setIsUpdate(!isUpdate);\n\n                if (mapstate == 1) {\n                  mapAlert(responseData.status, responseData.msg);\n                } else {\n                  unMapAlert(responseData.status, \"Station Unmapped Successfully\");\n                }\n              } else {\n                mapAlert(responseData.status, responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 4:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }));\n\n    return function MapStationWithFleetAPICall(_x4, _x5, _x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  const MapStationWithOperatorAPICall = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(stationId, userId, mapstate) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            setModalVisible(false);\n            currentUser = getCurrentUser();\n            _context7.next = 4;\n            return axios.post(mapByRoleAPI, {\n              hub_id: stationId,\n              user_id: userId,\n              user_role: \"Operator\"\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setIsUpdate(!isUpdate);\n\n                if (mapstate == 1) {\n                  mapAlert(responseData.status, responseData.msg);\n                } else {\n                  unMapAlert(responseData.status, \"Unmapped Successfully\");\n                }\n              } else {\n                mapAlert(responseData.status, responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 4:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7);\n    }));\n\n    return function MapStationWithOperatorAPICall(_x7, _x8, _x9) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  const MapStationWithManagerAPICall = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(stationId, userId, mapstate) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            setModalVisible(false);\n            currentUser = getCurrentUser();\n            _context8.next = 4;\n            return axios.post(mapByRoleAPI, {\n              hub_id: stationId,\n              user_id: userId,\n              user_role: \"Manager\"\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setIsUpdate(!isUpdate);\n\n                if (mapstate == 1) {\n                  mapAlert(responseData.status, responseData.msg);\n                } else {\n                  unMapAlert(responseData.status, \" Unmapped Successfully\");\n                }\n              } else {\n                mapAlert(responseData.status, responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 4:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8);\n    }));\n\n    return function MapStationWithManagerAPICall(_x10, _x11, _x12) {\n      return _ref8.apply(this, arguments);\n    };\n  }(); //helper methods\n  //Alert helper methods\n\n\n  const mapAlert = (status, msg) => {\n    setAlertVisible(true);\n    setAlertMsg(msg);\n\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  };\n\n  const unMapAlert = (status, msg) => {\n    setUnmapAlertVisible(true);\n    setAlertMsg(msg);\n\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  };\n\n  const onDismissAlert = () => {\n    setAlertVisible(false);\n  }; //Modal helper methods\n\n\n  const toggleModal = unMapID => {\n    setUnmapId(unMapID);\n    setModalVisible(!modalVisible);\n  }; //display details method\n\n\n  const sortDetail = (hubName, name) => {\n    if (hubName == null || hubName == \"\") {\n      return name;\n    } else {\n      return name + \" - \" + hubName;\n    }\n  }; //map method\n\n\n  const handleMap = id => {\n    if (id == 0) {\n      mapAlert(0, \"Please select \" + userRole);\n      return;\n    } else {\n      MapByRoleAPICall(location.state.hub_id, id, 1);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"page_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }\n  }, \"Station Mapping\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"station\",\n    className: \"mt-2 btn-primary default btn-sm float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon iconsminds-arrow-back-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 20\n    }\n  }), \" Go Back\")), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: 12,\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    outline: fleetOutline,\n    color: \"primary\",\n    className: \"default\",\n    onClick: () => {\n      setFleetOutline(false);\n      setOperatorOutline(true);\n      setManagerOutline(true);\n      setUserRole(\"Fleet Operator\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 23\n    }\n  }, \"Fleet Operator\")), /*#__PURE__*/React.createElement(Button, {\n    outline: operatorOutline,\n    color: \"primary\",\n    className: \"default\",\n    onClick: () => {\n      setFleetOutline(true);\n      setOperatorOutline(false);\n      setManagerOutline(true);\n      setUserRole(\"Operator\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 21\n    }\n  }, \"Operator\")), /*#__PURE__*/React.createElement(Button, {\n    outline: managerOutline,\n    color: \"primary\",\n    className: \"default\",\n    onClick: () => {\n      setFleetOutline(true);\n      setOperatorOutline(true);\n      setManagerOutline(false);\n      setUserRole(\"Manager\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 21\n    }\n  }, \"Manager\")))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"6 mt-5 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: alertColor,\n    isOpen: alertVisible,\n    toggle: onDismissAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 21\n    }\n  }, alertMsg)), /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  }, \"Select \", userRole))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"id\",\n    onChange: e => setMappingId(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: 0,\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 21\n    }\n  }, \"Select\"), userRole == \"Operator\" || userRole === \"Manager\" ? unmappedList.map((item, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 25\n    }\n  }, sortDetail(item.station_name, item.name))) : unmappedList.map((item, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    value: item.fleet_operator_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 25\n    }\n  }, sortDetail(item.hub_name, item.name)))))), /*#__PURE__*/React.createElement(Colxx, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"default\",\n    onClick: () => handleMap(mappingId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 23\n    }\n  }, \"Save\")))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: alertColor,\n    isOpen: unmapAlertVisible,\n    toggle: () => setUnmapAlertVisible(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 17\n    }\n  }, alertMsg)), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 15\n    }\n  }, \"Mapping Details\"), //check role\n  userRole == \"Operator\" || userRole == \"Manager\" ? /*#__PURE__*/React.createElement(Table, {\n    responsive: true,\n    bordered: true,\n    striped: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 29\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 29\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 29\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 29\n    }\n  }, \"Contact Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 29\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 25\n    }\n  }, listFlag > 0 ? mappedList.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 29\n    }\n  }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 29\n    }\n  }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 29\n    }\n  }, item.email), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 29\n    }\n  }, item.contact_number), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    className: \"default btn-sm tbl_action_btn\",\n    onClick: () => {\n      toggleModal(item.id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 35\n    }\n  }))))) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-center text-danger\",\n    colSpan: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 29\n    }\n  }, \"Data  Not  Found\")))) : /*#__PURE__*/React.createElement(Table, {\n    responsive: true,\n    bordered: true,\n    striped: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 27\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 27\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 27\n    }\n  }, \"Fleet Id\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 27\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 27\n    }\n  }, \"Contact Person\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 27\n    }\n  }, \"Contact Email\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 27\n    }\n  }, \"Contact Number\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 27\n    }\n  }, \"Remark 2\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 27\n    }\n  }, \"Remark 2\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 27\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 23\n    }\n  }, listFlag > 0 ? mappedList.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 27\n    }\n  }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 27\n    }\n  }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 27\n    }\n  }, item.fleet_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 27\n    }\n  }, item.address), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 27\n    }\n  }, item.contact_person), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 27\n    }\n  }, item.contact_email), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 27\n    }\n  }, item.contact_number), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 27\n    }\n  }, item.remark_1), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 27\n    }\n  }, item.remark_2), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    className: \"default btn-sm tbl_action_btn\",\n    onClick: () => {\n      toggleModal(item.fleet_operator_id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 33\n    }\n  }))))) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-center text-danger\",\n    colSpan: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 27\n    }\n  }, \"Data  Not  Found\")))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalVisible,\n    toggle: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 21\n    }\n  }, \"Are you sure you would like to unmap this ?\"), /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    className: \"mt-4\",\n    onClick: () => MapByRoleAPICall(0, unmapId, 0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 23\n    }\n  }, \"Unmap\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    className: \"mt-4 mr-2\",\n    onClick: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 23\n    }\n  }, \"Cancel\"))))))))));\n};\n\nexport default StationDetail;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/mapping/StationDetail.js"],"names":["React","useEffect","useState","Card","CardBody","CardHeader","CardTitle","FormGroup","Alert","Row","Button","Input","Table","Modal","ModalHeader","Colxx","Separator","getCurrentUser","getFleetOperatorMappingListAPI","getUserMappingListByRoleAPI","mapFleetOperatorAPI","mapByRoleAPI","axios","useLocation","Formik","yup","StationDetail","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","unmapAlertVisible","setUnmapAlertVisible","modalVisible","setModalVisible","listFlag","setListFlag","fleetOutline","setFleetOutline","operatorOutline","setOperatorOutline","managerOutline","setManagerOutline","userRole","setUserRole","mappingId","setMappingId","unmapId","setUnmapId","mappedList","setMappedList","unmappedList","setUnmappedList","isUpdate","setIsUpdate","location","getMappingListByRoleAPICall","getFleetOperatorMappingListAPICall","getOperatorMappingListAPICall","getManagerMappingListAPICall","currentUser","post","hub_id","state","headers","Authorization","token","then","response","responseData","data","status","mapped_fleet_operator","other_fleet_operator","length","catch","error","console","log","user_role","mapped_user","other_user","MapByRoleAPICall","stationId","idToMap","mapstate","MapStationWithFleetAPICall","MapStationWithOperatorAPICall","MapStationWithManagerAPICall","fleetId","fleet_operator_id","mapAlert","msg","unMapAlert","userId","user_id","onDismissAlert","toggleModal","unMapID","sortDetail","hubName","name","handleMap","id","e","target","value","map","item","i","station_name","hub_name","index","email","contact_number","fleet_id","address","contact_person","contact_email","remark_1","remark_2"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { \n  Card, CardBody, \n  CardHeader, CardTitle,\n  FormGroup,\n  Alert,\n  Row, Button, Input,Table,\n  Modal,ModalHeader\n} from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getFleetOperatorMappingListAPI,getUserMappingListByRoleAPI,mapFleetOperatorAPI,mapByRoleAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useLocation} from 'react-router-dom';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst StationDetail = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  const [unmapAlertVisible,setUnmapAlertVisible] = useState(false);\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //flag to dislpay list\n  const [listFlag,setListFlag] = useState(0);\n  //button selected\n  const [fleetOutline,setFleetOutline] = useState(false); //if outline false then button selected\n  const [operatorOutline,setOperatorOutline] = useState(true);\n  const [managerOutline,setManagerOutline] = useState(true);\n  //user role\n  const [userRole,setUserRole] = useState(\"Fleet Operator\");\n  //fleet/operator/manager id to map\n  const [mappingId,setMappingId] = useState(\"0\");\n  //fleet/operator/manager id to Unmap\n  const [unmapId,setUnmapId] = useState(\"\");\n   //map-unmap list\n   const [mappedList,setMappedList] = useState([]);\n   const [unmappedList,setUnmappedList] = useState([]);\n   //set id for unmap\n   const [isUpdate,setIsUpdate] = useState(false);\n\n   const location = useLocation();\n\n   useEffect(()=>{\n    getMappingListByRoleAPICall();\n  },[isUpdate,userRole])\n\n  //API calls\n  const getMappingListByRoleAPICall = async() => {\n    setMappedList([]);\n    setUnmappedList([]);\n    switch (userRole) {\n      case \"Fleet Operator\":\n        getFleetOperatorMappingListAPICall();\n        break;\n      case \"Operator\":\n        getOperatorMappingListAPICall();\n        break;\n      case \"Manager\":\n      getManagerMappingListAPICall();\n      break;\n      default:\n        getFleetOperatorMappingListAPICall();\n        break;\n    }\n  }\n  const getFleetOperatorMappingListAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getFleetOperatorMappingListAPI,\n      {hub_id:location.state.hub_id},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setMappedList(responseData.data.mapped_fleet_operator);\n          setUnmappedList(responseData.data.other_fleet_operator);\n          if (responseData.data.mapped_fleet_operator.length>0) {\n            setListFlag(responseData.status);\n          }else{\n            setListFlag(0);\n          }\n        }else{\n          setListFlag(responseData.status);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getOperatorMappingListAPICall = async() => {\n    setMappedList([]);\n    const currentUser = getCurrentUser();\n    await axios.post(getUserMappingListByRoleAPI,\n      {user_role:\"Operator\",hub_id:location.state.hub_id},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setMappedList(responseData.data.mapped_user);\n          setUnmappedList(responseData.data.other_user);\n          if (responseData.data.mapped_user.length>0) {\n            setListFlag(responseData.status);\n          }else{\n            setListFlag(0);\n          }\n        }else{\n          setListFlag(responseData.status);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getManagerMappingListAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getUserMappingListByRoleAPI,\n      {user_role:\"Manager\",hub_id:location.state.hub_id},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setMappedList(responseData.data.mapped_user);\n          setUnmappedList(responseData.data.other_user);\n          if (responseData.data.mapped_user.length>0) {\n            setListFlag(responseData.status);\n          }else{\n            setListFlag(0);\n          }\n        }else{\n          setListFlag(responseData.status);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const MapByRoleAPICall = async(stationId,idToMap,mapstate) => {\n    switch (userRole) {\n      case \"Fleet Operator\":\n        MapStationWithFleetAPICall(stationId,idToMap,mapstate);\n        break;\n      case \"Operator\":\n        MapStationWithOperatorAPICall(stationId,idToMap,mapstate);\n        break;\n      case \"Manager\":\n      MapStationWithManagerAPICall(stationId,idToMap,mapstate);\n      break;\n    }\n  }\n  const MapStationWithFleetAPICall = async(stationId,fleetId,mapstate) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(mapFleetOperatorAPI,\n      {hub_id:stationId,fleet_operator_id:fleetId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setIsUpdate(!isUpdate);\n          if (mapstate==1) {\n            mapAlert(responseData.status,responseData.msg);\n          }else{\n            unMapAlert(responseData.status,\"Station Unmapped Successfully\");\n          }\n        }else{\n          mapAlert(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const MapStationWithOperatorAPICall = async(stationId,userId,mapstate) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(mapByRoleAPI,\n      {hub_id:stationId,user_id:userId,user_role:\"Operator\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setIsUpdate(!isUpdate);\n          if (mapstate==1) {\n            mapAlert(responseData.status,responseData.msg);\n          }else{\n            unMapAlert(responseData.status,\"Unmapped Successfully\");\n          }\n        }else{\n          mapAlert(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const MapStationWithManagerAPICall = async(stationId,userId,mapstate) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(mapByRoleAPI,\n      {hub_id:stationId,user_id:userId,user_role:\"Manager\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setIsUpdate(!isUpdate);\n          if (mapstate==1) {\n            mapAlert(responseData.status,responseData.msg);\n          }else{\n            unMapAlert(responseData.status,\" Unmapped Successfully\");\n          }\n        }else{\n          mapAlert(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const mapAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const unMapAlert = (status,msg)=>{\n    setUnmapAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Modal helper methods\n  const toggleModal = (unMapID) => {\n    setUnmapId(unMapID);\n    setModalVisible(!modalVisible);\n  }\n  //display details method\n  const sortDetail = (hubName,name) => {\n    if (hubName == null || hubName == \"\") {\n      return name;\n    } else {\n      return name+\" - \"+hubName;\n    }\n  }\n  //map method\n  const handleMap = (id) => {\n    if (id == 0) {\n      mapAlert(0,\"Please select \"+userRole)\n      return;\n    } else {\n      MapByRoleAPICall(location.state.hub_id,id,1);\n    }\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Station Mapping</span>\n            <a href=\"station\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon iconsminds-arrow-back-3\"></i> Go Back</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs={12} className=\"mb-2\">\n          <Card>\n            <CardBody>\n              <Row>\n                <Colxx md=\"6\">\n                  <Button \n                    outline={fleetOutline} \n                    color=\"primary\" \n                    className=\"default\" \n                    onClick={()=>{\n                      setFleetOutline(false);\n                      setOperatorOutline(true);\n                      setManagerOutline(true);\n                      setUserRole(\"Fleet Operator\")\n                      }}>\n                      <b>Fleet Operator</b>\n                  </Button>\n                  <Button \n                    outline={operatorOutline} \n                    color=\"primary\" \n                    className=\"default\" \n                    onClick={()=>{\n                      setFleetOutline(true);\n                      setOperatorOutline(false);\n                      setManagerOutline(true);\n                      setUserRole(\"Operator\")}}>\n                    <b>Operator</b>\n                  </Button>\n                  <Button \n                    outline={managerOutline} \n                    color=\"primary\" \n                    className=\"default\" \n                    onClick={()=>{\n                      setFleetOutline(true);\n                      setOperatorOutline(true);\n                      setManagerOutline(false);\n                      setUserRole(\"Manager\")}}>\n                    <b>Manager</b>\n                  </Button>\n                </Colxx>\n              </Row>\n              <Row>\n                <Colxx md=\"6 mt-5 \">\n                    <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                      {alertMsg}\n                    </Alert>\n                  </Colxx>                  \n                  <Colxx md=\"12\">\n                    <h4 className=\"mb-3\">Select {userRole}</h4>\n                  </Colxx>   \n              </Row>\n              <Row className=\"mb-4\">\n                <Colxx md={6}>\n                  <FormGroup>\n                  <Input \n                    type=\"select\" \n                    name=\"id\"\n                    onChange={(e)=>setMappingId(e.target.value)}\n                  >\n                    <option key={0} value={0}>Select</option>\n                    {\n                      userRole==\"Operator\"|| userRole===\"Manager\"?\n                      unmappedList.map((item,i)=>\n                        <option key={i} value={item.id}>{sortDetail(item.station_name,item.name)}</option>\n                      ):\n                      unmappedList.map((item,i)=>\n                        <option key={i} value={item.fleet_operator_id}>{sortDetail(item.hub_name,item.name)}</option>\n                      )\n                    }\n                  </Input>\n                  </FormGroup>\n                </Colxx>\n                <Colxx md=\"6\">\n                  <Button \n                  color=\"primary\" \n                  className=\"default\"\n                  onClick={()=>handleMap(mappingId)}>\n                      <b>Save</b>\n                  </Button>\n                </Colxx>\n              </Row> \n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs={12}>\n          <Card>\n            <CardBody>\n              <CardHeader className=\"mb-3\">\n                <Alert color={alertColor} isOpen={unmapAlertVisible} toggle={()=>setUnmapAlertVisible(false)}>\n                  {alertMsg}\n                </Alert>\n              </CardHeader>\n              <h4>Mapping Details</h4>\n                  {\n                    //check role\n                    userRole==\"Operator\"|| userRole==\"Manager\"?\n                      <Table responsive bordered striped>\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Contact Number</th>\n                            <th>Action</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {listFlag>0?\n                            mappedList.map((item,index)=>\n                            <tr key={index}>\n                            <th scope=\"row\">{index +1}</th>\n                            <td>{item.name}</td>\n                            <td>{item.email}</td>\n                            <td>{item.contact_number}</td>\n                            <td>\n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>\n                            </td>\n                          </tr>\n                          ):\n                          <tr>\n                            <td className=\"text-center text-danger\" colSpan=\"5\">Data  Not  Found</td>\n                          </tr>}\n                        </tbody>\n                      </Table>:\n                      <Table responsive bordered striped>\n                      <thead>\n                        <tr>\n                          <th>#</th>\n                          <th>Name</th>\n                          <th>Fleet Id</th>\n                          <th>Address</th>\n                          <th>Contact Person</th>\n                          <th>Contact Email</th>\n                          <th>Contact Number</th>\n                          <th>Remark 2</th>\n                          <th>Remark 2</th>\n                          <th>Action</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {listFlag>0?\n                          mappedList.map((item,index)=>\n                          <tr key={index}>\n                          <th scope=\"row\">{index +1}</th>\n                          <td>{item.name}</td>\n                          <td>{item.fleet_id}</td>\n                          <td>{item.address}</td>\n                          <td>{item.contact_person}</td>\n                          <td>{item.contact_email}</td>\n                          <td>{item.contact_number}</td>\n                          <td>{item.remark_1}</td>\n                          <td>{item.remark_2}</td>\n                          <td>\n                            <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.fleet_operator_id)}}>\n                                <i className=\"glyph-icon simple-icon-trash\"></i>\n                            </Button>\n                          </td>\n                        </tr>\n                        ):\n                        <tr>\n                          <td className=\"text-center text-danger\" colSpan=\"10\">Data  Not  Found</td>\n                        </tr>}\n                      </tbody>\n                    </Table>\n                  }\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  <Row>\n                    <Colxx md=\"12\">\n                      Are you sure you would like to unmap this ?\n                    </Colxx>\n                    <Colxx md=\"12\">\n                      <Button color=\"success\" className=\"mt-4\" onClick={()=>MapByRoleAPICall(0,unmapId,0)}>\n                        Unmap \n                      </Button>{' '}\n                      <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                        Cancel\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default StationDetail; "]},"metadata":{},"sourceType":"module"}