{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\src\\\\views\\\\app\\\\pages\\\\UpdateFault.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, FormGroup, Card, CardBody, Label, Input, Button, Alert } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport { adminRoot, getOemAPI, updateFaultAPI, getFaultByIdAPI } from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst UpdateFault = () => {\n  const history = useHistory();\n  const location = useLocation(); //state\n\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        oemId = _useState2[0],\n        setOemId = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        oemList = _useState4[0],\n        setOemList = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        type = _useState6[0],\n        setType = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        faultTitle = _useState8[0],\n        setFaultTitle = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        position = _useState10[0],\n        setPosition = _useState10[1]; //error flags\n\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        errorTypeFlag = _useState12[0],\n        setErrorTypeFlag = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        errorOemFlag = _useState14[0],\n        setErrorOemFlag = _useState14[1]; //alert states\n\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        alertVisible = _useState16[0],\n        setAlertVisible = _useState16[1];\n\n  const _useState17 = useState(\"\"),\n        _useState18 = _slicedToArray(_useState17, 2),\n        alertMsg = _useState18[0],\n        setAlertMsg = _useState18[1];\n\n  const _useState19 = useState(\"\"),\n        _useState20 = _slicedToArray(_useState19, 2),\n        alertColor = _useState20[0],\n        setAlertColor = _useState20[1]; //state to disable button on click\n\n\n  const _useState21 = useState(false),\n        _useState22 = _slicedToArray(_useState21, 2),\n        buttonDisabled = _useState22[0],\n        setButtonDisabled = _useState22[1];\n\n  useEffect(() => {\n    getFaultByIdAPICall();\n  }, []); //API calls\n\n  const getOemAPICall = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(typeId) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            setAlertVisible(false);\n            currentUser = getCurrentUser();\n            _context.next = 4;\n            return axios.post(getOemAPI, {\n              type: typeId\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setOemList(responseData.data);\n              } else {\n                setOemList([]);\n                faultUpdatedAlert(\"OEM data for selectd type not found\");\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function getOemAPICall(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const getFaultByIdAPICall = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context2.next = 3;\n            return axios.post(getFaultByIdAPI, {\n              fault_master_id: location.state.fault_master_id\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setType(responseData.data.type);\n                responseData.data.type == 4 ? getOemAPICall(3) : getOemAPICall(responseData.data.type);\n                setOemId(responseData.data.oem_id);\n                setFaultTitle(responseData.data.title);\n                setPosition(responseData.data.bit_position);\n              } else {\n                faultUpdatedAlert(responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function getFaultByIdAPICall() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const updateFaultAPICall = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            setButtonDisabled(true);\n            currentUser = getCurrentUser();\n            _context3.next = 4;\n            return axios.post(updateFaultAPI, params, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                history.push({\n                  pathname: adminRoot + '/pages/fault',\n                  state: {\n                    responseStatus: responseData.status,\n                    responseMsg: responseData.msg\n                  }\n                });\n              } else {\n                setButtonDisabled(false);\n                faultUpdatedAlert(responseData.msg);\n              }\n            }).catch(error => {\n              setButtonDisabled(false);\n              console.log(error);\n            });\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n\n    return function updateFaultAPICall(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); //helper methods\n  //Alert helper methods\n\n\n  const faultUpdatedAlert = msg => {\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  };\n\n  const onDismissAlert = () => {\n    setAlertVisible(false);\n  }; //type select method\n\n\n  const handleTypeSelect = typeValue => {\n    setOemId(\"\");\n    setType(typeValue);\n\n    if (typeValue == 4) {\n      getOemAPICall(3);\n    } else {\n      getOemAPICall(typeValue);\n    }\n  }; //type blur\n\n\n  const handleTypeBlur = typeValue => {\n    setErrorTypeFlag(false);\n\n    if (typeValue == 0) {\n      setErrorTypeFlag(true);\n    }\n  }; //OEM select method\n\n\n  const handleOemSelect = oemValue => {\n    if (oemValue == 0) {\n      setOemId(\" \");\n    } else {\n      setOemId(oemValue);\n    }\n  }; //oem blur\n\n\n  const handleOemBlur = oemValue => {\n    setErrorOemFlag(false);\n\n    if (oemValue == 0) {\n      setErrorOemFlag(true);\n    }\n  }; //Form Validation Schema\n\n\n  const FaultDetailsValidationSchema = yup.object().shape({\n    title: yup.string().required(\"Fault title is required\"),\n    bit_position: yup.string().required(\"Position is required\")\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"page_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, \"Update Fault\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"fault\",\n    className: \"mt-2 btn-primary default btn-sm float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 20\n    }\n  }), \" Fault List\")), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      title: faultTitle,\n      bit_position: position\n    },\n    validationSchema: FaultDetailsValidationSchema,\n    onSubmit: values => {\n      const params = {\n        fault_master_id: location.state.fault_master_id,\n        type: type,\n        title: values.title,\n        oem_id: oemId,\n        bit_position: values.bit_position\n      };\n      updateFaultAPICall(params);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, ({\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    values,\n    touched,\n    errors\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: alertColor,\n    isOpen: alertVisible,\n    toggle: onDismissAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 31\n    }\n  }, alertMsg)), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 31\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"type\",\n    value: type,\n    onChange: e => handleTypeSelect(e.target.value),\n    onBlur: e => handleTypeBlur(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: 0,\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 35\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: 1,\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 35\n    }\n  }, \"Battery\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: 2,\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 35\n    }\n  }, \"EV\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: 3,\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 35\n    }\n  }, \"Charger\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: 4,\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 35\n    }\n  }, \"Connector\")), errorTypeFlag && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 35\n    }\n  }, \"Type is required\"))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 33\n    }\n  }, \"OEM\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"oem_id\",\n    value: oemId,\n    onChange: e => handleOemSelect(e.target.value),\n    onBlur: e => handleOemBlur(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: 0,\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 37\n    }\n  }, \"Select\"), oemList.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.oem_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 39\n    }\n  }, item.name))), errorOemFlag && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 37\n    }\n  }, \"OEM is required\"))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 33\n    }\n  }, \"Fault Title\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Fault title \",\n    name: \"title\",\n    value: values.title,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.title && touched.title ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 33\n    }\n  }), errors.title && touched.title && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 35\n    }\n  }, errors.title))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 33\n    }\n  }, \"Position\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    placeholder: \"Position \",\n    name: \"bit_position\",\n    value: values.bit_position,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.bit_position && touched.bit_position ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 33\n    }\n  }), errors.bit_position && touched.bit_position && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 35\n    }\n  }, errors.bit_position)))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"default mr-2\",\n    onClick: handleSubmit,\n    disabled: buttonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 35\n    }\n  }, \"Update\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"light\",\n    className: \"default\",\n    onClick: () => {\n      history.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 35\n    }\n  }, \"Cancel\")))))))))));\n};\n\nexport default UpdateFault;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/pages/UpdateFault.js"],"names":["React","useState","useEffect","Row","FormGroup","Card","CardBody","Label","Input","Button","Alert","Colxx","Separator","getCurrentUser","adminRoot","getOemAPI","updateFaultAPI","getFaultByIdAPI","axios","Formik","yup","useHistory","useLocation","UpdateFault","history","location","oemId","setOemId","oemList","setOemList","type","setType","faultTitle","setFaultTitle","position","setPosition","errorTypeFlag","setErrorTypeFlag","errorOemFlag","setErrorOemFlag","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","buttonDisabled","setButtonDisabled","getFaultByIdAPICall","getOemAPICall","typeId","currentUser","post","headers","Authorization","token","then","response","responseData","data","status","faultUpdatedAlert","catch","error","console","log","fault_master_id","state","oem_id","title","bit_position","msg","updateFaultAPICall","params","push","pathname","responseStatus","responseMsg","onDismissAlert","handleTypeSelect","typeValue","handleTypeBlur","handleOemSelect","oemValue","handleOemBlur","FaultDetailsValidationSchema","object","shape","string","required","values","handleChange","handleBlur","handleSubmit","touched","errors","e","target","value","map","item","index","name","goBack"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot,getOemAPI,updateFaultAPI,getFaultByIdAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport { useHistory,useLocation } from \"react-router-dom\";\n\nconst UpdateFault = () => {\n  const history = useHistory();\n  const location = useLocation();\n  //state\n  const [oemId,setOemId] = useState(\"\");\n  const [oemList,setOemList] = useState([]);\n  const [type,setType] = useState(0);\n  const [faultTitle,setFaultTitle] = useState(\"\");\n  const [position,setPosition] = useState(\"\");\n  //error flags\n  const [errorTypeFlag,setErrorTypeFlag] = useState(false);\n  const [errorOemFlag,setErrorOemFlag] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n\n  useEffect(()=>{\n      getFaultByIdAPICall();\n    },[])\n\n\n  //API calls\n  const getOemAPICall = async(typeId) => {\n    setAlertVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:typeId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {          \n          setOemList(responseData.data);\n        }else{\n          setOemList([]);\n          faultUpdatedAlert(\"OEM data for selectd type not found\");\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getFaultByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getFaultByIdAPI,\n        {\n            fault_master_id:location.state.fault_master_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n                setType(responseData.data.type);\n                responseData.data.type==4?getOemAPICall(3):getOemAPICall(responseData.data.type);\n                setOemId(responseData.data.oem_id);\n                setFaultTitle(responseData.data.title);\n                setPosition(responseData.data.bit_position);\n            }else{                \n              faultUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n\n    const updateFaultAPICall = async(params) => {\n        setButtonDisabled(true);\n        const currentUser = getCurrentUser();\n        await axios.post(updateFaultAPI,\n        params,\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n              history.push({\n                pathname:adminRoot+'/pages/fault',\n                state:{\n                  responseStatus:responseData.status,\n                  responseMsg:responseData.msg\n                }\n              })\n            }else{\n              setButtonDisabled(false);\n              faultUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            setButtonDisabled(false);\n            console.log(error);\n        })\n    }\n\n  //helper methods\n  //Alert helper methods\n  const faultUpdatedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //type select method\n  const handleTypeSelect = (typeValue) => {\n    setOemId(\"\");\n    setType(typeValue);\n    if (typeValue == 4) {\n      getOemAPICall(3);\n    } else {\n      getOemAPICall(typeValue); \n    }\n  }\n  //type blur\n  const handleTypeBlur = (typeValue) => {\n    setErrorTypeFlag(false);\n    if (typeValue == 0) {\n      setErrorTypeFlag(true);\n    }\n  }\n  //OEM select method\n  const handleOemSelect = (oemValue) => {\n    if (oemValue == 0) {\n      setOemId(\" \");\n    } else {\n      setOemId(oemValue); \n    }\n  }\n  //oem blur\n  const handleOemBlur = (oemValue) => {\n    setErrorOemFlag(false);\n    if (oemValue == 0) {\n      setErrorOemFlag(true);\n    }\n  }\n  //Form Validation Schema\n  const FaultDetailsValidationSchema = yup.object().shape({\n    title:yup.string()\n        .required(\"Fault title is required\"),\n    bit_position:yup.string()\n        .required(\"Position is required\"),\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Fault</span>\n            <a href=\"fault\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Fault List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            title:faultTitle,\n            bit_position:position,\n        }}\n        validationSchema={FaultDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n              fault_master_id:location.state.fault_master_id,\n              type:type,\n              title:values.title,\n              oem_id:oemId,\n              bit_position:values.bit_position\n            }\n          updateFaultAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                        <Row>\n                          <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                                Type\n                              </Label>\n                              <Input type=\"select\" \n                              name=\"type\"\n                              value={type}\n                              onChange={(e)=>handleTypeSelect(e.target.value)}\n                              onBlur={(e)=>handleTypeBlur(e.target.value)}>\n                                  <option key={0} value={0}>Select</option>\n                                  <option key={1} value={1}>Battery</option>\n                                  <option key={2} value={2}>EV</option>\n                                  <option key={3} value={3}>Charger</option>\n                                  <option key={4} value={4}>Connector</option>\n                              </Input>\n                              {errorTypeFlag &&(\n                                  <span className=\"error\">Type is required</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  OEM\n                                </Label>\n                                <Input type=\"select\" \n                                name=\"oem_id\"\n                                value={oemId}\n                                onChange={(e)=>handleOemSelect(e.target.value)}\n                                onBlur={(e)=>handleOemBlur(e.target.value)}>\n                                    <option key={0} value={0}>Select</option>\n                                    {oemList.map((item,index)=>\n                                      <option key={index} value={item.oem_id}>{item.name}</option>\n                                    )}\n                                </Input>\n                                {errorOemFlag &&(\n                                    <span className=\"error\">OEM is required</span>\n                                  )}   \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Fault Title\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Fault title \"\n                                  name=\"title\"\n                                  value={values.title}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.title && touched.title ? \"input-error\":null}\n                                />\n                                {errors.title && touched.title &&(\n                                  <span className=\"error\">{errors.title}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Position\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  placeholder=\"Position \"\n                                  name=\"bit_position\"\n                                  value={values.bit_position}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.bit_position && touched.bit_position ? \"input-error\":null}\n                                />\n                                {errors.bit_position && touched.bit_position &&(\n                                  <span className=\"error\">{errors.bit_position}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default UpdateFault;\n"]},"metadata":{},"sourceType":"module"}