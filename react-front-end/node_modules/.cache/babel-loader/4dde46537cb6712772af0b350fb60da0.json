{"ast":null,"code":"/* eslint-disable prefer-rest-params */import React,{useEffect,useRef,useState}from'react';import{Chart}from'chart.js';import{centerTextPlugin}from'./util';import{doughnutChartOptions}from'./config';const Doughnut=({data,shadow=false})=>{const chartContainer=useRef(null);// const [, setChartInstance] = useState(null);\nif(chartContainer&&chartContainer.current){if(shadow){Chart.defaults.doughnutWithShadow=Chart.defaults.doughnut;Chart.controllers.doughnutWithShadow=Chart.controllers.doughnut.extend({draw(ease){Chart.controllers.doughnut.prototype.draw.call(this,ease);const ctx=this.chart.ctx;ctx.save();ctx.shadowColor='rgba(0,0,0,0.15)';ctx.shadowBlur=10;ctx.shadowOffsetX=0;ctx.shadowOffsetY=10;ctx.responsive=true;Chart.controllers.doughnut.prototype.draw.apply(this,arguments);ctx.restore();}});}const context=chartContainer.current.getContext('2d');let newChartInstance;if(newChartInstance){newChartInstance.destroy();};newChartInstance=new Chart(context,{type:shadow?'doughnutWithShadow':'doughnut',options:doughnutChartOptions,plugins:[centerTextPlugin],data});// setChartInstance(newChartInstance);\n}return/*#__PURE__*/React.createElement(\"canvas\",{ref:chartContainer});};export default Doughnut;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/components/charts/Doughnut.js"],"names":["React","useEffect","useRef","useState","Chart","centerTextPlugin","doughnutChartOptions","Doughnut","data","shadow","chartContainer","current","defaults","doughnutWithShadow","doughnut","controllers","extend","draw","ease","prototype","call","ctx","chart","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","responsive","apply","arguments","restore","context","getContext","newChartInstance","destroy","type","options","plugins"],"mappings":"AAAA,uCACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,QAAnC,KAAmD,OAAnD,CACA,OAASC,KAAT,KAAsB,UAAtB,CAEA,OAASC,gBAAT,KAAiC,QAAjC,CACA,OAASC,oBAAT,KAAqC,UAArC,CAEA,KAAMC,CAAAA,QAAQ,CAAG,CAAC,CAAEC,IAAF,CAAQC,MAAM,CAAG,KAAjB,CAAD,GAA8B,CAC7C,KAAMC,CAAAA,cAAc,CAAGR,MAAM,CAAC,IAAD,CAA7B,CACA;AACA,GAAIQ,cAAc,EAAIA,cAAc,CAACC,OAArC,CAA8C,CAC5C,GAAIF,MAAJ,CAAY,CACVL,KAAK,CAACQ,QAAN,CAAeC,kBAAf,CAAoCT,KAAK,CAACQ,QAAN,CAAeE,QAAnD,CACAV,KAAK,CAACW,WAAN,CAAkBF,kBAAlB,CAAuCT,KAAK,CAACW,WAAN,CAAkBD,QAAlB,CAA2BE,MAA3B,CACrC,CACEC,IAAI,CAACC,IAAD,CAAO,CACTd,KAAK,CAACW,WAAN,CAAkBD,QAAlB,CAA2BK,SAA3B,CAAqCF,IAArC,CAA0CG,IAA1C,CAA+C,IAA/C,CAAqDF,IAArD,EADS,KAGEG,CAAAA,GAHF,CAIL,IAJK,CAGPC,KAHO,CAGED,GAHF,CAKTA,GAAG,CAACE,IAAJ,GACAF,GAAG,CAACG,WAAJ,CAAkB,kBAAlB,CACAH,GAAG,CAACI,UAAJ,CAAiB,EAAjB,CACAJ,GAAG,CAACK,aAAJ,CAAoB,CAApB,CACAL,GAAG,CAACM,aAAJ,CAAoB,EAApB,CACAN,GAAG,CAACO,UAAJ,CAAiB,IAAjB,CACAxB,KAAK,CAACW,WAAN,CAAkBD,QAAlB,CAA2BK,SAA3B,CAAqCF,IAArC,CAA0CY,KAA1C,CAAgD,IAAhD,CAAsDC,SAAtD,EACAT,GAAG,CAACU,OAAJ,GACD,CAdH,CADqC,CAAvC,CAkBD,CACD,KAAMC,CAAAA,OAAO,CAAGtB,cAAc,CAACC,OAAf,CAAuBsB,UAAvB,CAAkC,IAAlC,CAAhB,CACA,GAAIC,CAAAA,gBAAJ,CACA,GAAGA,gBAAH,CAAoB,CAACA,gBAAgB,CAACC,OAAjB,GAA2B,EAChDD,gBAAgB,CAAG,GAAI9B,CAAAA,KAAJ,CAAU4B,OAAV,CAAmB,CACpCI,IAAI,CAAE3B,MAAM,CAAG,oBAAH,CAA0B,UADF,CAEpC4B,OAAO,CAAE/B,oBAF2B,CAGpCgC,OAAO,CAAE,CAACjC,gBAAD,CAH2B,CAIpCG,IAJoC,CAAnB,CAAnB,CAMA;AACD,CAED,mBAAO,8BAAQ,GAAG,CAAEE,cAAb,EAAP,CACD,CAtCD,CAwCA,cAAeH,CAAAA,QAAf","sourcesContent":["/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { centerTextPlugin } from './util';\nimport { doughnutChartOptions } from './config';\n\nconst Doughnut = ({ data, shadow = false }) => {\n  const chartContainer = useRef(null);\n  // const [, setChartInstance] = useState(null);\n  if (chartContainer && chartContainer.current) {\n    if (shadow) {\n      Chart.defaults.doughnutWithShadow = Chart.defaults.doughnut;\n      Chart.controllers.doughnutWithShadow = Chart.controllers.doughnut.extend(\n        {\n          draw(ease) {\n            Chart.controllers.doughnut.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.15)';\n            ctx.shadowBlur = 10;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 10;\n            ctx.responsive = true;\n            Chart.controllers.doughnut.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        }\n      );\n    }\n    const context = chartContainer.current.getContext('2d');\n    let newChartInstance;\n    if(newChartInstance){newChartInstance.destroy()};\n    newChartInstance = new Chart(context, {\n      type: shadow ? 'doughnutWithShadow' : 'doughnut',\n      options: doughnutChartOptions,\n      plugins: [centerTextPlugin],\n      data,\n    });\n    // setChartInstance(newChartInstance);\n  }\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default Doughnut;\n"]},"metadata":{},"sourceType":"module"}