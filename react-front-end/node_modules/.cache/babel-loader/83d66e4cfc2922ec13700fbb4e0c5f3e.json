{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\src\\\\views\\\\app\\\\dashboard\\\\Admin_dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, DropdownItem, DropdownMenu, DropdownToggle, UncontrolledButtonDropdown } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getStationsAPI, getDashboardDataAPI } from '../../../constants/defaultValues';\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport axios from 'axios';\nimport { ThemeColors } from '../../../helpers/ThemeColors';\nimport { ChargerDoughnut, setChargerChartData } from './operator/ChargerDoughnut';\nimport { ConnectorDoughnut, setConnectorChartData } from './operator/ConnectorDoughnut';\nimport { BatteryStatusChart, setBatteryChartData } from './operator/BatteryStatusChart';\nimport { IconCardsCarousel, setBatteriesCount, setChargerCount, setConnectorCount, setEVCount, setStationCount } from './manager/cardCarousel';\nimport { SwapChartCard, setSwapChartData, setshowSwapChart } from './manager/SwapChart';\nimport { EnergyChartCard, setEnergyChartData, setshowEnergyChart } from './manager/EnergyChart';\nimport { KPICards, setKPIChartData } from './manager/KPICards';\nimport { StationDoughnut, setStationChartData } from './manager/StationDoughnut';\nconst colors = ThemeColors();\n\nconst Admin_dashboard = () => {\n  //All station names\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        stationNameData = _useState2[0],\n        setStationNameData = _useState2[1]; //Swapping useStates\n\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        swappingChartData = _useState4[0],\n        setSwappingChartData = _useState4[1]; //swapping chart data\n\n\n  const _useState5 = useState(\"All Stations\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        swappingDropHeader = _useState6[0],\n        setSwappingDropHeader = _useState6[1]; //swapping dropdown header\n\n\n  const _useState7 = useState('0'),\n        _useState8 = _slicedToArray(_useState7, 2),\n        swappingStation = _useState8[0],\n        setSwappingStation = _useState8[1]; //swapping chart dropdown\n  //Batteries useStates\n  //Chargers useStates\n\n\n  const _useState9 = useState({}),\n        _useState10 = _slicedToArray(_useState9, 2),\n        chargerData = _useState10[0],\n        setChargerData = _useState10[1]; //charger card and chart data\n\n\n  const _useState11 = useState('0'),\n        _useState12 = _slicedToArray(_useState11, 2),\n        chargerStation = _useState12[0],\n        setChargerStation = _useState12[1]; //chargers chart dropdown\n  //Slots useState\n\n\n  const _useState13 = useState('0'),\n        _useState14 = _slicedToArray(_useState13, 2),\n        slotStation = _useState14[0],\n        setSlotStation = _useState14[1]; //slots chart dropdown\n\n\n  useEffect(() => {\n    GetStationNamesAPICall();\n  }, []);\n  useEffect(() => {\n    GetDashboardDataAPICall();\n  }, [swappingStation, chargerStation, slotStation]); //API call\n\n  const GetStationNamesAPICall = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context.next = 3;\n            return axios.get(getStationsAPI, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                //stationNamesData = responseData.data;\n                setStationNameData(responseData.data);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function GetStationNamesAPICall() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const GetDashboardDataAPICall = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context2.next = 3;\n            return axios.post(getDashboardDataAPI, {\n              station_id: swappingStation\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setshowEnergyChart(true);\n                setshowSwapChart(true);\n                setStationCount(responseData.data.station.total);\n                setBatteriesCount(responseData.data.batteries.total);\n                setChargerCount(responseData.data.chargers.total);\n                setEVCount(responseData.data.ev.total);\n                setConnectorCount(responseData.data.slots.total);\n                setBatteryChartData(0, responseData.data.batteries.total, responseData.data.batteries.in_charging);\n                setBatteryChartData(1, responseData.data.batteries.total, responseData.data.batteries.charged);\n                setBatteryChartData(2, responseData.data.batteries.total, responseData.data.batteries.discharged);\n                setBatteryChartData(3, responseData.data.batteries.total, responseData.data.batteries.faulty);\n                setBatteryChartData(4, responseData.data.batteries.total, responseData.data.batteries.out);\n                setChargerChartData(responseData.data.chargers.operational, responseData.data.chargers.faulty);\n                setConnectorChartData(responseData.data.slots.inuse, responseData.data.slots.available, responseData.data.slots.faulty);\n                setStationChartData(responseData.data.station.operational, responseData.data.station.faulty);\n                setChargerData(responseData.data.chargers);\n                setEnergyChartData(responseData);\n                setSwapChartData(responseData);\n                setKPIChartData(0, abbreviateNumber(responseData.data.energy_sold.cumulative), abbreviateNumber(responseData.data.misc.unit_30) + \" in last 30 days\");\n                setKPIChartData(1, abbreviateNumber(responseData.data.energy_sold.avg_unit_per_ev_per_day), \"\");\n                setKPIChartData(2, responseData.data.swapping.daily, abbreviateNumber(responseData.data.misc.swap_30) + \" in last 30 days\");\n                setSwappingChartData({\n                  labels: responseData.data.swapping.date,\n                  datasets: [{\n                    label: 'Complete',\n                    data: responseData.data.swapping.complete_swap_data,\n                    borderColor: colors.themeColor1,\n                    pointBackgroundColor: colors.foregroundColor,\n                    pointBorderColor: colors.themeColor1,\n                    pointHoverBackgroundColor: colors.themeColor1,\n                    pointHoverBorderColor: colors.foregroundColor,\n                    pointRadius: 6,\n                    pointBorderWidth: 2,\n                    pointHoverRadius: 8,\n                    fill: false\n                  }, {\n                    label: 'Incomplete',\n                    data: responseData.data.swapping.incomplete_swap_data,\n                    borderColor: colors.themeColor2,\n                    pointBackgroundColor: colors.foregroundColor,\n                    pointBorderColor: colors.themeColor2,\n                    pointHoverBackgroundColor: colors.themeColor2,\n                    pointHoverBorderColor: colors.foregroundColor,\n                    pointRadius: 6,\n                    pointBorderWidth: 2,\n                    pointHoverRadius: 8,\n                    fill: false\n                  }]\n                });\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function GetDashboardDataAPICall() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const abbreviateNumber = num => {\n    let fixed = 0;\n\n    if (num === null) {\n      return null;\n    } // terminate early\n\n\n    if (num === 0) {\n      return '0';\n    } // terminate early\n\n\n    fixed = !fixed || fixed < 0 ? 0 : fixed; // number of decimal places to show\n\n    var b = num.toPrecision(2).split(\"e\"),\n        // get power\n    k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3),\n        // floor at decimals, ceiling at trillions\n    c = k < 1 ? num.toFixed(0 + fixed) : (num / Math.pow(10, k * 3)).toFixed(1 + fixed),\n        // divide by power\n    d = c < 0 ? c : Math.abs(c),\n        // enforce -0 is 0\n    e = d + ['', 'K', 'M', 'B', 'T'][k]; // append power\n\n    return e;\n  }; //dropdown handle methods\n  //swapping dropdown\n\n\n  const handleSwappingStationSelect = e => {\n    setSwappingDropHeader(e.currentTarget.textContent);\n    setSwappingStation(e.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"page_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 10\n    }\n  }, \"Admin Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group float-right float-none-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(UncontrolledButtonDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    caret: true,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, swappingDropHeader), /*#__PURE__*/React.createElement(DropdownMenu, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    header: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, \"Stations\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    key: 0,\n    value: 0,\n    onClick: e => handleSwappingStationSelect(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, \"All Stations\"), stationNameData.map((item, i) => /*#__PURE__*/React.createElement(DropdownItem, {\n    key: i,\n    value: item.hub_master_id,\n    onClick: e => handleSwappingStationSelect(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 19\n    }\n  }, item.name))))), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 10\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    lg: \"12\",\n    xl: \"12\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconCardsCarousel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    lg: \"5\",\n    xxs: \"12\",\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SwapChartCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Colxx, {\n    lg: \"2\",\n    xxs: \"12\",\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(KPICards, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(Colxx, {\n    lg: \"5\",\n    xxs: \"12\",\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EnergyChartCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"3\",\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StationDoughnut, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Colxx, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"3\",\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChargerDoughnut, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Colxx, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"3\",\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BatteryStatusChart, {\n    cardClass: \"dashboard-progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Colxx, {\n    sm: \"12\",\n    md: \"6\",\n    lg: \"3\",\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ConnectorDoughnut, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Admin_dashboard;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/dashboard/Admin_dashboard.js"],"names":["React","useState","useEffect","Row","DropdownItem","DropdownMenu","DropdownToggle","UncontrolledButtonDropdown","Colxx","Separator","getStationsAPI","getDashboardDataAPI","getCurrentUser","axios","ThemeColors","ChargerDoughnut","setChargerChartData","ConnectorDoughnut","setConnectorChartData","BatteryStatusChart","setBatteryChartData","IconCardsCarousel","setBatteriesCount","setChargerCount","setConnectorCount","setEVCount","setStationCount","SwapChartCard","setSwapChartData","setshowSwapChart","EnergyChartCard","setEnergyChartData","setshowEnergyChart","KPICards","setKPIChartData","StationDoughnut","setStationChartData","colors","Admin_dashboard","stationNameData","setStationNameData","swappingChartData","setSwappingChartData","swappingDropHeader","setSwappingDropHeader","swappingStation","setSwappingStation","chargerData","setChargerData","chargerStation","setChargerStation","slotStation","setSlotStation","GetStationNamesAPICall","GetDashboardDataAPICall","currentUser","get","headers","Authorization","token","then","response","responseData","data","status","catch","error","console","log","post","station_id","station","total","batteries","chargers","ev","slots","in_charging","charged","discharged","faulty","out","operational","inuse","available","abbreviateNumber","energy_sold","cumulative","misc","unit_30","avg_unit_per_ev_per_day","swapping","daily","swap_30","labels","date","datasets","label","complete_swap_data","borderColor","themeColor1","pointBackgroundColor","foregroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointBorderWidth","pointHoverRadius","fill","incomplete_swap_data","themeColor2","num","fixed","b","toPrecision","split","k","length","Math","floor","min","slice","c","toFixed","pow","d","abs","e","handleSwappingStationSelect","currentTarget","textContent","target","value","map","item","i","hub_master_id","name"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SACEC,GADF,EAEEC,YAFF,EAGEC,YAHF,EAIEC,cAJF,EAKEC,0BALF,QAMQ,YANR;AAOA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,4CAAjC;AAEA,SAAQC,cAAR,EAAuBC,mBAAvB,QAAiD,kCAAjD;AACA,SAASC,cAAT,QAA+B,wBAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,SAAQC,eAAR,EAAyBC,mBAAzB,QAAmD,4BAAnD;AACA,SAAQC,iBAAR,EAA0BC,qBAA1B,QAAsD,8BAAtD;AACA,SAAQC,kBAAR,EAA2BC,mBAA3B,QAAqD,+BAArD;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,EAA+CC,eAA/C,EAAgEC,iBAAhE,EAAmFC,UAAnF,EAA8FC,eAA9F,QAAqH,wBAArH;AACA,SAAQC,aAAR,EAAsBC,gBAAtB,EAAuCC,gBAAvC,QAA8D,qBAA9D;AACA,SAAQC,eAAR,EAAwBC,kBAAxB,EAA4CC,kBAA5C,QAAqE,uBAArE;AACA,SAAQC,QAAR,EAAiBC,eAAjB,QAAuC,oBAAvC;AACA,SAASC,eAAT,EAAyBC,mBAAzB,QAAoD,2BAApD;AACA,MAAMC,MAAM,GAAGvB,WAAW,EAA1B;;AAEA,MAAMwB,eAAe,GAAG,MAAM;AAC5B;AAD4B,oBAEiBrC,QAAQ,CAAC,EAAD,CAFzB;AAAA;AAAA,QAErBsC,eAFqB;AAAA,QAELC,kBAFK,kBAI5B;;;AAJ4B,qBAMqBvC,QAAQ,CAAC,EAAD,CAN7B;AAAA;AAAA,QAMrBwC,iBANqB;AAAA,QAMHC,oBANG,kBAMmC;;;AANnC,qBAOuBzC,QAAQ,CAAC,cAAD,CAP/B;AAAA;AAAA,QAOrB0C,kBAPqB;AAAA,QAOFC,qBAPE,kBAOiD;;;AAPjD,qBAQiB3C,QAAQ,CAAC,GAAD,CARzB;AAAA;AAAA,QAQrB4C,eARqB;AAAA,QAQLC,kBARK,kBAQgC;AAC5D;AAEA;;;AAX4B,qBAYS7C,QAAQ,CAAC,EAAD,CAZjB;AAAA;AAAA,QAYrB8C,WAZqB;AAAA,QAYTC,cAZS,mBAYuB;;;AAZvB,sBAce/C,QAAQ,CAAC,GAAD,CAdvB;AAAA;AAAA,QAcrBgD,cAdqB;AAAA,QAcNC,iBAdM,mBAc8B;AAC1D;;;AAf4B,sBAiBSjD,QAAQ,CAAC,GAAD,CAjBjB;AAAA;AAAA,QAiBrBkD,WAjBqB;AAAA,QAiBTC,cAjBS,mBAiBwB;;;AAGpDlD,EAAAA,SAAS,CAAC,MAAI;AACZmD,IAAAA,sBAAsB;AACvB,GAFQ,EAEP,EAFO,CAAT;AAGAnD,EAAAA,SAAS,CAAC,MAAI;AACZoD,IAAAA,uBAAuB;AACxB,GAFQ,EAEP,CAACT,eAAD,EAAiBI,cAAjB,EAAgCE,WAAhC,CAFO,CAAT,CAvB4B,CA2B5B;;AACA,QAAME,sBAAsB;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AACvBE,YAAAA,WADuB,GACT3C,cAAc,EADL;AAAA;AAAA,mBAEvBC,KAAK,CAAC2C,GAAN,CAAU9C,cAAV,EACN;AAAC+C,cAAAA,OAAO,EAAC;AAACC,gBAAAA,aAAa,mBAAYH,WAAW,CAACI,KAAxB;AAAd;AAAT,aADM,EAELC,IAFK,CAEAC,QAAQ,IAAE;AACd,oBAAMC,YAAY,GAAGD,QAAQ,CAACE,IAA9B;;AACA,kBAAID,YAAY,CAACE,MAAb,KAAwB,CAA5B,EAA+B;AAC7B;AACAxB,gBAAAA,kBAAkB,CAACsB,YAAY,CAACC,IAAd,CAAlB;AACD;AACF,aARK,EAQHE,KARG,CAQGC,KAAK,IAAE;AACdC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,aAVK,CAFuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAtBb,sBAAsB;AAAA;AAAA;AAAA,KAA5B;;AAeA,QAAMC,uBAAuB;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AACxBC,YAAAA,WADwB,GACV3C,cAAc,EADJ;AAAA;AAAA,mBAExBC,KAAK,CAACwD,IAAN,CAAW1D,mBAAX,EACN;AACC2D,cAAAA,UAAU,EAACzB;AADZ,aADM,EAIN;AAACY,cAAAA,OAAO,EAAC;AAACC,gBAAAA,aAAa,mBAAYH,WAAW,CAACI,KAAxB;AAAd;AAAT,aAJM,EAKLC,IALK,CAKAC,QAAQ,IAAE;AACd,oBAAMC,YAAY,GAAGD,QAAQ,CAACE,IAA9B;;AACA,kBAAID,YAAY,CAACE,MAAb,KAAwB,CAA5B,EAA+B;AAE7BhC,gBAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAH,gBAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAH,gBAAAA,eAAe,CAACoC,YAAY,CAACC,IAAb,CAAkBQ,OAAlB,CAA0BC,KAA3B,CAAf;AACAlD,gBAAAA,iBAAiB,CAACwC,YAAY,CAACC,IAAb,CAAkBU,SAAlB,CAA4BD,KAA7B,CAAjB;AAEAjD,gBAAAA,eAAe,CAACuC,YAAY,CAACC,IAAb,CAAkBW,QAAlB,CAA2BF,KAA5B,CAAf;AAEA/C,gBAAAA,UAAU,CAACqC,YAAY,CAACC,IAAb,CAAkBY,EAAlB,CAAqBH,KAAtB,CAAV;AACAhD,gBAAAA,iBAAiB,CAACsC,YAAY,CAACC,IAAb,CAAkBa,KAAlB,CAAwBJ,KAAzB,CAAjB;AAEApD,gBAAAA,mBAAmB,CAAC,CAAD,EAAG0C,YAAY,CAACC,IAAb,CAAkBU,SAAlB,CAA4BD,KAA/B,EAAqCV,YAAY,CAACC,IAAb,CAAkBU,SAAlB,CAA4BI,WAAjE,CAAnB;AACAzD,gBAAAA,mBAAmB,CAAC,CAAD,EAAG0C,YAAY,CAACC,IAAb,CAAkBU,SAAlB,CAA4BD,KAA/B,EAAqCV,YAAY,CAACC,IAAb,CAAkBU,SAAlB,CAA4BK,OAAjE,CAAnB;AACA1D,gBAAAA,mBAAmB,CAAC,CAAD,EAAG0C,YAAY,CAACC,IAAb,CAAkBU,SAAlB,CAA4BD,KAA/B,EAAqCV,YAAY,CAACC,IAAb,CAAkBU,SAAlB,CAA4BM,UAAjE,CAAnB;AACA3D,gBAAAA,mBAAmB,CAAC,CAAD,EAAG0C,YAAY,CAACC,IAAb,CAAkBU,SAAlB,CAA4BD,KAA/B,EAAqCV,YAAY,CAACC,IAAb,CAAkBU,SAAlB,CAA4BO,MAAjE,CAAnB;AACA5D,gBAAAA,mBAAmB,CAAC,CAAD,EAAG0C,YAAY,CAACC,IAAb,CAAkBU,SAAlB,CAA4BD,KAA/B,EAAqCV,YAAY,CAACC,IAAb,CAAkBU,SAAlB,CAA4BQ,GAAjE,CAAnB;AAEAjE,gBAAAA,mBAAmB,CAAC8C,YAAY,CAACC,IAAb,CAAkBW,QAAlB,CAA2BQ,WAA5B,EAAwCpB,YAAY,CAACC,IAAb,CAAkBW,QAAlB,CAA2BM,MAAnE,CAAnB;AACA9D,gBAAAA,qBAAqB,CAAE4C,YAAY,CAACC,IAAb,CAAkBa,KAAlB,CAAwBO,KAA1B,EAAgCrB,YAAY,CAACC,IAAb,CAAkBa,KAAlB,CAAwBQ,SAAxD,EAAkEtB,YAAY,CAACC,IAAb,CAAkBa,KAAlB,CAAwBI,MAA1F,CAArB;AACA5C,gBAAAA,mBAAmB,CAAC0B,YAAY,CAACC,IAAb,CAAkBQ,OAAlB,CAA0BW,WAA3B,EAAuCpB,YAAY,CAACC,IAAb,CAAkBQ,OAAlB,CAA0BS,MAAjE,CAAnB;AACAhC,gBAAAA,cAAc,CAACc,YAAY,CAACC,IAAb,CAAkBW,QAAnB,CAAd;AACA3C,gBAAAA,kBAAkB,CAAC+B,YAAD,CAAlB;AACAlC,gBAAAA,gBAAgB,CAACkC,YAAD,CAAhB;AAEA5B,gBAAAA,eAAe,CAAC,CAAD,EAAGmD,gBAAgB,CAACvB,YAAY,CAACC,IAAb,CAAkBuB,WAAlB,CAA8BC,UAA/B,CAAnB,EAA8DF,gBAAgB,CAACvB,YAAY,CAACC,IAAb,CAAkByB,IAAlB,CAAuBC,OAAxB,CAAhB,GAAiD,kBAA/G,CAAf;AACAvD,gBAAAA,eAAe,CAAC,CAAD,EAAGmD,gBAAgB,CAACvB,YAAY,CAACC,IAAb,CAAkBuB,WAAlB,CAA8BI,uBAA/B,CAAnB,EAA2E,EAA3E,CAAf;AACAxD,gBAAAA,eAAe,CAAC,CAAD,EAAG4B,YAAY,CAACC,IAAb,CAAkB4B,QAAlB,CAA2BC,KAA9B,EAAoCP,gBAAgB,CAACvB,YAAY,CAACC,IAAb,CAAkByB,IAAlB,CAAuBK,OAAxB,CAAhB,GAAiD,kBAArF,CAAf;AAEAnD,gBAAAA,oBAAoB,CAAC;AACnBoD,kBAAAA,MAAM,EAAEhC,YAAY,CAACC,IAAb,CAAkB4B,QAAlB,CAA2BI,IADhB;AAEnBC,kBAAAA,QAAQ,EAAE,CACR;AACEC,oBAAAA,KAAK,EAAE,UADT;AAEElC,oBAAAA,IAAI,EAAED,YAAY,CAACC,IAAb,CAAkB4B,QAAlB,CAA2BO,kBAFnC;AAGEC,oBAAAA,WAAW,EAAE9D,MAAM,CAAC+D,WAHtB;AAIEC,oBAAAA,oBAAoB,EAAEhE,MAAM,CAACiE,eAJ/B;AAKEC,oBAAAA,gBAAgB,EAAElE,MAAM,CAAC+D,WAL3B;AAMEI,oBAAAA,yBAAyB,EAAEnE,MAAM,CAAC+D,WANpC;AAOEK,oBAAAA,qBAAqB,EAAEpE,MAAM,CAACiE,eAPhC;AAQEI,oBAAAA,WAAW,EAAE,CARf;AASEC,oBAAAA,gBAAgB,EAAE,CATpB;AAUEC,oBAAAA,gBAAgB,EAAE,CAVpB;AAWEC,oBAAAA,IAAI,EAAE;AAXR,mBADQ,EAcR;AACEZ,oBAAAA,KAAK,EAAE,YADT;AAEElC,oBAAAA,IAAI,EAAED,YAAY,CAACC,IAAb,CAAkB4B,QAAlB,CAA2BmB,oBAFnC;AAGEX,oBAAAA,WAAW,EAAE9D,MAAM,CAAC0E,WAHtB;AAIEV,oBAAAA,oBAAoB,EAAEhE,MAAM,CAACiE,eAJ/B;AAKEC,oBAAAA,gBAAgB,EAAElE,MAAM,CAAC0E,WAL3B;AAMEP,oBAAAA,yBAAyB,EAAEnE,MAAM,CAAC0E,WANpC;AAOEN,oBAAAA,qBAAqB,EAAEpE,MAAM,CAACiE,eAPhC;AAQEI,oBAAAA,WAAW,EAAE,CARf;AASEC,oBAAAA,gBAAgB,EAAE,CATpB;AAUEC,oBAAAA,gBAAgB,EAAE,CAVpB;AAWEC,oBAAAA,IAAI,EAAE;AAXR,mBAdQ;AAFS,iBAAD,CAApB;AAgCD;AACF,aArEK,EAqEH5C,KArEG,CAqEGC,KAAK,IAAE;AACdC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,aAvEK,CAFwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAvBZ,uBAAuB;AAAA;AAAA;AAAA,KAA7B;;AA4EA,QAAM+B,gBAAgB,GAAG2B,GAAD,IAAO;AAC9B,QAAIC,KAAK,GAAC,CAAV;;AACC,QAAID,GAAG,KAAK,IAAZ,EAAkB;AAAE,aAAO,IAAP;AAAc,KAFL,CAEM;;;AACrC,QAAIA,GAAG,KAAK,CAAZ,EAAe;AAAE,aAAO,GAAP;AAAa,KAHC,CAGA;;;AAC/BC,IAAAA,KAAK,GAAI,CAACA,KAAD,IAAUA,KAAK,GAAG,CAAnB,GAAwB,CAAxB,GAA4BA,KAApC,CAJ+B,CAIY;;AAC3C,QAAIC,CAAC,GAAIF,GAAD,CAAMG,WAAN,CAAkB,CAAlB,EAAqBC,KAArB,CAA2B,GAA3B,CAAR;AAAA,QAAyC;AACrCC,IAAAA,CAAC,GAAGH,CAAC,CAACI,MAAF,KAAa,CAAb,GAAiB,CAAjB,GAAqBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASP,CAAC,CAAC,CAAD,CAAD,CAAKQ,KAAL,CAAW,CAAX,CAAT,EAAwB,EAAxB,IAA8B,CAAzC,CAD7B;AAAA,QAC0E;AACtEC,IAAAA,CAAC,GAAGN,CAAC,GAAG,CAAJ,GAAQL,GAAG,CAACY,OAAJ,CAAY,IAAIX,KAAhB,CAAR,GAAiC,CAACD,GAAG,GAAGO,IAAI,CAACM,GAAL,CAAS,EAAT,EAAaR,CAAC,GAAG,CAAjB,CAAP,EAA6BO,OAA7B,CAAqC,IAAIX,KAAzC,CAFzC;AAAA,QAE0F;AACtFa,IAAAA,CAAC,GAAGH,CAAC,GAAG,CAAJ,GAAQA,CAAR,GAAYJ,IAAI,CAACQ,GAAL,CAASJ,CAAT,CAHpB;AAAA,QAGiC;AAC7BK,IAAAA,CAAC,GAAGF,CAAC,GAAG,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,EAAe,GAAf,EAAoB,GAApB,EAAyBT,CAAzB,CAJZ,CAL+B,CASU;;AACzC,WAAOW,CAAP;AACC,GAXD,CAvH4B,CAmI5B;AAEA;;;AACA,QAAMC,2BAA2B,GAAGD,CAAD,IAAK;AACtCpF,IAAAA,qBAAqB,CAACoF,CAAC,CAACE,aAAF,CAAgBC,WAAjB,CAArB;AACArF,IAAAA,kBAAkB,CAACkF,CAAC,CAACI,MAAF,CAASC,KAAV,CAAlB;AACD,GAHD;;AAKA,sBACE,uDACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,eAEC;AAAK,IAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,KAAK,EAAC,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGG1F,kBAHH,CADF,eAME,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,MAAM,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAE,CAAnB;AAAsB,IAAA,KAAK,EAAE,CAA7B;AAAgC,IAAA,OAAO,EAAEqF,CAAC,IAAEC,2BAA2B,CAACD,CAAD,CAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGGzF,eAAe,CAAC+F,GAAhB,CAAoB,CAACC,IAAD,EAAMC,CAAN,kBACnB,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAEA,CAAnB;AAAsB,IAAA,KAAK,EAAED,IAAI,CAACE,aAAlC;AAAiD,IAAA,OAAO,EAAET,CAAC,IAAEC,2BAA2B,CAACD,CAAD,CAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8FO,IAAI,CAACG,IAAnG,CADD,CAHH,CANF,CADH,CAFD,eAkBC,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBD,CADH,CADD,eAuBE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,IAAV;AAAe,IAAA,EAAE,EAAC,IAAlB;AAAuB,IAAA,EAAE,EAAC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAvBF,eA4BE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,GAAV;AAAc,IAAA,GAAG,EAAC,IAAlB;AAAuB,IAAA,SAAS,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,GAAV;AAAc,IAAA,GAAG,EAAC,IAAlB;AAAuB,IAAA,SAAS,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAJF,eAOE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,GAAV;AAAc,IAAA,GAAG,EAAC,IAAlB;AAAuB,IAAA,SAAS,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CA5BF,eAuCE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,IAAV;AAAe,IAAA,EAAE,EAAC,GAAlB;AAAsB,IAAA,EAAE,EAAC,GAAzB;AAA6B,IAAA,SAAS,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADA,eAIE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,IAAV;AAAe,IAAA,EAAE,EAAC,GAAlB;AAAsB,IAAA,EAAE,EAAC,GAAzB;AAA6B,IAAA,SAAS,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,eAOE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,IAAV;AAAe,IAAA,EAAE,EAAC,GAAlB;AAAsB,IAAA,EAAE,EAAC,GAAzB;AAA6B,IAAA,SAAS,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAC,oBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,eAUE,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,IAAV;AAAe,IAAA,EAAE,EAAC,GAAlB;AAAsB,IAAA,EAAE,EAAC,GAAzB;AAA6B,IAAA,SAAS,EAAC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAVF,CAvCF,CADF;AAwDD,CAnMD;;AAqMA,eAAepG,eAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { \n  Row,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledButtonDropdown,\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\n\nimport {getStationsAPI,getDashboardDataAPI} from '../../../constants/defaultValues'\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport axios from 'axios';\nimport { ThemeColors } from '../../../helpers/ThemeColors';\nimport {ChargerDoughnut, setChargerChartData} from './operator/ChargerDoughnut';\nimport {ConnectorDoughnut,setConnectorChartData} from './operator/ConnectorDoughnut';\nimport {BatteryStatusChart,setBatteryChartData} from './operator/BatteryStatusChart';\nimport { IconCardsCarousel, setBatteriesCount, setChargerCount, setConnectorCount, setEVCount,setStationCount } from './manager/cardCarousel';\nimport {SwapChartCard,setSwapChartData,setshowSwapChart} from './manager/SwapChart';\nimport {EnergyChartCard,setEnergyChartData, setshowEnergyChart} from './manager/EnergyChart';\nimport {KPICards,setKPIChartData} from './manager/KPICards';\nimport { StationDoughnut,setStationChartData } from './manager/StationDoughnut';\nconst colors = ThemeColors();\n\nconst Admin_dashboard = () => {\n  //All station names\n  const [stationNameData,setStationNameData] = useState([]);\n  \n  //Swapping useStates\n  \n  const [swappingChartData,setSwappingChartData] = useState({}); //swapping chart data\n  const [swappingDropHeader,setSwappingDropHeader] = useState(\"All Stations\"); //swapping dropdown header\n  const [swappingStation,setSwappingStation] = useState('0'); //swapping chart dropdown\n  //Batteries useStates\n  \n  //Chargers useStates\n  const [chargerData,setChargerData] = useState({}); //charger card and chart data\n  \n  const [chargerStation,setChargerStation] = useState('0'); //chargers chart dropdown\n  //Slots useState\n  \n  const [slotStation,setSlotStation] = useState('0'); //slots chart dropdown\n\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n  },[])\n  useEffect(()=>{\n    GetDashboardDataAPICall();\n  },[swappingStation,chargerStation,slotStation])\n\n  //API call\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        //stationNamesData = responseData.data;\n        setStationNameData(responseData.data)\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const GetDashboardDataAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getDashboardDataAPI,\n    {\n     station_id:swappingStation\n    },\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n\n        setshowEnergyChart(true);\n        setshowSwapChart(true);\n        setStationCount(responseData.data.station.total);\n        setBatteriesCount(responseData.data.batteries.total)\n       \n        setChargerCount(responseData.data.chargers.total);\n       \n        setEVCount(responseData.data.ev.total);\n        setConnectorCount(responseData.data.slots.total);\n\n        setBatteryChartData(0,responseData.data.batteries.total,responseData.data.batteries.in_charging);\n        setBatteryChartData(1,responseData.data.batteries.total,responseData.data.batteries.charged);\n        setBatteryChartData(2,responseData.data.batteries.total,responseData.data.batteries.discharged);\n        setBatteryChartData(3,responseData.data.batteries.total,responseData.data.batteries.faulty);\n        setBatteryChartData(4,responseData.data.batteries.total,responseData.data.batteries.out);\n        \n        setChargerChartData(responseData.data.chargers.operational,responseData.data.chargers.faulty);\n        setConnectorChartData( responseData.data.slots.inuse,responseData.data.slots.available,responseData.data.slots.faulty);\n        setStationChartData(responseData.data.station.operational,responseData.data.station.faulty);\n        setChargerData(responseData.data.chargers);\n        setEnergyChartData(responseData);\n        setSwapChartData(responseData);\n       \n        setKPIChartData(0,abbreviateNumber(responseData.data.energy_sold.cumulative),abbreviateNumber(responseData.data.misc.unit_30)+\" in last 30 days\");\n        setKPIChartData(1,abbreviateNumber(responseData.data.energy_sold.avg_unit_per_ev_per_day),\"\");\n        setKPIChartData(2,responseData.data.swapping.daily,abbreviateNumber(responseData.data.misc.swap_30)+\" in last 30 days\");\n\n        setSwappingChartData({\n          labels: responseData.data.swapping.date,\n          datasets: [\n            {\n              label: 'Complete',\n              data: responseData.data.swapping.complete_swap_data,\n              borderColor: colors.themeColor1,\n              pointBackgroundColor: colors.foregroundColor,\n              pointBorderColor: colors.themeColor1,\n              pointHoverBackgroundColor: colors.themeColor1,\n              pointHoverBorderColor: colors.foregroundColor,\n              pointRadius: 6,\n              pointBorderWidth: 2,\n              pointHoverRadius: 8,\n              fill: false,\n            },\n            {\n              label: 'Incomplete',\n              data: responseData.data.swapping.incomplete_swap_data,\n              borderColor: colors.themeColor2,\n              pointBackgroundColor: colors.foregroundColor,\n              pointBorderColor: colors.themeColor2,\n              pointHoverBackgroundColor: colors.themeColor2,\n              pointHoverBorderColor: colors.foregroundColor,\n              pointRadius: 6,\n              pointBorderWidth: 2,\n              pointHoverRadius: 8,\n              fill: false,\n            },\n        ],\n        });\n               \n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const abbreviateNumber =(num)=>{\n   let fixed=0;\n    if (num === null) { return null; } // terminate early\n  if (num === 0) { return '0'; } // terminate early\n  fixed = (!fixed || fixed < 0) ? 0 : fixed; // number of decimal places to show\n  var b = (num).toPrecision(2).split(\"e\"), // get power\n      k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3), // floor at decimals, ceiling at trillions\n      c = k < 1 ? num.toFixed(0 + fixed) : (num / Math.pow(10, k * 3) ).toFixed(1 + fixed), // divide by power\n      d = c < 0 ? c : Math.abs(c), // enforce -0 is 0\n      e = d + ['', 'K', 'M', 'B', 'T'][k]; // append power\n  return e;\n  }\n  //dropdown handle methods\n \n  //swapping dropdown\n  const handleSwappingStationSelect =(e)=>{\n    setSwappingDropHeader(e.currentTarget.textContent);\n    setSwappingStation(e.target.value);\n  }\n \n  return (\n    <>\n     <Row>\n        <Colxx xxs=\"12\">\n         <span className=\"page_title\">Admin Dashboard</span>\n         <div className=\"btn-group float-right float-none-xs\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                caret\n                color='primary'>\n                {swappingDropHeader}\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem header>Stations</DropdownItem>\n                <DropdownItem key={0} value={0} onClick={e=>handleSwappingStationSelect(e)}>All Stations</DropdownItem>\n                {stationNameData.map((item,i) =>\n                  <DropdownItem key={i} value={item.hub_master_id} onClick={e=>handleSwappingStationSelect(e)}>{item.name}</DropdownItem>\n                )}\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n         <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>     \n      <Row>\n        <Colxx lg=\"12\" xl=\"12\" md=\"12\">\n          <IconCardsCarousel />         \n        </Colxx>       \n      </Row>\n      <Row>\n        <Colxx lg=\"5\" xxs=\"12\" className=\"mb-5\">\n          <SwapChartCard />\n        </Colxx>\n        <Colxx lg=\"2\" xxs=\"12\" className=\"mb-2\">\n         <KPICards />\n        </Colxx>\n        <Colxx lg=\"5\" xxs=\"12\" className=\"mb-5\">\n          <EnergyChartCard />\n        </Colxx>\n      </Row>\n      <Row className=\"mb-12\">\n      <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n          <StationDoughnut />\n        </Colxx>\n        <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n          <ChargerDoughnut />\n        </Colxx>\n        <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n          <BatteryStatusChart cardClass=\"dashboard-progress\"  />\n        </Colxx>    \n        <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n          <ConnectorDoughnut />\n        </Colxx>       \n    </Row>\n    </>\n  );\n};\n\nexport default Admin_dashboard;"]},"metadata":{},"sourceType":"module"}