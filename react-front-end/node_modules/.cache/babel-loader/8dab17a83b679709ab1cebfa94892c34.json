{"ast":null,"code":"var _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\src\\\\views\\\\app\\\\dashboard\\\\operator\\\\ChargerDoughnut.js\";\nimport React from 'react';\nimport { Card, CardBody, CardTitle, UncontrolledDropdown, DropdownItem, DropdownToggle, DropdownMenu, Spinner } from 'reactstrap';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { DoughnutChart } from '../../../../components/charts';\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\nconst colors = ThemeColors();\n\nconst ChargerDoughnut = ({\n  controls = false\n}) => {\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"dashboard-my-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"dashboard.charger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }), controls && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group float-right float-none-xs \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    caret: true,\n    color: \"primary\",\n    className: \"btn-xs\",\n    outline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"dashboard.all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(DropdownMenu, {\n    right: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"dashboard.operational\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"dashboard.faulty\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }\n  })))))), loading2 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-donut-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(DoughnutChart, {\n    data: doughnutChartData1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  })), \" \", !loading2 && !blankMsg && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-donut-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DoughnutChart, {\n    data: doughnutChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), blankMsg && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-donut-chart text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Data Not Found\")));\n};\n\nconst doughnutChartData1 = {\n  labels: ['Operational', 'Faulty'],\n  datasets: [{\n    label: '',\n    borderColor: [colors.themeColor2, colors.themeColor1],\n    backgroundColor: [colors.themeColor3_10, colors.themeColor2_10],\n    borderWidth: 2,\n    data: [1, 0]\n  }]\n};\nconst doughnutChartData = {\n  labels: ['Operational', 'Faulty'],\n  datasets: [{\n    label: '',\n    borderColor: [colors.themeColor2, colors.themeColor1],\n    backgroundColor: [colors.themeColor3_10, colors.themeColor2_10],\n    borderWidth: 2,\n    data: [1, 0]\n  }]\n};\nlet loading2 = true;\nlet blankMsg = false;\n\nconst setLoading2 = value => {\n  loading2 = value;\n};\n\nconst setBlankMsg = value => {\n  blankMsg = value;\n}; //const setChargerChartData = (index,value) => {doughnutChartData.datasets[0].data[index]=value;};\n\n\nconst setChargerChartData = (oprntl, flty) => {\n  doughnutChartData.datasets[0].data[0] = oprntl;\n  doughnutChartData.datasets[0].data[1] = flty;\n\n  if (oprntl == 0 && flty == 0) {\n    setBlankMsg(true);\n  } else {\n    setBlankMsg(false);\n  }\n\n  setLoading2(false);\n};\n\nexport { ChargerDoughnut, setLoading2, setChargerChartData };","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/dashboard/operator/ChargerDoughnut.js"],"names":["React","Card","CardBody","CardTitle","UncontrolledDropdown","DropdownItem","DropdownToggle","DropdownMenu","Spinner","IntlMessages","DoughnutChart","ThemeColors","colors","ChargerDoughnut","controls","loading2","doughnutChartData1","blankMsg","doughnutChartData","labels","datasets","label","borderColor","themeColor2","themeColor1","backgroundColor","themeColor3_10","themeColor2_10","borderWidth","data","setLoading2","value","setBlankMsg","setChargerChartData","oprntl","flty"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, CardBody, CardTitle, UncontrolledDropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu, Spinner} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { DoughnutChart } from '../../../../components/charts';\n\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\n\nconst colors = ThemeColors();\n\n\nconst ChargerDoughnut =  ({ controls = false })  => {\n  return (\n    <Card className=\"dashboard-my-card\">\n      <CardBody>\n         <CardTitle>\n          <IntlMessages id=\"dashboard.charger\" />\n          {controls && (\n          <div className=\"btn-group float-right float-none-xs \">\n            <UncontrolledDropdown>\n              <DropdownToggle caret color=\"primary\" className=\"btn-xs\" outline>\n                <IntlMessages id=\"dashboard.all\" />\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.operational\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.faulty\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        )}\n        </CardTitle>\n      {loading2 && (\n                  <div className=\"dashboard-donut-chart\">\n                  <DoughnutChart  data={doughnutChartData1} />\n                </div>\n              ) } { (!loading2 && !blankMsg) &&\n      <div className=\"dashboard-donut-chart\">\n        <DoughnutChart  data={doughnutChartData} />\n      </div>\n}\n{ blankMsg &&\n      <div className=\"dashboard-donut-chart text-center\">\n        Data Not Found\n      </div>\n}\n      </CardBody>\n    </Card>\n  );\n};\nconst doughnutChartData1 = {\n  labels: ['Operational', 'Faulty'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [ colors.themeColor2, colors.themeColor1],\n      backgroundColor: [\n        colors.themeColor3_10,\n        colors.themeColor2_10,\n      ],\n      borderWidth: 2,\n      data: [1, 0],\n    },\n  ],\n};\nconst doughnutChartData = {\n  labels: ['Operational', 'Faulty'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [ colors.themeColor2, colors.themeColor1],\n      backgroundColor: [\n        colors.themeColor3_10,\n        colors.themeColor2_10,\n      ],\n      borderWidth: 2,\n      data: [1, 0],\n    },\n  ],\n};\nlet loading2=true;\nlet blankMsg=false;\nconst  setLoading2 = (value) => {loading2=value};\nconst  setBlankMsg = (value) => {blankMsg=value};\n//const setChargerChartData = (index,value) => {doughnutChartData.datasets[0].data[index]=value;};\nconst setChargerChartData = (oprntl,flty) => {\n  doughnutChartData.datasets[0].data[0]=oprntl;\n  doughnutChartData.datasets[0].data[1]=flty;\n\n  if(oprntl==0 && flty==0)\n  {\n    setBlankMsg(true);\n    \n  }else\n  {\n   setBlankMsg(false);\n  }\n  setLoading2(false);\n  \n\n};\n\nexport  {ChargerDoughnut,setLoading2,setChargerChartData};\n"]},"metadata":{},"sourceType":"module"}