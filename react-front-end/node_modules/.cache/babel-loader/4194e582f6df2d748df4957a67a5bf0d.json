{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\src\\\\views\\\\app\\\\mapping\\\\Batterymapping.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Row, FormGroup, Label, Input, Card, CardBody, CardSubtitle, Modal, ModalHeader, ModalBody, ModalFooter, Table, Button, DropdownItem, DropdownMenu, DropdownToggle, Alert, UncontrolledDropdown, InputGroup } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport { getStationsAPI, getEvInventoryByStationAPI, getBatteryMappingAPI, mapBatteryAPI } from '../../../constants/defaultValues';\nimport axios from 'axios';\n\nconst Batterymapping = () => {\n  //states\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        batteryMappingList = _useState2[0],\n        setBatteryMappingList = _useState2[1];\n\n  const _useState3 = useState(\"All Battery\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        batteryType = _useState4[0],\n        setBatteryType = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        deleteBatteryId = _useState6[0],\n        setDeleteBatteryId = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        updateBatteryId = _useState8[0],\n        setUpdateBatteryId = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        isUpdate = _useState10[0],\n        setIsUpdate = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        remark = _useState12[0],\n        setRemark = _useState12[1]; //dropdown states\n\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        stationNameData = _useState14[0],\n        setStationNameData = _useState14[1];\n\n  const _useState15 = useState(\"\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        stationId = _useState16[0],\n        setStationId = _useState16[1]; //alert states\n\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        alertVisible = _useState18[0],\n        setAlertVisible = _useState18[1];\n\n  const _useState19 = useState(\"\"),\n        _useState20 = _slicedToArray(_useState19, 2),\n        alertMsg = _useState20[0],\n        setAlertMsg = _useState20[1];\n\n  const _useState21 = useState(\"\"),\n        _useState22 = _slicedToArray(_useState21, 2),\n        alertColor = _useState22[0],\n        setAlertColor = _useState22[1];\n\n  const _useState23 = useState(false),\n        _useState24 = _slicedToArray(_useState23, 2),\n        alertModalVisible = _useState24[0],\n        setAlertModalVisible = _useState24[1];\n\n  const _useState25 = useState(\"\"),\n        _useState26 = _slicedToArray(_useState25, 2),\n        alertModalMsg = _useState26[0],\n        setAlertModalMsg = _useState26[1];\n\n  const _useState27 = useState(\"\"),\n        _useState28 = _slicedToArray(_useState27, 2),\n        alertModalColor = _useState28[0],\n        setAlertModalColor = _useState28[1]; //search state\n\n\n  const _useState29 = useState(\"\"),\n        _useState30 = _slicedToArray(_useState29, 2),\n        searchBy = _useState30[0],\n        setSearchBy = _useState30[1]; //Pagination states\n\n\n  const _useState31 = useState(\"1\"),\n        _useState32 = _slicedToArray(_useState31, 2),\n        pageCount = _useState32[0],\n        setPageCount = _useState32[1];\n\n  const _useState33 = useState(\"1\"),\n        _useState34 = _slicedToArray(_useState33, 2),\n        lastPageCount = _useState34[0],\n        setLastPageCount = _useState34[1]; //Modal States\n\n\n  const _useState35 = useState(false),\n        _useState36 = _slicedToArray(_useState35, 2),\n        modalVisible = _useState36[0],\n        setModalVisible = _useState36[1];\n\n  const _useState37 = useState(false),\n        _useState38 = _slicedToArray(_useState37, 2),\n        modalUpdateVisible = _useState38[0],\n        setModalUpdateVisible = _useState38[1];\n\n  const _useState39 = useState(true),\n        _useState40 = _slicedToArray(_useState39, 2),\n        isLoading = _useState40[0],\n        setIsLoading = _useState40[1];\n\n  useEffect(() => {\n    getBatteryMappingAPICall();\n  }, [isUpdate, pageCount, batteryType]); //API CALLS\n\n  const GetStationNamesAPICall = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context.next = 3;\n            return axios.get(getStationsAPI, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setStationNameData(responseData.data);\n              } else {\n                console.log(responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function GetStationNamesAPICall() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const getBatteryMappingAPICall = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            setBatteryMappingList([]);\n            setIsLoading(true);\n            currentUser = getCurrentUser();\n            _context2.next = 5;\n            return axios.get(getBatteryMappingAPI + pageCount + \"&battery_type=\" + batteryType + \"&search_param=\" + searchBy, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setLastPageCount(responseData.data.last_page);\n                setBatteryMappingList(responseData.data.data);\n              } else {\n                setLastPageCount(pageCount);\n                setBatteryMappingList([]);\n              }\n\n              setIsLoading(false);\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function getBatteryMappingAPICall() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const mapBatteryAPICall = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(batteryId, hubId, remark) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            setModalVisible(false);\n            setModalUpdateVisible(false);\n            currentUser = getCurrentUser();\n            _context3.next = 5;\n            return axios.post(mapBatteryAPI, {\n              battery_inventory_id: batteryId,\n              ev_inventory_id: 0,\n              hub_id: hubId,\n              remark: remark\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setIsUpdate(!isUpdate);\n\n                if (hubId == 0) {\n                  batteryDeletedAlert(responseData.status, \"Battery Unmapped Successfully\");\n                } else {\n                  batteryDeletedAlert(responseData.status, responseData.msg);\n                }\n              } else {\n                batteryDeletedAlert(responseData.status, responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n\n    return function mapBatteryAPICall(_x, _x2, _x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); //helper methods\n  //pagination method\n\n\n  const renderPageList = () => {\n    const pageNumbers = [];\n\n    for (let i = 0; i < lastPageCount; i += 1) {\n      pageNumbers.push( /*#__PURE__*/React.createElement(DropdownItem, {\n        key: i,\n        onClick: () => {\n          setPageCount(i + 1);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }, i + 1));\n    }\n\n    return pageNumbers;\n  }; //Alert helper methods\n\n\n  const batteryDeletedAlert = (status, msg) => {\n    setAlertVisible(true);\n    setAlertMsg(msg);\n\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  };\n\n  const batteryModalAlert = (status, msg) => {\n    setAlertModalVisible(true);\n    setAlertModalMsg(msg);\n\n    if (status === 1) {\n      setAlertModalColor(\"success\");\n    } else {\n      setAlertModalColor(\"danger\");\n    }\n  };\n\n  const onDismissAlert = () => {\n    setAlertVisible(false);\n  }; //Modal helper methods\n\n\n  const toggleModal = item => {\n    setRemark(item.remark);\n    setDeleteBatteryId(item.battery_inventory_id);\n    setModalVisible(!modalVisible);\n  };\n\n  const toggleUpdateModal = item => {\n    GetStationNamesAPICall();\n    setStationId(item.hub_id);\n    setRemark(item.remark);\n    setUpdateBatteryId(item.battery_inventory_id);\n    setModalUpdateVisible(!modalUpdateVisible);\n  }; // value imput handle method\n  //station\n\n\n  const handleStationChange = e => {\n    setStationId(e.target.value);\n  };\n\n  const updateBatteryMappingDetails = () => {\n    if (stationId != 0) {\n      mapBatteryAPICall(updateBatteryId, stationId, remark);\n    } else {\n      batteryModalAlert(0, \"Station is required\");\n      return;\n    }\n  }; //handle search input\n\n\n  const handleSearch = () => {\n    setPageCount(1);\n    getBatteryMappingAPICall();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"page_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"Battery Mapping\"), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-2 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Search\",\n    value: searchBy,\n    onChange: e => setSearchBy(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"default search-icon\",\n    color: \"primary\",\n    outline: true,\n    onClick: () => handleSearch(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-magnifier\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 106\n    }\n  }))))), /*#__PURE__*/React.createElement(Colxx, {\n    md: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-right mr-5 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 15\n    }\n  }, \"Battery Type : \"), /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    className: \"d-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    caret: true,\n    color: \"outline-primary\",\n    size: \"xs\",\n    \"data-display\": \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, batteryType), /*#__PURE__*/React.createElement(DropdownMenu, {\n    className: \"dropdownMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    onClick: () => {\n      setBatteryType('All Battery');\n      setPageCount(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }\n  }, \"All\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    onClick: () => {\n      setBatteryType('Mapped Battery');\n      setPageCount(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 21\n    }\n  }, \"Mapped Battery\"), /*#__PURE__*/React.createElement(DropdownItem, {\n    onClick: () => {\n      setBatteryType('Unmapped Battery');\n      setPageCount(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 21\n    }\n  }, \"Unmapped Battery\"))), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, \"Page \"), /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    className: \"d-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    caret: true,\n    color: \"outline-primary\",\n    size: \"xs\",\n    \"data-display\": \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, pageCount), /*#__PURE__*/React.createElement(DropdownMenu, {\n    className: \"dropdownMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, renderPageList())), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, \" of \"), lastPageCount))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardSubtitle, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: alertColor,\n    isOpen: alertVisible,\n    toggle: onDismissAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, alertMsg)), /*#__PURE__*/React.createElement(Table, {\n    responsive: true,\n    bordered: true,\n    striped: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  }, \"Battery Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }, \"EV Id\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, \"Swapping Station\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }, \"Remark\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-center\",\n    colSpan: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-list-loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 63\n    }\n  }))) : batteryMappingList.length > 0 ? batteryMappingList.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item.battery_inventory_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 29\n    }\n  }, pageCount == 1 ? index + 1 : (pageCount - 1) * 10 + index + 1), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 53\n    }\n  }, \"QR Code: \"), item.b_qr_code), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 53\n    }\n  }, \"Serial No: \"), item.serial_number), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 53\n    }\n  }, \"BIN: \"), item.bin), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 53\n    }\n  }, \"SOC: \"), item.soc)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 29\n    }\n  }, item.ev_inventory_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 29\n    }\n  }, item.station_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 29\n    }\n  }, item.remark), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"info\",\n    className: \"default mr-1 btn-sm tbl_action_btn\",\n    onClick: () => toggleUpdateModal(item),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-pencil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 35\n    }\n  })), item.hub_id > 0 && /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    className: \"default btn-sm tbl_action_btn\",\n    onClick: () => {\n      toggleModal(item);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-trash\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 35\n    }\n  }))))) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-center text-danger\",\n    colSpan: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 29\n    }\n  }, \"Data  Not  Found\")))))))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalVisible,\n    toggle: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 13\n    }\n  }, \"Are you sure you would like to delete this?\"), /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    className: \"mt-4\",\n    onClick: () => mapBatteryAPICall(deleteBatteryId, 0, remark),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }, \"Unmap\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    className: \"mt-4 mr-2\",\n    onClick: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }\n  }, \"Cancel\"))))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalUpdateVisible,\n    toggle: toggleUpdateModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ModalHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: alertModalColor,\n    isOpen: alertModalVisible,\n    toggle: () => setAlertModalVisible(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 17\n    }\n  }, alertModalMsg)), /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 19\n    }\n  }, \"Swapping Station\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    placeholder: \"Select\",\n    name: \"hub_id\",\n    value: stationId,\n    onChange: e => handleStationChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 0,\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 21\n    }\n  }, \"Select Station\"), stationNameData.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    value: item.hub_master_id,\n    key: item.hub_master_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 23\n    }\n  }, item.name))))), /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 21\n    }\n  }, \"Remark\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Remark\",\n    name: \"remark\",\n    value: remark,\n    onChange: e => setRemark(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(ModalFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    className: \"mt-4\",\n    onClick: () => updateBatteryMappingDetails(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 11\n    }\n  }, \"Update\"), ' ', /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    className: \"mt-4 mr-2\",\n    onClick: toggleUpdateModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 13\n    }\n  }, \"Cancel\"))));\n};\n\nexport default Batterymapping;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/mapping/Batterymapping.js"],"names":["React","useEffect","useState","Row","FormGroup","Label","Input","Card","CardBody","CardSubtitle","Modal","ModalHeader","ModalBody","ModalFooter","Table","Button","DropdownItem","DropdownMenu","DropdownToggle","Alert","UncontrolledDropdown","InputGroup","Colxx","Separator","getCurrentUser","getStationsAPI","getEvInventoryByStationAPI","getBatteryMappingAPI","mapBatteryAPI","axios","Batterymapping","batteryMappingList","setBatteryMappingList","batteryType","setBatteryType","deleteBatteryId","setDeleteBatteryId","updateBatteryId","setUpdateBatteryId","isUpdate","setIsUpdate","remark","setRemark","stationNameData","setStationNameData","stationId","setStationId","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","alertModalVisible","setAlertModalVisible","alertModalMsg","setAlertModalMsg","alertModalColor","setAlertModalColor","searchBy","setSearchBy","pageCount","setPageCount","lastPageCount","setLastPageCount","modalVisible","setModalVisible","modalUpdateVisible","setModalUpdateVisible","isLoading","setIsLoading","getBatteryMappingAPICall","GetStationNamesAPICall","currentUser","get","headers","Authorization","token","then","response","responseData","data","status","console","log","msg","catch","error","last_page","mapBatteryAPICall","batteryId","hubId","post","battery_inventory_id","ev_inventory_id","hub_id","batteryDeletedAlert","renderPageList","pageNumbers","i","push","batteryModalAlert","onDismissAlert","toggleModal","item","toggleUpdateModal","handleStationChange","e","target","value","updateBatteryMappingDetails","handleSearch","length","map","index","b_qr_code","serial_number","bin","soc","station_name","hub_master_id","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Row, FormGroup,Label,Input,\n  Card, CardBody,CardSubtitle,\n  Modal, ModalHeader, ModalBody, ModalFooter, \n  Table, Button, DropdownItem,\n  DropdownMenu,\n  DropdownToggle,Alert,\n  UncontrolledDropdown,\n  InputGroup\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getStationsAPI,getEvInventoryByStationAPI,getBatteryMappingAPI,mapBatteryAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\n\nconst Batterymapping = () => {\n  //states\n  const [batteryMappingList,setBatteryMappingList] = useState([]);\n  const [batteryType,setBatteryType] = useState(\"All Battery\");\n  const [deleteBatteryId,setDeleteBatteryId] = useState(\"\");\n  const [updateBatteryId,setUpdateBatteryId] = useState(\"\");\n  const [isUpdate,setIsUpdate] = useState(false);\n  const [remark,setRemark] = useState(\"\");\n  //dropdown states\n  const [stationNameData,setStationNameData] = useState([]);\n  const [stationId,setStationId] = useState(\"\");\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  const [alertModalVisible,setAlertModalVisible] = useState(false);\n  const [alertModalMsg,setAlertModalMsg] = useState(\"\");\n  const [alertModalColor,setAlertModalColor] = useState(\"\");\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [modalUpdateVisible,setModalUpdateVisible] = useState(false);\n  const [isLoading,setIsLoading] = useState(true);\n\n  useEffect(()=>{\n    getBatteryMappingAPICall();\n  },[isUpdate,pageCount,batteryType]);\n\n  //API CALLS\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getBatteryMappingAPICall = async() => {\n    setBatteryMappingList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getBatteryMappingAPI+pageCount+\"&battery_type=\"+batteryType+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setBatteryMappingList(responseData.data.data);\n        }else{\n          setLastPageCount(pageCount);\n          setBatteryMappingList([]);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const mapBatteryAPICall = async(batteryId,hubId,remark) =>{\n    setModalVisible(false);\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(mapBatteryAPI,\n      {battery_inventory_id:batteryId,ev_inventory_id:0,hub_id:hubId,remark:remark},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n          const responseData = response.data;\n          if (responseData.status === 1) {\n            setIsUpdate(!isUpdate);\n            if (hubId==0) {\n              batteryDeletedAlert(responseData.status,\"Battery Unmapped Successfully\") \n            } else {\n              batteryDeletedAlert(responseData.status,responseData.msg) \n            }\n          }else{\n            batteryDeletedAlert(responseData.status,responseData.msg)\n          }\n          \n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  //helper methods\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const batteryDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }              \n  }\n  const batteryModalAlert = (status,msg)=>{\n    setAlertModalVisible(true);\n    setAlertModalMsg(msg);\n    if (status === 1) {\n      setAlertModalColor(\"success\");\n    } else {\n      setAlertModalColor(\"danger\");\n    }              \n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Modal helper methods\n  const toggleModal = (item) => {\n    setRemark(item.remark)\n    setDeleteBatteryId(item.battery_inventory_id);\n    setModalVisible(!modalVisible);\n  }\n  const toggleUpdateModal = (item) => {\n    GetStationNamesAPICall();\n    setStationId(item.hub_id);\n    setRemark(item.remark); \n    setUpdateBatteryId(item.battery_inventory_id);\n    setModalUpdateVisible(!modalUpdateVisible);\n  }\n  // value imput handle method\n  //station\n  const handleStationChange = (e) => {\n      setStationId(e.target.value);\n  }\n  const updateBatteryMappingDetails = () =>{\n    if (stationId !=0) {\n      mapBatteryAPICall(updateBatteryId,stationId,remark)\n    } else {\n      batteryModalAlert(0,\"Station is required\");\n      return;  \n    } \n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getBatteryMappingAPICall();\n  }\n  \n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Battery Mapping</span>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n          <div className=\"text-right mr-5 mb-2\">\n              <span>Battery Type : </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {batteryType}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                    <DropdownItem onClick={() => {setBatteryType('All Battery');setPageCount(1)}}>All</DropdownItem>\n                    <DropdownItem onClick={() => {setBatteryType('Mapped Battery');setPageCount(1)}}>Mapped Battery</DropdownItem>\n                    <DropdownItem onClick={() => {setBatteryType('Unmapped Battery');setPageCount(1)}}>Unmapped Battery</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span className=\"ml-5\">Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}              \n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Battery Name</th>\n                    <th>EV Id</th>\n                    <th>Swapping Station</th>\n                    <th>Remark</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"6\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    (batteryMappingList.length > 0)?\n                        batteryMappingList.map((item,index)=>\n                          <tr key={item.battery_inventory_id}>\n                            <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                            <td>\n                                <p className=\"mb-0\"><b>QR Code: </b>{item.b_qr_code}</p>\n                                <p className=\"mb-0\"><b>Serial No: </b>{item.serial_number}</p>\n                                <p className=\"mb-0\"><b>BIN: </b>{item.bin}</p>\n                                <p className=\"mb-0\"><b>SOC: </b>{item.soc}</p> \n                            </td>\n                            <td>{item.ev_inventory_id}</td>\n                            <td>{item.station_name}</td>\n                            <td>{item.remark}</td>\n                            <td>\n                              <Button color=\"info\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>toggleUpdateModal(item)}>\n                                  <i className=\"glyph-icon simple-icon-pencil\"></i>\n                              </Button>\n                              {(item.hub_id > 0) && \n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>}\n                              \n                            </td>\n                          </tr>\n                        ):<tr>\n                            <td className=\"text-center text-danger\" colSpan=\"6\">Data  Not  Found</td>\n                        </tr>\n                      }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Modal\n        isOpen={modalVisible}\n        toggle={toggleModal} >\n        <ModalHeader className=\"text-center\">\n          <Row>\n            <Colxx md=\"12\">\n              Are you sure you would like to delete this?\n            </Colxx>\n            <Colxx md=\"12\">\n              <Button color=\"success\" className=\"mt-4\" onClick={()=>mapBatteryAPICall(deleteBatteryId,0,remark)}>\n                Unmap \n              </Button>{' '}\n              <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                Cancel\n              </Button>\n            </Colxx>\n          </Row>\n        </ModalHeader>\n      </Modal>\n      <Modal\n        isOpen={modalUpdateVisible}\n        toggle={toggleUpdateModal} >\n          <ModalHeader>\n            Update\n          </ModalHeader>  \n          <ModalBody>\n            <Row>\n              <Colxx md=\"12\">\n                <Alert color={alertModalColor} isOpen={alertModalVisible} toggle={()=>setAlertModalVisible(false)}>\n                  {alertModalMsg}\n                </Alert>\n              </Colxx>\n              <Colxx md=\"12\">\n                <FormGroup>\n                  <Label>\n                    Swapping Station\n                  </Label>\n                  <Input\n                  type=\"select\"\n                  placeholder=\"Select\"\n                  name=\"hub_id\"\n                  value={stationId}\n                  onChange={e=>handleStationChange(e)}\n                  >\n                    <option value={0} key={0}>Select Station</option>\n                    {stationNameData.map((item)=>\n                      <option value={item.hub_master_id} key={item.hub_master_id}>{item.name}</option>\n                    )}\n                  </Input>\n                </FormGroup>\n              </Colxx>\n              <Colxx md=\"12\">\n                  <FormGroup>\n                    <Label>\n                      Remark\n                    </Label>\n                    <Input\n                    type=\"text\"\n                    placeholder=\"Remark\"\n                    name=\"remark\"\n                    value={remark}\n                    onChange={e=>setRemark(e.target.value)}\n                    />\n                  </FormGroup>\n                </Colxx>\n            </Row>\n          </ModalBody>\n          <ModalFooter>\n          <Button color=\"success\" className=\"mt-4\" onClick={()=>updateBatteryMappingDetails()}>\n              Update\n            </Button>{' '}\n            <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleUpdateModal}>\n              Cancel\n            </Button>\n          </ModalFooter>\n      </Modal>\n    </>\n  );\n};\nexport default Batterymapping;\n"]},"metadata":{},"sourceType":"module"}