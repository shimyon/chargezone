{"ast":null,"code":"var _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\src\\\\views\\\\app\\\\dashboard\\\\manager\\\\SwapChart.js\";\nimport React from 'react';\nimport { Card, CardBody, CardTitle } from 'reactstrap';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { LineChart } from '../../../../components/charts';\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\n\nconst moment = require('moment');\n\nconst colors = ThemeColors();\nconst today = moment();\ntoday.add(1, 'd').format('DD-MMM');\nconst dateLabel = Array(7).fill().map(() => today.subtract(1, 'd').format('DD-MMM'));\nlet total_last_7 = 0;\n\nconst SwapChartCard = () => {\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"dashboard-my-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"dashboard.swaps\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), \"(\", total_last_7, \")\"), showSwapChart && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-line-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    data: SwapChartData1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  })), !showSwapChart && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-line-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    data: SwapChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst SwapChartData1 = {\n  labels: dateLabel,\n  datasets: [{\n    label: 'Complete',\n    data: [0, 0, 0, 0, 0, 0, 0],\n    borderColor: colors.themeColor1,\n    pointBackgroundColor: colors.foregroundColor,\n    pointBorderColor: colors.themeColor1,\n    pointHoverBackgroundColor: colors.themeColor1,\n    pointHoverBorderColor: colors.foregroundColor,\n    pointRadius: 6,\n    pointBorderWidth: 2,\n    pointHoverRadius: 8,\n    fill: false\n  }]\n};\nconst SwapChartData = {\n  labels: dateLabel,\n  datasets: [{\n    label: 'Complete',\n    data: [0, 0, 0, 0, 0, 0, 0],\n    borderColor: colors.themeColor1,\n    pointBackgroundColor: colors.foregroundColor,\n    pointBorderColor: colors.themeColor1,\n    pointHoverBackgroundColor: colors.themeColor1,\n    pointHoverBorderColor: colors.foregroundColor,\n    pointRadius: 6,\n    pointBorderWidth: 2,\n    pointHoverRadius: 8,\n    fill: false\n  }]\n};\nlet showSwapChart = true;\n\nconst setshowSwapChart = value => {\n  showSwapChart = value;\n};\n\nconst setSwapChartData = responseData => {\n  setshowSwapChart(true); //lineChartOptions.scales.yAxes[0].ticks.max=500;\n  // lineChartOptions.scales.yAxes[0].ticks.min=1000;\n  //lineChartOptions.scales.yAxes[0].ticks.stepSize=100;\n\n  total_last_7 = responseData.data.swapping.total_last_7;\n  SwapChartData.labels = responseData.data.swapping.date;\n  SwapChartData.datasets[0].data = responseData.data.swapping.complete_swap_data; //SwapChartData.datasets[1].data=responseData.data.swapping.incomplete_swap_data;\n\n  setshowSwapChart(false);\n};\n\nexport { SwapChartCard, setSwapChartData, setshowSwapChart };","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/dashboard/manager/SwapChart.js"],"names":["React","Card","CardBody","CardTitle","IntlMessages","LineChart","ThemeColors","moment","require","colors","today","add","format","dateLabel","Array","fill","map","subtract","total_last_7","SwapChartCard","showSwapChart","SwapChartData1","SwapChartData","labels","datasets","label","data","borderColor","themeColor1","pointBackgroundColor","foregroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointBorderWidth","pointHoverRadius","setshowSwapChart","value","setSwapChartData","responseData","swapping","date","complete_swap_data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  \n} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { LineChart } from '../../../../components/charts';\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\nconst moment = require('moment');\n\nconst colors = ThemeColors();\n\nconst today = moment();\ntoday.add(1, 'd').format('DD-MMM')\nconst dateLabel = Array(7).fill().map(\n() => today.subtract(1, 'd').format('DD-MMM')\n);\nlet total_last_7=0;\nconst SwapChartCard = () => {\n  return (\n    <Card className=\"dashboard-my-card\">\n     \n      <CardBody>\n        <CardTitle>\n          <IntlMessages id=\"dashboard.swaps\" />({total_last_7})\n        </CardTitle>\n        {showSwapChart && (\n        <div className=\"dashboard-line-chart\">\n          <LineChart  data={SwapChartData1} />\n        </div>)}\n        {!showSwapChart && (\n        <div className=\"dashboard-line-chart\">\n          <LineChart  data={SwapChartData} />\n        </div>)}\n        \n      </CardBody>\n    </Card>\n  );\n};\nconst SwapChartData1 = {\n  labels:dateLabel,\n  datasets: [\n    {\n      label: 'Complete',\n      data: [0,0,0,0,0,0,0],\n      borderColor: colors.themeColor1,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 6,\n      pointBorderWidth: 2,\n      pointHoverRadius: 8,\n      fill: false,\n    },\n   \n  ]\n};\n\nconst SwapChartData = {\n    labels:dateLabel,\n    datasets: [\n      {\n        label: 'Complete',\n        data: [0,0,0,0,0,0,0],\n        borderColor: colors.themeColor1,\n        pointBackgroundColor: colors.foregroundColor,\n        pointBorderColor: colors.themeColor1,\n        pointHoverBackgroundColor: colors.themeColor1,\n        pointHoverBorderColor: colors.foregroundColor,\n        pointRadius: 6,\n        pointBorderWidth: 2,\n        pointHoverRadius: 8,\n        fill: false,\n      },\n      \n    ]\n  };\n  let showSwapChart=true;\n  const  setshowSwapChart = (value) => {showSwapChart=value};\n  const setSwapChartData = (responseData) => {\n\n    setshowSwapChart(true);\n     //lineChartOptions.scales.yAxes[0].ticks.max=500;\n    // lineChartOptions.scales.yAxes[0].ticks.min=1000;\n     //lineChartOptions.scales.yAxes[0].ticks.stepSize=100;\n    total_last_7=responseData.data.swapping.total_last_7;\n    SwapChartData.labels= responseData.data.swapping.date;\n    SwapChartData.datasets[0].data=responseData.data.swapping.complete_swap_data;\n    //SwapChartData.datasets[1].data=responseData.data.swapping.incomplete_swap_data;\n    setshowSwapChart(false);\n    \n\n  };\n\n\nexport  {SwapChartCard,setSwapChartData,setshowSwapChart};\n"]},"metadata":{},"sourceType":"module"}