{"ast":null,"code":"import _slicedToArray from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";/* eslint-disable prefer-rest-params */import React,{useEffect,useRef,useState}from'react';import{Chart}from'chart.js';import{polarAreaChartOptions}from'./config';const PolarArea=({data,shadow=false})=>{const chartContainer=useRef(null);const _useState=useState(null),_useState2=_slicedToArray(_useState,2),setChartInstance=_useState2[1];useEffect(()=>{if(chartContainer&&chartContainer.current){if(shadow){Chart.defaults.polarWithShadow=Chart.defaults.polarArea;Chart.controllers.polarWithShadow=Chart.controllers.polarArea.extend({draw(ease){Chart.controllers.radar.prototype.draw.call(this,ease);const ctx=this.chart.ctx;ctx.save();ctx.shadowColor='rgba(0,0,0,0.2)';ctx.shadowBlur=7;ctx.shadowOffsetX=0;ctx.shadowOffsetY=7;ctx.responsive=true;Chart.controllers.radar.prototype.draw.apply(this,arguments);ctx.restore();}});}const context=chartContainer.current.getContext('2d');const newChartInstance=new Chart(context,{type:shadow?'polarWithShadow':'polarArea',options:polarAreaChartOptions,data});setChartInstance(newChartInstance);}},[chartContainer,data,shadow]);return/*#__PURE__*/React.createElement(\"canvas\",{ref:chartContainer});};export default PolarArea;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/components/charts/PolarArea.js"],"names":["React","useEffect","useRef","useState","Chart","polarAreaChartOptions","PolarArea","data","shadow","chartContainer","setChartInstance","current","defaults","polarWithShadow","polarArea","controllers","extend","draw","ease","radar","prototype","call","ctx","chart","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","responsive","apply","arguments","restore","context","getContext","newChartInstance","type","options"],"mappings":"8LAAA,uCACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,QAAnC,KAAmD,OAAnD,CACA,OAASC,KAAT,KAAsB,UAAtB,CAEA,OAASC,qBAAT,KAAsC,UAAtC,CAEA,KAAMC,CAAAA,SAAS,CAAG,CAAC,CAAEC,IAAF,CAAQC,MAAM,CAAG,KAAjB,CAAD,GAA8B,CAC9C,KAAMC,CAAAA,cAAc,CAAGP,MAAM,CAAC,IAAD,CAA7B,CAD8C,gBAEjBC,QAAQ,CAAC,IAAD,CAFS,wCAErCO,gBAFqC,eAI9CT,SAAS,CAAC,IAAM,CACd,GAAIQ,cAAc,EAAIA,cAAc,CAACE,OAArC,CAA8C,CAC5C,GAAIH,MAAJ,CAAY,CACVJ,KAAK,CAACQ,QAAN,CAAeC,eAAf,CAAiCT,KAAK,CAACQ,QAAN,CAAeE,SAAhD,CACAV,KAAK,CAACW,WAAN,CAAkBF,eAAlB,CAAoCT,KAAK,CAACW,WAAN,CAAkBD,SAAlB,CAA4BE,MAA5B,CAAmC,CACrEC,IAAI,CAACC,IAAD,CAAO,CACTd,KAAK,CAACW,WAAN,CAAkBI,KAAlB,CAAwBC,SAAxB,CAAkCH,IAAlC,CAAuCI,IAAvC,CAA4C,IAA5C,CAAkDH,IAAlD,EADS,KAGEI,CAAAA,GAHF,CAIL,IAJK,CAGPC,KAHO,CAGED,GAHF,CAKTA,GAAG,CAACE,IAAJ,GACAF,GAAG,CAACG,WAAJ,CAAkB,iBAAlB,CACAH,GAAG,CAACI,UAAJ,CAAiB,CAAjB,CACAJ,GAAG,CAACK,aAAJ,CAAoB,CAApB,CACAL,GAAG,CAACM,aAAJ,CAAoB,CAApB,CACAN,GAAG,CAACO,UAAJ,CAAiB,IAAjB,CACAzB,KAAK,CAACW,WAAN,CAAkBI,KAAlB,CAAwBC,SAAxB,CAAkCH,IAAlC,CAAuCa,KAAvC,CAA6C,IAA7C,CAAmDC,SAAnD,EACAT,GAAG,CAACU,OAAJ,GACD,CAdoE,CAAnC,CAApC,CAgBD,CACD,KAAMC,CAAAA,OAAO,CAAGxB,cAAc,CAACE,OAAf,CAAuBuB,UAAvB,CAAkC,IAAlC,CAAhB,CACA,KAAMC,CAAAA,gBAAgB,CAAG,GAAI/B,CAAAA,KAAJ,CAAU6B,OAAV,CAAmB,CAC1CG,IAAI,CAAE5B,MAAM,CAAG,iBAAH,CAAuB,WADO,CAE1C6B,OAAO,CAAEhC,qBAFiC,CAG1CE,IAH0C,CAAnB,CAAzB,CAKAG,gBAAgB,CAACyB,gBAAD,CAAhB,CACD,CACF,CA7BQ,CA6BN,CAAC1B,cAAD,CAAiBF,IAAjB,CAAuBC,MAAvB,CA7BM,CAAT,CA+BA,mBAAO,8BAAQ,GAAG,CAAEC,cAAb,EAAP,CACD,CApCD,CAsCA,cAAeH,CAAAA,SAAf","sourcesContent":["/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { polarAreaChartOptions } from './config';\n\nconst PolarArea = ({ data, shadow = false }) => {\n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      if (shadow) {\n        Chart.defaults.polarWithShadow = Chart.defaults.polarArea;\n        Chart.controllers.polarWithShadow = Chart.controllers.polarArea.extend({\n          draw(ease) {\n            Chart.controllers.radar.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.2)';\n            ctx.shadowBlur = 7;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 7;\n            ctx.responsive = true;\n            Chart.controllers.radar.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        });\n      }\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: shadow ? 'polarWithShadow' : 'polarArea',\n        options: polarAreaChartOptions,\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data, shadow]);\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default PolarArea;\n"]},"metadata":{},"sourceType":"module"}