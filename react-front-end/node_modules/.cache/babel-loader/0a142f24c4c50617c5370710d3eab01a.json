{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\src\\\\views\\\\app\\\\dashboard\\\\Operator_dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getDashboardDataAPI } from '../../../constants/defaultValues';\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport axios from 'axios';\nimport { ThemeColors } from '../../../helpers/ThemeColors';\nimport { IconCardsCarousel, setChargerCount, setConnectorCount, setBatteriesCount, setEVCount } from './operator/cardCarousel';\nimport { ChargerDoughnut, setChargerChartData } from './operator/ChargerDoughnut';\nimport { ConnectorDoughnut, setConnectorChartData } from './operator/ConnectorDoughnut';\nimport { BatteryStatusChart, setBatteryChartData } from './operator/BatteryStatusChart';\nconst colors = ThemeColors();\n\nconst Operator_dashboard = ({\n  match\n}) => {\n  const _useState = useState('0'),\n        _useState2 = _slicedToArray(_useState, 2),\n        batteryStatus = _useState2[0],\n        setBatteryStatus = _useState2[1]; //batteries chart dropdown\n  //Slots useState\n\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        refresh = _useState4[0],\n        setRefresh = _useState4[1];\n\n  useEffect(() => {\n    GetDashboardDataAPICall();\n  }, [batteryStatus]); //API call\n\n  const GetDashboardDataAPICall = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context.next = 3;\n            return axios.post(getDashboardDataAPI, {\n              battery_satus_id: batteryStatus\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setBatteriesCount(responseData.data.batteries.total);\n                setChargerCount(responseData.data.chargers.total);\n                setEVCount(responseData.data.ev.total);\n                setConnectorCount(responseData.data.slots.total);\n                setBatteryChartData(0, responseData.data.batteries.total, responseData.data.batteries.in_charging);\n                setBatteryChartData(1, responseData.data.batteries.total, responseData.data.batteries.charged);\n                setBatteryChartData(2, responseData.data.batteries.total, responseData.data.batteries.discharged);\n                setBatteryChartData(3, responseData.data.batteries.total, responseData.data.batteries.faulty);\n                setBatteryChartData(4, responseData.data.batteries.total, responseData.data.batteries.faulty);\n                setChargerChartData(responseData.data.chargers.operational, responseData.data.chargers.faulty);\n                setConnectorChartData(responseData.data.slots.inuse, responseData.data.slots.available, responseData.data.slots.faulty);\n                setRefresh(responseData);\n              } else {\n                console.log(responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function GetDashboardDataAPICall() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"page_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 10\n    }\n  }, \"Operator Dashboard\"), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    lg: \"12\",\n    xl: \"12\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconCardsCarousel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    sm: \"12\",\n    md: \"4\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ChargerDoughnut, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Colxx, {\n    sm: \"12\",\n    md: \"4\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BatteryStatusChart, {\n    cardClass: \"dashboard-progress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Colxx, {\n    sm: \"12\",\n    md: \"4\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ConnectorDoughnut, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default Operator_dashboard;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/dashboard/Operator_dashboard.js"],"names":["React","useState","useEffect","Row","Colxx","Separator","getDashboardDataAPI","getCurrentUser","axios","ThemeColors","IconCardsCarousel","setChargerCount","setConnectorCount","setBatteriesCount","setEVCount","ChargerDoughnut","setChargerChartData","ConnectorDoughnut","setConnectorChartData","BatteryStatusChart","setBatteryChartData","colors","Operator_dashboard","match","batteryStatus","setBatteryStatus","refresh","setRefresh","GetDashboardDataAPICall","currentUser","post","battery_satus_id","headers","Authorization","token","then","response","responseData","data","status","batteries","total","chargers","ev","slots","in_charging","charged","discharged","faulty","operational","inuse","available","console","log","msg","catch","error"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { \n  Row,\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport {getDashboardDataAPI} from '../../../constants/defaultValues'\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport axios from 'axios';\nimport { ThemeColors } from '../../../helpers/ThemeColors';\nimport {IconCardsCarousel,setChargerCount,setConnectorCount,setBatteriesCount,setEVCount} from './operator/cardCarousel';\nimport {ChargerDoughnut, setChargerChartData} from './operator/ChargerDoughnut';\nimport {ConnectorDoughnut,setConnectorChartData} from './operator/ConnectorDoughnut';\nimport {BatteryStatusChart,setBatteryChartData} from './operator/BatteryStatusChart';\n\n\nconst colors = ThemeColors();\n\nconst Operator_dashboard = ({ match }) => {\n \n  const [batteryStatus,setBatteryStatus] = useState('0'); //batteries chart dropdown\n   //Slots useState\n  const [refresh,setRefresh]= useState({});\n  useEffect(()=>{\n  \n    GetDashboardDataAPICall();\n  },[batteryStatus])\n\n  //API call\n  const GetDashboardDataAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getDashboardDataAPI,\n    {battery_satus_id:batteryStatus},\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n     setBatteriesCount(responseData.data.batteries.total)\n       \n       setChargerCount(responseData.data.chargers.total);\n      \n        setEVCount(responseData.data.ev.total);\n        setConnectorCount(responseData.data.slots.total);\n\n       setBatteryChartData(0,responseData.data.batteries.total,responseData.data.batteries.in_charging);\n       setBatteryChartData(1,responseData.data.batteries.total,responseData.data.batteries.charged);\n       setBatteryChartData(2,responseData.data.batteries.total,responseData.data.batteries.discharged);\n       setBatteryChartData(3,responseData.data.batteries.total,responseData.data.batteries.faulty);\n       setBatteryChartData(4,responseData.data.batteries.total,responseData.data.batteries.faulty);\n       \n       setChargerChartData(responseData.data.chargers.operational,responseData.data.chargers.faulty);\n       setConnectorChartData( responseData.data.slots.inuse,responseData.data.slots.available,responseData.data.slots.faulty);\n       setRefresh(responseData);\n          \n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n \n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n         <span className=\"page_title\">Operator Dashboard</span>\n         <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx lg=\"12\" xl=\"12\" md=\"12\">\n          <IconCardsCarousel />         \n        </Colxx>       \n      </Row>\n      <Row className=\"mb-12\">\n        <Colxx sm=\"12\" md=\"4\" className=\"mb-4\">\n          <ChargerDoughnut />\n        </Colxx>\n        <Colxx sm=\"12\" md=\"4\" className=\"mb-4\">\n          <BatteryStatusChart cardClass=\"dashboard-progress\"  />\n        </Colxx>\n    \n        <Colxx sm=\"12\" md=\"4\" className=\"mb-4\">\n          <ConnectorDoughnut />\n        </Colxx>       \n    </Row>\n    </>\n  );\n};\n\nexport default Operator_dashboard;"]},"metadata":{},"sourceType":"module"}