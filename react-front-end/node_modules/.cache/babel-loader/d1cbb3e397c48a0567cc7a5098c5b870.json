{"ast":null,"code":"import _slicedToArray from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Row,Card,CardTitle,Label,FormGroup,Button}from'reactstrap';import{NavLink}from'react-router-dom';import{Formik,Form,Field}from'formik';import{connect}from'react-redux';import{Colxx}from'../../components/common/CustomBootstrap';import IntlMessages from'../../helpers/IntlMessages';import{resetPassword}from'../../redux/actions';import{NotificationManager}from'../../components/common/react-notifications';const validateNewPassword=values=>{const newPassword=values.newPassword,newPasswordAgain=values.newPasswordAgain;const errors={};if(newPasswordAgain&&newPassword!==newPasswordAgain){errors.newPasswordAgain='Please check your new password';}return errors;};const ResetPassword=({location,history,loading,error,resetPasswordAction})=>{const _useState=useState(''),_useState2=_slicedToArray(_useState,1),newPassword=_useState2[0];const _useState3=useState(''),_useState4=_slicedToArray(_useState3,1),newPasswordAgain=_useState4[0];useEffect(()=>{if(error){NotificationManager.warning(error,'Forgot Password Error',3000,null,null,'');}else if(!loading&&newPassword==='success')NotificationManager.success('Please login with your new password.','Reset Password Success',3000,null,null,'');},[error,loading,newPassword]);const onResetPassword=values=>{if(!loading){const params=new URLSearchParams(location.search);const oobCode=params.get('oobCode');if(oobCode){if(values.newPassword!==''){resetPasswordAction({newPassword:values.newPassword,resetPasswordCode:oobCode,history});}}else{NotificationManager.warning('Please check your email url.','Reset Password Error',3000,null,null,'');}}};const initialValues={newPassword,newPasswordAgain};return/*#__PURE__*/React.createElement(Row,{className:\"h-100\"},/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",md:\"10\",className:\"mx-auto my-auto\"},/*#__PURE__*/React.createElement(Card,{className:\"auth-card\"},/*#__PURE__*/React.createElement(\"div\",{className:\"position-relative image-side \"},/*#__PURE__*/React.createElement(\"p\",{className:\"text-white h2\"},\"MAGIC IS IN THE DETAILS\"),/*#__PURE__*/React.createElement(\"p\",{className:\"white mb-0\"},\"Please use your e-mail to reset your password. \",/*#__PURE__*/React.createElement(\"br\",null),\"If you are not a member, please\",' ',/*#__PURE__*/React.createElement(NavLink,{to:\"/register\",className:\"white\"},\"register\"),\".\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-side\"},/*#__PURE__*/React.createElement(NavLink,{to:\"/\",className:\"white\"},/*#__PURE__*/React.createElement(\"span\",{className:\"logo-single\"})),/*#__PURE__*/React.createElement(CardTitle,{className:\"mb-4\"},/*#__PURE__*/React.createElement(IntlMessages,{id:\"user.reset-password\"})),/*#__PURE__*/React.createElement(Formik,{validate:validateNewPassword,initialValues:initialValues,onSubmit:onResetPassword},({errors,touched})=>/*#__PURE__*/React.createElement(Form,{className:\"av-tooltip tooltip-label-bottom\"},/*#__PURE__*/React.createElement(FormGroup,{className:\"form-group has-float-label\"},/*#__PURE__*/React.createElement(Label,null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"user.new-password\"})),/*#__PURE__*/React.createElement(Field,{className:\"form-control\",name:\"newPassword\",type:\"password\"})),/*#__PURE__*/React.createElement(FormGroup,{className:\"form-group has-float-label\"},/*#__PURE__*/React.createElement(Label,null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"user.new-password-again\"})),/*#__PURE__*/React.createElement(Field,{className:\"form-control\",name:\"newPasswordAgain\",type:\"password\"}),errors.newPasswordAgain&&touched.newPasswordAgain&&/*#__PURE__*/React.createElement(\"div\",{className:\"invalid-feedback d-block\"},errors.newPasswordAgain)),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-between align-items-center\"},/*#__PURE__*/React.createElement(NavLink,{to:\"/user/login\"},/*#__PURE__*/React.createElement(IntlMessages,{id:\"user.login-title\"})),/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"btn-shadow btn-multiple-state \".concat(loading?'show-spinner':''),size:\"lg\"},/*#__PURE__*/React.createElement(\"span\",{className:\"spinner d-inline-block\"},/*#__PURE__*/React.createElement(\"span\",{className:\"bounce1\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"bounce2\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"bounce3\"})),/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},/*#__PURE__*/React.createElement(IntlMessages,{id:\"user.reset-password-button\"}))))))))));};const mapStateToProps=({authUser})=>{const newPassword=authUser.newPassword,resetPasswordCode=authUser.resetPasswordCode,loading=authUser.loading,error=authUser.error;return{newPassword,resetPasswordCode,loading,error};};export default connect(mapStateToProps,{resetPasswordAction:resetPassword})(ResetPassword);","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/user/reset-password.js"],"names":["React","useState","useEffect","Row","Card","CardTitle","Label","FormGroup","Button","NavLink","Formik","Form","Field","connect","Colxx","IntlMessages","resetPassword","NotificationManager","validateNewPassword","values","newPassword","newPasswordAgain","errors","ResetPassword","location","history","loading","error","resetPasswordAction","warning","success","onResetPassword","params","URLSearchParams","search","oobCode","get","resetPasswordCode","initialValues","touched","mapStateToProps","authUser"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport { Formik, Form, Field } from 'formik';\nimport { connect } from 'react-redux';\nimport { Colxx } from '../../components/common/CustomBootstrap';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { resetPassword } from '../../redux/actions';\nimport { NotificationManager } from '../../components/common/react-notifications';\n\nconst validateNewPassword = (values) => {\n  const { newPassword, newPasswordAgain } = values;\n  const errors = {};\n  if (newPasswordAgain && newPassword !== newPasswordAgain) {\n    errors.newPasswordAgain = 'Please check your new password';\n  }\n  return errors;\n};\n\nconst ResetPassword = ({\n  location,\n  history,\n  loading,\n  error,\n  resetPasswordAction,\n}) => {\n  const [newPassword] = useState('');\n  const [newPasswordAgain] = useState('');\n\n  useEffect(() => {\n    if (error) {\n      NotificationManager.warning(\n        error,\n        'Forgot Password Error',\n        3000,\n        null,\n        null,\n        ''\n      );\n    } else if (!loading && newPassword === 'success')\n      NotificationManager.success(\n        'Please login with your new password.',\n        'Reset Password Success',\n        3000,\n        null,\n        null,\n        ''\n      );\n  }, [error, loading, newPassword]);\n\n  const onResetPassword = (values) => {\n    if (!loading) {\n      const params = new URLSearchParams(location.search);\n      const oobCode = params.get('oobCode');\n      if (oobCode) {\n        if (values.newPassword !== '') {\n          resetPasswordAction({\n            newPassword: values.newPassword,\n            resetPasswordCode: oobCode,\n            history,\n          });\n        }\n      } else {\n        NotificationManager.warning(\n          'Please check your email url.',\n          'Reset Password Error',\n          3000,\n          null,\n          null,\n          ''\n        );\n      }\n    }\n  };\n\n  const initialValues = { newPassword, newPasswordAgain };\n\n  return (\n    <Row className=\"h-100\">\n      <Colxx xxs=\"12\" md=\"10\" className=\"mx-auto my-auto\">\n        <Card className=\"auth-card\">\n          <div className=\"position-relative image-side \">\n            <p className=\"text-white h2\">MAGIC IS IN THE DETAILS</p>\n            <p className=\"white mb-0\">\n              Please use your e-mail to reset your password. <br />\n              If you are not a member, please{' '}\n              <NavLink to=\"/register\" className=\"white\">\n                register\n              </NavLink>\n              .\n            </p>\n          </div>\n          <div className=\"form-side\">\n            <NavLink to=\"/\" className=\"white\">\n              <span className=\"logo-single\" />\n            </NavLink>\n            <CardTitle className=\"mb-4\">\n              <IntlMessages id=\"user.reset-password\" />\n            </CardTitle>\n\n            <Formik\n              validate={validateNewPassword}\n              initialValues={initialValues}\n              onSubmit={onResetPassword}\n            >\n              {({ errors, touched }) => (\n                <Form className=\"av-tooltip tooltip-label-bottom\">\n                  <FormGroup className=\"form-group has-float-label\">\n                    <Label>\n                      <IntlMessages id=\"user.new-password\" />\n                    </Label>\n                    <Field\n                      className=\"form-control\"\n                      name=\"newPassword\"\n                      type=\"password\"\n                    />\n                  </FormGroup>\n                  <FormGroup className=\"form-group has-float-label\">\n                    <Label>\n                      <IntlMessages id=\"user.new-password-again\" />\n                    </Label>\n                    <Field\n                      className=\"form-control\"\n                      name=\"newPasswordAgain\"\n                      type=\"password\"\n                    />\n                    {errors.newPasswordAgain && touched.newPasswordAgain && (\n                      <div className=\"invalid-feedback d-block\">\n                        {errors.newPasswordAgain}\n                      </div>\n                    )}\n                  </FormGroup>\n\n                  <div className=\"d-flex justify-content-between align-items-center\">\n                    <NavLink to=\"/user/login\">\n                      <IntlMessages id=\"user.login-title\" />\n                    </NavLink>\n                    <Button\n                      color=\"primary\"\n                      className={`btn-shadow btn-multiple-state ${\n                        loading ? 'show-spinner' : ''\n                      }`}\n                      size=\"lg\"\n                    >\n                      <span className=\"spinner d-inline-block\">\n                        <span className=\"bounce1\" />\n                        <span className=\"bounce2\" />\n                        <span className=\"bounce3\" />\n                      </span>\n                      <span className=\"label\">\n                        <IntlMessages id=\"user.reset-password-button\" />\n                      </span>\n                    </Button>\n                  </div>\n                </Form>\n              )}\n            </Formik>\n          </div>\n        </Card>\n      </Colxx>\n    </Row>\n  );\n};\n\nconst mapStateToProps = ({ authUser }) => {\n  const { newPassword, resetPasswordCode, loading, error } = authUser;\n  return { newPassword, resetPasswordCode, loading, error };\n};\n\nexport default connect(mapStateToProps, {\n  resetPasswordAction: resetPassword,\n})(ResetPassword);\n"]},"metadata":{},"sourceType":"module"}