{"ast":null,"code":"import _objectSpread from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Row,FormGroup,Card,CardSubtitle,CardBody,Label,Input,Button,Alert}from'reactstrap';import{Colxx,Separator}from'../../../components/common/CustomBootstrap';import{getCurrentUser}from'../../../helpers/Utils';import{getOwnersAPI,getChargerAPI,getStationsAPI,getChargerInventoryByIdAPI,updateChargerInventoryAPI,adminRoot}from'../../../constants/defaultValues';import axios from'axios';import{useHistory,useLocation}from\"react-router-dom\";import{Formik,Field,FieldArray,ErrorMessage}from'formik';import*as yup from'yup';const UpdateChargerInventory=()=>{//state to disable button on click\nconst _useState=useState(false),_useState2=_slicedToArray(_useState,2),buttonDisabled=_useState2[0],setButtonDisabled=_useState2[1];//alert states\nconst _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),alertVisible=_useState4[0],setAlertVisible=_useState4[1];const _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),alertMsg=_useState6[0],setAlertMsg=_useState6[1];const _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),alertColor=_useState8[0],setAlertColor=_useState8[1];//dropdown states\nconst _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),stationNameData=_useState10[0],setStationNameData=_useState10[1];const _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),ownerNameData=_useState12[0],setOwnerNameData=_useState12[1];const _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),chargerMasterData=_useState14[0],setChargerMasterData=_useState14[1];//charger data default states\nconst _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),chargerId=_useState16[0],setChargerId=_useState16[1];const _useState17=useState(\"\"),_useState18=_slicedToArray(_useState17,2),hubId=_useState18[0],setHubId=_useState18[1];const _useState19=useState(\"\"),_useState20=_slicedToArray(_useState19,2),qrCode=_useState20[0],setQrCode=_useState20[1];const _useState21=useState(\"\"),_useState22=_slicedToArray(_useState21,2),chargerMasterId=_useState22[0],setChargerMasterId=_useState22[1];const _useState23=useState(\"\"),_useState24=_slicedToArray(_useState23,2),noOfSlot=_useState24[0],setNoOfSlot=_useState24[1];const _useState25=useState([]),_useState26=_slicedToArray(_useState25,2),slotData=_useState26[0],setSlotData=_useState26[1];const _useState27=useState(\"\"),_useState28=_slicedToArray(_useState27,2),ownBy=_useState28[0],setOwnBy=_useState28[1];const _useState29=useState(\"\"),_useState30=_slicedToArray(_useState29,2),remark1=_useState30[0],setRemark1=_useState30[1];const _useState31=useState(\"\"),_useState32=_slicedToArray(_useState31,2),remark2=_useState32[0],setRemark2=_useState32[1];const history=useHistory();const location=useLocation();useEffect(()=>{GetStationNamesAPICall();GetOwnerNamesAPICall();GetChargerMasterAPICall();getChargerInventoryByIdAPICall();},[]);//API calls\nconst GetStationNamesAPICall=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var currentUser;return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:currentUser=getCurrentUser();_context.next=3;return axios.get(getStationsAPI,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setStationNameData(responseData.data);}else{console.log(responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context.stop();}},_callee);}));return function GetStationNamesAPICall(){return _ref.apply(this,arguments);};}();const GetOwnerNamesAPICall=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var currentUser;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:currentUser=getCurrentUser();_context2.next=3;return axios.get(getOwnersAPI,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setOwnerNameData(responseData.data);}else{console.log(responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context2.stop();}},_callee2);}));return function GetOwnerNamesAPICall(){return _ref2.apply(this,arguments);};}();const GetChargerMasterAPICall=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var currentUser;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:currentUser=getCurrentUser();_context3.next=3;return axios.get(getChargerAPI,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setChargerMasterData(responseData.data);}else{console.log(responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context3.stop();}},_callee3);}));return function GetChargerMasterAPICall(){return _ref3.apply(this,arguments);};}();const getChargerInventoryByIdAPICall=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var currentUser;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:currentUser=getCurrentUser();_context4.next=3;return axios.post(getChargerInventoryByIdAPI,{charger_inventory_id:location.state.charger_inventory_id},{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setChargerId(responseData.data.charger_id);setQrCode(responseData.data.qr_code);setHubId(responseData.data.hub_id);setOwnBy(responseData.data.own_by);setChargerMasterId(responseData.data.charger_master_id);setNoOfSlot(responseData.data.no_of_slot);setSlotData(responseData.data.slots);setRemark1(responseData.data.remark_1);setRemark2(responseData.data.remark_2);}else{console.log(responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context4.stop();}},_callee4);}));return function getChargerInventoryByIdAPICall(){return _ref4.apply(this,arguments);};}();const updateChargerInventoryAPICall=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(params){var currentUser;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:setButtonDisabled(true);currentUser=getCurrentUser();_context5.next=4;return axios.post(updateChargerInventoryAPI,params,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){history.push({pathname:adminRoot+'/inventory/charger',state:{responseStatus:responseData.status,responseMsg:responseData.msg}});}else{setButtonDisabled(false);updateChargerInventoryAlert(responseData.msg);}}).catch(error=>{setButtonDisabled(false);console.log(error);});case 4:case\"end\":return _context5.stop();}},_callee5);}));return function updateChargerInventoryAPICall(_x){return _ref5.apply(this,arguments);};}();//Form Validation Schema\nconst ChargerInventoryDetailsValidationSchema=yup.object().shape({charger_id:yup.string().required(\"Charger ID is required\"),hub_id:yup.string().required(\"Station is required\"),qr_code:yup.string().matches(/^\\d+$/,\"Only numbers allowed\").required(\"QR Code capacity is required\"),own_by:yup.string().required(\"Owned By is required\"),charger_master_id:yup.string().required(\"Owned By is required\"),numberOfSlots:yup.string().required('Number of slots is required'),slots:yup.array().of(yup.object().shape({// charger_id: yup.string()\n//     .required('Charger Id is required'),\nslot_id:yup.string().required('Slot Id is required')}))});//helper\n//Alert helper methods\nconst updateChargerInventoryAlert=msg=>{setAlertVisible(true);setAlertMsg(msg);setAlertColor(\"danger\");};const onDismissAlert=()=>{setAlertVisible(false);};function onChangeSlots(e,field,values,setValues){// update dynamic form\nconst slots=[...values.slots];const numberOfSlots=e.target.value||0;const previousNumber=parseInt(field.value||'0');if(previousNumber<numberOfSlots){for(let i=previousNumber;i<numberOfSlots;i++){slots.push({charger_id:'',slot_id:''});}}else{for(let i=previousNumber;i>=numberOfSlots;i--){slots.splice(i,1);}}setValues(_objectSpread(_objectSpread({},values),{},{slots}));// call formik onChange method\nfield.onChange(e);}function onSubmit(fields){// display form field values on success\nconst params={charger_inventory_id:location.state.charger_inventory_id,charger_id:fields.charger_id,qr_code:fields.qr_code,hub_id:fields.hub_id,own_by:fields.own_by,charger_master_id:fields.charger_master_id,no_of_slot:fields.numberOfSlots,slots_data:fields.slots,remark_1:fields.remark_1,remark_2:fields.remark_2};updateChargerInventoryAPICall(params);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\"},/*#__PURE__*/React.createElement(\"span\",{className:\"page_title\"},\"Update Charger Inventory\"),/*#__PURE__*/React.createElement(\"a\",{href:\"charger\",className:\"mt-2 btn-primary default btn-sm float-right\"},/*#__PURE__*/React.createElement(\"b\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-list\"}),\" Charger Inventory List\")),/*#__PURE__*/React.createElement(Separator,{className:\"mb-5 mt-1\"}))),/*#__PURE__*/React.createElement(Formik,{enableReinitialize:true,initialValues:{charger_id:chargerId,hub_id:hubId,qr_code:qrCode,charger_master_id:chargerMasterId,own_by:ownBy,remark_1:remark1,remark_2:remark2,numberOfSlots:noOfSlot,slots:slotData},validationSchema:ChargerInventoryDetailsValidationSchema,onSubmit:onSubmit},({handleChange,handleBlur,handleSubmit,values,touched,errors,setValues})=>/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",className:\"mb-4\"},/*#__PURE__*/React.createElement(Card,{className:\"mb-4\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(CardSubtitle,{className:\"mb-3\"},/*#__PURE__*/React.createElement(Alert,{color:alertColor,isOpen:alertVisible,toggle:onDismissAlert},alertMsg)),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Charger Id\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Charger Id\",name:\"charger_id\",value:values.charger_id,onChange:handleChange,onBlur:handleBlur,className:errors.charger_id&&touched.charger_id?\"input-error\":null}),errors.charger_id&&touched.charger_id&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.charger_id))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"QR Code\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"QR Code \",value:values.qr_code,name:\"qr_code\",onChange:handleChange,onBlur:handleBlur,className:errors.qr_code&&touched.qr_code?\"input-error\":null}),errors.qr_code&&touched.qr_code&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.qr_code))),/*#__PURE__*/React.createElement(Colxx,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Station\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"hub_id\",placeholder:\"Station\",value:values.hub_id,onChange:handleChange,onBlur:handleBlur},/*#__PURE__*/React.createElement(\"option\",null,\"Select Station\"),stationNameData.map(item=>/*#__PURE__*/React.createElement(\"option\",{value:item.hub_master_id,key:item.hub_master_id},item.name))),errors.hub_id&&touched.hub_id&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.hub_id))),/*#__PURE__*/React.createElement(Colxx,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Owned By\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"own_by\",value:values.own_by,onChange:handleChange,onBlur:handleBlur},/*#__PURE__*/React.createElement(\"option\",null,\"Select Owned By\"),ownerNameData.map(item=>/*#__PURE__*/React.createElement(\"option\",{value:item.owner_master_id,key:item.owner_master_id},item.name))),errors.own_by&&touched.own_by&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.own_by))),/*#__PURE__*/React.createElement(Colxx,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Charger\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"charger_master_id\",value:values.charger_master_id,onChange:handleChange,onBlur:handleBlur},/*#__PURE__*/React.createElement(\"option\",null,\"Select Charger\"),chargerMasterData.map(item=>/*#__PURE__*/React.createElement(\"option\",{value:item.id,key:item.id},item.make+\"-\"+item.model+\"-\"+item.dimension))),errors.charger_master_id&&touched.charger_master_id&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.charger_master_id))),/*#__PURE__*/React.createElement(Colxx,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Number of Slots\"),/*#__PURE__*/React.createElement(Field,{name:\"numberOfSlots\"},({field})=>/*#__PURE__*/React.createElement(\"input\",Object.assign({type:\"number\"},field,{className:'form-control'+(errors.numberOfSlots&&touched.numberOfSlots?' is-invalid':''),onChange:e=>onChangeSlots(e,field,values,setValues)}))),errors.numberOfSlots&&touched.numberOfSlots&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.numberOfSlots))),/*#__PURE__*/React.createElement(Colxx,{md:12},/*#__PURE__*/React.createElement(FieldArray,{name:\"slots\"},()=>values.slots.map((ticket,i)=>{var _errors$slots,_touched$slots;const ticketErrors=((_errors$slots=errors.slots)===null||_errors$slots===void 0?void 0:_errors$slots.length)&&errors.slots[i]||{};const ticketTouched=((_touched$slots=touched.slots)===null||_touched$slots===void 0?void 0:_touched$slots.length)&&touched.slots[i]||{};return/*#__PURE__*/React.createElement(\"div\",{key:i,className:\"list-group list-group-flush\"},/*#__PURE__*/React.createElement(\"div\",{className:\"list-group-item p-0\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-1 mt-3\"},/*#__PURE__*/React.createElement(\"h5\",{className:\"card-title\"},\"Slot#\",i+1)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group col-6\"},/*#__PURE__*/React.createElement(\"label\",null,\"Slot ID\"),/*#__PURE__*/React.createElement(Field,{name:\"slots.\".concat(i,\".slot_id\"),type:\"text\",className:'form-control'+(ticketErrors.slot_id&&ticketTouched.slot_id?' is-invalid':'')}),/*#__PURE__*/React.createElement(ErrorMessage,{name:\"slots.\".concat(i,\".slot_id\"),component:\"div\",className:\"invalid-feedback\"})))));}))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Remark 1\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"remark_1\",placeholder:\"Remark 1\",value:values.remark_1,onChange:handleChange,onBlur:handleBlur}))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Remark 2\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"remark_2\",placeholder:\"Remark 2\",value:values.remark_2,onChange:handleChange,onBlur:handleBlur})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"12\",className:\"text-center\"},/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"default mr-2\",onClick:handleSubmit,disabled:buttonDisabled},/*#__PURE__*/React.createElement(\"b\",null,\"Update\")),/*#__PURE__*/React.createElement(Button,{color:\"light\",className:\"default\",onClick:()=>{history.goBack();}},/*#__PURE__*/React.createElement(\"b\",null,\"Cancel\")))))))))));};export default UpdateChargerInventory;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/inventory/UpdateChargerInventory.js"],"names":["React","useState","useEffect","Row","FormGroup","Card","CardSubtitle","CardBody","Label","Input","Button","Alert","Colxx","Separator","getCurrentUser","getOwnersAPI","getChargerAPI","getStationsAPI","getChargerInventoryByIdAPI","updateChargerInventoryAPI","adminRoot","axios","useHistory","useLocation","Formik","Field","FieldArray","ErrorMessage","yup","UpdateChargerInventory","buttonDisabled","setButtonDisabled","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","stationNameData","setStationNameData","ownerNameData","setOwnerNameData","chargerMasterData","setChargerMasterData","chargerId","setChargerId","hubId","setHubId","qrCode","setQrCode","chargerMasterId","setChargerMasterId","noOfSlot","setNoOfSlot","slotData","setSlotData","ownBy","setOwnBy","remark1","setRemark1","remark2","setRemark2","history","location","GetStationNamesAPICall","GetOwnerNamesAPICall","GetChargerMasterAPICall","getChargerInventoryByIdAPICall","currentUser","get","headers","Authorization","token","then","response","responseData","data","status","console","log","msg","catch","error","post","charger_inventory_id","state","charger_id","qr_code","hub_id","own_by","charger_master_id","no_of_slot","slots","remark_1","remark_2","updateChargerInventoryAPICall","params","push","pathname","responseStatus","responseMsg","updateChargerInventoryAlert","ChargerInventoryDetailsValidationSchema","object","shape","string","required","matches","numberOfSlots","array","of","slot_id","onDismissAlert","onChangeSlots","e","field","values","setValues","target","value","previousNumber","parseInt","i","splice","onChange","onSubmit","fields","slots_data","handleChange","handleBlur","handleSubmit","touched","errors","map","item","hub_master_id","name","owner_master_id","id","make","model","dimension","ticket","ticketErrors","length","ticketTouched","goBack"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { \n  Row,FormGroup, Card,CardSubtitle, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getOwnersAPI,getChargerAPI,getStationsAPI,getChargerInventoryByIdAPI,updateChargerInventoryAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport { Formik, Field, FieldArray, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateChargerInventory = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //dropdown states\n  const [stationNameData,setStationNameData] = useState([]);\n  const [ownerNameData,setOwnerNameData] = useState([]);\n  const [chargerMasterData,setChargerMasterData] = useState([]);\n  //charger data default states\n  const [chargerId,setChargerId] = useState(\"\");\n  const [hubId,setHubId] = useState(\"\");\n  const [qrCode,setQrCode] = useState(\"\");\n  const [chargerMasterId,setChargerMasterId] = useState(\"\");\n  const [noOfSlot,setNoOfSlot] = useState(\"\");\n  const [slotData,setSlotData] = useState([]);\n  const [ownBy,setOwnBy] = useState(\"\");\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n    GetOwnerNamesAPICall();\n    GetChargerMasterAPICall();\n    getChargerInventoryByIdAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetOwnerNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getOwnersAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setOwnerNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetChargerMasterAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getChargerAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setChargerMasterData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n    const getChargerInventoryByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getChargerInventoryByIdAPI,\n        {\n            charger_inventory_id:location.state.charger_inventory_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n            setChargerId(responseData.data.charger_id);\n            setQrCode(responseData.data.qr_code);\n            setHubId(responseData.data.hub_id);\n            setOwnBy(responseData.data.own_by);\n            setChargerMasterId(responseData.data.charger_master_id);\n            setNoOfSlot(responseData.data.no_of_slot);\n            setSlotData(responseData.data.slots);\n            setRemark1(responseData.data.remark_1);\n            setRemark2(responseData.data.remark_2);\n            }else{\n            console.log(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n  const updateChargerInventoryAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(updateChargerInventoryAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/inventory/charger',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          updateChargerInventoryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const ChargerInventoryDetailsValidationSchema = yup.object().shape({\n    charger_id:yup.string()\n        .required(\"Charger ID is required\"),\n    hub_id:yup.string()\n        .required(\"Station is required\"),\n    qr_code:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"QR Code capacity is required\"),\n    own_by:yup.string()\n        .required(\"Owned By is required\"),\n    charger_master_id:yup.string()\n        .required(\"Owned By is required\"),\n    numberOfSlots: yup.string()\n        .required('Number of slots is required'),\n    slots: yup.array().of(\n      yup.object().shape({\n            // charger_id: yup.string()\n            //     .required('Charger Id is required'),\n            slot_id: yup.string()\n                .required('Slot Id is required')\n        })\n    )\n  });\n\n  //helper\n  //Alert helper methods\n  const updateChargerInventoryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  function onChangeSlots(e, field, values, setValues) {\n    // update dynamic form\n    const slots = [...values.slots];\n    const numberOfSlots = e.target.value || 0;\n    const previousNumber = parseInt(field.value || '0');\n    if (previousNumber < numberOfSlots) {\n        for (let i = previousNumber; i < numberOfSlots; i++) {\n            slots.push({ charger_id: '', slot_id: '' });\n        }\n    } else {\n        for (let i = previousNumber; i >= numberOfSlots; i--) {\n            slots.splice(i, 1);\n        }\n    }\n    setValues({ ...values, slots });\n\n    // call formik onChange method\n    field.onChange(e);\n  }\n  function onSubmit(fields) {\n      // display form field values on success\n      const params = {\n        charger_inventory_id:location.state.charger_inventory_id,\n        charger_id:fields.charger_id,\n        qr_code:fields.qr_code,\n        hub_id:fields.hub_id,\n        own_by:fields.own_by,\n        charger_master_id:fields.charger_master_id,\n        no_of_slot:fields.numberOfSlots,\n        slots_data:fields.slots,\n        remark_1:fields.remark_1,\n        remark_2:fields.remark_2,\n      }\n      updateChargerInventoryAPICall(params);\n  }\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Charger Inventory</span>\n            <a href=\"charger\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Charger Inventory List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            charger_id:chargerId,\n            hub_id:hubId,\n            qr_code:qrCode,\n            charger_master_id:chargerMasterId,\n            own_by:ownBy,\n            remark_1:remark1,\n            remark_2:remark2,\n            numberOfSlots: noOfSlot,\n            slots: slotData\n        }}\n        validationSchema={ChargerInventoryDetailsValidationSchema} \n        onSubmit={onSubmit} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors,setValues})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody>\n                        <CardSubtitle className=\"mb-3\">\n                          <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                            {alertMsg}\n                          </Alert>\n                        </CardSubtitle> \n                          <Row>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Charger Id\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Charger Id\"\n                                  name=\"charger_id\"\n                                  value={values.charger_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.charger_id && touched.charger_id ? \"input-error\":null}\n                                />\n                                {errors.charger_id && touched.charger_id &&(\n                                  <span className=\"error\">{errors.charger_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                QR Code\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"QR Code \"\n                                  value={values.qr_code}\n                                  name=\"qr_code\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.qr_code && touched.qr_code ? \"input-error\":null}\n                                />\n                                {errors.qr_code && touched.qr_code &&(\n                                  <span className=\"error\">{errors.qr_code}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Station\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"hub_id\"\n                                  placeholder=\"Station\"\n                                  value={values.hub_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Station</option>\n                                  {stationNameData.map((item)=>\n                                    <option value={item.hub_master_id} key={item.hub_master_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.hub_id && touched.hub_id &&(\n                                  <span className=\"error\">{errors.hub_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Owned By\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"own_by\"\n                                  value={values.own_by}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Owned By</option>\n                                  {ownerNameData.map(item=>\n                                    <option value={item.owner_master_id} key={item.owner_master_id}>{item.name}</option>\n                                    )}\n                                </Input>\n                                {errors.own_by && touched.own_by &&(\n                                  <span className=\"error\">{errors.own_by}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Charger\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"charger_master_id\"\n                                  value={values.charger_master_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Charger</option>\n                                  {chargerMasterData.map(item=>\n                                    <option value={item.id} key={item.id}>{item.make+\"-\"+item.model+\"-\"+item.dimension}</option>\n                                    )}\n                                </Input>\n                                {errors.charger_master_id && touched.charger_master_id &&(\n                                  <span className=\"error\">{errors.charger_master_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Number of Slots\n                                </Label>\n                                <Field name=\"numberOfSlots\">\n                                    {({ field }) => (\n                                        <input type=\"number\" {...field} className={'form-control' + (errors.numberOfSlots && touched.numberOfSlots ? ' is-invalid' : '')} onChange={e => onChangeSlots(e, field, values, setValues)} />                                            \n                                    )}\n                                    </Field>\n                                {errors.numberOfSlots && touched.numberOfSlots &&(\n                                  <span className=\"error\">{errors.numberOfSlots}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={12}>\n                            <FieldArray name=\"slots\">\n                              {() => (values.slots.map((ticket, i) => {\n                                  const ticketErrors = errors.slots?.length && errors.slots[i] || {};\n                                  const ticketTouched = touched.slots?.length && touched.slots[i] || {};\n                                  return (\n                                      <div key={i} className=\"list-group list-group-flush\">\n                                          <div className=\"list-group-item p-0\">\n                                              <div className=\"form-row\">\n                                                  <div className=\"form-group col-1 mt-3\">\n                                                    <h5 className=\"card-title\">Slot#{i + 1}</h5>\n                                                  </div>\n                                                  {/* <div className=\"form-group col-5\">\n                                                      <label>Charger ID</label>\n                                                      <Field name={`slots.${i}.charger_id`} type=\"text\" className={'form-control' + (ticketErrors.charger_id && ticketTouched.charger_id ? ' is-invalid' : '' )} />\n                                                      <ErrorMessage name={`slots.${i}.charger_id`} component=\"div\" className=\"invalid-feedback\" />\n                                                  </div> */}\n                                                  <div className=\"form-group col-6\">\n                                                      <label>Slot ID</label>\n                                                      <Field name={`slots.${i}.slot_id`} type=\"text\" className={'form-control' + (ticketErrors.slot_id && ticketTouched.slot_id ? ' is-invalid' : '' )} />\n                                                      <ErrorMessage name={`slots.${i}.slot_id`} component=\"div\" className=\"invalid-feedback\" />\n                                                  </div>\n                                              </div>\n                                          </div>\n                                      </div>\n                                  );\n                              }))}\n                          </FieldArray>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark 1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark 1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark 2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark 2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default UpdateChargerInventory;\n"]},"metadata":{},"sourceType":"module"}