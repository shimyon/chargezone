{"ast":null,"code":"/* eslint-disable global-require */import'./assets/css/vendor/bootstrap.min.css';import'./assets/css/vendor/bootstrap.rtl.only.min.css';import'react-circular-progressbar/dist/styles.css';import'react-perfect-scrollbar/dist/css/styles.css';import'react-big-calendar/lib/css/react-big-calendar.css';import'react-image-lightbox/style.css';import'video.js/dist/video-js.css';import'./assets/css/sass/views/custom.css';import{isMultiColorActive,defaultColor,isDarkSwitchActive}from'./constants/defaultValues';import{getCurrentColor,setCurrentColor}from'./helpers/Utils';const color=isMultiColorActive||isDarkSwitchActive?getCurrentColor():defaultColor;setCurrentColor(color);const render=()=>{import(\"./assets/css/sass/themes/gogo.\".concat(color,\".scss\")).then(()=>{require('./AppRenderer');});};render();","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/index.js"],"names":["isMultiColorActive","defaultColor","isDarkSwitchActive","getCurrentColor","setCurrentColor","color","render","then","require"],"mappings":"AAAA,mCACA,MAAO,uCAAP,CACA,MAAO,gDAAP,CACA,MAAO,4CAAP,CACA,MAAO,6CAAP,CACA,MAAO,mDAAP,CACA,MAAO,gCAAP,CACA,MAAO,4BAAP,CACA,MAAO,oCAAP,CACA,OACEA,kBADF,CAEEC,YAFF,CAGEC,kBAHF,KAIO,2BAJP,CAKA,OAASC,eAAT,CAA0BC,eAA1B,KAAiD,iBAAjD,CAEA,KAAMC,CAAAA,KAAK,CAAIL,kBAAkB,EAAIE,kBAAvB,CAA6CC,eAAe,EAA5D,CAAiEF,YAA/E,CACAG,eAAe,CAACC,KAAD,CAAf,CAEA,KAAMC,CAAAA,MAAM,CAAG,IAAM,CACnB,+CAAwCD,KAAxC,WAAsDE,IAAtD,CAA2D,IAAM,CAC/DC,OAAO,CAAC,eAAD,CAAP,CACD,CAFD,EAGD,CAJD,CAKAF,MAAM","sourcesContent":["/* eslint-disable global-require */\nimport './assets/css/vendor/bootstrap.min.css';\nimport './assets/css/vendor/bootstrap.rtl.only.min.css';\nimport 'react-circular-progressbar/dist/styles.css';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'react-image-lightbox/style.css';\nimport 'video.js/dist/video-js.css';\nimport './assets/css/sass/views/custom.css'\nimport {\n  isMultiColorActive,\n  defaultColor,\n  isDarkSwitchActive,\n} from './constants/defaultValues';\nimport { getCurrentColor, setCurrentColor } from './helpers/Utils';\n\nconst color = (isMultiColorActive || isDarkSwitchActive) ? getCurrentColor() : defaultColor;\nsetCurrentColor(color);\n\nconst render = () => {\n  import(`./assets/css/sass/themes/gogo.${color}.scss`).then(() => {\n    require('./AppRenderer');\n  });\n};\nrender();\n"]},"metadata":{},"sourceType":"module"}