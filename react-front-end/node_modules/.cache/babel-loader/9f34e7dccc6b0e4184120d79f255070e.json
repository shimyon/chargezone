{"ast":null,"code":"var _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\src\\\\views\\\\app\\\\dashboard\\\\operator\\\\ConnectorDoughnut.js\";\nimport React from 'react';\nimport { Card, CardBody, CardTitle, UncontrolledDropdown, DropdownItem, DropdownToggle, DropdownMenu } from 'reactstrap';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { PolarAreaChart } from '../../../../components/charts';\nimport { DoughnutChart } from '../../../../components/charts';\nimport { PieChart } from '../../../../components/charts';\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\nconst colors = ThemeColors();\n\nconst ConnectorDoughnut = ({\n  chartClass = 'dashboard-donut-chart',\n  controls = false\n}) => {\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"dashboard-my-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"dashboard.connectors\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }), controls && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group float-right float-none-xs \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    caret: true,\n    color: \"primary\",\n    className: \"btn-xs\",\n    outline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"dashboard.all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(DropdownMenu, {\n    right: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"dashboard.in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(DropdownItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"dashboard.out\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 19\n    }\n  })))))), loading4 && /*#__PURE__*/React.createElement(\"div\", {\n    className: chartClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    data: polarAreaChartData1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 20\n    }\n  })), \" \", !loading4 && !blankMsg && /*#__PURE__*/React.createElement(\"div\", {\n    className: chartClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(PieChart, {\n    data: polarAreaChartData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  })), blankMsg && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-donut-chart text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Data Not Found\")));\n};\n\nconst polarAreaChartData1 = {\n  labels: ['In Use', 'Available', 'Faulty'],\n  datasets: [{\n    data: [33, 33, 34],\n    borderWidth: 2,\n    borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\n    backgroundColor: [colors.themeColor1_10, colors.themeColor2_10, colors.themeColor3_10]\n  }]\n};\nconst polarAreaChartData = {\n  labels: ['In Use', 'Available', 'Faulty'],\n  datasets: [{\n    data: [33, 33, 34],\n    borderWidth: 2,\n    borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3, colors.themeColor4],\n    backgroundColor: [colors.themeColor1_10, colors.themeColor2_10, colors.themeColor3_10, colors.themeColor4_10]\n  }]\n};\n\nconst setBlankMsg = value => {\n  blankMsg = value;\n};\n\nlet blankMsg = false;\n\nconst setConnectorChartData = (in_use, available, faulty) => {\n  if (in_use == 0 && available == 0 && faulty == 0) {\n    setBlankMsg(true);\n  } else {\n    setBlankMsg(false);\n  }\n\n  polarAreaChartData.datasets[0].data[0] = in_use;\n  polarAreaChartData.datasets[0].data[1] = available;\n  polarAreaChartData.datasets[0].data[2] = faulty; // polarAreaChartData.labels[0]=\"In Use(\"+in_use+\")\";\n  // polarAreaChartData.labels[1]=\"Available(\"+available+\")\";\n  // polarAreaChartData.labels[2]=\"Faulty(\"+faulty+\")\";\n\n  setLoading4(false);\n};\n\nlet loading4 = true;\n\nconst setLoading4 = value => {\n  loading4 = value;\n};\n\nexport { ConnectorDoughnut, setConnectorChartData };","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/dashboard/operator/ConnectorDoughnut.js"],"names":["React","Card","CardBody","CardTitle","UncontrolledDropdown","DropdownItem","DropdownToggle","DropdownMenu","IntlMessages","PolarAreaChart","DoughnutChart","PieChart","ThemeColors","colors","ConnectorDoughnut","chartClass","controls","loading4","polarAreaChartData1","blankMsg","polarAreaChartData","labels","datasets","data","borderWidth","borderColor","themeColor1","themeColor2","themeColor3","backgroundColor","themeColor1_10","themeColor2_10","themeColor3_10","themeColor4","themeColor4_10","setBlankMsg","value","setConnectorChartData","in_use","available","faulty","setLoading4"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, CardBody, CardTitle, UncontrolledDropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu, } from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { PolarAreaChart } from '../../../../components/charts';\nimport { DoughnutChart } from '../../../../components/charts';\nimport { PieChart } from '../../../../components/charts';\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\n\nconst colors = ThemeColors();\n\n\nconst ConnectorDoughnut =  ({ chartClass = 'dashboard-donut-chart', controls = false })  => {\n  return (\n    <Card className=\"dashboard-my-card\">\n      <CardBody>\n        <CardTitle>\n          <IntlMessages id=\"dashboard.connectors\" />\n          {controls && (\n          <div className=\"btn-group float-right float-none-xs \">\n            <UncontrolledDropdown>\n              <DropdownToggle caret color=\"primary\" className=\"btn-xs\" outline>\n                <IntlMessages id=\"dashboard.all\" />\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.in\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.out\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        )}\n        </CardTitle>\n      \n       \n        \n        {(loading4 ) && (\n                   <div className={chartClass}>\n                   <PieChart  data={polarAreaChartData1} />\n                 </div>\n                ) } { (!loading4 && !blankMsg) &&\n                  <div className={chartClass}>\n                  <PieChart  data={polarAreaChartData} />\n                </div>\n}\n{ blankMsg &&\n      <div className=\"dashboard-donut-chart text-center\">\n        Data Not Found\n      </div>\n}\n      </CardBody>\n    </Card>\n  );\n};\nconst polarAreaChartData1 = {\n  labels: ['In Use', 'Available', 'Faulty'],\n  datasets: [\n    {\n      data: [33, 33,34],\n      borderWidth: 2,\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\n      backgroundColor: [\n        colors.themeColor1_10,\n        colors.themeColor2_10,\n        colors.themeColor3_10,\n        \n      ],\n    },\n  ],\n};\nconst polarAreaChartData = {\n  labels: ['In Use', 'Available', 'Faulty'],\n  datasets: [\n    {\n      data: [33, 33,34],\n      borderWidth: 2,\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3, colors.themeColor4],\n      backgroundColor: [\n        colors.themeColor1_10,\n        colors.themeColor2_10,\n        colors.themeColor3_10,\n        colors.themeColor4_10,\n      ],\n    },\n  ],\n};\nconst  setBlankMsg = (value) => {blankMsg=value};\nlet blankMsg=false;\n\nconst setConnectorChartData = (in_use,available,faulty) => {\n\n if(in_use==0 && available==0 && faulty==0)\n {\n   setBlankMsg(true);\n   \n }else\n {\n  setBlankMsg(false);\n }\n\n  polarAreaChartData.datasets[0].data[0]=in_use;\n  polarAreaChartData.datasets[0].data[1]=available;\n  polarAreaChartData.datasets[0].data[2]=faulty;\n \n  // polarAreaChartData.labels[0]=\"In Use(\"+in_use+\")\";\n  // polarAreaChartData.labels[1]=\"Available(\"+available+\")\";\n  // polarAreaChartData.labels[2]=\"Faulty(\"+faulty+\")\";\n\n\n  setLoading4(false);\n  \n\n};\nlet loading4=true;\nconst  setLoading4 = (value) => {loading4=value};\n\nexport  {ConnectorDoughnut,setConnectorChartData};\n"]},"metadata":{},"sourceType":"module"}