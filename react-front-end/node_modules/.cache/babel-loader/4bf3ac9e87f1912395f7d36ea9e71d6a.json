{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Row,FormGroup,Label,Card,CardBody,CardSubtitle,Modal,ModalHeader,ModalBody,ModalFooter,Table,Button,DropdownItem,DropdownMenu,DropdownToggle,Alert,UncontrolledDropdown,Input,InputGroup}from'reactstrap';import{Colxx,Separator}from'../../../components/common/CustomBootstrap';import{getCurrentUser}from'../../../helpers/Utils';import{getCountriesAPI,getStatesByCountryAPI,getCityListAPI,getCityByIdAPI,addCityAPI,updateCityAPI,deleteCityAPI}from'../../../constants/defaultValues';import axios from'axios';import{Formik}from'formik';import*as yup from'yup';const CityMaster=({match})=>{//alert states\nconst _useState=useState(false),_useState2=_slicedToArray(_useState,2),alertVisible=_useState2[0],setAlertVisible=_useState2[1];const _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),alertMsg=_useState4[0],setAlertMsg=_useState4[1];const _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),alertColor=_useState6[0],setAlertColor=_useState6[1];//search state\nconst _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),searchBy=_useState8[0],setSearchBy=_useState8[1];//Pagination states\nconst _useState9=useState(\"1\"),_useState10=_slicedToArray(_useState9,2),pageCount=_useState10[0],setPageCount=_useState10[1];const _useState11=useState(\"1\"),_useState12=_slicedToArray(_useState11,2),lastPageCount=_useState12[0],setLastPageCount=_useState12[1];//flag to check whether data in list or not\nconst _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),listFlag=_useState14[0],setListFlag=_useState14[1];//toggle to re-render page on add,updates,delete\nconst _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),toggleChange=_useState16[0],setToggleChange=_useState16[1];//Modal States\nconst _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),modalVisible=_useState18[0],setModalVisible=_useState18[1];const _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),modalUpdateVisible=_useState20[0],setModalUpdateVisible=_useState20[1];//button state ... state 0 for add and 1 for update\nconst _useState21=useState(),_useState22=_slicedToArray(_useState21,2),buttonState=_useState22[0],setButtonState=_useState22[1];//loader states\nconst _useState23=useState(true),_useState24=_slicedToArray(_useState23,2),isLoading=_useState24[0],setIsLoading=_useState24[1];// list state\nconst _useState25=useState([]),_useState26=_slicedToArray(_useState25,2),countryList=_useState26[0],setCountryList=_useState26[1];const _useState27=useState([]),_useState28=_slicedToArray(_useState27,2),stateList=_useState28[0],setStateList=_useState28[1];const _useState29=useState([]),_useState30=_slicedToArray(_useState29,2),cityList=_useState30[0],setCityList=_useState30[1];//default values state\nconst _useState31=useState(\"\"),_useState32=_slicedToArray(_useState31,2),countryId=_useState32[0],setCountryId=_useState32[1];const _useState33=useState(\"\"),_useState34=_slicedToArray(_useState33,2),stateId=_useState34[0],setStateId=_useState34[1];const _useState35=useState(\"\"),_useState36=_slicedToArray(_useState35,2),cityName=_useState36[0],setCityName=_useState36[1];const _useState37=useState(\"\"),_useState38=_slicedToArray(_useState37,2),cityId=_useState38[0],setCityId=_useState38[1];useEffect(()=>{getCityListAPICall();getCountryNamesAPICall();},[pageCount,toggleChange]);//API CALLS\nconst getCityListAPICall=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var currentUser;return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:setIsLoading(true);currentUser=getCurrentUser();_context.next=4;return axios.get(getCityListAPI,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setListFlag(true);setLastPageCount(responseData.data.last_page);setCityList(responseData.data.data);}else{setListFlag(false);}setIsLoading(false);}).catch(error=>{setListFlag(false);});case 4:case\"end\":return _context.stop();}},_callee);}));return function getCityListAPICall(){return _ref.apply(this,arguments);};}();const getCountryNamesAPICall=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var currentUser;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:currentUser=getCurrentUser();_context2.next=3;return axios.get(getCountriesAPI,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setCountryList(responseData.data);}else{cityAlert(responseData.status,responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context2.stop();}},_callee2);}));return function getCountryNamesAPICall(){return _ref2.apply(this,arguments);};}();const getStateNamesAPICall=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(country){var currentUser;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:currentUser=getCurrentUser();_context3.next=3;return axios.post(getStatesByCountryAPI,{country_id:country},{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setStateList(responseData.data);}else{cityAlert(responseData.status,responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context3.stop();}},_callee3);}));return function getStateNamesAPICall(_x){return _ref3.apply(this,arguments);};}();const getCityByIdAPICall=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(params){var currentUser;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:setModalUpdateVisible(false);currentUser=getCurrentUser();_context4.next=4;return axios.post(getCityByIdAPI,{city_master_id:params},{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){console.log(responseData.data);getStateNamesAPICall(responseData.data.country_id);setStateId(responseData.data.state_id);setCountryId(responseData.data.country_id);setCityName(responseData.data.city_name);setCityId(responseData.data.id);}else{cityAlert(responseData.status,responseData.msg);}}).catch(error=>{console.log(error);});case 4:case\"end\":return _context4.stop();}},_callee4);}));return function getCityByIdAPICall(_x2){return _ref4.apply(this,arguments);};}();const addCityAPICall=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(params){var currentUser;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:setModalUpdateVisible(false);currentUser=getCurrentUser();_context5.next=4;return axios.post(addCityAPI,params,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setToggleChange(!toggleChange);cityAlert(responseData.status,responseData.msg);}else{setToggleChange(!toggleChange);cityAlert(responseData.status,responseData.msg);}}).catch(error=>{console.log(error);});case 4:case\"end\":return _context5.stop();}},_callee5);}));return function addCityAPICall(_x3){return _ref5.apply(this,arguments);};}();const updateCityAPICall=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(params){var currentUser;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:setModalUpdateVisible(false);currentUser=getCurrentUser();_context6.next=4;return axios.post(updateCityAPI,params,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setToggleChange(!toggleChange);cityAlert(responseData.status,responseData.msg);}else{cityAlert(responseData.status,responseData.msg);}}).catch(error=>{console.log(error);});case 4:case\"end\":return _context6.stop();}},_callee6);}));return function updateCityAPICall(_x4){return _ref6.apply(this,arguments);};}();const deleteCityAPICall=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(params){var currentUser;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1)switch(_context7.prev=_context7.next){case 0:setModalVisible(false);currentUser=getCurrentUser();_context7.next=4;return axios.post(deleteCityAPI,{city_master_id:params},{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setToggleChange(!toggleChange);cityAlert(responseData.status,responseData.msg);}else{setToggleChange(!toggleChange);cityAlert(responseData.status,responseData.msg);}}).catch(error=>{console.log(error);});case 4:case\"end\":return _context7.stop();}},_callee7);}));return function deleteCityAPICall(_x5){return _ref7.apply(this,arguments);};}();//helper methods\n//pagination method\nconst renderPageList=()=>{const pageNumbers=[];for(let i=0;i<lastPageCount;i+=1){pageNumbers.push(/*#__PURE__*/React.createElement(DropdownItem,{key:i,onClick:()=>{setPageCount(i+1);}},i+1));}return pageNumbers;};//Alert helper methods\nconst cityAlert=(status,msg)=>{setAlertVisible(true);setAlertMsg(msg);if(status===1){setAlertColor(\"success\");}else{setAlertColor(\"danger\");}};const onDismissAlert=()=>{setAlertVisible(false);};//Modal helper methods\nconst toggleModal=city=>{setCityId(city);setModalVisible(!modalVisible);};const toggleUpdateModal=(status,city)=>{setButtonState(status);if(status==0){setCountryId(\"\");setStateId(\"\");setCityName(\"\");setStateList([]);setModalUpdateVisible(!modalUpdateVisible);}else{getCityByIdAPICall(city);setModalUpdateVisible(!modalUpdateVisible);}};//handle search input\nconst handleSearch=()=>{setPageCount(1);//   getChargerMappingAPICall();\n};//handle Country Select\nconst handleCountrySelect=country=>{setCountryId(country);getStateNamesAPICall(country);};//Form Validation Schema\nconst CityDetailsValidationSchema=yup.object().shape({state_id:yup.string().required(\"State is required\"),city_name:yup.string().required(\"City is required\")});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\"},/*#__PURE__*/React.createElement(\"span\",{className:\"page_title\"},\"City\"),/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"mt-2 default btn-sm float-right\",onClick:()=>toggleUpdateModal(0)},/*#__PURE__*/React.createElement(\"b\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-plus\"}),\" Add New\")),/*#__PURE__*/React.createElement(Separator,{className:\"mb-5 mt-1\"}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"4\"},/*#__PURE__*/React.createElement(\"div\",{className:\"ml-2 mb-2\"},/*#__PURE__*/React.createElement(InputGroup,null,/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Search\",value:searchBy,onChange:e=>setSearchBy(e.target.value)}),/*#__PURE__*/React.createElement(Button,{className:\"default search-icon\",color:\"primary\",outline:true,onClick:()=>handleSearch()},/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-magnifier\"}))))),/*#__PURE__*/React.createElement(Colxx,{md:\"8\"},/*#__PURE__*/React.createElement(\"div\",{className:\"text-right mr-5 mb-2\"},/*#__PURE__*/React.createElement(\"span\",{className:\"ml-5\"},\"Page \"),/*#__PURE__*/React.createElement(UncontrolledDropdown,{className:\"d-inline-block\"},/*#__PURE__*/React.createElement(DropdownToggle,{caret:true,color:\"outline-primary\",size:\"xs\",\"data-display\":\"static\"},pageCount),/*#__PURE__*/React.createElement(DropdownMenu,{className:\"dropdownMenu\"},renderPageList())),/*#__PURE__*/React.createElement(\"span\",null,\" of \"),lastPageCount))),/*#__PURE__*/React.createElement(Row,{className:\"mb-5\"},/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\"},/*#__PURE__*/React.createElement(Card,{className:\"mb-4\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(CardSubtitle,{className:\"mb-3\"},/*#__PURE__*/React.createElement(Alert,{color:alertColor,isOpen:alertVisible,toggle:onDismissAlert},alertMsg)),/*#__PURE__*/React.createElement(Table,{responsive:true,bordered:true,striped:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"#\"),/*#__PURE__*/React.createElement(\"th\",null,\"Country\"),/*#__PURE__*/React.createElement(\"th\",null,\"State\"),/*#__PURE__*/React.createElement(\"th\",null,\"City\"),/*#__PURE__*/React.createElement(\"th\",null,\"Action\"))),/*#__PURE__*/React.createElement(\"tbody\",null,isLoading?/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{className:\"text-center\",colSpan:\"5\"},/*#__PURE__*/React.createElement(\"div\",{className:\"custom-list-loading\"}))):listFlag?cityList.map((item,index)=>/*#__PURE__*/React.createElement(\"tr\",{key:index},/*#__PURE__*/React.createElement(\"th\",{scope:\"row\"},pageCount==1?index+1:(pageCount-1)*10+index+1),/*#__PURE__*/React.createElement(\"td\",null,item.country_name),/*#__PURE__*/React.createElement(\"td\",null,item.state_name),/*#__PURE__*/React.createElement(\"td\",null,item.city_name),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Button,{color:\"info\",className:\"default mr-1 btn-sm tbl_action_btn\",onClick:()=>toggleUpdateModal(1,item.id)},/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-pencil\"})),/*#__PURE__*/React.createElement(Button,{color:\"danger\",className:\"default btn-sm tbl_action_btn\",onClick:()=>{toggleModal(item.id);}},/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-trash\"}))))):/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{className:\"text-center text-danger\",colSpan:\"5\"},\"Data  Not  Found\")))))))),/*#__PURE__*/React.createElement(Modal,{isOpen:modalVisible,toggle:toggleModal},/*#__PURE__*/React.createElement(ModalHeader,{className:\"text-center\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"12\"},\"Are you sure you would like to delete this ?\"),/*#__PURE__*/React.createElement(Colxx,{md:\"12\"},/*#__PURE__*/React.createElement(Button,{color:\"success\",className:\"mt-4\",onClick:()=>deleteCityAPICall(cityId)},\"Delete\"),' ',/*#__PURE__*/React.createElement(Button,{color:\"danger\",className:\"mt-4 mr-2\",onClick:toggleModal},\"Cancel\"))))),/*#__PURE__*/React.createElement(Modal,{isOpen:modalUpdateVisible,toggle:toggleUpdateModal},/*#__PURE__*/React.createElement(Formik,{enableReinitialize:true,initialValues:{state_id:stateId,city_name:cityName},validationSchema:CityDetailsValidationSchema,onSubmit:values=>{console.log(values);if(buttonState==0){addCityAPICall(values);}else{const params={city_master_id:cityId,state_id:values.state_id,city_name:values.city_name};updateCityAPICall(params);}}},({handleChange,handleBlur,handleSubmit,values,touched,errors})=>/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ModalHeader,null,buttonState==0?\"Add City\":\"Update City\"),/*#__PURE__*/React.createElement(ModalBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Country\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"country_id\",value:countryId,onChange:e=>handleCountrySelect(e.target.value),onBlur:handleBlur},/*#__PURE__*/React.createElement(\"option\",{key:0},\"Select Country\"),countryList.map((item,index)=>/*#__PURE__*/React.createElement(\"option\",{key:index,value:item.id},item.country_name))),errors.country_id&&touched.country_id&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.country_id))),/*#__PURE__*/React.createElement(Colxx,{md:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"State\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"state_id\",value:values.state_id,onChange:handleChange,onBlur:handleBlur},/*#__PURE__*/React.createElement(\"option\",{key:0},\"Select State\"),stateList.map((item,index)=>/*#__PURE__*/React.createElement(\"option\",{key:index,value:item.id},item.state_name))),errors.state_id&&touched.state_id&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.state_id))),/*#__PURE__*/React.createElement(Colxx,{md:\"12\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"City\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"City\",name:\"city_name\",value:values.city_name,onChange:handleChange,onBlur:handleBlur}),errors.city_name&&touched.city_name&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.city_name))))),/*#__PURE__*/React.createElement(ModalFooter,null,/*#__PURE__*/React.createElement(Button,{color:\"success\",className:\"mt-4\",onClick:handleSubmit},buttonState==0?\"Add\":\"Update\"),' ',/*#__PURE__*/React.createElement(Button,{color:\"danger\",className:\"mt-4 mr-2\",onClick:()=>toggleUpdateModal(0)},\"Cancel\"))))));};export default CityMaster;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/pages/CityMaster.js"],"names":["React","useEffect","useState","Row","FormGroup","Label","Card","CardBody","CardSubtitle","Modal","ModalHeader","ModalBody","ModalFooter","Table","Button","DropdownItem","DropdownMenu","DropdownToggle","Alert","UncontrolledDropdown","Input","InputGroup","Colxx","Separator","getCurrentUser","getCountriesAPI","getStatesByCountryAPI","getCityListAPI","getCityByIdAPI","addCityAPI","updateCityAPI","deleteCityAPI","axios","Formik","yup","CityMaster","match","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","searchBy","setSearchBy","pageCount","setPageCount","lastPageCount","setLastPageCount","listFlag","setListFlag","toggleChange","setToggleChange","modalVisible","setModalVisible","modalUpdateVisible","setModalUpdateVisible","buttonState","setButtonState","isLoading","setIsLoading","countryList","setCountryList","stateList","setStateList","cityList","setCityList","countryId","setCountryId","stateId","setStateId","cityName","setCityName","cityId","setCityId","getCityListAPICall","getCountryNamesAPICall","currentUser","get","headers","Authorization","token","then","response","responseData","data","status","last_page","catch","error","cityAlert","msg","console","log","getStateNamesAPICall","country","post","country_id","getCityByIdAPICall","params","city_master_id","state_id","city_name","id","addCityAPICall","updateCityAPICall","deleteCityAPICall","renderPageList","pageNumbers","i","push","onDismissAlert","toggleModal","city","toggleUpdateModal","handleSearch","handleCountrySelect","CityDetailsValidationSchema","object","shape","string","required","e","target","value","map","item","index","country_name","state_name","values","handleChange","handleBlur","handleSubmit","touched","errors"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { \n  Row, FormGroup,Label,\n  Card, CardBody,CardSubtitle,\n  Modal, ModalHeader, ModalBody, ModalFooter, \n  Table, Button, \n  DropdownItem,DropdownMenu,DropdownToggle,Alert,UncontrolledDropdown,\n  Input,InputGroup\n} from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getCountriesAPI,getStatesByCountryAPI,getCityListAPI,getCityByIdAPI,addCityAPI,updateCityAPI,deleteCityAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst CityMaster = ({ match }) => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //flag to check whether data in list or not\n  const [listFlag,setListFlag] = useState(false);\n  //toggle to re-render page on add,updates,delete\n  const [toggleChange,setToggleChange] = useState(false);\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [modalUpdateVisible,setModalUpdateVisible] = useState(false);\n  //button state ... state 0 for add and 1 for update\n  const [buttonState,setButtonState] = useState();\n  //loader states\n  const [isLoading,setIsLoading] = useState(true);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  //default values state\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityName,setCityName] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n\n\n  useEffect(()=>{\n    getCityListAPICall();\n    getCountryNamesAPICall();\n  },[pageCount,toggleChange])\n\n  //API CALLS\n  const getCityListAPICall = async() => {\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getCityListAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setListFlag(true);\n          setLastPageCount(responseData.data.last_page);\n          setCityList(responseData.data.data);\n        }else{\n          setListFlag(false)\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        setListFlag(false)\n      })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            cityAlert(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n            cityAlert(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityByIdAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(getCityByIdAPI,\n    {city_master_id:params},\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      console.log(responseData.data);\n      getStateNamesAPICall(responseData.data.country_id);\n      setStateId(responseData.data.state_id);\n      setCountryId(responseData.data.country_id);\n      setCityName(responseData.data.city_name);\n      setCityId(responseData.data.id);\n    }else{\n        cityAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const addCityAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(addCityAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      setToggleChange(!toggleChange);\n      cityAlert(responseData.status,responseData.msg);\n    }else{\n      setToggleChange(!toggleChange);\n      cityAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const updateCityAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(updateCityAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      setToggleChange(!toggleChange);\n      cityAlert(responseData.status,responseData.msg);\n    }else{\n      cityAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const deleteCityAPICall = async(params) => {\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteCityAPI,\n    {city_master_id:params},\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      setToggleChange(!toggleChange);\n      cityAlert(responseData.status,responseData.msg);\n    }else{\n      setToggleChange(!toggleChange);\n      cityAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n\n  //helper methods\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const cityAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }              \n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Modal helper methods\n  const toggleModal = (city) => {\n    setCityId(city);    \n    setModalVisible(!modalVisible);\n  }\n  const toggleUpdateModal = (status,city) => {\n    setButtonState(status);\n    if (status == 0) {\n        setCountryId(\"\");\n        setStateId(\"\");\n        setCityName(\"\");\n        setStateList([]);\n        setModalUpdateVisible(!modalUpdateVisible);   \n    } else {\n      getCityByIdAPICall(city);\n      setModalUpdateVisible(!modalUpdateVisible);\n    }\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n    //   getChargerMappingAPICall();\n  }\n  //handle Country Select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    getStateNamesAPICall(country)\n  }\n  //Form Validation Schema\n  const CityDetailsValidationSchema = yup.object().shape({\n    state_id:yup.string()\n        .required(\"State is required\"),\n    city_name:yup.string()\n        .required(\"City is required\"),\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">City</span>\n            <Button color=\"primary\" className=\"mt-2 default btn-sm float-right\" onClick={()=>toggleUpdateModal(0)}>\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </Button>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n          <div className=\"text-right mr-5 mb-2\">\n              <span className=\"ml-5\">Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}              \n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Country</th>\n                    <th>State</th>\n                    <th>City</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"5\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    listFlag?\n                        cityList.map((item,index)=>\n                          <tr key={index}>\n                            <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                            <td>{item.country_name}</td>\n                            <td>{item.state_name}</td>\n                            <td>{item.city_name}</td>\n                            <td>\n                              <Button color=\"info\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>toggleUpdateModal(1,item.id)}>\n                                  <i className=\"glyph-icon simple-icon-pencil\"></i>\n                              </Button>\n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>  \n                            </td>\n                          </tr>\n                        ):<tr>\n                            <td className=\"text-center text-danger\" colSpan=\"5\">Data  Not  Found</td>\n                        </tr>\n                           \n                      }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Modal\n        isOpen={modalVisible}\n        toggle={toggleModal} >\n        <ModalHeader className=\"text-center\">\n          <Row>\n            <Colxx md=\"12\">\n              Are you sure you would like to delete this ?\n            </Colxx>\n            <Colxx md=\"12\">\n              <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteCityAPICall(cityId)}>\n                Delete \n              </Button>{' '}\n              <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                Cancel\n              </Button>\n            </Colxx>\n          </Row>\n        </ModalHeader>\n      </Modal>\n      <Modal\n        isOpen={modalUpdateVisible}\n        toggle={toggleUpdateModal} >\n          <Formik\n              enableReinitialize={true}\n              initialValues={{\n                state_id:stateId,\n                city_name:cityName,\n              }}\n              validationSchema={CityDetailsValidationSchema} \n              onSubmit={(values)=>{\n              console.log(values);\n              if (buttonState==0) {\n                addCityAPICall(values);\n              } else {\n                const params={city_master_id:cityId,state_id:values.state_id,city_name:values.city_name};\n                updateCityAPICall(params);\n              }\n              }} >\n              {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n                  <>\n                  <ModalHeader>\n                  {buttonState==0?\"Add City\":\"Update City\"}\n                  </ModalHeader>  \n                  <ModalBody>\n                    <Row>\n                        <Colxx md=\"12\">\n                          <FormGroup>\n                            <Label>\n                              Country\n                            </Label>\n                            <Input\n                            type=\"select\"\n                            name=\"country_id\"\n                            value={countryId}\n                            onChange={e=>handleCountrySelect(e.target.value)}\n                            onBlur={handleBlur}\n                            >\n                              <option key={0}>Select Country</option>\n                              {countryList.map((item,index)=>\n                                <option key={index} value={item.id}>{item.country_name}</option>\n                              )}\n                            </Input>\n                            {errors.country_id && touched.country_id &&(\n                                <span className=\"error\">{errors.country_id}</span>\n                            )}\n                          </FormGroup>    \n                        </Colxx>\n                        <Colxx md=\"12\">\n                          <FormGroup>\n                            <Label>\n                              State\n                            </Label>\n                            <Input\n                            type=\"select\"\n                            name=\"state_id\"\n                            value={values.state_id}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            >\n                              <option key={0}>Select State</option>\n                              {stateList.map((item,index)=>\n                                <option key={index} value={item.id}>{item.state_name}</option>\n                              )}\n                            </Input>\n                            {errors.state_id && touched.state_id &&(\n                                <span className=\"error\">{errors.state_id}</span>\n                            )}\n                          </FormGroup>    \n                        </Colxx>\n                        <Colxx md=\"12\">\n                          <FormGroup>\n                            <Label>\n                              City\n                            </Label>\n                            <Input\n                            type=\"text\"\n                            placeholder=\"City\"\n                            name=\"city_name\"\n                            value={values.city_name}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            />\n                            {errors.city_name && touched.city_name &&(\n                                <span className=\"error\">{errors.city_name}</span>\n                            )}\n                        </FormGroup>    \n                      </Colxx>\n                    </Row>\n                  </ModalBody>\n                  <ModalFooter>\n                  <Button color=\"success\" className=\"mt-4\" onClick={handleSubmit}>\n                  {buttonState==0?\"Add\":\"Update\"}\n                      </Button>{' '}\n                      <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={()=>toggleUpdateModal(0)}>\n                      Cancel\n                      </Button>\n                  </ModalFooter>\n                  </>\n              )}\n          </Formik>\n      </Modal>\n    </>\n  );\n};\nexport default CityMaster;\n"]},"metadata":{},"sourceType":"module"}