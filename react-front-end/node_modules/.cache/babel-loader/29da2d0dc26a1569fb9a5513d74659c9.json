{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Row,FormGroup,Card,CardBody,Label,Input,Button,Alert}from'reactstrap';import Select from'react-select';import{Colxx,Separator}from'../../../components/common/CustomBootstrap';import CustomSelectInput from'../../../components/common/CustomSelectInput';import{getCurrentUser}from'../../../helpers/Utils';import{adminRoot,addUserAPI,getUserRolesAPI}from'../../../constants/defaultValues';import axios from'axios';import{Formik}from'formik';import*as yup from'yup';import{useHistory}from\"react-router-dom\";const AddUser=()=>{const _useState=useState([]),_useState2=_slicedToArray(_useState,2),selectedOptions=_useState2[0],setSelectedOptions=_useState2[1];//user roles\nconst _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),userRolesList=_useState4[0],setUserRolesList=_useState4[1];//state to disable button on click\nconst _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),buttonDisabled=_useState6[0],setButtonDisabled=_useState6[1];//alert states\nconst _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),alertVisible=_useState8[0],setAlertVisible=_useState8[1];const _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),alertMsg=_useState10[0],setAlertMsg=_useState10[1];const _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),alertColor=_useState12[0],setAlertColor=_useState12[1];const history=useHistory();useEffect(()=>{getUserRolesAPICall();},[]);//API CALLS\nconst getUserRolesAPICall=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var currentUser;return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:currentUser=getCurrentUser();_context.next=3;return axios.get(getUserRolesAPI,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;let userRoles=[];if(responseData.status===1){responseData.data.map((item,index)=>{userRoles.push({label:item.name,value:item.id,key:index});});setUserRolesList(userRoles);}else{console.log(responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context.stop();}},_callee);}));return function getUserRolesAPICall(){return _ref.apply(this,arguments);};}();const addUserAPICall=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(params){var currentUser;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:setButtonDisabled(true);currentUser=getCurrentUser();_context2.next=4;return axios.post(addUserAPI,params,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){history.push({pathname:adminRoot+'/pages/user',state:{responseStatus:responseData.status,responseMsg:responseData.msg}});}else{addUserAlert(responseData.msg);setButtonDisabled(false);}}).catch(error=>{setButtonDisabled(false);console.log(error);});case 4:case\"end\":return _context2.stop();}},_callee2);}));return function addUserAPICall(_x){return _ref2.apply(this,arguments);};}();//Alert helper methods\nconst addUserAlert=msg=>{setAlertVisible(true);setAlertMsg(msg);setAlertColor(\"danger\");};const onDismissAlert=()=>{setAlertVisible(false);};//Form Validation Schema\nconst UserDetailsValidationSchema=yup.object().shape({name:yup.string().required(\"Name name is required\"),email:yup.string().email(\"Inavlid email format\").required(\"Email is required\"),contact_number:yup.string().matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\").length(10,\"Invalid contact number length\").required(\"Contact number is required\"),username:yup.string().required(\"Username is required\"),password:yup.string().required(\"Password is required\"),confirm_password:yup.string().equals([yup.ref('password')],\"Passwords must match\").required(\"Password is required\")});const initialValues={name:\"\",email:\"\",contact_number:\"\",username:\"\",password:\"\",confirm_password:\"\"};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\"},/*#__PURE__*/React.createElement(\"span\",{className:\"page_title\"},\"Add User\"),/*#__PURE__*/React.createElement(\"a\",{href:\"User\",className:\"mt-2 btn-primary default btn-sm float-right\"},/*#__PURE__*/React.createElement(\"b\",null,/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-list\"}),\" User List\")),/*#__PURE__*/React.createElement(Separator,{className:\"mb-5 mt-1\"}))),/*#__PURE__*/React.createElement(Formik,{initialValues:initialValues,validationSchema:UserDetailsValidationSchema,onSubmit:values=>{const params={name:values.name,email:values.email,roles:[selectedOptions.label],contact_number:values.contact_number,username:values.username,password:values.password};addUserAPICall(params);}},({handleChange,handleBlur,handleSubmit,values,touched,errors})=>/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",className:\"mb-4\"},/*#__PURE__*/React.createElement(Card,{className:\"mb-4\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"12\"},/*#__PURE__*/React.createElement(Alert,{color:alertColor,isOpen:alertVisible,toggle:onDismissAlert},alertMsg)),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Name\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Full Name \",name:\"name\",value:values.name,onChange:handleChange,onBlur:handleBlur,className:errors.name&&touched.name?\"input-error\":null}),errors.name&&touched.name&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.name))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Email\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Email\",value:values.email,name:\"email\",onChange:handleChange,onBlur:handleBlur,className:errors.email&&touched.email?\"input-error\":null}),errors.email&&touched.email&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.email))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Role\"),/*#__PURE__*/React.createElement(Select,{components:{Input:CustomSelectInput},className:\"react-select\",classNamePrefix:\"react-select\",name:\"form-field-name\",value:selectedOptions,onChange:setSelectedOptions,options:userRolesList}))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Contact Number\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Contact Number\",name:\"contact_number\",value:values.contact_number,onChange:handleChange,onBlur:handleBlur,className:errors.contact_number&&touched.contact_number?\"input-error\":null}),errors.contact_number&&touched.contact_number&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.contact_number))),/*#__PURE__*/React.createElement(Colxx,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Username\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",name:\"username\",placeholder:\"Username\",value:values.username,onChange:handleChange,onBlur:handleBlur,className:errors.username&&touched.username?\"input-error\":null}),errors.username&&touched.username&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.username))),/*#__PURE__*/React.createElement(Colxx,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Password\"),/*#__PURE__*/React.createElement(Input,{type:\"password\",placeholder:\"Password\",name:\"password\",value:values.password,onChange:handleChange,onBlur:handleBlur,className:errors.password&&touched.password?\"input-error\":null}),errors.password&&touched.password&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.password))),/*#__PURE__*/React.createElement(Colxx,{md:3},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Confirm Password\"),/*#__PURE__*/React.createElement(Input,{type:\"password\",placeholder:\"Confirm Password\",name:\"confirm_password\",value:values.confirm_password,onChange:handleChange,onBlur:handleBlur,className:errors.confirm_password&&touched.confirm_password?\"input-error\":null}),errors.confirm_password&&touched.confirm_password&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.confirm_password)))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"12\",className:\"text-center\"},/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"default mr-2\",onClick:handleSubmit,disabled:buttonDisabled},/*#__PURE__*/React.createElement(\"b\",null,\"Add\")),/*#__PURE__*/React.createElement(Button,{color:\"light\",className:\"default\",onClick:()=>{history.goBack();}},/*#__PURE__*/React.createElement(\"b\",null,\"Cancel\")))))))))));};export default AddUser;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/pages/AddUser.js"],"names":["React","useState","useEffect","Row","FormGroup","Card","CardBody","Label","Input","Button","Alert","Select","Colxx","Separator","CustomSelectInput","getCurrentUser","adminRoot","addUserAPI","getUserRolesAPI","axios","Formik","yup","useHistory","AddUser","selectedOptions","setSelectedOptions","userRolesList","setUserRolesList","buttonDisabled","setButtonDisabled","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","history","getUserRolesAPICall","currentUser","get","headers","Authorization","token","then","response","responseData","data","userRoles","status","map","item","index","push","label","name","value","id","key","console","log","msg","catch","error","addUserAPICall","params","post","pathname","state","responseStatus","responseMsg","addUserAlert","onDismissAlert","UserDetailsValidationSchema","object","shape","string","required","email","contact_number","matches","length","username","password","confirm_password","equals","ref","initialValues","values","roles","handleChange","handleBlur","handleSubmit","touched","errors","goBack"],"mappings":"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","sourcesContent":["import React, { useState,useEffect }  from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot, addUserAPI,getUserRolesAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nimport { useHistory } from \"react-router-dom\";\n\nconst AddUser = () => {\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  //user roles\n  const [userRolesList,setUserRolesList] = useState([]);\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    getUserRolesAPICall();\n  },[])\n\n   //API CALLS\n   const getUserRolesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getUserRolesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let userRoles=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           userRoles.push({label:item.name,value:item.id,key:index})\n         })\n         setUserRolesList(userRoles);\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addUserAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addUserAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/user',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          addUserAlert(responseData.msg);\n          setButtonDisabled(false);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Alert helper methods\n  const addUserAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const UserDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name name is required\"),\n    email:yup.string()\n        .email(\"Inavlid email format\")\n        .required(\"Email is required\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n        .required(\"Contact number is required\"),\n    username:yup.string()\n        .required(\"Username is required\"),\n    password:yup.string()\n        .required(\"Password is required\"),\n    confirm_password:yup.string()\n        .equals([yup.ref('password')], \"Passwords must match\")\n        .required(\"Password is required\"),\n  });\n\n  const initialValues = {\n    name:\"\",\n    email:\"\",\n    contact_number:\"\",\n    username:\"\",\n    password:\"\",\n    confirm_password:\"\",\n  };\n  \n  return (    \n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add User</span>\n            <a href=\"User\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> User List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={UserDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n            name:values.name,\n            email:values.email,\n            roles:[selectedOptions.label],\n            contact_number:values.contact_number,\n            username:values.username,\n            password:values.password\n          }\n          addUserAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Full Name \"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Email\"\n                                  value={values.email}\n                                  name=\"email\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.email && touched.email ? \"input-error\":null}\n                                />\n                                {errors.email && touched.email &&(\n                                  <span className=\"error\">{errors.email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Role\n                                </Label>\n                                <Select\n                                  components={{ Input: CustomSelectInput }}\n                                  className=\"react-select\"\n                                  classNamePrefix=\"react-select\"\n                                  name=\"form-field-name\"\n                                  value={selectedOptions}\n                                  onChange={setSelectedOptions}\n                                  options={userRolesList}                                  \n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Username\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"username\"\n                                  placeholder=\"Username\"\n                                  value={values.username}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.username && touched.username ? \"input-error\":null}\n                                />\n                                 {errors.username && touched.username &&(\n                                  <span className=\"error\">{errors.username}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Password\n                                </Label>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Password\"\n                                  name=\"password\"\n                                  value={values.password}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.password && touched.password ? \"input-error\":null}\n                                />\n                                {errors.password && touched.password &&(\n                                  <span className=\"error\">{errors.password}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Confirm Password\n                                </Label>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Confirm Password\"\n                                  name=\"confirm_password\"\n                                  value={values.confirm_password}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.confirm_password && touched.confirm_password ? \"input-error\":null}\n                                />\n                                {errors.confirm_password && touched.confirm_password &&(\n                                  <span className=\"error\">{errors.confirm_password}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default AddUser;"]},"metadata":{},"sourceType":"module"}