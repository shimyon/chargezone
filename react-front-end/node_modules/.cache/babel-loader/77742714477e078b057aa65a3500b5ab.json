{"ast":null,"code":"import React from'react';import{Card,CardBody,CardTitle,UncontrolledDropdown,DropdownItem,DropdownToggle,DropdownMenu,Spinner}from'reactstrap';import IntlMessages from'../../../../helpers/IntlMessages';import{DoughnutChart}from'../../../../components/charts';import{ThemeColors}from'../../../../helpers/ThemeColors';const colors=ThemeColors();const StationDoughnut=({controls=false})=>{return/*#__PURE__*/React.createElement(Card,{className:\"dashboard-my-card\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(CardTitle,null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"dashboard.station\"}),controls&&/*#__PURE__*/React.createElement(\"div\",{className:\"btn-group float-right float-none-xs \"},/*#__PURE__*/React.createElement(UncontrolledDropdown,null,/*#__PURE__*/React.createElement(DropdownToggle,{caret:true,color:\"primary\",className:\"btn-xs\",outline:true},/*#__PURE__*/React.createElement(IntlMessages,{id:\"dashboard.all\"})),/*#__PURE__*/React.createElement(DropdownMenu,{right:true},/*#__PURE__*/React.createElement(DropdownItem,null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"dashboard.operational\"})),/*#__PURE__*/React.createElement(DropdownItem,null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"dashboard.faulty\"})))))),loading2&&/*#__PURE__*/React.createElement(\"div\",{className:\"dashboard-donut-chart\"},/*#__PURE__*/React.createElement(DoughnutChart,{data:doughnutChartData1})),\" \",!loading2&&!blankMsg&&/*#__PURE__*/React.createElement(\"div\",{className:\"dashboard-donut-chart\"},/*#__PURE__*/React.createElement(DoughnutChart,{data:doughnutChartData})),blankMsg&&/*#__PURE__*/React.createElement(\"div\",{className:\"dashboard-donut-chart text-center\"},\"Data Not Found\")));};const doughnutChartData1={labels:['Operational','Faulty'],datasets:[{label:'',borderColor:[colors.themeColor2,colors.themeColor1],backgroundColor:[colors.themeColor3_10,colors.themeColor2_10],borderWidth:2,data:[1,0]}]};const doughnutChartData={labels:['Operational','Faulty'],datasets:[{label:'',borderColor:[colors.themeColor2,colors.themeColor1],backgroundColor:[colors.themeColor3_10,colors.themeColor2_10],borderWidth:2,data:[1,0]}]};let blankMsg=false;const setBlankMsg=value=>{blankMsg=value;};let loading2=true;const setLoading2=value=>{loading2=value;};//const setChargerChartData = (index,value) => {doughnutChartData.datasets[0].data[index]=value;};\nconst setStationChartData=(oprntl,flty)=>{doughnutChartData.datasets[0].data[0]=oprntl;doughnutChartData.datasets[0].data[1]=flty;if(oprntl==0&&flty==0){setBlankMsg(true);}else{setBlankMsg(false);}setLoading2(false);};export{StationDoughnut,setLoading2,setStationChartData};","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/dashboard/manager/StationDoughnut.js"],"names":["React","Card","CardBody","CardTitle","UncontrolledDropdown","DropdownItem","DropdownToggle","DropdownMenu","Spinner","IntlMessages","DoughnutChart","ThemeColors","colors","StationDoughnut","controls","loading2","doughnutChartData1","blankMsg","doughnutChartData","labels","datasets","label","borderColor","themeColor2","themeColor1","backgroundColor","themeColor3_10","themeColor2_10","borderWidth","data","setBlankMsg","value","setLoading2","setStationChartData","oprntl","flty"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, CardBody, CardTitle, UncontrolledDropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu, Spinner} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { DoughnutChart } from '../../../../components/charts';\n\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\n\nconst colors = ThemeColors();\n\n\nconst StationDoughnut =  ({ controls = false })  => {\n  return (\n    <Card className=\"dashboard-my-card\">\n      <CardBody>\n         <CardTitle>\n          <IntlMessages id=\"dashboard.station\" />\n          {controls && (\n          <div className=\"btn-group float-right float-none-xs \">\n            <UncontrolledDropdown>\n              <DropdownToggle caret color=\"primary\" className=\"btn-xs\" outline>\n                <IntlMessages id=\"dashboard.all\" />\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.operational\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.faulty\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        )}\n        </CardTitle>\n      {loading2 && (\n                  <div className=\"dashboard-donut-chart\">\n                  <DoughnutChart  data={doughnutChartData1} />\n                </div>\n              ) } { (!loading2  && !blankMsg)  &&\n      <div className=\"dashboard-donut-chart\">\n        <DoughnutChart  data={doughnutChartData} />\n      </div>\n}\n{ blankMsg &&\n      <div className=\"dashboard-donut-chart text-center\">\n        Data Not Found\n      </div>\n}\n      </CardBody>\n    </Card>\n  );\n};\nconst doughnutChartData1 = {\n  labels: ['Operational', 'Faulty'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [ colors.themeColor2, colors.themeColor1],\n      backgroundColor: [\n        colors.themeColor3_10,\n        colors.themeColor2_10,\n      ],\n      borderWidth: 2,\n      data: [1, 0],\n    },\n  ],\n};\nconst doughnutChartData = {\n  labels: ['Operational', 'Faulty'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [ colors.themeColor2, colors.themeColor1],\n      backgroundColor: [\n        colors.themeColor3_10,\n        colors.themeColor2_10,\n      ],\n      borderWidth: 2,\n      data: [1, 0],\n    },\n  ],\n};\nlet blankMsg=false;\nconst  setBlankMsg = (value) => {blankMsg=value};\n\nlet loading2=true;\nconst  setLoading2 = (value) => {loading2=value};\n//const setChargerChartData = (index,value) => {doughnutChartData.datasets[0].data[index]=value;};\nconst setStationChartData = (oprntl,flty) => {\n  doughnutChartData.datasets[0].data[0]=oprntl;\n  doughnutChartData.datasets[0].data[1]=flty;\n\n\n  if(oprntl==0 && flty==0)\n  {\n    setBlankMsg(true);\n    \n  }\n  else\n {\n  setBlankMsg(false);\n }\n  setLoading2(false);\n  \n\n};\n\nexport  {StationDoughnut,setLoading2,setStationChartData};\n"]},"metadata":{},"sourceType":"module"}