{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\src\\\\views\\\\app\\\\reports\\\\chargingSummary.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, Card, CardBody, FormGroup, Label, Input, Table, Button, Alert } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport { getStationsAPI, getCountriesAPI, getStatesByCountryAPI, getCitiesByStateAPI, getFleetOperatorAPI } from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nconst ChargingSummary = ({}) => {\n  //date states\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        fromDate = _useState2[0],\n        setFromDate = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        toDate = _useState4[0],\n        setToDate = _useState4[1]; //alert states\n\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        alertVisible = _useState6[0],\n        setAlertVisible = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        alertMsg = _useState8[0],\n        setAlertMsg = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        alertColor = _useState10[0],\n        setAlertColor = _useState10[1]; //state to disable button on click\n\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        buttonDisabled = _useState12[0],\n        setButtonDisabled = _useState12[1]; //loader state\n\n\n  const _useState13 = useState(true),\n        _useState14 = _slicedToArray(_useState13, 2),\n        isLoading = _useState14[0],\n        setIsLoading = _useState14[1]; // list state\n\n\n  const _useState15 = useState([]),\n        _useState16 = _slicedToArray(_useState15, 2),\n        countryList = _useState16[0],\n        setCountryList = _useState16[1];\n\n  const _useState17 = useState([]),\n        _useState18 = _slicedToArray(_useState17, 2),\n        stateList = _useState18[0],\n        setStateList = _useState18[1];\n\n  const _useState19 = useState([]),\n        _useState20 = _slicedToArray(_useState19, 2),\n        cityList = _useState20[0],\n        setCityList = _useState20[1];\n\n  const _useState21 = useState([]),\n        _useState22 = _slicedToArray(_useState21, 2),\n        stationNames = _useState22[0],\n        setStationNames = _useState22[1];\n\n  const _useState23 = useState([]),\n        _useState24 = _slicedToArray(_useState23, 2),\n        fleetOpNames = _useState24[0],\n        setFleetOpNames = _useState24[1];\n\n  const _useState25 = useState(\"\"),\n        _useState26 = _slicedToArray(_useState25, 2),\n        countryId = _useState26[0],\n        setCountryId = _useState26[1];\n\n  const _useState27 = useState(\"\"),\n        _useState28 = _slicedToArray(_useState27, 2),\n        stateId = _useState28[0],\n        setStateId = _useState28[1];\n\n  const _useState29 = useState(\"\"),\n        _useState30 = _slicedToArray(_useState29, 2),\n        cityId = _useState30[0],\n        setCityId = _useState30[1]; //multiselect state\n\n\n  const _useState31 = useState([]),\n        _useState32 = _slicedToArray(_useState31, 2),\n        fleetSelectedOptions = _useState32[0],\n        setFleetSelectedOptions = _useState32[1];\n\n  const _useState33 = useState([]),\n        _useState34 = _slicedToArray(_useState33, 2),\n        stationSelectedOptions = _useState34[0],\n        setStationSelectedOptions = _useState34[1];\n\n  useEffect(() => {\n    getCountryNamesAPICall();\n    GetStationNamesAPICall();\n    GetFleetOperatorAPICall();\n  }, []); //API calls\n\n  const GetStationNamesAPICall = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context.next = 3;\n            return axios.get(getStationsAPI, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n              let stations = [];\n\n              if (responseData.status === 1) {\n                responseData.data.map((item, index) => {\n                  stations.push({\n                    label: item.name,\n                    value: item.hub_master_id,\n                    key: index\n                  });\n                });\n                setStationNames(stations);\n              } else {\n                console.log(responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function GetStationNamesAPICall() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const GetFleetOperatorAPICall = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context2.next = 3;\n            return axios.get(getFleetOperatorAPI, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n              let fleet = [];\n\n              if (responseData.status === 1) {\n                responseData.data.map((item, index) => {\n                  fleet.push({\n                    label: item.name,\n                    value: item.fleet_operator_id,\n                    key: index\n                  });\n                });\n                setFleetOpNames(fleet);\n              } else {\n                console.log(responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function GetFleetOperatorAPICall() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const getCountryNamesAPICall = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context3.next = 3;\n            return axios.get(getCountriesAPI, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setCountryList(responseData.data);\n              } else {\n                console.log(responseData.status, responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n\n    return function getCountryNamesAPICall() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  const getStateNamesAPICall = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(country) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context4.next = 3;\n            return axios.post(getStatesByCountryAPI, {\n              country_id: country\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setStateList(responseData.data);\n              } else {\n                console.log(responseData.status, responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n\n    return function getStateNamesAPICall(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  const getCityNamesAPICall = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(state) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context5.next = 3;\n            return axios.post(getCitiesByStateAPI, {\n              state_id: state\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setCityList(responseData.data);\n              } else {\n                console.log(responseData.status, responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n\n    return function getCityNamesAPICall(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }(); //helper methods\n  //Alert helper methods\n\n\n  const chargingSummaryAlert = msg => {\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  };\n\n  const onDismissAlert = () => {\n    setAlertVisible(false);\n  }; //handle country select\n\n\n  const handleCountrySelect = country => {\n    setCountryId(country);\n    getStateNamesAPICall(country);\n  }; //handle state select\n\n\n  const handleStateSelect = state => {\n    setStateId(state);\n    getCityNamesAPICall(state);\n  }; //handle city select\n\n\n  const handleCitySelect = city => {\n    setCityId(city);\n  }; //Form Validation Schema\n\n\n  const ChargingSummaryDetailsValidationSchema = yup.object().shape({\n    charger_id: yup.string().required(\"Charger is required\"),\n    connector_id: yup.string().required(\"Connector is required\")\n  });\n  const initialValues = {\n    charger_id: \"\",\n    connector_id: \"\"\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"page_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, \"Charging Summary\"), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    validationSchema: ChargingSummaryDetailsValidationSchema,\n    onSubmit: values => {\n      const fleetSelected = [];\n      fleetSelectedOptions.map(item => {\n        fleetSelected.push(item.value);\n      });\n      const stationSelected = [];\n      stationSelectedOptions.map(item => {\n        stationSelected.push(item.value);\n      });\n      const params = {\n        country_id: countryId,\n        state_id: stateId,\n        city_id: cityId,\n        fleet_operator_id: fleetSelected,\n        hub_id: stationSelectedOptions,\n        charger_id: values.charger_id,\n        connector_id: values.connector_id,\n        from_date: fromDate,\n        to_date: toDate\n      };\n      console.log(params);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }\n  }, ({\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    values,\n    touched,\n    errors\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  }, \"Select Option\")), /*#__PURE__*/React.createElement(Colxx, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"default mr-2 float-right\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-check font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 31\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 97\n    }\n  }, \"Generate Report\")))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: alertColor,\n    isOpen: alertVisible,\n    toggle: onDismissAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 31\n    }\n  }, alertMsg)), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 4,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 33\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"country_id\",\n    value: countryId,\n    onChange: e => handleCountrySelect(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 35\n    }\n  }, \"Select Country\"), countryList.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 37\n    }\n  }, item.country_name))))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 4,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 33\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"state_id\",\n    value: stateId,\n    onChange: e => handleStateSelect(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 35\n    }\n  }, \"Select State\"), stateList.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 37\n    }\n  }, item.state_name))))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 4,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 33\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"city_id\",\n    value: cityId,\n    onChange: e => handleCitySelect(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 35\n    }\n  }, \"Select City\"), cityList.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 37\n    }\n  }, item.city_name))))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 6,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 37\n    }\n  }, \"Fleet Operator\"), /*#__PURE__*/React.createElement(Select, {\n    components: {\n      Input: CustomSelectInput\n    },\n    className: \"react-select\",\n    classNamePrefix: \"react-select\",\n    isMulti: true,\n    name: \"form-field-name\",\n    value: fleetSelectedOptions,\n    onChange: setFleetSelectedOptions,\n    options: fleetOpNames,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 6,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 37\n    }\n  }, \"Station\"), /*#__PURE__*/React.createElement(Select, {\n    components: {\n      Input: CustomSelectInput\n    },\n    className: \"react-select\",\n    classNamePrefix: \"react-select\",\n    isMulti: true,\n    name: \"form-field-name\",\n    value: stationSelectedOptions,\n    onChange: setStationSelectedOptions,\n    options: stationNames,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 33\n    }\n  }, \"Charger\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Charger Id\",\n    name: \"charger_id\",\n    value: values.charger_id,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 33\n    }\n  }), errors.charger_id && touched.charger_id && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 35\n    }\n  }, errors.charger_id))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 33\n    }\n  }, \"Connector\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Connector Id\",\n    name: \"connector_id\",\n    value: values.connector_id,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 33\n    }\n  }), errors.connector_id && touched.connector_id && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 35\n    }\n  }, errors.connector_id))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 33\n    }\n  }, \"From Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n    placeholderText: \"From Date\",\n    selected: fromDate,\n    onChange: date => setFromDate(date),\n    dateFormat: \"dd/MM/yyyy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 33\n    }\n  }, \"To Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n    placeholderText: \"To Date\",\n    selected: toDate,\n    onChange: date => setToDate(date),\n    dateFormat: \"dd/MM/yyyy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 33\n    }\n  })))))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    sm: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 17\n    }\n  }, \"Charging Summary\"), /*#__PURE__*/React.createElement(Table, {\n    responsive: true,\n    bordered: true,\n    striped: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 23\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 23\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 23\n    }\n  }, \"Charger Id\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 23\n    }\n  }, \"Connector ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 23\n    }\n  }, \"BIN\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 23\n    }\n  }, \"Start SoC\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 23\n    }\n  }, \"Start Battery Voltage\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 23\n    }\n  }, \"Start Whr\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 23\n    }\n  }, \"Start Time\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 23\n    }\n  }, \"Stop SoC\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 23\n    }\n  }, \"Stop Battery Voltage\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 23\n    }\n  }, \"Stop Whr\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 23\n    }\n  }, \"Stop Time\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 23\n    }\n  }, \"Charging Duration\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 23\n    }\n  }, \"Check cell balancing happened\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 23\n    }\n  }, \"Energy exchanged (DC)\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 23\n    }\n  }, \"Unit/SoC\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 23\n    }\n  }, \"Session ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 23\n    }\n  }, \"Energy Meter Reading\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 23\n    }\n  }, \"1\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 23\n    }\n  }, \"Country 1\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 23\n    }\n  }, \"State 1\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 23\n    }\n  }, \"City 1\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 23\n    }\n  }, \"Station 1\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 23\n    }\n  }, \"12\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 23\n    }\n  }, \"12\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 23\n    }\n  }, \"12\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 23\n    }\n  }, \"12\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 23\n    }\n  }, \"12\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 23\n    }\n  }, \"12\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 23\n    }\n  }, \"12\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 23\n    }\n  }, \"12\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 23\n    }\n  }, \"12\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 23\n    }\n  }, \"12\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 23\n    }\n  }, \"12\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 23\n    }\n  }, \"12\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 23\n    }\n  }, \"12\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 23\n    }\n  }, \"12\")))))))));\n};\n\nexport default ChargingSummary;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/reports/chargingSummary.js"],"names":["React","useState","useEffect","Row","Card","CardBody","FormGroup","Label","Input","Table","Button","Alert","DatePicker","Colxx","Separator","CustomSelectInput","Select","getCurrentUser","getStationsAPI","getCountriesAPI","getStatesByCountryAPI","getCitiesByStateAPI","getFleetOperatorAPI","axios","Formik","yup","ChargingSummary","fromDate","setFromDate","toDate","setToDate","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","buttonDisabled","setButtonDisabled","isLoading","setIsLoading","countryList","setCountryList","stateList","setStateList","cityList","setCityList","stationNames","setStationNames","fleetOpNames","setFleetOpNames","countryId","setCountryId","stateId","setStateId","cityId","setCityId","fleetSelectedOptions","setFleetSelectedOptions","stationSelectedOptions","setStationSelectedOptions","getCountryNamesAPICall","GetStationNamesAPICall","GetFleetOperatorAPICall","currentUser","get","headers","Authorization","token","then","response","responseData","data","stations","status","map","item","index","push","label","name","value","hub_master_id","key","console","log","msg","catch","error","fleet","fleet_operator_id","getStateNamesAPICall","country","post","country_id","getCityNamesAPICall","state","state_id","chargingSummaryAlert","onDismissAlert","handleCountrySelect","handleStateSelect","handleCitySelect","city","ChargingSummaryDetailsValidationSchema","object","shape","charger_id","string","required","connector_id","initialValues","values","fleetSelected","stationSelected","params","city_id","hub_id","from_date","to_date","handleChange","handleBlur","handleSubmit","touched","errors","e","target","id","country_name","state_name","city_name","date"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody, FormGroup, Label,\n  Input, Table,Button,Alert\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getStationsAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,getFleetOperatorAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst ChargingSummary = ({}) => {\n  //date states\n  const [fromDate,setFromDate] = useState();\n  const [toDate,setToDate] = useState();\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(true);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [stationNames,setStationNames] = useState([]);\n  const [fleetOpNames,setFleetOpNames] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n  //multiselect state\n  const [fleetSelectedOptions, setFleetSelectedOptions] = useState([]);\n  const [stationSelectedOptions, setStationSelectedOptions] = useState([]);\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n    GetStationNamesAPICall();\n    GetFleetOperatorAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      let stations=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           stations.push({label:item.name,value:item.hub_master_id,key:index})\n         })\n         setStationNames(stations);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetFleetOperatorAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      let fleet=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           fleet.push({label:item.name,value:item.fleet_operator_id,key:index})\n         })\n         setFleetOpNames(fleet);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const chargingSummaryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    getCityNamesAPICall(state);\n  }\n  //handle city select\n  const handleCitySelect = (city) => {\n    setCityId(city);\n  }\n  //Form Validation Schema\n  const ChargingSummaryDetailsValidationSchema = yup.object().shape({\n    charger_id:yup.string()\n        .required(\"Charger is required\"),\n    connector_id:yup.string()\n        .required(\"Connector is required\"),\n  });\n\n  const initialValues = {\n    charger_id:\"\",\n    connector_id:\"\",\n  };\n  \n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Charging Summary</span>\n        <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={ChargingSummaryDetailsValidationSchema} \n        onSubmit={(values)=>{\n            const fleetSelected = [];\n            fleetSelectedOptions.map(item=>{\n                fleetSelected.push(item.value)\n            })\n            const stationSelected = [];\n            stationSelectedOptions.map(item=>{\n                stationSelected.push(item.value)\n            })\n          const params = {\n            country_id:countryId,\n            state_id:stateId,\n            city_id:cityId,\n            fleet_operator_id:fleetSelected,\n            hub_id:stationSelectedOptions,\n            charger_id:values.charger_id,\n            connector_id:values.connector_id,\n            from_date:fromDate,\n            to_date:toDate\n          }\n          console.log(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                    <Card>\n                        <CardBody>\n                          <Row>\n                          <Colxx md=\"6\">\n                            <h3>Select Option</h3>\n                            </Colxx>\n                            <Colxx md=\"6\">\n                            <Button color=\"primary\" className=\"default mr-2 float-right\" onClick={handleSubmit} >\n                              <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Generate Report</b>\n                            </Button>\n                            </Colxx>\n                          </Row>\n                          <hr/>\n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                          <Colxx lg={4} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Country\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"country_id\"\n                                value={countryId}\n                                onChange={e=>handleCountrySelect(e.target.value)}\n                                >\n                                  <option>Select Country</option>\n                                  {countryList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.country_name}</option>\n                                  )}\n                                </Input>\n                                {/* {errors.country_id && touched.country_id &&(\n                                  <span className=\"error\">{errors.country_id}</span>\n                                )} */}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={4} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  State\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"state_id\"\n                                value={stateId}\n                                onChange={e=>handleStateSelect(e.target.value)}\n                                >\n                                  <option>Select State</option>\n                                  {stateList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.state_name}</option>\n                                  )}\n                                </Input>\n                                {/* {errors.state && touched.state &&(\n                                  <span className=\"error\">{errors.state}</span>\n                                )} */}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={4} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  City\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"city_id\"\n                                value={cityId}\n                                onChange={e=>handleCitySelect(e.target.value)}\n                                >\n                                  <option>Select City</option>\n                                  {cityList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.city_name}</option>\n                                  )}\n                                </Input>\n                                {/* {errors.city && touched.city &&(\n                                  <span className=\"error\">{errors.city}</span>\n                                )} */}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={6} sm={12}>\n                                <FormGroup>\n                                    <Label>\n                                    Fleet Operator\n                                    </Label>\n                                    <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={fleetSelectedOptions}\n                                    onChange={setFleetSelectedOptions}\n                                    options={fleetOpNames}\n                                    />\n                                </FormGroup>\n                            </Colxx>\n                            <Colxx lg={6} sm={12}>\n                                <FormGroup>\n                                    <Label>\n                                    Station\n                                    </Label>\n                                    <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={stationSelectedOptions}\n                                    onChange={setStationSelectedOptions}\n                                    options={stationNames}\n                                    />\n                                </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Charger\n                                </Label>\n                                <Input \n                                type=\"text\"\n                                placeholder=\"Charger Id\"\n                                name=\"charger_id\"\n                                value={values.charger_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                </Input>\n                                {errors.charger_id && touched.charger_id &&(\n                                  <span className=\"error\">{errors.charger_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Connector\n                                </Label>\n                                <Input \n                                type=\"text\"\n                                placeholder=\"Connector Id\"\n                                name=\"connector_id\"\n                                value={values.connector_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                </Input>\n                                {errors.connector_id && touched.connector_id &&(\n                                  <span className=\"error\">{errors.connector_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  From Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"From Date\"\n                                selected={fromDate}\n                                onChange={date=>setFromDate(date)}\n                                dateFormat=\"dd/MM/yyyy\"\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  To Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"To Date\"\n                                selected={toDate}\n                                onChange={date=>setToDate(date)}\n                                dateFormat=\"dd/MM/yyyy\"\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                        </CardBody>\n                    </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n      <Row>\n          <Colxx sm={12} lg={12}>\n            <Card>\n              <CardBody>\n                <h3>Charging Summary</h3>\n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Date</th>\n                      <th>Charger Id</th>\n                      <th>Connector ID</th>\n                      <th>BIN</th>\n                      <th>Start SoC</th>\n                      <th>Start Battery Voltage</th>\n                      <th>Start Whr</th>\t\t\n                      <th>Start Time</th>\n                      <th>Stop SoC</th>\n                      <th>Stop Battery Voltage</th>\n                      <th>Stop Whr</th>\n                      <th>Stop Time</th>\n                      <th>Charging Duration</th>\n                      <th>Check cell balancing happened</th>\n                      <th>Energy exchanged (DC)</th>\n                      <th>Unit/SoC</th>\n                      <th>Session ID</th>\n                      <th>Energy Meter Reading</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {/* {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"7\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                      userList.length > 0 ?\n                          userList.map((item,index)=>\n                            <tr key={item.id}>\n                              <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index+1}</th>\n                              <td>{item.username}</td>\n                              <td>{item.name}</td>\n                              <td>{item.contact_number}</td>\n                              <td>{item.email}</td>\n                              <td>{item.role_name}</td>\n                            </tr>\n                          ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"7\">Data  Not  Found</td>\n                      </tr>\n                  } */}\n                    <tr>\n                      <th scope=\"row\">1</th>\n                      <td>Country 1</td>\n                      <td>State 1</td>\n                      <td>City 1</td>\n                      <td>Station 1</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default ChargingSummary;\n"]},"metadata":{},"sourceType":"module"}