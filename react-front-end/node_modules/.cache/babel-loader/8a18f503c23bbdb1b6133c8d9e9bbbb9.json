{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\src\\\\views\\\\app\\\\reports\\\\faultsAndAlerts.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, Card, CardBody, FormGroup, Label, Input, Table, Button, DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport { faultReportAPI, downloadfaultReportAPI, getStationsByCityAPI, getCountriesAPI, getStatesByCountryAPI, getCitiesByStateAPI, getOemAPI, getOwnersAPI } from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport { Formik } from 'formik';\n\nconst FaultsAndAlerts = ({}) => {\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        buttonType = _useState2[0],\n        setButtonType = _useState2[1]; //date states\n\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        fromDate = _useState4[0],\n        setFromDate = _useState4[1];\n\n  const _useState5 = useState(),\n        _useState6 = _slicedToArray(_useState5, 2),\n        toDate = _useState6[0],\n        setToDate = _useState6[1]; //station List\n\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        stationNames = _useState8[0],\n        setStationNames = _useState8[1]; //Pagination states\n\n\n  const _useState9 = useState(\"1\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        pageCount = _useState10[0],\n        setPageCount = _useState10[1];\n\n  const _useState11 = useState(\"1\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        lastPageCount = _useState12[0],\n        setLastPageCount = _useState12[1]; //state to disable button on click\n\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        buttonDisabled = _useState14[0],\n        setButtonDisabled = _useState14[1]; //loader state\n\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        isLoading = _useState16[0],\n        setIsLoading = _useState16[1]; // list state\n\n\n  const _useState17 = useState([]),\n        _useState18 = _slicedToArray(_useState17, 2),\n        countryList = _useState18[0],\n        setCountryList = _useState18[1];\n\n  const _useState19 = useState([]),\n        _useState20 = _slicedToArray(_useState19, 2),\n        stateList = _useState20[0],\n        setStateList = _useState20[1];\n\n  const _useState21 = useState([]),\n        _useState22 = _slicedToArray(_useState21, 2),\n        cityList = _useState22[0],\n        setCityList = _useState22[1];\n\n  const _useState23 = useState([]),\n        _useState24 = _slicedToArray(_useState23, 2),\n        oemList = _useState24[0],\n        setOemList = _useState24[1];\n\n  const _useState25 = useState([]),\n        _useState26 = _slicedToArray(_useState25, 2),\n        ownerList = _useState26[0],\n        setOwnerList = _useState26[1];\n\n  const _useState27 = useState(\"\"),\n        _useState28 = _slicedToArray(_useState27, 2),\n        countryId = _useState28[0],\n        setCountryId = _useState28[1];\n\n  const _useState29 = useState(\"\"),\n        _useState30 = _slicedToArray(_useState29, 2),\n        stateId = _useState30[0],\n        setStateId = _useState30[1];\n\n  const _useState31 = useState(\"\"),\n        _useState32 = _slicedToArray(_useState31, 2),\n        cityId = _useState32[0],\n        setCityId = _useState32[1];\n\n  const _useState33 = useState(\"\"),\n        _useState34 = _slicedToArray(_useState33, 2),\n        stationId = _useState34[0],\n        setStationId = _useState34[1]; //params\n\n\n  const _useState35 = useState(null),\n        _useState36 = _slicedToArray(_useState35, 2),\n        reportParams = _useState36[0],\n        setReportParams = _useState36[1];\n\n  const _useState37 = useState([]),\n        _useState38 = _slicedToArray(_useState37, 2),\n        report = _useState38[0],\n        setReport = _useState38[1];\n\n  useEffect(() => {\n    getCountryNamesAPICall();\n    getOemAPICall();\n    GetOwnerNamesAPICall();\n  }, []);\n  useEffect(() => {\n    GetStationNamesAPICall(countryId, stateId, cityId);\n  }, [countryId, stateId, cityId]); //API calls\n\n  const GetStationNamesAPICall = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(country, state, city) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context.next = 3;\n            return axios.get(getStationsByCityAPI + \"country_id=\" + country + \"&state_id=\" + state + \"&city_id=\" + city, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setStationNames(responseData.data);\n              } else {\n                setStationNames([]);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function GetStationNamesAPICall(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const getOemAPICall = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context2.next = 3;\n            return axios.post(getOemAPI, {\n              type: 1\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setOemList(responseData.data);\n              } else {\n                setOemList([]);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function getOemAPICall() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const GetOwnerNamesAPICall = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context3.next = 3;\n            return axios.get(getOwnersAPI, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setOwnerList(responseData.data);\n              } else {\n                console.log(responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n\n    return function GetOwnerNamesAPICall() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  const getCountryNamesAPICall = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context4.next = 3;\n            return axios.get(getCountriesAPI, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setCountryList(responseData.data);\n              } else {\n                console.log(responseData.status, responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n\n    return function getCountryNamesAPICall() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  const getStateNamesAPICall = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(country) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context5.next = 3;\n            return axios.post(getStatesByCountryAPI, {\n              country_id: country\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setStateList(responseData.data);\n              } else {\n                console.log(responseData.status, responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n\n    return function getStateNamesAPICall(_x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  const getCityNamesAPICall = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(state) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context6.next = 3;\n            return axios.post(getCitiesByStateAPI, {\n              state_id: state\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setCityList(responseData.data);\n              } else {\n                console.log(responseData.status, responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6);\n    }));\n\n    return function getCityNamesAPICall(_x5) {\n      return _ref6.apply(this, arguments);\n    };\n  }(); //helper methods\n  //handle country select\n\n\n  const handleCountrySelect = country => {\n    setCountryId(country);\n    setStateId(\"\");\n    setCityId(\"\");\n    setStationId(\"\");\n    getStateNamesAPICall(country);\n  }; //handle state select\n\n\n  const handleStateSelect = state => {\n    setStateId(state);\n    setCityId(\"\");\n    setStationId(\"\");\n    getCityNamesAPICall(state);\n  }; //pagination method\n\n\n  const handlePageChange = index => {\n    setPageCount(index + 1);\n    getFaultReportAPICall(reportParams);\n  };\n\n  const renderPageList = () => {\n    const pageNumbers = [];\n\n    for (let i = 0; i < lastPageCount; i += 1) {\n      pageNumbers.push( /*#__PURE__*/React.createElement(DropdownItem, {\n        key: i,\n        onClick: () => handlePageChange(i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }\n      }, i + 1));\n    }\n\n    return pageNumbers;\n  };\n\n  const getFaultReportAPICall = /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(params) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            setButtonDisabled(true);\n            setReport([]);\n            setIsLoading(true);\n            currentUser = getCurrentUser();\n            _context7.next = 6;\n            return axios.post(faultReportAPI, params, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setLastPageCount(responseData.data.last_page);\n                setReport(responseData.data.data);\n              } else {\n                console.log(responseData.msg);\n              }\n\n              setButtonDisabled(false);\n              setIsLoading(false);\n            }).catch(error => {\n              setButtonDisabled(false);\n              setIsLoading(false);\n            });\n\n          case 6:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee7);\n    }));\n\n    return function getFaultReportAPICall(_x6) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n\n  const downloadFaultReportAPICall = /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(params) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            setButtonDisabled(true);\n            setIsLoading(true);\n            currentUser = getCurrentUser();\n            _context8.next = 5;\n            return axios.post(downloadfaultReportAPI, params, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                const link = document.createElement('a');\n                link.href = responseData.data.file;\n                document.body.appendChild(link);\n                link.click();\n                document.body.removeChild(link);\n              } else {\n                alert(responseData.msg);\n              }\n\n              setButtonDisabled(false);\n              setIsLoading(false);\n            }).catch(error => {\n              setButtonDisabled(false);\n              setIsLoading(false);\n            });\n\n          case 5:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8);\n    }));\n\n    return function downloadFaultReportAPICall(_x7) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n\n  const initialValues = {\n    bin: \"\",\n    oem_id: \"\",\n    owner_id: \"\",\n    charger_id: \"\",\n    connector_id: \"\"\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"page_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  }, \"Faults and Alerts\"), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    onSubmit: values => {\n      let tempFromDate = null,\n          tempToDate = null;\n\n      if (fromDate != null && fromDate != \"\") {\n        tempFromDate = fromDate.getDate() + \"-\" + (fromDate.getMonth() + 1) + \"-\" + fromDate.getFullYear() + \" \" + fromDate.getHours() + \":\" + fromDate.getMinutes() + \":\" + fromDate.getSeconds();\n      }\n\n      if (toDate != null && toDate != \"\") {\n        tempToDate = toDate.getDate() + \"-\" + (toDate.getMonth() + 1) + \"-\" + toDate.getFullYear() + \" \" + toDate.getHours() + \":\" + toDate.getMinutes() + \":\" + toDate.getSeconds();\n      }\n\n      const params = {\n        country_id: countryId,\n        state_id: stateId,\n        city_id: cityId,\n        hub_id: stationId,\n        bin: values.bin,\n        oem_id: values.oem_id,\n        owner_id: values.owner_id,\n        charger_id: values.charger_id,\n        connector_id: values.connector_id,\n        from_date: tempFromDate,\n        to_date: tempToDate,\n        page: pageCount\n      };\n      setReportParams(params);\n\n      if (buttonType == 1) {\n        getFaultReportAPICall(params);\n      } else {\n        downloadFaultReportAPICall(params);\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }, ({\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    values,\n    touched,\n    errors\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 29\n    }\n  }, \"Select Option\"))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 33\n    }\n  }, \"Country\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"country_id\",\n    value: countryId,\n    onChange: e => handleCountrySelect(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 35\n    }\n  }, \"Select Country\"), countryList.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 37\n    }\n  }, item.country_name))))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 33\n    }\n  }, \"State\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"state_id\",\n    value: stateId,\n    onChange: e => handleStateSelect(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 35\n    }\n  }, \"Select State\"), stateList.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 37\n    }\n  }, item.state_name))))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 33\n    }\n  }, \"City\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"city_id\",\n    value: cityId,\n    onChange: e => {\n      setCityId(e.target.value);\n      setStationId(\"\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 35\n    }\n  }, \"Select City\"), cityList.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 37\n    }\n  }, item.city_name))))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 33\n    }\n  }, \"Station\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"station\",\n    value: stationId,\n    onChange: e => setStationId(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 35\n    }\n  }, \"Select Station\"), stationNames.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.hub_master_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 37\n    }\n  }, item.name))))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 33\n    }\n  }, \"OEM\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"oem_id\",\n    value: values.oem_id,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 35\n    }\n  }, \"Select OEM\"), oemList.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.oem_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 37\n    }\n  }, item.name))), errors.oem_id && touched.oem_id && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 35\n    }\n  }, errors.oem_id))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 33\n    }\n  }, \"Owner\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"owner_id\",\n    value: values.owner_id,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 35\n    }\n  }, \"Select Owner\"), ownerList.map((item, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: index,\n    value: item.owner_master_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 37\n    }\n  }, item.name))), errors.owner_id && touched.owner_id && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 35\n    }\n  }, errors.owner_id))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 33\n    }\n  }, \"Charger\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Charger Id\",\n    name: \"charger_id\",\n    value: values.charger_id,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 33\n    }\n  }), errors.charger_id && touched.charger_id && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 35\n    }\n  }, errors.charger_id))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 33\n    }\n  }, \"Connector\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Connector Id\",\n    name: \"connector_id\",\n    value: values.connector_id,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 33\n    }\n  }), errors.connector_id && touched.connector_id && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 35\n    }\n  }, errors.connector_id))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 33\n    }\n  }, \"From Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n    placeholderText: \"From Date\",\n    showTimeInput: true,\n    selected: fromDate,\n    onChange: date => setFromDate(date),\n    dateFormat: \"dd/MM/yyyy hh:mm aa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 3,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 33\n    }\n  }, \"To Date\"), /*#__PURE__*/React.createElement(DatePicker, {\n    placeholderText: \"To Date\",\n    showTimeInput: true,\n    selected: toDate,\n    onChange: date => setToDate(date),\n    dateFormat: \"dd/MM/yyyy hh:mm aa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    lg: 6,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"default mt-4 mr-2\",\n    disabled: buttonDisabled,\n    onClick: () => {\n      setButtonType(1);\n      setPageCount(1);\n      handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-check font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 33\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 472,\n      columnNumber: 99\n    }\n  }, \"Generate Report\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    className: \"default mt-4\",\n    disabled: buttonDisabled,\n    onClick: () => {\n      setButtonType(2);\n      handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-check font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 33\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 99\n    }\n  }, \"Download Report\")))))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    sm: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 21\n    }\n  }, \"Faults and Alerts Report\")), report.length > 0 && /*#__PURE__*/React.createElement(Colxx, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-right mr-2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 25\n    }\n  }, \"Page \"), /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    className: \"d-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    caret: true,\n    color: \"outline-primary\",\n    size: \"xs\",\n    \"data-display\": \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 27\n    }\n  }, pageCount), /*#__PURE__*/React.createElement(DropdownMenu, {\n    className: \"dropdownMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 27\n    }\n  }, renderPageList())), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 25\n    }\n  }, \" of \"), lastPageCount))), /*#__PURE__*/React.createElement(Table, {\n    responsive: true,\n    bordered: true,\n    striped: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 23\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 23\n    }\n  }, \"Station\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 23\n    }\n  }, \"Charger ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 23\n    }\n  }, \"Connnector ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 23\n    }\n  }, \"Date of occurrence\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 23\n    }\n  }, \"Time of occurrence\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 23\n    }\n  }, \"Alarm Detail\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 19\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-center\",\n    colSpan: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-list-loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 69\n    }\n  }))) : report.length > 0 ? report.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 31\n    }\n  }, pageCount == 1 ? index + 1 : (pageCount - 1) * 10 + index + 1), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 31\n    }\n  }, item.station_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 31\n    }\n  }, item.charger_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 535,\n      columnNumber: 31\n    }\n  }, item.connector_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 31\n    }\n  }, item.occur_date), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 31\n    }\n  }, item.occur_time), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 31\n    }\n  }, item.alarms))) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-center text-danger\",\n    colSpan: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 29\n    }\n  }, \"Data  Not  Found\")))))))));\n};\n\nexport default FaultsAndAlerts;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/reports/faultsAndAlerts.js"],"names":["React","useState","useEffect","Row","Card","CardBody","FormGroup","Label","Input","Table","Button","DropdownItem","DropdownMenu","DropdownToggle","UncontrolledDropdown","DatePicker","Colxx","Separator","getCurrentUser","faultReportAPI","downloadfaultReportAPI","getStationsByCityAPI","getCountriesAPI","getStatesByCountryAPI","getCitiesByStateAPI","getOemAPI","getOwnersAPI","axios","Formik","FaultsAndAlerts","buttonType","setButtonType","fromDate","setFromDate","toDate","setToDate","stationNames","setStationNames","pageCount","setPageCount","lastPageCount","setLastPageCount","buttonDisabled","setButtonDisabled","isLoading","setIsLoading","countryList","setCountryList","stateList","setStateList","cityList","setCityList","oemList","setOemList","ownerList","setOwnerList","countryId","setCountryId","stateId","setStateId","cityId","setCityId","stationId","setStationId","reportParams","setReportParams","report","setReport","getCountryNamesAPICall","getOemAPICall","GetOwnerNamesAPICall","GetStationNamesAPICall","country","state","city","currentUser","get","headers","Authorization","token","then","response","responseData","data","status","catch","error","console","log","post","type","msg","getStateNamesAPICall","country_id","getCityNamesAPICall","state_id","handleCountrySelect","handleStateSelect","handlePageChange","index","getFaultReportAPICall","renderPageList","pageNumbers","i","push","params","last_page","downloadFaultReportAPICall","link","document","createElement","href","file","body","appendChild","click","removeChild","alert","initialValues","bin","oem_id","owner_id","charger_id","connector_id","values","tempFromDate","tempToDate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","city_id","hub_id","from_date","to_date","page","handleChange","handleBlur","handleSubmit","touched","errors","e","target","value","map","item","id","country_name","state_name","city_name","hub_master_id","name","owner_master_id","date","length","station_name","occur_date","occur_time","alarms"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody, FormGroup, Label,\n  Input, Table,Button,DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {faultReportAPI,downloadfaultReportAPI,getStationsByCityAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,getOemAPI,getOwnersAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\n\nconst FaultsAndAlerts = ({}) => {\n  const [buttonType,setButtonType] = useState(1);\n  //date states\n  const [fromDate,setFromDate] = useState();\n  const [toDate,setToDate] = useState();\n  //station List\n  const [stationNames,setStationNames] = useState([]);\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(false);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [oemList,setOemList] = useState([]);\n  const [ownerList,setOwnerList] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n  const [stationId,setStationId] = useState(\"\");\n  //params\n  const [reportParams,setReportParams] = useState(null);\n  const [report,setReport] = useState([]);\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n    getOemAPICall();\n    GetOwnerNamesAPICall();\n  },[]);\n\n  useEffect(()=>{\n    GetStationNamesAPICall(countryId,stateId,cityId);\n  },[countryId,stateId,cityId]);\n\n  //API calls\n  const GetStationNamesAPICall = async(country,state,city) => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsByCityAPI+\"country_id=\"+country+\"&state_id=\"+state+\"&city_id=\"+city,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNames(responseData.data)\n      }else{\n        setStationNames([]);\n      }\n    }).catch(error=>{\n      console.log(error);\n    });\n  }\n\n  const getOemAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:1},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {          \n          setOemList(responseData.data);\n        }else{\n          setOemList([])\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const GetOwnerNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getOwnersAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setOwnerList(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    setStateId(\"\");\n    setCityId(\"\");\n    setStationId(\"\");\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    setCityId(\"\");\n    setStationId(\"\");\n    getCityNamesAPICall(state);\n  }\n  //pagination method\n  const handlePageChange = (index) =>{\n    setPageCount(index+1)\n    getFaultReportAPICall(reportParams);\n  }\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={()=>handlePageChange(i)}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  const getFaultReportAPICall = async(params) => {\n    setButtonDisabled(true);\n    setReport([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.post(faultReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page);\n          setReport(responseData.data.data);\n        }else{\n            console.log(responseData.msg);\n        }\n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n      })\n  }\n  const downloadFaultReportAPICall = async(params) => {\n    setButtonDisabled(true);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.post(downloadfaultReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          const link = document.createElement('a');\n          link.href = responseData.data.file;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }else{\n          alert(responseData.msg);\n        }  \n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n      })\n  }\n\n  const initialValues = {\n    bin:\"\",\n    oem_id:\"\",\n    owner_id:\"\",\n    charger_id:\"\",\n    connector_id:\"\",\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Faults and Alerts</span>\n        <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(values)=>{\n          let tempFromDate=null,tempToDate=null;\n          if (fromDate != null && fromDate !=\"\") {\n            tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear()+\" \"+fromDate.getHours()+\":\"+fromDate.getMinutes()+\":\"+fromDate.getSeconds();\n          }\n          if (toDate != null && toDate !=\"\") {\n            tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear()+\" \"+toDate.getHours()+\":\"+toDate.getMinutes()+\":\"+toDate.getSeconds();\n          }\n          const params = {\n            country_id:countryId,\n            state_id:stateId,\n            city_id:cityId,\n            hub_id:stationId,\n            bin:values.bin,\n            oem_id:values.oem_id,\n            owner_id:values.owner_id,\n            charger_id:values.charger_id,\n            connector_id:values.connector_id,\n            from_date:tempFromDate,\n            to_date:tempToDate,\n            page:pageCount\n          }\n          setReportParams(params);\n          if(buttonType==1){\n            getFaultReportAPICall(params);\n          }else{\n            downloadFaultReportAPICall(params);\n          }          \n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                    <Card>\n                        <CardBody>\n                          <Row>\n                          <Colxx md=\"6\">\n                            <h3>Select Option</h3>\n                          </Colxx>                            \n                          </Row>\n                          <hr/>\n                          <Row>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Country\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"country_id\"\n                                value={countryId}\n                                onChange={e=>handleCountrySelect(e.target.value)}\n                                >\n                                  <option>Select Country</option>\n                                  {countryList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.country_name}</option>\n                                  )}\n                                </Input>\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  State\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"state_id\"\n                                value={stateId}\n                                onChange={e=>handleStateSelect(e.target.value)}\n                                >\n                                  <option>Select State</option>\n                                  {stateList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.state_name}</option>\n                                  )}\n                                </Input>\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  City\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"city_id\"\n                                value={cityId}\n                                onChange={e=>{setCityId(e.target.value);setStationId(\"\");}}\n                                >\n                                  <option>Select City</option>\n                                  {cityList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.city_name}</option>\n                                  )}\n                                </Input>\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Station\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"station\"\n                                value={stationId}\n                                onChange={e=> setStationId(e.target.value)}>\n                                  <option>Select Station</option>\n                                  {stationNames.map((item,index)=>\n                                    <option key={index} value={item.hub_master_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  OEM\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"oem_id\"\n                                value={values.oem_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                  <option>Select OEM</option>\n                                  {oemList.map((item,index)=>\n                                    <option key={index} value={item.oem_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.oem_id && touched.oem_id &&(\n                                  <span className=\"error\">{errors.oem_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Owner\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"owner_id\"\n                                value={values.owner_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                  <option>Select Owner</option>\n                                  {ownerList.map((item,index)=>\n                                    <option key={index} value={item.owner_master_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.owner_id && touched.owner_id &&(\n                                  <span className=\"error\">{errors.owner_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Charger\n                                </Label>\n                                <Input \n                                type=\"text\"\n                                placeholder=\"Charger Id\"\n                                name=\"charger_id\"\n                                value={values.charger_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                </Input>\n                                {errors.charger_id && touched.charger_id &&(\n                                  <span className=\"error\">{errors.charger_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Connector\n                                </Label>\n                                <Input \n                                type=\"text\"\n                                placeholder=\"Connector Id\"\n                                name=\"connector_id\"\n                                value={values.connector_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                </Input>\n                                {errors.connector_id && touched.connector_id &&(\n                                  <span className=\"error\">{errors.connector_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  From Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"From Date\"\n                                showTimeInput\n                                selected={fromDate}\n                                onChange={date=>setFromDate(date)}\n                                dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  To Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"To Date\"\n                                showTimeInput\n                                selected={toDate}\n                                onChange={date=>setToDate(date)}\n                                dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={6} sm={12}>\n                              <Button color=\"primary\" className=\"default mt-4 mr-2\" disabled={buttonDisabled} onClick={() =>{setButtonType(1);setPageCount(1);handleSubmit();}} >\n                                <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Generate Report</b>\n                              </Button>\n                              <Button color=\"success\" className=\"default mt-4\" disabled={buttonDisabled} onClick={() =>{setButtonType(2);handleSubmit();}}  >\n                                <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Download Report</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                        </CardBody>\n                    </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n      <Row>\n          <Colxx sm={12} lg={12}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Colxx md=\"6\">\n                    <h3>Faults and Alerts Report</h3>\n                  </Colxx>\n                  {report.length>0 &&\n                    <Colxx md=\"6\">\n                      <div className=\"text-right mr-2 \">\n                        <span>Page </span>\n                        <UncontrolledDropdown className=\"d-inline-block\">\n                          <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                            {pageCount}\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdownMenu\">\n                            {renderPageList()}\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <span> of </span>\n                        {lastPageCount}\n                      </div>\n                    </Colxx>\n                  }\n                </Row>\n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Station</th>\n                      <th>Charger ID</th>\n                      <th>Connnector ID</th>\n                      <th>Date of occurrence</th>\n                      <th>Time of occurrence</th>\n                      <th>Alarm Detail</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {isLoading ?\n                        <tr>\n                            <td className=\"text-center\" colSpan=\"7\"><div className=\"custom-list-loading\" /></td>\n                        </tr> : \n                        report.length > 0 ?\n                            report.map((item,index)=>\n                            <tr key={index}>\n                              <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                              <td>{item.station_name}</td>\n                              <td>{item.charger_id}</td>\n                              <td>{item.connector_id}</td>\n                              <td>{item.occur_date}</td>\n                              <td>{item.occur_time}</td>\n                              <td>{item.alarms}</td>\n                            </tr>\n                            ):\n                            <tr>\n                            <td className=\"text-center text-danger\" colSpan=\"7\">Data  Not  Found</td>\n                            </tr>                            \n                    }                    \n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default FaultsAndAlerts;\n"]},"metadata":{},"sourceType":"module"}