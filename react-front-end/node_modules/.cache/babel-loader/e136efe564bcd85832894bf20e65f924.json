{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Row,Card,CardBody,FormGroup,Label,Input,Table,Button,Alert}from'reactstrap';import DatePicker from'react-datepicker';import'react-datepicker/dist/react-datepicker.css';import{Colxx,Separator}from'../../../components/common/CustomBootstrap';import CustomSelectInput from'../../../components/common/CustomSelectInput';import Select from'react-select';import{getCurrentUser}from'../../../helpers/Utils';import{getStationsAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,getFleetOperatorAPI}from'../../../constants/defaultValues';import axios from'axios';import{Formik}from'formik';import*as yup from'yup';const ChargingSummary=({})=>{//date states\nconst _useState=useState(),_useState2=_slicedToArray(_useState,2),fromDate=_useState2[0],setFromDate=_useState2[1];const _useState3=useState(),_useState4=_slicedToArray(_useState3,2),toDate=_useState4[0],setToDate=_useState4[1];//alert states\nconst _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),alertVisible=_useState6[0],setAlertVisible=_useState6[1];const _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),alertMsg=_useState8[0],setAlertMsg=_useState8[1];const _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),alertColor=_useState10[0],setAlertColor=_useState10[1];//state to disable button on click\nconst _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),buttonDisabled=_useState12[0],setButtonDisabled=_useState12[1];//loader state\nconst _useState13=useState(true),_useState14=_slicedToArray(_useState13,2),isLoading=_useState14[0],setIsLoading=_useState14[1];// list state\nconst _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),countryList=_useState16[0],setCountryList=_useState16[1];const _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),stateList=_useState18[0],setStateList=_useState18[1];const _useState19=useState([]),_useState20=_slicedToArray(_useState19,2),cityList=_useState20[0],setCityList=_useState20[1];const _useState21=useState([]),_useState22=_slicedToArray(_useState21,2),stationNames=_useState22[0],setStationNames=_useState22[1];const _useState23=useState([]),_useState24=_slicedToArray(_useState23,2),fleetOpNames=_useState24[0],setFleetOpNames=_useState24[1];const _useState25=useState(\"\"),_useState26=_slicedToArray(_useState25,2),countryId=_useState26[0],setCountryId=_useState26[1];const _useState27=useState(\"\"),_useState28=_slicedToArray(_useState27,2),stateId=_useState28[0],setStateId=_useState28[1];const _useState29=useState(\"\"),_useState30=_slicedToArray(_useState29,2),cityId=_useState30[0],setCityId=_useState30[1];//multiselect state\nconst _useState31=useState([]),_useState32=_slicedToArray(_useState31,2),fleetSelectedOptions=_useState32[0],setFleetSelectedOptions=_useState32[1];const _useState33=useState([]),_useState34=_slicedToArray(_useState33,2),stationSelectedOptions=_useState34[0],setStationSelectedOptions=_useState34[1];useEffect(()=>{getCountryNamesAPICall();GetStationNamesAPICall();GetFleetOperatorAPICall();},[]);//API calls\nconst GetStationNamesAPICall=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var currentUser;return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:currentUser=getCurrentUser();_context.next=3;return axios.get(getStationsAPI,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;let stations=[];if(responseData.status===1){responseData.data.map((item,index)=>{stations.push({label:item.name,value:item.hub_master_id,key:index});});setStationNames(stations);}else{console.log(responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context.stop();}},_callee);}));return function GetStationNamesAPICall(){return _ref.apply(this,arguments);};}();const GetFleetOperatorAPICall=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var currentUser;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:currentUser=getCurrentUser();_context2.next=3;return axios.get(getFleetOperatorAPI,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;let fleet=[];if(responseData.status===1){responseData.data.map((item,index)=>{fleet.push({label:item.name,value:item.fleet_operator_id,key:index});});setFleetOpNames(fleet);}else{console.log(responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context2.stop();}},_callee2);}));return function GetFleetOperatorAPICall(){return _ref2.apply(this,arguments);};}();const getCountryNamesAPICall=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var currentUser;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:currentUser=getCurrentUser();_context3.next=3;return axios.get(getCountriesAPI,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setCountryList(responseData.data);}else{console.log(responseData.status,responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context3.stop();}},_callee3);}));return function getCountryNamesAPICall(){return _ref3.apply(this,arguments);};}();const getStateNamesAPICall=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(country){var currentUser;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:currentUser=getCurrentUser();_context4.next=3;return axios.post(getStatesByCountryAPI,{country_id:country},{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setStateList(responseData.data);}else{console.log(responseData.status,responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context4.stop();}},_callee4);}));return function getStateNamesAPICall(_x){return _ref4.apply(this,arguments);};}();const getCityNamesAPICall=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(state){var currentUser;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:currentUser=getCurrentUser();_context5.next=3;return axios.post(getCitiesByStateAPI,{state_id:state},{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setCityList(responseData.data);}else{console.log(responseData.status,responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context5.stop();}},_callee5);}));return function getCityNamesAPICall(_x2){return _ref5.apply(this,arguments);};}();//helper methods\n//Alert helper methods\nconst chargingSummaryAlert=msg=>{setAlertVisible(true);setAlertMsg(msg);setAlertColor(\"danger\");};const onDismissAlert=()=>{setAlertVisible(false);};//handle country select\nconst handleCountrySelect=country=>{setCountryId(country);getStateNamesAPICall(country);};//handle state select\nconst handleStateSelect=state=>{setStateId(state);getCityNamesAPICall(state);};//handle city select\nconst handleCitySelect=city=>{setCityId(city);};//Form Validation Schema\nconst ChargingSummaryDetailsValidationSchema=yup.object().shape({charger_id:yup.string().required(\"Charger is required\"),connector_id:yup.string().required(\"Connector is required\")});const initialValues={charger_id:\"\",connector_id:\"\"};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\"},/*#__PURE__*/React.createElement(\"span\",{className:\"page_title\"},\"Charging Summary\"),/*#__PURE__*/React.createElement(Separator,{className:\"mb-5\"}))),/*#__PURE__*/React.createElement(Formik,{initialValues:initialValues,validationSchema:ChargingSummaryDetailsValidationSchema,onSubmit:values=>{const fleetSelected=[];fleetSelectedOptions.map(item=>{fleetSelected.push(item.value);});const stationSelected=[];stationSelectedOptions.map(item=>{stationSelected.push(item.value);});const params={country_id:countryId,state_id:stateId,city_id:cityId,fleet_operator_id:fleetSelected,hub_id:stationSelectedOptions,charger_id:values.charger_id,connector_id:values.connector_id,from_date:fromDate,to_date:toDate};console.log(params);}},({handleChange,handleBlur,handleSubmit,values,touched,errors})=>/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",className:\"mb-4\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"6\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Select Option\")),/*#__PURE__*/React.createElement(Colxx,{md:\"6\"},/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"default mr-2 float-right\",onClick:handleSubmit},/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-check font-weight-bold\"}),\" \",/*#__PURE__*/React.createElement(\"b\",null,\"Generate Report\")))),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"12\"},/*#__PURE__*/React.createElement(Alert,{color:alertColor,isOpen:alertVisible,toggle:onDismissAlert},alertMsg)),/*#__PURE__*/React.createElement(Colxx,{lg:4,sm:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Country\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"country_id\",value:countryId,onChange:e=>handleCountrySelect(e.target.value)},/*#__PURE__*/React.createElement(\"option\",null,\"Select Country\"),countryList.map((item,index)=>/*#__PURE__*/React.createElement(\"option\",{key:index,value:item.id},item.country_name))))),/*#__PURE__*/React.createElement(Colxx,{lg:4,sm:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"State\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"state_id\",value:stateId,onChange:e=>handleStateSelect(e.target.value)},/*#__PURE__*/React.createElement(\"option\",null,\"Select State\"),stateList.map((item,index)=>/*#__PURE__*/React.createElement(\"option\",{key:index,value:item.id},item.state_name))))),/*#__PURE__*/React.createElement(Colxx,{lg:4,sm:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"City\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"city_id\",value:cityId,onChange:e=>handleCitySelect(e.target.value)},/*#__PURE__*/React.createElement(\"option\",null,\"Select City\"),cityList.map((item,index)=>/*#__PURE__*/React.createElement(\"option\",{key:index,value:item.id},item.city_name))))),/*#__PURE__*/React.createElement(Colxx,{lg:6,sm:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Fleet Operator\"),/*#__PURE__*/React.createElement(Select,{components:{Input:CustomSelectInput},className:\"react-select\",classNamePrefix:\"react-select\",isMulti:true,name:\"form-field-name\",value:fleetSelectedOptions,onChange:setFleetSelectedOptions,options:fleetOpNames}))),/*#__PURE__*/React.createElement(Colxx,{lg:6,sm:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Station\"),/*#__PURE__*/React.createElement(Select,{components:{Input:CustomSelectInput},className:\"react-select\",classNamePrefix:\"react-select\",isMulti:true,name:\"form-field-name\",value:stationSelectedOptions,onChange:setStationSelectedOptions,options:stationNames}))),/*#__PURE__*/React.createElement(Colxx,{lg:3,sm:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Charger\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Charger Id\",name:\"charger_id\",value:values.charger_id,onChange:handleChange,onBlur:handleBlur}),errors.charger_id&&touched.charger_id&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.charger_id))),/*#__PURE__*/React.createElement(Colxx,{lg:3,sm:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Connector\"),/*#__PURE__*/React.createElement(Input,{type:\"text\",placeholder:\"Connector Id\",name:\"connector_id\",value:values.connector_id,onChange:handleChange,onBlur:handleBlur}),errors.connector_id&&touched.connector_id&&/*#__PURE__*/React.createElement(\"span\",{className:\"error\"},errors.connector_id))),/*#__PURE__*/React.createElement(Colxx,{lg:3,sm:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"From Date\"),/*#__PURE__*/React.createElement(DatePicker,{placeholderText:\"From Date\",selected:fromDate,onChange:date=>setFromDate(date),dateFormat:\"dd/MM/yyyy\"}))),/*#__PURE__*/React.createElement(Colxx,{lg:3,sm:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"To Date\"),/*#__PURE__*/React.createElement(DatePicker,{placeholderText:\"To Date\",selected:toDate,onChange:date=>setToDate(date),dateFormat:\"dd/MM/yyyy\"})))))))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{sm:12,lg:12},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"h3\",null,\"Charging Summary\"),/*#__PURE__*/React.createElement(Table,{responsive:true,bordered:true,striped:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"#\"),/*#__PURE__*/React.createElement(\"th\",null,\"Date\"),/*#__PURE__*/React.createElement(\"th\",null,\"Charger Id\"),/*#__PURE__*/React.createElement(\"th\",null,\"Connector ID\"),/*#__PURE__*/React.createElement(\"th\",null,\"BIN\"),/*#__PURE__*/React.createElement(\"th\",null,\"Start SoC\"),/*#__PURE__*/React.createElement(\"th\",null,\"Start Battery Voltage\"),/*#__PURE__*/React.createElement(\"th\",null,\"Start Whr\"),/*#__PURE__*/React.createElement(\"th\",null,\"Start Time\"),/*#__PURE__*/React.createElement(\"th\",null,\"Stop SoC\"),/*#__PURE__*/React.createElement(\"th\",null,\"Stop Battery Voltage\"),/*#__PURE__*/React.createElement(\"th\",null,\"Stop Whr\"),/*#__PURE__*/React.createElement(\"th\",null,\"Stop Time\"),/*#__PURE__*/React.createElement(\"th\",null,\"Charging Duration\"),/*#__PURE__*/React.createElement(\"th\",null,\"Check cell balancing happened\"),/*#__PURE__*/React.createElement(\"th\",null,\"Energy exchanged (DC)\"),/*#__PURE__*/React.createElement(\"th\",null,\"Unit/SoC\"),/*#__PURE__*/React.createElement(\"th\",null,\"Session ID\"),/*#__PURE__*/React.createElement(\"th\",null,\"Energy Meter Reading\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",{scope:\"row\"},\"1\"),/*#__PURE__*/React.createElement(\"td\",null,\"Country 1\"),/*#__PURE__*/React.createElement(\"td\",null,\"State 1\"),/*#__PURE__*/React.createElement(\"td\",null,\"City 1\"),/*#__PURE__*/React.createElement(\"td\",null,\"Station 1\"),/*#__PURE__*/React.createElement(\"td\",null,\"12\"),/*#__PURE__*/React.createElement(\"td\",null,\"12\"),/*#__PURE__*/React.createElement(\"td\",null,\"12\"),/*#__PURE__*/React.createElement(\"td\",null,\"12\"),/*#__PURE__*/React.createElement(\"td\",null,\"12\"),/*#__PURE__*/React.createElement(\"td\",null,\"12\"),/*#__PURE__*/React.createElement(\"td\",null,\"12\"),/*#__PURE__*/React.createElement(\"td\",null,\"12\"),/*#__PURE__*/React.createElement(\"td\",null,\"12\"),/*#__PURE__*/React.createElement(\"td\",null,\"12\"),/*#__PURE__*/React.createElement(\"td\",null,\"12\"),/*#__PURE__*/React.createElement(\"td\",null,\"12\"),/*#__PURE__*/React.createElement(\"td\",null,\"12\"),/*#__PURE__*/React.createElement(\"td\",null,\"12\")))))))));};export default ChargingSummary;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/reports/chargingSummary.js"],"names":["React","useState","useEffect","Row","Card","CardBody","FormGroup","Label","Input","Table","Button","Alert","DatePicker","Colxx","Separator","CustomSelectInput","Select","getCurrentUser","getStationsAPI","getCountriesAPI","getStatesByCountryAPI","getCitiesByStateAPI","getFleetOperatorAPI","axios","Formik","yup","ChargingSummary","fromDate","setFromDate","toDate","setToDate","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","buttonDisabled","setButtonDisabled","isLoading","setIsLoading","countryList","setCountryList","stateList","setStateList","cityList","setCityList","stationNames","setStationNames","fleetOpNames","setFleetOpNames","countryId","setCountryId","stateId","setStateId","cityId","setCityId","fleetSelectedOptions","setFleetSelectedOptions","stationSelectedOptions","setStationSelectedOptions","getCountryNamesAPICall","GetStationNamesAPICall","GetFleetOperatorAPICall","currentUser","get","headers","Authorization","token","then","response","responseData","data","stations","status","map","item","index","push","label","name","value","hub_master_id","key","console","log","msg","catch","error","fleet","fleet_operator_id","getStateNamesAPICall","country","post","country_id","getCityNamesAPICall","state","state_id","chargingSummaryAlert","onDismissAlert","handleCountrySelect","handleStateSelect","handleCitySelect","city","ChargingSummaryDetailsValidationSchema","object","shape","charger_id","string","required","connector_id","initialValues","values","fleetSelected","stationSelected","params","city_id","hub_id","from_date","to_date","handleChange","handleBlur","handleSubmit","touched","errors","e","target","id","country_name","state_name","city_name","date"],"mappings":"mkBAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,KAAuC,OAAvC,CACA,OACEC,GADF,CACOC,IADP,CACaC,QADb,CACuBC,SADvB,CACkCC,KADlC,CAEEC,KAFF,CAESC,KAFT,CAEeC,MAFf,CAEsBC,KAFtB,KAGO,YAHP,CAIA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,MAAO,4CAAP,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,4CAAjC,CACA,MAAOC,CAAAA,iBAAP,KAA8B,8CAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,OAASC,cAAT,KAA+B,wBAA/B,CACA,OAAQC,cAAR,CAAuBC,eAAvB,CAAuCC,qBAAvC,CAA6DC,mBAA7D,CAAiFC,mBAAjF,KAA2G,kCAA3G,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,MAAR,KAAqB,QAArB,CACA,MAAO,GAAKC,CAAAA,GAAZ,KAAqB,KAArB,CAEA,KAAMC,CAAAA,eAAe,CAAG,CAAC,EAAD,GAAQ,CAC9B;AAD8B,gBAECzB,QAAQ,EAFT,wCAEvB0B,QAFuB,eAEdC,WAFc,gCAGH3B,QAAQ,EAHL,yCAGvB4B,MAHuB,eAGhBC,SAHgB,eAI9B;AAJ8B,iBAKS7B,QAAQ,CAAC,KAAD,CALjB,yCAKvB8B,YALuB,eAKVC,eALU,gCAMC/B,QAAQ,CAAC,EAAD,CANT,yCAMvBgC,QANuB,eAMdC,WANc,gCAOKjC,QAAQ,CAAC,EAAD,CAPb,0CAOvBkC,UAPuB,gBAOZC,aAPY,gBAQ9B;AAR8B,kBASanC,QAAQ,CAAC,KAAD,CATrB,2CASvBoC,cATuB,gBASRC,iBATQ,gBAU9B;AAV8B,kBAWGrC,QAAQ,CAAC,IAAD,CAXX,2CAWvBsC,SAXuB,gBAWbC,YAXa,gBAY9B;AAZ8B,kBAaOvC,QAAQ,CAAC,EAAD,CAbf,2CAavBwC,WAbuB,gBAaXC,cAbW,kCAcGzC,QAAQ,CAAC,EAAD,CAdX,2CAcvB0C,SAduB,gBAcbC,YAda,kCAeC3C,QAAQ,CAAC,EAAD,CAfT,2CAevB4C,QAfuB,gBAedC,WAfc,kCAgBS7C,QAAQ,CAAC,EAAD,CAhBjB,2CAgBvB8C,YAhBuB,gBAgBVC,eAhBU,kCAiBS/C,QAAQ,CAAC,EAAD,CAjBjB,2CAiBvBgD,YAjBuB,gBAiBVC,eAjBU,kCAkBGjD,QAAQ,CAAC,EAAD,CAlBX,2CAkBvBkD,SAlBuB,gBAkBbC,YAlBa,kCAmBDnD,QAAQ,CAAC,EAAD,CAnBP,2CAmBvBoD,OAnBuB,gBAmBfC,UAnBe,kCAoBHrD,QAAQ,CAAC,EAAD,CApBL,2CAoBvBsD,MApBuB,gBAoBhBC,SApBgB,gBAqB9B;AArB8B,kBAsB0BvD,QAAQ,CAAC,EAAD,CAtBlC,2CAsBvBwD,oBAtBuB,gBAsBDC,uBAtBC,kCAuB8BzD,QAAQ,CAAC,EAAD,CAvBtC,2CAuBvB0D,sBAvBuB,gBAuBCC,yBAvBD,gBAyB9B1D,SAAS,CAAC,IAAI,CACZ2D,sBAAsB,GACtBC,sBAAsB,GACtBC,uBAAuB,GACxB,CAJQ,CAIP,EAJO,CAAT,CAMA;AACA,KAAMD,CAAAA,sBAAsB,0FAAG,kJACvBE,WADuB,CACT/C,cAAc,EADL,uBAEvBM,CAAAA,KAAK,CAAC0C,GAAN,CAAU/C,cAAV,CACN,CAACgD,OAAO,CAAC,CAACC,aAAa,kBAAYH,WAAW,CAACI,KAAxB,CAAd,CAAT,CADM,EAELC,IAFK,CAEAC,QAAQ,EAAE,CACd,KAAMC,CAAAA,YAAY,CAAGD,QAAQ,CAACE,IAA9B,CACA,GAAIC,CAAAA,QAAQ,CAAC,EAAb,CACE,GAAIF,YAAY,CAACG,MAAb,GAAwB,CAA5B,CAA+B,CAC7BH,YAAY,CAACC,IAAb,CAAkBG,GAAlB,CAAsB,CAACC,IAAD,CAAMC,KAAN,GAAc,CACnCJ,QAAQ,CAACK,IAAT,CAAc,CAACC,KAAK,CAACH,IAAI,CAACI,IAAZ,CAAiBC,KAAK,CAACL,IAAI,CAACM,aAA5B,CAA0CC,GAAG,CAACN,KAA9C,CAAd,EACD,CAFA,EAGD7B,eAAe,CAACyB,QAAD,CAAf,CACF,CALC,IAKG,CACHW,OAAO,CAACC,GAAR,CAAYd,YAAY,CAACe,GAAzB,EACD,CACF,CAbK,EAaHC,KAbG,CAaGC,KAAK,EAAE,CACdJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,EACD,CAfK,CAFuB,sDAAH,kBAAtB1B,CAAAA,sBAAsB,0CAA5B,CAmBA,KAAMC,CAAAA,uBAAuB,2FAAG,uJACxBC,WADwB,CACV/C,cAAc,EADJ,wBAExBM,CAAAA,KAAK,CAAC0C,GAAN,CAAU3C,mBAAV,CACN,CAAC4C,OAAO,CAAC,CAACC,aAAa,kBAAYH,WAAW,CAACI,KAAxB,CAAd,CAAT,CADM,EAELC,IAFK,CAEAC,QAAQ,EAAE,CACd,KAAMC,CAAAA,YAAY,CAAGD,QAAQ,CAACE,IAA9B,CACA,GAAIiB,CAAAA,KAAK,CAAC,EAAV,CACE,GAAIlB,YAAY,CAACG,MAAb,GAAwB,CAA5B,CAA+B,CAC7BH,YAAY,CAACC,IAAb,CAAkBG,GAAlB,CAAsB,CAACC,IAAD,CAAMC,KAAN,GAAc,CACnCY,KAAK,CAACX,IAAN,CAAW,CAACC,KAAK,CAACH,IAAI,CAACI,IAAZ,CAAiBC,KAAK,CAACL,IAAI,CAACc,iBAA5B,CAA8CP,GAAG,CAACN,KAAlD,CAAX,EACD,CAFA,EAGD3B,eAAe,CAACuC,KAAD,CAAf,CACF,CALC,IAKG,CACHL,OAAO,CAACC,GAAR,CAAYd,YAAY,CAACe,GAAzB,EACD,CACF,CAbK,EAaHC,KAbG,CAaGC,KAAK,EAAE,CACdJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,EACD,CAfK,CAFwB,wDAAH,kBAAvBzB,CAAAA,uBAAuB,2CAA7B,CAmBA,KAAMF,CAAAA,sBAAsB,2FAAG,uJACvBG,WADuB,CACT/C,cAAc,EADL,wBAEvBM,CAAAA,KAAK,CAAC0C,GAAN,CAAU9C,eAAV,CACJ,CAAC+C,OAAO,CAAC,CAACC,aAAa,kBAAYH,WAAW,CAACI,KAAxB,CAAd,CAAT,CADI,EAEHC,IAFG,CAEEC,QAAQ,EAAE,CACd,KAAMC,CAAAA,YAAY,CAAGD,QAAQ,CAACE,IAA9B,CACA,GAAID,YAAY,CAACG,MAAb,GAAwB,CAA5B,CAA+B,CAC3BhC,cAAc,CAAC6B,YAAY,CAACC,IAAd,CAAd,CACH,CAFD,IAEK,CACDY,OAAO,CAACC,GAAR,CAAYd,YAAY,CAACG,MAAzB,CAAgCH,YAAY,CAACe,GAA7C,EACH,CACF,CATG,EASDC,KATC,CASKC,KAAK,EAAE,CACdJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,EACD,CAXG,CAFuB,wDAAH,kBAAtB3B,CAAAA,sBAAsB,2CAA5B,CAeA,KAAM8B,CAAAA,oBAAoB,2FAAG,kBAAMC,OAAN,qIACrB5B,WADqB,CACP/C,cAAc,EADP,wBAErBM,CAAAA,KAAK,CAACsE,IAAN,CAAWzE,qBAAX,CACJ,CAAC0E,UAAU,CAACF,OAAZ,CADI,CAEJ,CAAC1B,OAAO,CAAC,CAACC,aAAa,kBAAYH,WAAW,CAACI,KAAxB,CAAd,CAAT,CAFI,EAGHC,IAHG,CAGEC,QAAQ,EAAE,CACd,KAAMC,CAAAA,YAAY,CAAGD,QAAQ,CAACE,IAA9B,CACA,GAAID,YAAY,CAACG,MAAb,GAAwB,CAA5B,CAA+B,CAC3B9B,YAAY,CAAC2B,YAAY,CAACC,IAAd,CAAZ,CACH,CAFD,IAEK,CACHY,OAAO,CAACC,GAAR,CAAYd,YAAY,CAACG,MAAzB,CAAgCH,YAAY,CAACe,GAA7C,EACD,CACF,CAVG,EAUDC,KAVC,CAUKC,KAAK,EAAE,CACdJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,EACD,CAZG,CAFqB,wDAAH,kBAApBG,CAAAA,oBAAoB,6CAA1B,CAgBA,KAAMI,CAAAA,mBAAmB,2FAAG,kBAAMC,KAAN,qIACpBhC,WADoB,CACN/C,cAAc,EADR,wBAEpBM,CAAAA,KAAK,CAACsE,IAAN,CAAWxE,mBAAX,CACJ,CAAC4E,QAAQ,CAACD,KAAV,CADI,CAEJ,CAAC9B,OAAO,CAAC,CAACC,aAAa,kBAAYH,WAAW,CAACI,KAAxB,CAAd,CAAT,CAFI,EAGHC,IAHG,CAGEC,QAAQ,EAAE,CACd,KAAMC,CAAAA,YAAY,CAAGD,QAAQ,CAACE,IAA9B,CACA,GAAID,YAAY,CAACG,MAAb,GAAwB,CAA5B,CAA+B,CAC3B5B,WAAW,CAACyB,YAAY,CAACC,IAAd,CAAX,CACH,CAFD,IAEK,CACHY,OAAO,CAACC,GAAR,CAAYd,YAAY,CAACG,MAAzB,CAAgCH,YAAY,CAACe,GAA7C,EACD,CACF,CAVG,EAUDC,KAVC,CAUKC,KAAK,EAAE,CACdJ,OAAO,CAACC,GAAR,CAAYG,KAAZ,EACD,CAZG,CAFoB,wDAAH,kBAAnBO,CAAAA,mBAAmB,8CAAzB,CAiBA;AACA;AACA,KAAMG,CAAAA,oBAAoB,CAAIZ,GAAD,EAAO,CAClCtD,eAAe,CAAC,IAAD,CAAf,CACAE,WAAW,CAACoD,GAAD,CAAX,CACAlD,aAAa,CAAC,QAAD,CAAb,CACD,CAJD,CAKA,KAAM+D,CAAAA,cAAc,CAAG,IAAI,CACzBnE,eAAe,CAAC,KAAD,CAAf,CACD,CAFD,CAGA;AACA,KAAMoE,CAAAA,mBAAmB,CAAIR,OAAD,EAAa,CACvCxC,YAAY,CAACwC,OAAD,CAAZ,CACAD,oBAAoB,CAACC,OAAD,CAApB,CACD,CAHD,CAIA;AACA,KAAMS,CAAAA,iBAAiB,CAAIL,KAAD,EAAW,CACnC1C,UAAU,CAAC0C,KAAD,CAAV,CACAD,mBAAmB,CAACC,KAAD,CAAnB,CACD,CAHD,CAIA;AACA,KAAMM,CAAAA,gBAAgB,CAAIC,IAAD,EAAU,CACjC/C,SAAS,CAAC+C,IAAD,CAAT,CACD,CAFD,CAGA;AACA,KAAMC,CAAAA,sCAAsC,CAAG/E,GAAG,CAACgF,MAAJ,GAAaC,KAAb,CAAmB,CAChEC,UAAU,CAAClF,GAAG,CAACmF,MAAJ,GACNC,QADM,CACG,qBADH,CADqD,CAGhEC,YAAY,CAACrF,GAAG,CAACmF,MAAJ,GACRC,QADQ,CACC,uBADD,CAHmD,CAAnB,CAA/C,CAOA,KAAME,CAAAA,aAAa,CAAG,CACpBJ,UAAU,CAAC,EADS,CAEpBG,YAAY,CAAC,EAFO,CAAtB,CAMA,mBACE,qDACE,oBAAC,GAAD,mBACE,oBAAC,KAAD,EAAO,GAAG,CAAC,IAAX,eACA,4BAAM,SAAS,CAAC,YAAhB,qBADA,cAEA,oBAAC,SAAD,EAAW,SAAS,CAAC,MAArB,EAFA,CADF,CADF,cAOE,oBAAC,MAAD,EACE,aAAa,CAAEC,aADjB,CAEE,gBAAgB,CAAEP,sCAFpB,CAGE,QAAQ,CAAGQ,MAAD,EAAU,CAChB,KAAMC,CAAAA,aAAa,CAAG,EAAtB,CACAxD,oBAAoB,CAACkB,GAArB,CAAyBC,IAAI,EAAE,CAC3BqC,aAAa,CAACnC,IAAd,CAAmBF,IAAI,CAACK,KAAxB,EACH,CAFD,EAGA,KAAMiC,CAAAA,eAAe,CAAG,EAAxB,CACAvD,sBAAsB,CAACgB,GAAvB,CAA2BC,IAAI,EAAE,CAC7BsC,eAAe,CAACpC,IAAhB,CAAqBF,IAAI,CAACK,KAA1B,EACH,CAFD,EAGF,KAAMkC,CAAAA,MAAM,CAAG,CACbrB,UAAU,CAAC3C,SADE,CAEb8C,QAAQ,CAAC5C,OAFI,CAGb+D,OAAO,CAAC7D,MAHK,CAIbmC,iBAAiB,CAACuB,aAJL,CAKbI,MAAM,CAAC1D,sBALM,CAMbgD,UAAU,CAACK,MAAM,CAACL,UANL,CAObG,YAAY,CAACE,MAAM,CAACF,YAPP,CAQbQ,SAAS,CAAC3F,QARG,CASb4F,OAAO,CAAC1F,MATK,CAAf,CAWAuD,OAAO,CAACC,GAAR,CAAY8B,MAAZ,EACD,CAxBH,EAyBK,CAAC,CAACK,YAAD,CAAcC,UAAd,CAAyBC,YAAzB,CAAsCV,MAAtC,CAA6CW,OAA7C,CAAqDC,MAArD,CAAD,gBACC,qDACE,oBAAC,GAAD,mBACE,oBAAC,KAAD,EAAO,GAAG,CAAC,IAAX,CAAgB,SAAS,CAAC,MAA1B,eACI,oBAAC,IAAD,mBACI,oBAAC,QAAD,mBACE,oBAAC,GAAD,mBACA,oBAAC,KAAD,EAAO,EAAE,CAAC,GAAV,eACE,8CADF,CADA,cAIE,oBAAC,KAAD,EAAO,EAAE,CAAC,GAAV,eACA,oBAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,SAAS,CAAC,0BAAlC,CAA6D,OAAO,CAAEF,YAAtE,eACE,yBAAG,SAAS,CAAC,+CAAb,EADF,kBACoE,+CADpE,CADA,CAJF,CADF,cAWE,8BAXF,cAYE,oBAAC,GAAD,mBACE,oBAAC,KAAD,EAAO,EAAE,CAAC,IAAV,eACE,oBAAC,KAAD,EAAO,KAAK,CAAEvF,UAAd,CAA0B,MAAM,CAAEJ,YAAlC,CAAgD,MAAM,CAAEoE,cAAxD,EACGlE,QADH,CADF,CADF,cAMA,oBAAC,KAAD,EAAO,EAAE,CAAE,CAAX,CAAc,EAAE,CAAE,EAAlB,eACI,oBAAC,SAAD,mBACE,oBAAC,KAAD,gBADF,cAIE,oBAAC,KAAD,EACA,IAAI,CAAC,QADL,CAEA,IAAI,CAAC,YAFL,CAGA,KAAK,CAAEkB,SAHP,CAIA,QAAQ,CAAE0E,CAAC,EAAEzB,mBAAmB,CAACyB,CAAC,CAACC,MAAF,CAAS7C,KAAV,CAJhC,eAME,mDANF,CAOGxC,WAAW,CAACkC,GAAZ,CAAgB,CAACC,IAAD,CAAMC,KAAN,gBACf,8BAAQ,GAAG,CAAEA,KAAb,CAAoB,KAAK,CAAED,IAAI,CAACmD,EAAhC,EAAqCnD,IAAI,CAACoD,YAA1C,CADD,CAPH,CAJF,CADJ,CANA,cA2BE,oBAAC,KAAD,EAAO,EAAE,CAAE,CAAX,CAAc,EAAE,CAAE,EAAlB,eACE,oBAAC,SAAD,mBACE,oBAAC,KAAD,cADF,cAIE,oBAAC,KAAD,EACA,IAAI,CAAC,QADL,CAEA,IAAI,CAAC,UAFL,CAGA,KAAK,CAAE3E,OAHP,CAIA,QAAQ,CAAEwE,CAAC,EAAExB,iBAAiB,CAACwB,CAAC,CAACC,MAAF,CAAS7C,KAAV,CAJ9B,eAME,iDANF,CAOGtC,SAAS,CAACgC,GAAV,CAAc,CAACC,IAAD,CAAMC,KAAN,gBACb,8BAAQ,GAAG,CAAEA,KAAb,CAAoB,KAAK,CAAED,IAAI,CAACmD,EAAhC,EAAqCnD,IAAI,CAACqD,UAA1C,CADD,CAPH,CAJF,CADF,CA3BF,cAgDE,oBAAC,KAAD,EAAO,EAAE,CAAE,CAAX,CAAc,EAAE,CAAE,EAAlB,eACE,oBAAC,SAAD,mBACE,oBAAC,KAAD,aADF,cAIE,oBAAC,KAAD,EACA,IAAI,CAAC,QADL,CAEA,IAAI,CAAC,SAFL,CAGA,KAAK,CAAE1E,MAHP,CAIA,QAAQ,CAAEsE,CAAC,EAAEvB,gBAAgB,CAACuB,CAAC,CAACC,MAAF,CAAS7C,KAAV,CAJ7B,eAME,gDANF,CAOGpC,QAAQ,CAAC8B,GAAT,CAAa,CAACC,IAAD,CAAMC,KAAN,gBACZ,8BAAQ,GAAG,CAAEA,KAAb,CAAoB,KAAK,CAAED,IAAI,CAACmD,EAAhC,EAAqCnD,IAAI,CAACsD,SAA1C,CADD,CAPH,CAJF,CADF,CAhDF,cAqEE,oBAAC,KAAD,EAAO,EAAE,CAAE,CAAX,CAAc,EAAE,CAAE,EAAlB,eACI,oBAAC,SAAD,mBACI,oBAAC,KAAD,uBADJ,cAII,oBAAC,MAAD,EACA,UAAU,CAAE,CAAE1H,KAAK,CAAEO,iBAAT,CADZ,CAEA,SAAS,CAAC,cAFV,CAGA,eAAe,CAAC,cAHhB,CAIA,OAAO,KAJP,CAKA,IAAI,CAAC,iBALL,CAMA,KAAK,CAAE0C,oBANP,CAOA,QAAQ,CAAEC,uBAPV,CAQA,OAAO,CAAET,YART,EAJJ,CADJ,CArEF,cAsFE,oBAAC,KAAD,EAAO,EAAE,CAAE,CAAX,CAAc,EAAE,CAAE,EAAlB,eACI,oBAAC,SAAD,mBACI,oBAAC,KAAD,gBADJ,cAII,oBAAC,MAAD,EACA,UAAU,CAAE,CAAEzC,KAAK,CAAEO,iBAAT,CADZ,CAEA,SAAS,CAAC,cAFV,CAGA,eAAe,CAAC,cAHhB,CAIA,OAAO,KAJP,CAKA,IAAI,CAAC,iBALL,CAMA,KAAK,CAAE4C,sBANP,CAOA,QAAQ,CAAEC,yBAPV,CAQA,OAAO,CAAEb,YART,EAJJ,CADJ,CAtFF,cAuGE,oBAAC,KAAD,EAAO,EAAE,CAAE,CAAX,CAAc,EAAE,CAAE,EAAlB,eACE,oBAAC,SAAD,mBACE,oBAAC,KAAD,gBADF,cAIE,oBAAC,KAAD,EACA,IAAI,CAAC,MADL,CAEA,WAAW,CAAC,YAFZ,CAGA,IAAI,CAAC,YAHL,CAIA,KAAK,CAAEiE,MAAM,CAACL,UAJd,CAKA,QAAQ,CAAEa,YALV,CAMA,MAAM,CAAEC,UANR,EAJF,CAYGG,MAAM,CAACjB,UAAP,EAAqBgB,OAAO,CAAChB,UAA7B,eACC,4BAAM,SAAS,CAAC,OAAhB,EAAyBiB,MAAM,CAACjB,UAAhC,CAbJ,CADF,CAvGF,cAyHE,oBAAC,KAAD,EAAO,EAAE,CAAE,CAAX,CAAc,EAAE,CAAE,EAAlB,eACE,oBAAC,SAAD,mBACE,oBAAC,KAAD,kBADF,cAIE,oBAAC,KAAD,EACA,IAAI,CAAC,MADL,CAEA,WAAW,CAAC,cAFZ,CAGA,IAAI,CAAC,cAHL,CAIA,KAAK,CAAEK,MAAM,CAACF,YAJd,CAKA,QAAQ,CAAEU,YALV,CAMA,MAAM,CAAEC,UANR,EAJF,CAYGG,MAAM,CAACd,YAAP,EAAuBa,OAAO,CAACb,YAA/B,eACC,4BAAM,SAAS,CAAC,OAAhB,EAAyBc,MAAM,CAACd,YAAhC,CAbJ,CADF,CAzHF,cA2IE,oBAAC,KAAD,EAAO,EAAE,CAAE,CAAX,CAAc,EAAE,CAAE,EAAlB,eACE,oBAAC,SAAD,mBACE,oBAAC,KAAD,kBADF,cAIE,oBAAC,UAAD,EACA,eAAe,CAAC,WADhB,CAEA,QAAQ,CAAEnF,QAFV,CAGA,QAAQ,CAAEwG,IAAI,EAAEvG,WAAW,CAACuG,IAAD,CAH3B,CAIA,UAAU,CAAC,YAJX,EAJF,CADF,CA3IF,cAwJE,oBAAC,KAAD,EAAO,EAAE,CAAE,CAAX,CAAc,EAAE,CAAE,EAAlB,eACE,oBAAC,SAAD,mBACE,oBAAC,KAAD,gBADF,cAIE,oBAAC,UAAD,EACA,eAAe,CAAC,SADhB,CAEA,QAAQ,CAAEtG,MAFV,CAGA,QAAQ,CAAEsG,IAAI,EAAErG,SAAS,CAACqG,IAAD,CAHzB,CAIA,UAAU,CAAC,YAJX,EAJF,CADF,CAxJF,CAZF,CADJ,CADJ,CADF,CADF,CA1BN,CAPF,cA8NE,oBAAC,GAAD,mBACI,oBAAC,KAAD,EAAO,EAAE,CAAE,EAAX,CAAe,EAAE,CAAE,EAAnB,eACE,oBAAC,IAAD,mBACE,oBAAC,QAAD,mBACE,iDADF,cAEE,oBAAC,KAAD,EAAO,UAAU,KAAjB,CAAkB,QAAQ,KAA1B,CAA2B,OAAO,KAAlC,eACE,8CACE,2CACE,kCADF,cAEE,qCAFF,cAGE,2CAHF,cAIE,6CAJF,cAKE,oCALF,cAME,0CANF,cAOE,sDAPF,cAQE,0CARF,cASE,2CATF,cAUE,yCAVF,cAWE,qDAXF,cAYE,yCAZF,cAaE,0CAbF,cAcE,kDAdF,cAeE,8DAfF,cAgBE,sDAhBF,cAiBE,yCAjBF,cAkBE,2CAlBF,cAmBE,qDAnBF,CADF,CADF,cAwBE,8CAmBE,2CACE,0BAAI,KAAK,CAAC,KAAV,MADF,cAEE,0CAFF,cAGE,wCAHF,cAIE,uCAJF,cAKE,0CALF,cAME,mCANF,cAOE,mCAPF,cAQE,mCARF,cASE,mCATF,cAUE,mCAVF,cAWE,mCAXF,cAYE,mCAZF,cAaE,mCAbF,cAcE,mCAdF,cAeE,mCAfF,cAgBE,mCAhBF,cAiBE,mCAjBF,cAkBE,mCAlBF,cAmBE,mCAnBF,CAnBF,CAxBF,CAFF,CADF,CADF,CADJ,CA9NF,CADF,CA4SD,CAxcD,CA0cA,cAAezG,CAAAA,eAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody, FormGroup, Label,\n  Input, Table,Button,Alert\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getStationsAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,getFleetOperatorAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst ChargingSummary = ({}) => {\n  //date states\n  const [fromDate,setFromDate] = useState();\n  const [toDate,setToDate] = useState();\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(true);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [stationNames,setStationNames] = useState([]);\n  const [fleetOpNames,setFleetOpNames] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n  //multiselect state\n  const [fleetSelectedOptions, setFleetSelectedOptions] = useState([]);\n  const [stationSelectedOptions, setStationSelectedOptions] = useState([]);\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n    GetStationNamesAPICall();\n    GetFleetOperatorAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      let stations=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           stations.push({label:item.name,value:item.hub_master_id,key:index})\n         })\n         setStationNames(stations);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetFleetOperatorAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      let fleet=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           fleet.push({label:item.name,value:item.fleet_operator_id,key:index})\n         })\n         setFleetOpNames(fleet);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const chargingSummaryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    getCityNamesAPICall(state);\n  }\n  //handle city select\n  const handleCitySelect = (city) => {\n    setCityId(city);\n  }\n  //Form Validation Schema\n  const ChargingSummaryDetailsValidationSchema = yup.object().shape({\n    charger_id:yup.string()\n        .required(\"Charger is required\"),\n    connector_id:yup.string()\n        .required(\"Connector is required\"),\n  });\n\n  const initialValues = {\n    charger_id:\"\",\n    connector_id:\"\",\n  };\n  \n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Charging Summary</span>\n        <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={ChargingSummaryDetailsValidationSchema} \n        onSubmit={(values)=>{\n            const fleetSelected = [];\n            fleetSelectedOptions.map(item=>{\n                fleetSelected.push(item.value)\n            })\n            const stationSelected = [];\n            stationSelectedOptions.map(item=>{\n                stationSelected.push(item.value)\n            })\n          const params = {\n            country_id:countryId,\n            state_id:stateId,\n            city_id:cityId,\n            fleet_operator_id:fleetSelected,\n            hub_id:stationSelectedOptions,\n            charger_id:values.charger_id,\n            connector_id:values.connector_id,\n            from_date:fromDate,\n            to_date:toDate\n          }\n          console.log(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                    <Card>\n                        <CardBody>\n                          <Row>\n                          <Colxx md=\"6\">\n                            <h3>Select Option</h3>\n                            </Colxx>\n                            <Colxx md=\"6\">\n                            <Button color=\"primary\" className=\"default mr-2 float-right\" onClick={handleSubmit} >\n                              <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Generate Report</b>\n                            </Button>\n                            </Colxx>\n                          </Row>\n                          <hr/>\n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                          <Colxx lg={4} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Country\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"country_id\"\n                                value={countryId}\n                                onChange={e=>handleCountrySelect(e.target.value)}\n                                >\n                                  <option>Select Country</option>\n                                  {countryList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.country_name}</option>\n                                  )}\n                                </Input>\n                                {/* {errors.country_id && touched.country_id &&(\n                                  <span className=\"error\">{errors.country_id}</span>\n                                )} */}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={4} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  State\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"state_id\"\n                                value={stateId}\n                                onChange={e=>handleStateSelect(e.target.value)}\n                                >\n                                  <option>Select State</option>\n                                  {stateList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.state_name}</option>\n                                  )}\n                                </Input>\n                                {/* {errors.state && touched.state &&(\n                                  <span className=\"error\">{errors.state}</span>\n                                )} */}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={4} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  City\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"city_id\"\n                                value={cityId}\n                                onChange={e=>handleCitySelect(e.target.value)}\n                                >\n                                  <option>Select City</option>\n                                  {cityList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.city_name}</option>\n                                  )}\n                                </Input>\n                                {/* {errors.city && touched.city &&(\n                                  <span className=\"error\">{errors.city}</span>\n                                )} */}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={6} sm={12}>\n                                <FormGroup>\n                                    <Label>\n                                    Fleet Operator\n                                    </Label>\n                                    <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={fleetSelectedOptions}\n                                    onChange={setFleetSelectedOptions}\n                                    options={fleetOpNames}\n                                    />\n                                </FormGroup>\n                            </Colxx>\n                            <Colxx lg={6} sm={12}>\n                                <FormGroup>\n                                    <Label>\n                                    Station\n                                    </Label>\n                                    <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={stationSelectedOptions}\n                                    onChange={setStationSelectedOptions}\n                                    options={stationNames}\n                                    />\n                                </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Charger\n                                </Label>\n                                <Input \n                                type=\"text\"\n                                placeholder=\"Charger Id\"\n                                name=\"charger_id\"\n                                value={values.charger_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                </Input>\n                                {errors.charger_id && touched.charger_id &&(\n                                  <span className=\"error\">{errors.charger_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Connector\n                                </Label>\n                                <Input \n                                type=\"text\"\n                                placeholder=\"Connector Id\"\n                                name=\"connector_id\"\n                                value={values.connector_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                </Input>\n                                {errors.connector_id && touched.connector_id &&(\n                                  <span className=\"error\">{errors.connector_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  From Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"From Date\"\n                                selected={fromDate}\n                                onChange={date=>setFromDate(date)}\n                                dateFormat=\"dd/MM/yyyy\"\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  To Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"To Date\"\n                                selected={toDate}\n                                onChange={date=>setToDate(date)}\n                                dateFormat=\"dd/MM/yyyy\"\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                        </CardBody>\n                    </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n      <Row>\n          <Colxx sm={12} lg={12}>\n            <Card>\n              <CardBody>\n                <h3>Charging Summary</h3>\n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Date</th>\n                      <th>Charger Id</th>\n                      <th>Connector ID</th>\n                      <th>BIN</th>\n                      <th>Start SoC</th>\n                      <th>Start Battery Voltage</th>\n                      <th>Start Whr</th>\t\t\n                      <th>Start Time</th>\n                      <th>Stop SoC</th>\n                      <th>Stop Battery Voltage</th>\n                      <th>Stop Whr</th>\n                      <th>Stop Time</th>\n                      <th>Charging Duration</th>\n                      <th>Check cell balancing happened</th>\n                      <th>Energy exchanged (DC)</th>\n                      <th>Unit/SoC</th>\n                      <th>Session ID</th>\n                      <th>Energy Meter Reading</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {/* {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"7\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                      userList.length > 0 ?\n                          userList.map((item,index)=>\n                            <tr key={item.id}>\n                              <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index+1}</th>\n                              <td>{item.username}</td>\n                              <td>{item.name}</td>\n                              <td>{item.contact_number}</td>\n                              <td>{item.email}</td>\n                              <td>{item.role_name}</td>\n                            </tr>\n                          ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"7\">Data  Not  Found</td>\n                      </tr>\n                  } */}\n                    <tr>\n                      <th scope=\"row\">1</th>\n                      <td>Country 1</td>\n                      <td>State 1</td>\n                      <td>City 1</td>\n                      <td>Station 1</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default ChargingSummary;\n"]},"metadata":{},"sourceType":"module"}