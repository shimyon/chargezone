{"ast":null,"code":"import React from'react';import{Card,CardBody,CardTitle}from'reactstrap';import IntlMessages from'../../../../helpers/IntlMessages';import{LineChart}from'../../../../components/charts';import{ThemeColors}from'../../../../helpers/ThemeColors';const moment=require('moment');const colors=ThemeColors();const today=moment();today.add(1,'d').format('DD-MMM');const dateLabel=Array(7).fill().map(()=>today.subtract(1,'d').format('DD-MMM'));let total_last_7=0;const SwapChartCard=()=>{return/*#__PURE__*/React.createElement(Card,{className:\"dashboard-my-card\"},/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(CardTitle,null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"dashboard.swaps\"}),\"(\",total_last_7,\")\"),showSwapChart&&/*#__PURE__*/React.createElement(\"div\",{className:\"dashboard-line-chart\"},/*#__PURE__*/React.createElement(LineChart,{data:SwapChartData1})),!showSwapChart&&/*#__PURE__*/React.createElement(\"div\",{className:\"dashboard-line-chart\"},/*#__PURE__*/React.createElement(LineChart,{data:SwapChartData}))));};const SwapChartData1={labels:dateLabel,datasets:[{label:'Complete',data:[0,0,0,0,0,0,0],borderColor:colors.themeColor1,pointBackgroundColor:colors.foregroundColor,pointBorderColor:colors.themeColor1,pointHoverBackgroundColor:colors.themeColor1,pointHoverBorderColor:colors.foregroundColor,pointRadius:6,pointBorderWidth:2,pointHoverRadius:8,fill:false}]};const SwapChartData={labels:dateLabel,datasets:[{label:'Complete',data:[0,0,0,0,0,0,0],borderColor:colors.themeColor1,pointBackgroundColor:colors.foregroundColor,pointBorderColor:colors.themeColor1,pointHoverBackgroundColor:colors.themeColor1,pointHoverBorderColor:colors.foregroundColor,pointRadius:6,pointBorderWidth:2,pointHoverRadius:8,fill:false}]};let showSwapChart=true;const setshowSwapChart=value=>{showSwapChart=value;};const setSwapChartData=responseData=>{setshowSwapChart(true);//lineChartOptions.scales.yAxes[0].ticks.max=500;\n// lineChartOptions.scales.yAxes[0].ticks.min=1000;\n//lineChartOptions.scales.yAxes[0].ticks.stepSize=100;\ntotal_last_7=responseData.data.swapping.total_last_7;SwapChartData.labels=responseData.data.swapping.date;SwapChartData.datasets[0].data=responseData.data.swapping.complete_swap_data;//SwapChartData.datasets[1].data=responseData.data.swapping.incomplete_swap_data;\nsetshowSwapChart(false);};export{SwapChartCard,setSwapChartData,setshowSwapChart};","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/dashboard/manager/SwapChart.js"],"names":["React","Card","CardBody","CardTitle","IntlMessages","LineChart","ThemeColors","moment","require","colors","today","add","format","dateLabel","Array","fill","map","subtract","total_last_7","SwapChartCard","showSwapChart","SwapChartData1","SwapChartData","labels","datasets","label","data","borderColor","themeColor1","pointBackgroundColor","foregroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointBorderWidth","pointHoverRadius","setshowSwapChart","value","setSwapChartData","responseData","swapping","date","complete_swap_data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  \n} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { LineChart } from '../../../../components/charts';\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\nconst moment = require('moment');\n\nconst colors = ThemeColors();\n\nconst today = moment();\ntoday.add(1, 'd').format('DD-MMM')\nconst dateLabel = Array(7).fill().map(\n() => today.subtract(1, 'd').format('DD-MMM')\n);\nlet total_last_7=0;\nconst SwapChartCard = () => {\n  return (\n    <Card className=\"dashboard-my-card\">\n     \n      <CardBody>\n        <CardTitle>\n          <IntlMessages id=\"dashboard.swaps\" />({total_last_7})\n        </CardTitle>\n        {showSwapChart && (\n        <div className=\"dashboard-line-chart\">\n          <LineChart  data={SwapChartData1} />\n        </div>)}\n        {!showSwapChart && (\n        <div className=\"dashboard-line-chart\">\n          <LineChart  data={SwapChartData} />\n        </div>)}\n        \n      </CardBody>\n    </Card>\n  );\n};\nconst SwapChartData1 = {\n  labels:dateLabel,\n  datasets: [\n    {\n      label: 'Complete',\n      data: [0,0,0,0,0,0,0],\n      borderColor: colors.themeColor1,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 6,\n      pointBorderWidth: 2,\n      pointHoverRadius: 8,\n      fill: false,\n    },\n   \n  ]\n};\n\nconst SwapChartData = {\n    labels:dateLabel,\n    datasets: [\n      {\n        label: 'Complete',\n        data: [0,0,0,0,0,0,0],\n        borderColor: colors.themeColor1,\n        pointBackgroundColor: colors.foregroundColor,\n        pointBorderColor: colors.themeColor1,\n        pointHoverBackgroundColor: colors.themeColor1,\n        pointHoverBorderColor: colors.foregroundColor,\n        pointRadius: 6,\n        pointBorderWidth: 2,\n        pointHoverRadius: 8,\n        fill: false,\n      },\n      \n    ]\n  };\n  let showSwapChart=true;\n  const  setshowSwapChart = (value) => {showSwapChart=value};\n  const setSwapChartData = (responseData) => {\n\n    setshowSwapChart(true);\n     //lineChartOptions.scales.yAxes[0].ticks.max=500;\n    // lineChartOptions.scales.yAxes[0].ticks.min=1000;\n     //lineChartOptions.scales.yAxes[0].ticks.stepSize=100;\n    total_last_7=responseData.data.swapping.total_last_7;\n    SwapChartData.labels= responseData.data.swapping.date;\n    SwapChartData.datasets[0].data=responseData.data.swapping.complete_swap_data;\n    //SwapChartData.datasets[1].data=responseData.data.swapping.incomplete_swap_data;\n    setshowSwapChart(false);\n    \n\n  };\n\n\nexport  {SwapChartCard,setSwapChartData,setshowSwapChart};\n"]},"metadata":{},"sourceType":"module"}