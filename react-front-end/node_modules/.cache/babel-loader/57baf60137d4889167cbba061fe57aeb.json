{"ast":null,"code":"import _objectSpread from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\src\\\\components\\\\carousel\\\\GlideComponent.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Glide from '@glidejs/glide';\nimport { getDirection } from '../../helpers/Utils';\nimport '@glidejs/glide/dist/css/glide.core.min.css';\nlet resizeTimeOut = -1;\nlet mountTimeOut = -1;\n\nclass GlideComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onResize = this.onResize.bind(this);\n    this.renderDots = this.renderDots.bind(this);\n  }\n\n  componentDidMount() {\n    this.initGlide();\n  }\n\n  componentDidUpdate() {\n    this.destroyGlide();\n    this.initGlide();\n  }\n\n  componentWillUnmount() {\n    this.destroyGlide();\n  }\n\n  onResize() {\n    clearTimeout(resizeTimeOut);\n    resizeTimeOut = setTimeout(() => {\n      this.glideCarousel.update();\n      resizeTimeOut = -1;\n    }, 500);\n  }\n\n  initGlide() {\n    this.glideCarousel = new Glide(this.carousel, _objectSpread(_objectSpread({}, this.props.settings), {}, {\n      direction: getDirection().direction\n    }));\n    this.glideCarousel.mount();\n    this.glideCarousel.on('resize', this.onResize);\n    mountTimeOut = setTimeout(() => {\n      const event = document.createEvent('HTMLEvents');\n      event.initEvent('resize', false, false);\n      window.dispatchEvent(event);\n    }, 500);\n  }\n\n  destroyGlide() {\n    clearTimeout(resizeTimeOut);\n    clearTimeout(mountTimeOut);\n\n    if (this.glideCarousel) {\n      this.glideCarousel.destroy();\n    }\n  }\n\n  renderDots() {\n    const total = React.Children.count(this.props.children);\n    const dots = [];\n\n    for (let i = 0; i < total; i++) {\n      dots.push( /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"glide__bullet slider-dot\",\n        key: i,\n        \"data-glide-dir\": \"=\".concat(i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return dots;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"glide\",\n      ref: node => this.carousel = node,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      \"data-glide-el\": \"track\",\n      className: \"glide__track\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"glide__slides\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, this.props.children)), !this.props.settings.hideNav && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"glide__arrows slider-nav\",\n      \"data-glide-el\": \"controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"glide__arrow glide__arrow--left left-arrow btn btn-link\",\n      \"data-glide-dir\": \"<\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"simple-icon-arrow-left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"glide__bullets slider-dot-container\",\n      \"data-glide-el\": \"controls[nav]\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 15\n      }\n    }, this.renderDots()), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"glide__arrow glide__arrow--right right-arrow btn btn-link\",\n      \"data-glide-dir\": \">\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"simple-icon-arrow-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}\n\nGlideComponent.defaultProps = {\n  settings: {}\n};\nGlideComponent.propTypes = {\n  settings: PropTypes.shape({\n    type: PropTypes.string,\n    startAt: PropTypes.number,\n    perView: PropTypes.number,\n    focusAt: PropTypes.oneOf([PropTypes.number, PropTypes.string]),\n    gap: PropTypes.number,\n    autoplay: PropTypes.bool,\n    hoverpause: PropTypes.bool,\n    keyboard: PropTypes.bool,\n    bound: PropTypes.bool,\n    swipeThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    dragThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    perTouch: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    touchRatio: PropTypes.number,\n    touchAngle: PropTypes.number,\n    animationDuration: PropTypes.number,\n    rewind: PropTypes.bool,\n    rewindDuration: PropTypes.number,\n    animationTimingFunc: PropTypes.string,\n    direction: PropTypes.string,\n    peek: PropTypes.object,\n    breakpoints: PropTypes.object,\n    classes: PropTypes.object,\n    throttle: PropTypes.number\n  }) // id: PropTypes.string,\n  // className: PropTypes.string,\n\n};\nexport default GlideComponent;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/components/carousel/GlideComponent.js"],"names":["React","PropTypes","Glide","getDirection","resizeTimeOut","mountTimeOut","GlideComponent","Component","constructor","props","onResize","bind","renderDots","componentDidMount","initGlide","componentDidUpdate","destroyGlide","componentWillUnmount","clearTimeout","setTimeout","glideCarousel","update","carousel","settings","direction","mount","on","event","document","createEvent","initEvent","window","dispatchEvent","destroy","total","Children","count","children","dots","i","push","render","node","hideNav","defaultProps","propTypes","shape","type","string","startAt","number","perView","focusAt","oneOf","gap","autoplay","bool","hoverpause","keyboard","bound","swipeThreshold","dragThreshold","perTouch","touchRatio","touchAngle","animationDuration","rewind","rewindDuration","animationTimingFunc","peek","object","breakpoints","classes","throttle"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Glide from '@glidejs/glide';\nimport { getDirection } from '../../helpers/Utils';\nimport '@glidejs/glide/dist/css/glide.core.min.css';\n\nlet resizeTimeOut = -1;\nlet mountTimeOut = -1;\n\nclass GlideComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onResize = this.onResize.bind(this);\n    this.renderDots = this.renderDots.bind(this);\n  }\n\n  componentDidMount() {\n    this.initGlide();\n  }\n\n  componentDidUpdate() {\n    this.destroyGlide();\n    this.initGlide();\n  }\n\n  componentWillUnmount() {\n    this.destroyGlide();\n  }\n\n  onResize() {\n    clearTimeout(resizeTimeOut);\n    resizeTimeOut = setTimeout(() => {\n      this.glideCarousel.update();\n      resizeTimeOut = -1;\n    }, 500);\n  }\n\n  initGlide() {\n    this.glideCarousel = new Glide(this.carousel, {\n      ...this.props.settings,\n      direction: getDirection().direction,\n    });\n    this.glideCarousel.mount();\n    this.glideCarousel.on('resize', this.onResize);\n    mountTimeOut = setTimeout(() => {\n      const event = document.createEvent('HTMLEvents');\n      event.initEvent('resize', false, false);\n      window.dispatchEvent(event);\n    }, 500);\n  }\n\n  destroyGlide() {\n    clearTimeout(resizeTimeOut);\n    clearTimeout(mountTimeOut);\n    if (this.glideCarousel) {\n      this.glideCarousel.destroy();\n    }\n  }\n\n  renderDots() {\n    const total = React.Children.count(this.props.children);\n    const dots = [];\n    for (let i = 0; i < total; i++) {\n      dots.push(\n        <button\n          type=\"button\"\n          className=\"glide__bullet slider-dot\"\n          key={i}\n          data-glide-dir={`=${i}`}\n        />\n      );\n    }\n    return dots;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"glide\" ref={(node) => (this.carousel = node)}>\n          <div data-glide-el=\"track\" className=\"glide__track\">\n            <div className=\"glide__slides\">{this.props.children}</div>\n          </div>\n          {!this.props.settings.hideNav && (\n            <div className=\"glide__arrows slider-nav\" data-glide-el=\"controls\">\n              <button\n                type=\"button\"\n                className=\"glide__arrow glide__arrow--left left-arrow btn btn-link\"\n                data-glide-dir=\"<\"\n              >\n                <i className=\"simple-icon-arrow-left\" />\n              </button>\n\n              <div\n                className=\"glide__bullets slider-dot-container\"\n                data-glide-el=\"controls[nav]\"\n              >\n                {this.renderDots()}\n              </div>\n\n              <button\n                type=\"button\"\n                className=\"glide__arrow glide__arrow--right right-arrow btn btn-link\"\n                data-glide-dir=\">\"\n              >\n                <i className=\"simple-icon-arrow-right\" />\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nGlideComponent.defaultProps = {\n  settings: {},\n};\n\nGlideComponent.propTypes = {\n  settings: PropTypes.shape({\n    type: PropTypes.string,\n    startAt: PropTypes.number,\n    perView: PropTypes.number,\n    focusAt: PropTypes.oneOf([PropTypes.number, PropTypes.string]),\n    gap: PropTypes.number,\n    autoplay: PropTypes.bool,\n    hoverpause: PropTypes.bool,\n    keyboard: PropTypes.bool,\n    bound: PropTypes.bool,\n    swipeThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    dragThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    perTouch: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    touchRatio: PropTypes.number,\n    touchAngle: PropTypes.number,\n    animationDuration: PropTypes.number,\n    rewind: PropTypes.bool,\n    rewindDuration: PropTypes.number,\n    animationTimingFunc: PropTypes.string,\n    direction: PropTypes.string,\n    peek: PropTypes.object,\n    breakpoints: PropTypes.object,\n    classes: PropTypes.object,\n    throttle: PropTypes.number,\n  }),\n  // id: PropTypes.string,\n  // className: PropTypes.string,\n};\n\nexport default GlideComponent;\n"]},"metadata":{},"sourceType":"module"}