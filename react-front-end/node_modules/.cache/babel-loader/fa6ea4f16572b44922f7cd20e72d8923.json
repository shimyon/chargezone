{"ast":null,"code":"import _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\src\\\\components\\\\charts\\\\Scatter.js\";\n\n/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\nimport { scatterChartOptions } from './config';\n\nconst Scatter = ({\n  data,\n  shadow = false\n}) => {\n  const chartContainer = useRef(null);\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        setChartInstance = _useState2[1];\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      if (shadow) {\n        Chart.defaults.scatterWithShadow = Chart.defaults.scatter;\n        Chart.controllers.scatterWithShadow = Chart.controllers.scatter.extend({\n          draw(ease) {\n            Chart.controllers.scatter.prototype.draw.call(this, ease);\n            const ctx = this.chart.ctx;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.2)';\n            ctx.shadowBlur = 7;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 7;\n            ctx.responsive = true;\n            Chart.controllers.scatter.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          }\n\n        });\n      }\n\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: shadow ? 'scatterWithShadow' : 'scatter',\n        options: scatterChartOptions,\n        data\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data, shadow]);\n  return /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: chartContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 10\n    }\n  });\n};\n\nexport default Scatter;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/components/charts/Scatter.js"],"names":["React","useEffect","useRef","useState","Chart","scatterChartOptions","Scatter","data","shadow","chartContainer","setChartInstance","current","defaults","scatterWithShadow","scatter","controllers","extend","draw","ease","prototype","call","ctx","chart","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","responsive","apply","arguments","restore","context","getContext","newChartInstance","type","options"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,KAAT,QAAsB,UAAtB;AAEA,SAASC,mBAAT,QAAoC,UAApC;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAM,GAAG;AAAjB,CAAD,KAA8B;AAC5C,QAAMC,cAAc,GAAGP,MAAM,CAAC,IAAD,CAA7B;;AAD4C,oBAEfC,QAAQ,CAAC,IAAD,CAFO;AAAA;AAAA,QAEnCO,gBAFmC;;AAI5CT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,cAAc,IAAIA,cAAc,CAACE,OAArC,EAA8C;AAC5C,UAAIH,MAAJ,EAAY;AACVJ,QAAAA,KAAK,CAACQ,QAAN,CAAeC,iBAAf,GAAmCT,KAAK,CAACQ,QAAN,CAAeE,OAAlD;AACAV,QAAAA,KAAK,CAACW,WAAN,CAAkBF,iBAAlB,GAAsCT,KAAK,CAACW,WAAN,CAAkBD,OAAlB,CAA0BE,MAA1B,CAAiC;AACrEC,UAAAA,IAAI,CAACC,IAAD,EAAO;AACTd,YAAAA,KAAK,CAACW,WAAN,CAAkBD,OAAlB,CAA0BK,SAA1B,CAAoCF,IAApC,CAAyCG,IAAzC,CAA8C,IAA9C,EAAoDF,IAApD;AADS,kBAGEG,GAHF,GAIL,IAJK,CAGPC,KAHO,CAGED,GAHF;AAKTA,YAAAA,GAAG,CAACE,IAAJ;AACAF,YAAAA,GAAG,CAACG,WAAJ,GAAkB,iBAAlB;AACAH,YAAAA,GAAG,CAACI,UAAJ,GAAiB,CAAjB;AACAJ,YAAAA,GAAG,CAACK,aAAJ,GAAoB,CAApB;AACAL,YAAAA,GAAG,CAACM,aAAJ,GAAoB,CAApB;AACAN,YAAAA,GAAG,CAACO,UAAJ,GAAiB,IAAjB;AACAxB,YAAAA,KAAK,CAACW,WAAN,CAAkBD,OAAlB,CAA0BK,SAA1B,CAAoCF,IAApC,CAAyCY,KAAzC,CAA+C,IAA/C,EAAqDC,SAArD;AACAT,YAAAA,GAAG,CAACU,OAAJ;AACD;;AAdoE,SAAjC,CAAtC;AAgBD;;AACD,YAAMC,OAAO,GAAGvB,cAAc,CAACE,OAAf,CAAuBsB,UAAvB,CAAkC,IAAlC,CAAhB;AACA,YAAMC,gBAAgB,GAAG,IAAI9B,KAAJ,CAAU4B,OAAV,EAAmB;AAC1CG,QAAAA,IAAI,EAAE3B,MAAM,GAAG,mBAAH,GAAyB,SADK;AAE1C4B,QAAAA,OAAO,EAAE/B,mBAFiC;AAG1CE,QAAAA;AAH0C,OAAnB,CAAzB;AAKAG,MAAAA,gBAAgB,CAACwB,gBAAD,CAAhB;AACD;AACF,GA7BQ,EA6BN,CAACzB,cAAD,EAAiBF,IAAjB,EAAuBC,MAAvB,CA7BM,CAAT;AA+BA,sBAAO;AAAQ,IAAA,GAAG,EAAEC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CApCD;;AAsCA,eAAeH,OAAf","sourcesContent":["/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { scatterChartOptions } from './config';\n\nconst Scatter = ({ data, shadow = false }) => {\n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      if (shadow) {\n        Chart.defaults.scatterWithShadow = Chart.defaults.scatter;\n        Chart.controllers.scatterWithShadow = Chart.controllers.scatter.extend({\n          draw(ease) {\n            Chart.controllers.scatter.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.2)';\n            ctx.shadowBlur = 7;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 7;\n            ctx.responsive = true;\n            Chart.controllers.scatter.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        });\n      }\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: shadow ? 'scatterWithShadow' : 'scatter',\n        options: scatterChartOptions,\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data, shadow]);\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default Scatter;\n"]},"metadata":{},"sourceType":"module"}