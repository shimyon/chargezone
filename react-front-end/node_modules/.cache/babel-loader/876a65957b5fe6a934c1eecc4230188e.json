{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\src\\\\views\\\\app\\\\pages\\\\UpdateOem.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Row, FormGroup, Card, CardBody, Label, Input, Button, Alert } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport { updateOemAPI, getOemUsersAPI, getOemByIdAPI, adminRoot } from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateOEM = () => {\n  //alert states\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        alertVisible = _useState2[0],\n        setAlertVisible = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        alertMsg = _useState4[0],\n        setAlertMsg = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        alertColor = _useState6[0],\n        setAlertColor = _useState6[1]; //state to disable button on click\n\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        buttonDisabled = _useState8[0],\n        setButtonDisabled = _useState8[1]; //multiselect state\n\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        selectedOptions = _useState10[0],\n        setSelectedOptions = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        oemUsers = _useState12[0],\n        setOemUsers = _useState12[1]; //type state\n\n\n  const _useState13 = useState(\"\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        type = _useState14[0],\n        setType = _useState14[1]; //oem details state\n\n\n  const _useState15 = useState(\"\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        name = _useState16[0],\n        setName = _useState16[1];\n\n  const _useState17 = useState(\"\"),\n        _useState18 = _slicedToArray(_useState17, 2),\n        address = _useState18[0],\n        setAddress = _useState18[1];\n\n  const _useState19 = useState([]),\n        _useState20 = _slicedToArray(_useState19, 2),\n        contactPerson = _useState20[0],\n        setContactPerson = _useState20[1];\n\n  const _useState21 = useState(\"\"),\n        _useState22 = _slicedToArray(_useState21, 2),\n        contactEmail = _useState22[0],\n        setContactEmail = _useState22[1];\n\n  const _useState23 = useState(\"\"),\n        _useState24 = _slicedToArray(_useState23, 2),\n        contactNumber = _useState24[0],\n        setContactNumber = _useState24[1];\n\n  const _useState25 = useState(\"\"),\n        _useState26 = _slicedToArray(_useState25, 2),\n        remark1 = _useState26[0],\n        setRemark1 = _useState26[1];\n\n  const _useState27 = useState(\"\"),\n        _useState28 = _slicedToArray(_useState27, 2),\n        remark2 = _useState28[0],\n        setRemark2 = _useState28[1];\n\n  const history = useHistory();\n  const location = useLocation();\n  useEffect(() => {\n    getOemUsersAPICall();\n    getOemByIdAPICall();\n  }, []); //API calls\n\n  const getOemUsersAPICall = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context.next = 3;\n            return axios.post(getOemUsersAPI, {\n              user_role: \"OEM\"\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n              let users = [];\n\n              if (responseData.status === 1) {\n                responseData.data.map((item, index) => {\n                  users.push({\n                    label: item.name,\n                    value: item.id,\n                    key: index\n                  });\n                });\n                setOemUsers(users);\n              } else {\n                oemUpdatedAlert(responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function getOemUsersAPICall() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const getOemByIdAPICall = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context2.next = 3;\n            return axios.post(getOemByIdAPI, {\n              oem_id: location.state.oem_id\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n              let tempData = [];\n\n              if (responseData.status === 1) {\n                setName(responseData.data.name);\n                setAddress(responseData.data.address);\n                setContactPerson(responseData.data.contact_person);\n                setContactEmail(responseData.data.contact_email);\n                setContactNumber(responseData.data.contact_number);\n                setType(responseData.data.type);\n                setRemark1(responseData.data.remark_1);\n                setRemark2(responseData.data.remark_2);\n                responseData.data.users.map((item, index) => {\n                  tempData.push({\n                    label: item.name,\n                    value: item.id,\n                    key: index\n                  });\n                });\n                setSelectedOptions(tempData);\n              } else {\n                oemUpdatedAlert(responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function getOemByIdAPICall() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const updateOemAPICall = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            setButtonDisabled(true);\n            currentUser = getCurrentUser();\n            _context3.next = 4;\n            return axios.post(updateOemAPI, params, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                history.push({\n                  pathname: adminRoot + '/pages/oem',\n                  state: {\n                    responseStatus: responseData.status,\n                    responseMsg: responseData.msg\n                  }\n                });\n              } else {\n                setButtonDisabled(false);\n                oemUpdatedAlert(responseData.msg);\n              }\n            }).catch(error => {\n              setButtonDisabled(false);\n              console.log(error);\n            });\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n\n    return function updateOemAPICall(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); //helper methods\n  //Alert helper methods\n\n\n  const oemUpdatedAlert = msg => {\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  };\n\n  const onDismissAlert = () => {\n    setAlertVisible(false);\n  }; //Form Validation Schema\n\n\n  const OemDetailsValidationSchema = yup.object().shape({\n    name: yup.string().required(\"Name is required\"),\n    address: yup.string().required(\"Address is required\"),\n    contact_person: yup.string().required(\"Contact Person is required\"),\n    contact_email: yup.string().email(\"Invalid Email format\").required(\"Contact email is required\"),\n    contact_number: yup.string().matches(/\\+?\\d[\\d -]{8,12}\\d/, \"Invalid contact number\").length(10, \"Invalid contact number length\").required(\"Contact number is required\")\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"page_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, \"Update OEM\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"oem\",\n    className: \"mt-2 btn-primary default btn-sm float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 20\n    }\n  }), \" OEM List\")), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: {\n      name: name,\n      address: address,\n      contact_person: contactPerson,\n      contact_email: contactEmail,\n      contact_number: contactNumber,\n      remark_1: remark1,\n      remark_2: remark2\n    },\n    validationSchema: OemDetailsValidationSchema,\n    onSubmit: values => {\n      const usersSelected = [];\n      selectedOptions.map(item => {\n        usersSelected.push(item.value);\n      });\n      const params = {\n        oem_id: location.state.oem_id,\n        name: values.name,\n        address: values.address,\n        contact_person: values.contact_person,\n        contact_email: values.contact_email,\n        contact_number: values.contact_number,\n        users: usersSelected,\n        type: type,\n        remark_1: values.remark_1,\n        remark_2: values.remark_2\n      };\n      updateOemAPICall(params);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, ({\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    values,\n    touched,\n    errors\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: alertColor,\n    isOpen: alertVisible,\n    toggle: onDismissAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 31\n    }\n  }, alertMsg)), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 33\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: values.name,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.name && touched.name ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 33\n    }\n  }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 35\n    }\n  }, errors.name))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 33\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Address\",\n    name: \"address\",\n    value: values.address,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.address && touched.address ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 33\n    }\n  }), errors.address && touched.address && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 35\n    }\n  }, errors.address))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 33\n    }\n  }, \"Contact Person\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Contact Person\",\n    name: \"contact_person\",\n    value: values.contact_person,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.contact_person && touched.contact_person ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 33\n    }\n  }), errors.contact_person && touched.contact_person && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 35\n    }\n  }, errors.contact_person))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 33\n    }\n  }, \"Contact Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Contact Email\",\n    name: \"contact_email\",\n    value: values.contact_email,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.contact_email && touched.contact_email ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 33\n    }\n  }), errors.contact_email && touched.contact_email && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 35\n    }\n  }, errors.contact_email))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 33\n    }\n  }, \"Contact Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Contact Number\",\n    name: \"contact_number\",\n    value: values.contact_number,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.contact_number && touched.contact_number ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 33\n    }\n  }), errors.contact_number && touched.contact_number && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 35\n    }\n  }, errors.contact_number))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 33\n    }\n  }, \"Users\"), /*#__PURE__*/React.createElement(Select, {\n    components: {\n      Input: CustomSelectInput\n    },\n    className: \"react-select\",\n    classNamePrefix: \"react-select\",\n    isMulti: true,\n    name: \"form-field-name\",\n    value: selectedOptions,\n    onChange: setSelectedOptions,\n    options: oemUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 35\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 33\n    }\n  }, \"Battery\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    onChange: e => setType(e.target.value),\n    value: type,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    key: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 37\n    }\n  }, \"Select\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: 1,\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 37\n    }\n  }, \"Battery\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: 2,\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 37\n    }\n  }, \"EV\"), /*#__PURE__*/React.createElement(\"option\", {\n    key: 3,\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 37\n    }\n  }, \"Charger\")))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 33\n    }\n  }, \"Remark1\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"remark_1\",\n    placeholder: \"Remark1\",\n    value: values.remark_1,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 33\n    }\n  }, \"Remark2\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"remark_2\",\n    placeholder: \"Remark2\",\n    value: values.remark_2,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"default mr-2\",\n    onClick: handleSubmit,\n    disabled: buttonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 35\n    }\n  }, \"Update\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"light\",\n    className: \"default\",\n    onClick: () => {\n      history.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 35\n    }\n  }, \"Cancel\")))))))))));\n};\n\nexport default UpdateOEM;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/pages/UpdateOem.js"],"names":["React","useEffect","useState","Row","FormGroup","Card","CardBody","Label","Input","Button","Alert","Colxx","Separator","CustomSelectInput","Select","getCurrentUser","updateOemAPI","getOemUsersAPI","getOemByIdAPI","adminRoot","axios","useHistory","useLocation","Formik","yup","UpdateOEM","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","buttonDisabled","setButtonDisabled","selectedOptions","setSelectedOptions","oemUsers","setOemUsers","type","setType","name","setName","address","setAddress","contactPerson","setContactPerson","contactEmail","setContactEmail","contactNumber","setContactNumber","remark1","setRemark1","remark2","setRemark2","history","location","getOemUsersAPICall","getOemByIdAPICall","currentUser","post","user_role","headers","Authorization","token","then","response","responseData","data","users","status","map","item","index","push","label","value","id","key","oemUpdatedAlert","msg","catch","error","console","log","oem_id","state","tempData","contact_person","contact_email","contact_number","remark_1","remark_2","updateOemAPICall","params","pathname","responseStatus","responseMsg","onDismissAlert","OemDetailsValidationSchema","object","shape","string","required","email","matches","length","values","usersSelected","handleChange","handleBlur","handleSubmit","touched","errors","e","target","goBack"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {updateOemAPI,getOemUsersAPI,getOemByIdAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst UpdateOEM = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //multiselect state\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [oemUsers, setOemUsers] = useState([]);\n  //type state\n  const [type, setType] = useState(\"\");\n  //oem details state\n  const [name,setName] = useState(\"\");\n  const [address,setAddress] = useState(\"\");\n  const [contactPerson,setContactPerson] = useState([]);\n  const [contactEmail,setContactEmail] = useState(\"\");\n  const [contactNumber,setContactNumber] = useState(\"\");\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n   \n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getOemUsersAPICall();\n    getOemByIdAPICall();\n  },[])\n\n  //API calls\n  const getOemUsersAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getOemUsersAPI,\n      {user_role:\"OEM\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let users=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           users.push({label:item.name,value:item.id,key:index})\n         })\n         setOemUsers(users);\n        }else{\n          oemUpdatedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n    }\n    const getOemByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getOemByIdAPI,\n        {\n            oem_id:location.state.oem_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            let tempData = [];\n            if (responseData.status === 1) {\n            setName(responseData.data.name);\n            setAddress(responseData.data.address);\n            setContactPerson(responseData.data.contact_person);\n            setContactEmail(responseData.data.contact_email);\n            setContactNumber(responseData.data.contact_number);\n            setType(responseData.data.type);\n            setRemark1(responseData.data.remark_1);\n            setRemark2(responseData.data.remark_2);\n            responseData.data.users.map((item,index)=>{\n                tempData.push({label:item.name,value:item.id,key:index})\n            })\n            setSelectedOptions(tempData);\n            }else{\n              oemUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n\n    const updateOemAPICall = async(params) => {\n        setButtonDisabled(true);\n        const currentUser = getCurrentUser();\n        await axios.post(updateOemAPI,\n        params,\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n              history.push({\n                pathname:adminRoot+'/pages/oem',\n                state:{\n                  responseStatus:responseData.status,\n                  responseMsg:responseData.msg\n                }\n              })\n            }else{\n              setButtonDisabled(false);\n              oemUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            setButtonDisabled(false);\n            console.log(error);\n        })\n    }\n\n  //helper methods\n  //Alert helper methods\n  const oemUpdatedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const OemDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name is required\"),\n    address:yup.string()\n        .required(\"Address is required\"),\n    contact_person:yup.string()\n        .required(\"Contact Person is required\"),\n    contact_email:yup.string()\n        .email(\"Invalid Email format\")\n        .required(\"Contact email is required\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n        .required(\"Contact number is required\"),\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update OEM</span>\n            <a href=\"oem\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> OEM List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            name:name,\n            address:address,\n            contact_person:contactPerson,\n            contact_email:contactEmail,\n            contact_number:contactNumber,\n            remark_1:remark1,\n            remark_2:remark2\n        }}\n        validationSchema={OemDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const usersSelected = [];\n          selectedOptions.map(item=>{\n            usersSelected.push(item.value)\n          })\n          const params = {\n            oem_id:location.state.oem_id,\n            name:values.name,\n            address:values.address,\n            contact_person:values.contact_person,\n            contact_email:values.contact_email,\n            contact_number:values.contact_number,\n            users:usersSelected,\n            type:type,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2\n          }\n          updateOemAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Address\"\n                                  name=\"address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={4}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Person\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Person\"\n                                  name=\"contact_person\"\n                                  value={values.contact_person}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_person && touched.contact_person ? \"input-error\":null}\n                                />\n                                {errors.contact_person && touched.contact_person &&(\n                                  <span className=\"error\">{errors.contact_person}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={4}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Email\"\n                                  name=\"contact_email\"\n                                  value={values.contact_email}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_email && touched.contact_email ? \"input-error\":null}\n                                />\n                                {errors.contact_email && touched.contact_email &&(\n                                  <span className=\"error\">{errors.contact_email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={4}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  Users\n                                </Label>\n                                  <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={selectedOptions}\n                                    onChange={setSelectedOptions}\n                                    options={oemUsers}\n                                  />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  Battery\n                                </Label>\n                                <Input type=\"select\" onChange={(e)=>setType(e.target.value)} value={type}>\n                                    <option key={0} >Select</option>\n                                    <option key={1} value={1}>Battery</option>\n                                    <option key={2} value={2}>EV</option>\n                                    <option key={3} value={3}>Charger</option>\n                                </Input>\n                                </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default UpdateOEM;\n"]},"metadata":{},"sourceType":"module"}