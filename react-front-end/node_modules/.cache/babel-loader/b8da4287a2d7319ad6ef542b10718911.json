{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Row,Card,CardBody,FormGroup,Label,DropdownItem,DropdownMenu,DropdownToggle,UncontrolledDropdown,Input,Table,Button}from'reactstrap';import DatePicker from'react-datepicker';import'react-datepicker/dist/react-datepicker.css';import{Colxx,Separator}from'../../../components/common/CustomBootstrap';import{getCurrentUser}from'../../../helpers/Utils';import{getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,getStationsByCityAPI,bsnReportAPI,downloadBsnReportAPI}from'../../../constants/defaultValues';import axios from'axios';import{Formik}from'formik';const BatterySwappingNetworkReport=({})=>{//date states\nconst _useState=useState(null),_useState2=_slicedToArray(_useState,2),fromDate=_useState2[0],setFromDate=_useState2[1];const _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),toDate=_useState4[0],setToDate=_useState4[1];//station List\nconst _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),stationNames=_useState6[0],setStationNames=_useState6[1];//Pagination states\nconst _useState7=useState(\"1\"),_useState8=_slicedToArray(_useState7,2),pageCount=_useState8[0],setPageCount=_useState8[1];const _useState9=useState(\"1\"),_useState10=_slicedToArray(_useState9,2),lastPageCount=_useState10[0],setLastPageCount=_useState10[1];//state to disable button on click\nconst _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),buttonDisabled=_useState12[0],setButtonDisabled=_useState12[1];//loader state\nconst _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isLoading=_useState14[0],setIsLoading=_useState14[1];// list state\nconst _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),countryList=_useState16[0],setCountryList=_useState16[1];const _useState17=useState([]),_useState18=_slicedToArray(_useState17,2),stateList=_useState18[0],setStateList=_useState18[1];const _useState19=useState([]),_useState20=_slicedToArray(_useState19,2),cityList=_useState20[0],setCityList=_useState20[1];const _useState21=useState([]),_useState22=_slicedToArray(_useState21,2),report=_useState22[0],setReport=_useState22[1];const _useState23=useState(\"\"),_useState24=_slicedToArray(_useState23,2),countryId=_useState24[0],setCountryId=_useState24[1];const _useState25=useState(\"\"),_useState26=_slicedToArray(_useState25,2),stateId=_useState26[0],setStateId=_useState26[1];const _useState27=useState(\"\"),_useState28=_slicedToArray(_useState27,2),cityId=_useState28[0],setCityId=_useState28[1];const _useState29=useState(\"\"),_useState30=_slicedToArray(_useState29,2),stationId=_useState30[0],setStationId=_useState30[1];useEffect(()=>{getCountryNamesAPICall();},[]);useEffect(()=>{GetStationNamesAPICall(countryId,stateId,cityId);},[countryId,stateId,cityId]);//API calls\nconst GetStationNamesAPICall=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(country,state,city){var currentUser;return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:currentUser=getCurrentUser();_context.next=3;return axios.get(getStationsByCityAPI+\"country_id=\"+country+\"&state_id=\"+state+\"&city_id=\"+city,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setStationNames(responseData.data);}else{setStationNames([]);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context.stop();}},_callee);}));return function GetStationNamesAPICall(_x,_x2,_x3){return _ref.apply(this,arguments);};}();const getCountryNamesAPICall=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var currentUser;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:currentUser=getCurrentUser();_context2.next=3;return axios.get(getCountriesAPI,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setCountryList(responseData.data);}else{console.log(\"coutries\",responseData.status,responseData.msg);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context2.stop();}},_callee2);}));return function getCountryNamesAPICall(){return _ref2.apply(this,arguments);};}();const getStateNamesAPICall=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(country){var currentUser;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:currentUser=getCurrentUser();_context3.next=3;return axios.post(getStatesByCountryAPI,{country_id:country},{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setStateList(responseData.data);}else{setStateList([]);setCityList([]);setStationNames([]);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context3.stop();}},_callee3);}));return function getStateNamesAPICall(_x4){return _ref3.apply(this,arguments);};}();const getCityNamesAPICall=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(state){var currentUser;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:currentUser=getCurrentUser();_context4.next=3;return axios.post(getCitiesByStateAPI,{state_id:state},{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setCityList(responseData.data);}else{setCityList([]);setStationNames([]);}}).catch(error=>{console.log(error);});case 3:case\"end\":return _context4.stop();}},_callee4);}));return function getCityNamesAPICall(_x5){return _ref4.apply(this,arguments);};}();const getBSNReportAPICall=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var currentUser,params;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:setButtonDisabled(true);setReport([]);setIsLoading(true);currentUser=getCurrentUser();// let tempFromDate,tempToDate;\n// if (fromDate == null | fromDate ==\"\") {\n//   tempFromDate = fromDate;\n// }else{\n//   tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear();\n// }\n// if (toDate == null) {\n//   tempToDate = toDate;\n// }else{\n//   tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear();\n// }\nparams={country_id:countryId,state_id:stateId,city_id:cityId,hub_id:stationId,// from_date:tempFromDate,\n// to_date:tempToDate,\npage:pageCount};_context5.next=7;return axios.post(bsnReportAPI,params,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){setLastPageCount(responseData.data.last_page);setReport(responseData.data.data);}else{console.log(responseData.msg);}setButtonDisabled(false);setIsLoading(false);}).catch(error=>{setButtonDisabled(false);setIsLoading(false);console.log(error);});case 7:case\"end\":return _context5.stop();}},_callee5);}));return function getBSNReportAPICall(){return _ref5.apply(this,arguments);};}();const downloadBSNReportAPICall=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var currentUser,params;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:setButtonDisabled(true);setIsLoading(true);currentUser=getCurrentUser();params={country_id:countryId,state_id:stateId,city_id:cityId,hub_id:stationId};_context6.next=6;return axios.post(downloadBsnReportAPI,params,{headers:{Authorization:\"Bearer \".concat(currentUser.token)}}).then(response=>{const responseData=response.data;if(responseData.status===1){const link=document.createElement('a');link.href=responseData.data.file;document.body.appendChild(link);link.click();document.body.removeChild(link);}else{alert(responseData.msg);}setButtonDisabled(false);setIsLoading(false);}).catch(error=>{setButtonDisabled(false);setIsLoading(false);console.log(error);});case 6:case\"end\":return _context6.stop();}},_callee6);}));return function downloadBSNReportAPICall(){return _ref6.apply(this,arguments);};}();//helper methods\n//handle country select\nconst handleCountrySelect=country=>{setCountryId(country);setStateId(\"\");setCityId(\"\");setStationId(\"\");getStateNamesAPICall(country);};//handle state select\nconst handleStateSelect=state=>{setStateId(state);setCityId(\"\");setStationId(\"\");getCityNamesAPICall(state);};//handle city select\nconst handleCitySelect=city=>{setCityId(city);setStationId(\"\");};//pagination method\nconst handlePageChange=index=>{setPageCount(index+1);getBSNReportAPICall();};const renderPageList=()=>{const pageNumbers=[];for(let i=0;i<lastPageCount;i+=1){pageNumbers.push(/*#__PURE__*/React.createElement(DropdownItem,{key:i,onClick:()=>handlePageChange(i)},i+1));}return pageNumbers;};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\"},/*#__PURE__*/React.createElement(\"span\",{className:\"page_title\"},\"Battery Swapping Network Report\"),/*#__PURE__*/React.createElement(Separator,{className:\"mb-5\"}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",className:\"mb-4\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{lg:2,sm:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Country\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"country_id\",value:countryId,onChange:e=>handleCountrySelect(e.target.value)},/*#__PURE__*/React.createElement(\"option\",{key:\"\",value:\"\"},\"All Countries\"),countryList.map((item,index)=>/*#__PURE__*/React.createElement(\"option\",{key:index,value:item.id},item.country_name))))),/*#__PURE__*/React.createElement(Colxx,{lg:2,sm:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"State\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"state_id\",value:stateId,onChange:e=>handleStateSelect(e.target.value)},/*#__PURE__*/React.createElement(\"option\",{key:\"\",value:\"\"},\"All States\"),stateList.map((item,index)=>/*#__PURE__*/React.createElement(\"option\",{key:index,value:item.id},item.state_name))))),/*#__PURE__*/React.createElement(Colxx,{lg:2,sm:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"City\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"city_id\",value:cityId,onChange:e=>handleCitySelect(e.target.value)},/*#__PURE__*/React.createElement(\"option\",{key:\"\",value:\"\"},\"All Cities\"),cityList.map((item,index)=>/*#__PURE__*/React.createElement(\"option\",{key:index,value:item.id},item.city_name))))),/*#__PURE__*/React.createElement(Colxx,{lg:2,sm:12},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Station\"),/*#__PURE__*/React.createElement(Input,{type:\"select\",name:\"station\",value:stationId,onChange:e=>setStationId(e.target.value)},/*#__PURE__*/React.createElement(\"option\",{key:\"\",value:\"\"},\"All Station\"),stationNames.map((item,index)=>/*#__PURE__*/React.createElement(\"option\",{key:index,value:item.hub_master_id},item.name))))),/*#__PURE__*/React.createElement(Colxx,{lg:2,sm:12},/*#__PURE__*/React.createElement(Button,{color:\"primary\",className:\"default mt-4 custom_btn\",onClick:()=>{setPageCount(1);getBSNReportAPICall();},disabled:buttonDisabled},/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-check font-weight-bold\"}),\" \",/*#__PURE__*/React.createElement(\"b\",null,\"Generate Report\"))),/*#__PURE__*/React.createElement(Colxx,{lg:2,sm:12},/*#__PURE__*/React.createElement(Button,{color:\"success\",className:\"default mt-4 custom_btn\",onClick:()=>{downloadBSNReportAPICall();},disabled:buttonDisabled},/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-download font-weight-bold\"}),\" \",/*#__PURE__*/React.createElement(\"b\",null,\"Download Report\")))))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{sm:12,lg:12},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{md:\"6\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Battery Swapping Network Report Detail\")),report.length>0&&/*#__PURE__*/React.createElement(Colxx,{md:\"6\"},/*#__PURE__*/React.createElement(\"div\",{className:\"text-right mr-2 \"},/*#__PURE__*/React.createElement(\"span\",null,\"Page \"),/*#__PURE__*/React.createElement(UncontrolledDropdown,{className:\"d-inline-block\"},/*#__PURE__*/React.createElement(DropdownToggle,{caret:true,color:\"outline-primary\",size:\"xs\",\"data-display\":\"static\"},pageCount),/*#__PURE__*/React.createElement(DropdownMenu,{className:\"dropdownMenu\"},renderPageList())),/*#__PURE__*/React.createElement(\"span\",null,\" of \"),lastPageCount))),/*#__PURE__*/React.createElement(Table,{responsive:true,bordered:true,striped:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"#\"),/*#__PURE__*/React.createElement(\"th\",null,\"Country\"),/*#__PURE__*/React.createElement(\"th\",null,\"State\"),/*#__PURE__*/React.createElement(\"th\",null,\"City\"),/*#__PURE__*/React.createElement(\"th\",null,\"Station\"),/*#__PURE__*/React.createElement(\"th\",null,\"Total No. of EV\"),/*#__PURE__*/React.createElement(\"th\",null,\"Total No. of Charger\"),/*#__PURE__*/React.createElement(\"th\",null,\"Total No. of Connectors\"),/*#__PURE__*/React.createElement(\"th\",null,\"Total No. of Batteries\"))),/*#__PURE__*/React.createElement(\"tbody\",null,isLoading?/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{className:\"text-center\",colSpan:\"9\"},/*#__PURE__*/React.createElement(\"div\",{className:\"custom-list-loading\"}))):report.length>0?report.map((item,index)=>/*#__PURE__*/React.createElement(\"tr\",{key:index},/*#__PURE__*/React.createElement(\"th\",{scope:\"row\"},pageCount==1?index+1:(pageCount-1)*10+index+1),/*#__PURE__*/React.createElement(\"td\",null,item.country_name),/*#__PURE__*/React.createElement(\"td\",null,item.state_name),/*#__PURE__*/React.createElement(\"td\",null,item.city_name),/*#__PURE__*/React.createElement(\"td\",null,item.hub_name),/*#__PURE__*/React.createElement(\"td\",null,item.total_ev),/*#__PURE__*/React.createElement(\"td\",null,item.total_charger),/*#__PURE__*/React.createElement(\"td\",null,item.total_connector),/*#__PURE__*/React.createElement(\"td\",null,item.total_batteries))):/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{className:\"text-center text-danger\",colSpan:\"9\"},\"Data  Not  Found\")))))))));};export default BatterySwappingNetworkReport;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/reports/batterySwappingNetworkReport.js"],"names":["React","useState","useEffect","Row","Card","CardBody","FormGroup","Label","DropdownItem","DropdownMenu","DropdownToggle","UncontrolledDropdown","Input","Table","Button","DatePicker","Colxx","Separator","getCurrentUser","getCountriesAPI","getStatesByCountryAPI","getCitiesByStateAPI","getStationsByCityAPI","bsnReportAPI","downloadBsnReportAPI","axios","Formik","BatterySwappingNetworkReport","fromDate","setFromDate","toDate","setToDate","stationNames","setStationNames","pageCount","setPageCount","lastPageCount","setLastPageCount","buttonDisabled","setButtonDisabled","isLoading","setIsLoading","countryList","setCountryList","stateList","setStateList","cityList","setCityList","report","setReport","countryId","setCountryId","stateId","setStateId","cityId","setCityId","stationId","setStationId","getCountryNamesAPICall","GetStationNamesAPICall","country","state","city","currentUser","get","headers","Authorization","token","then","response","responseData","data","status","catch","error","console","log","msg","getStateNamesAPICall","post","country_id","getCityNamesAPICall","state_id","getBSNReportAPICall","params","city_id","hub_id","page","last_page","downloadBSNReportAPICall","link","document","createElement","href","file","body","appendChild","click","removeChild","alert","handleCountrySelect","handleStateSelect","handleCitySelect","handlePageChange","index","renderPageList","pageNumbers","i","push","e","target","value","map","item","id","country_name","state_name","city_name","hub_master_id","name","length","hub_name","total_ev","total_charger","total_connector","total_batteries"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody,  \n  FormGroup, Label,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Input, Table,Button\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,getStationsByCityAPI,bsnReportAPI,downloadBsnReportAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\n\nconst BatterySwappingNetworkReport = ({}) => {\n  //date states\n  const [fromDate,setFromDate] = useState(null);\n  const [toDate,setToDate] = useState(null);\n  //station List\n  const [stationNames,setStationNames] = useState([]);\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(false);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [report,setReport] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n  const [stationId,setStationId] = useState(\"\");\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n  },[]);\n\n  useEffect(()=>{\n    GetStationNamesAPICall(countryId,stateId,cityId);\n  },[countryId,stateId,cityId])\n\n  //API calls\n  const GetStationNamesAPICall = async(country,state,city) => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsByCityAPI+\"country_id=\"+country+\"&state_id=\"+state+\"&city_id=\"+city,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNames(responseData.data)\n      }else{\n        setStationNames([]);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(\"coutries\",responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          setStateList([]);\n          setCityList([]);\n          setStationNames([]);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          setCityList([]);\n          setStationNames([]);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getBSNReportAPICall = async() => {\n    setButtonDisabled(true);\n    setReport([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    // let tempFromDate,tempToDate;\n    // if (fromDate == null | fromDate ==\"\") {\n    //   tempFromDate = fromDate;\n    // }else{\n    //   tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear();\n    // }\n    // if (toDate == null) {\n    //   tempToDate = toDate;\n    // }else{\n    //   tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear();\n    // }\n    const params = {\n      country_id:countryId,\n      state_id:stateId,\n      city_id:cityId,\n      hub_id:stationId,\n      // from_date:tempFromDate,\n      // to_date:tempToDate,\n      page:pageCount\n    }\n    \n    await axios.post(bsnReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page);\n          setReport(responseData.data.data);\n        }else{\n            console.log(responseData.msg);\n        }\n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n  const downloadBSNReportAPICall = async() => {\n    setButtonDisabled(true);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    const params = {\n      country_id:countryId,\n      state_id:stateId,\n      city_id:cityId,\n      hub_id:stationId,\n    }\n    \n    await axios.post(downloadBsnReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          const link = document.createElement('a');\n          link.href = responseData.data.file;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }else{\n          alert(responseData.msg);\n        }    \n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    setStateId(\"\");\n    setCityId(\"\");\n    setStationId(\"\");\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    setCityId(\"\");\n    setStationId(\"\");\n    getCityNamesAPICall(state);\n  }\n  //handle city select\n  const handleCitySelect = (city) => {\n    setCityId(city);\n    setStationId(\"\");\n  }\n  //pagination method\n  const handlePageChange = (index) =>{\n    setPageCount(index+1)\n    getBSNReportAPICall();\n  }\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={()=>handlePageChange(i)}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Battery Swapping Network Report</span>\n        <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n          <Colxx xxs=\"12\" className=\"mb-4\">\n              <Card>\n                  <CardBody>\n                    <Row>\n                      <Colxx lg={2} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            Country\n                          </Label>\n                          <Input \n                          type=\"select\"\n                          name=\"country_id\"\n                          value={countryId}\n                          onChange={e=>handleCountrySelect(e.target.value)}\n                          >\n                            <option key=\"\" value=\"\">All Countries</option>\n                            {countryList.map((item,index)=>\n                              <option key={index} value={item.id}>{item.country_name}</option>\n                            )}\n                          </Input>\n                        </FormGroup>\n                      </Colxx>\n                      <Colxx lg={2} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            State\n                          </Label>\n                          <Input \n                          type=\"select\"\n                          name=\"state_id\"\n                          value={stateId}\n                          onChange={e=>handleStateSelect(e.target.value)}\n                          >\n                            <option key=\"\" value=\"\">All States</option>\n                            {stateList.map((item,index)=>\n                              <option key={index} value={item.id}>{item.state_name}</option>\n                            )}\n                          </Input>\n                        </FormGroup>\n                      </Colxx>\n                      <Colxx lg={2} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            City\n                          </Label>\n                          <Input \n                          type=\"select\"\n                          name=\"city_id\"\n                          value={cityId}\n                          onChange={e=>handleCitySelect(e.target.value)}\n                          >\n                            <option key=\"\" value=\"\">All Cities</option>\n                            {cityList.map((item,index)=>\n                              <option key={index} value={item.id}>{item.city_name}</option>\n                            )}\n                          </Input>\n                        </FormGroup>\n                      </Colxx>\n                      <Colxx lg={2} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            Station\n                          </Label>\n                          <Input \n                          type=\"select\"\n                          name=\"station\"\n                          value={stationId}\n                          onChange={e=> setStationId(e.target.value)}>\n                            <option key=\"\" value=\"\">All Station</option>\n                            {stationNames.map((item,index)=>\n                              <option key={index} value={item.hub_master_id}>{item.name}</option>\n                            )}\n                          </Input>\n                        </FormGroup>\n                      </Colxx>\n                      {/* <Colxx lg={3} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            From Date\n                          </Label>\n                          <DatePicker\n                          placeholderText=\"From Date\"\n                          selected={fromDate}\n                          onChange={date=>setFromDate(date)}\n                          dateFormat=\"dd/MM/yyyy\"\n                          />\n                        </FormGroup>\n                      </Colxx>\n                      <Colxx lg={3} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            To Date\n                          </Label>\n                          <DatePicker\n                          placeholderText=\"To Date\"\n                          selected={toDate}\n                          onChange={date=>setToDate(date)}\n                          dateFormat=\"dd/MM/yyyy\"\n                          />\n                        </FormGroup>\n                      </Colxx> */}\n                      <Colxx  lg={2} sm={12}>\n                        <Button color=\"primary\" className=\"default mt-4 custom_btn\" onClick={() =>{setPageCount(1);getBSNReportAPICall();}} disabled={buttonDisabled}>\n                          <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Generate Report</b>\n                        </Button>\n                      </Colxx>\n                      <Colxx  lg={2} sm={12}>\n                        <Button color=\"success\" className=\"default mt-4 custom_btn\" onClick={() =>{downloadBSNReportAPICall();}} disabled={buttonDisabled}>\n                          <i className=\"glyph-icon simple-icon-download font-weight-bold\"></i> <b>Download Report</b>\n                        </Button>\n                      </Colxx>\n                    </Row>\n                  </CardBody>\n              </Card>\n          </Colxx>\n        </Row>\n      <Row>\n          <Colxx sm={12} lg={12}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Colxx md=\"6\">\n                    <h3>Battery Swapping Network Report Detail</h3>\n                  </Colxx>\n                  {report.length>0 &&\n                    <Colxx md=\"6\">\n                      <div className=\"text-right mr-2 \">\n                        <span>Page </span>\n                        <UncontrolledDropdown className=\"d-inline-block\">\n                          <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                            {pageCount}\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdownMenu\">\n                            {renderPageList()}\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <span> of </span>\n                        {lastPageCount}\n                      </div>\n                    </Colxx>\n                  }\n                </Row>\n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Country</th>\n                      <th>State</th>\n                      <th>City</th>\n                      <th>Station</th>\n                      <th>Total No. of EV</th>\n                      <th>Total No. of Charger</th>\n                      <th>Total No. of Connectors</th>\t\t\t\t\t\t\t\t\t\n                      <th>Total No. of Batteries</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"9\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                      report.length > 0 ?\n                          report.map((item,index)=>\n                            <tr key={index}>\n                              <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                              <td>{item.country_name}</td>\n                              <td>{item.state_name}</td>\n                              <td>{item.city_name}</td>\n                              <td>{item.hub_name}</td>\n                              <td>{item.total_ev}</td>\n                              <td>{item.total_charger}</td>\n                              <td>{item.total_connector}</td>\n                              <td>{item.total_batteries}</td>\n                            </tr>\n                          ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"9\">Data  Not  Found</td>\n                      </tr>\n                  }\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default BatterySwappingNetworkReport;\n"]},"metadata":{},"sourceType":"module"}