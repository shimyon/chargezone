{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\src\\\\views\\\\app\\\\mapping\\\\Stationmapping.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, Card, CardBody, CardSubtitle, DropdownItem, DropdownMenu, DropdownToggle, UncontrolledDropdown, Alert, Table, Button, Input, InputGroup } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport { getSwappingStationAPI, adminRoot } from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst Stationmapping = () => {\n  //alert states\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        alertVisible = _useState2[0],\n        setAlertVisible = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        alertMsg = _useState4[0],\n        setAlertMsg = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        alertColor = _useState6[0],\n        setAlertColor = _useState6[1]; //search state\n\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        searchBy = _useState8[0],\n        setSearchBy = _useState8[1]; //Pagination states\n\n\n  const _useState9 = useState(\"1\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        pageCount = _useState10[0],\n        setPageCount = _useState10[1];\n\n  const _useState11 = useState(\"1\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        lastPageCount = _useState12[0],\n        setLastPageCount = _useState12[1]; //station list\n\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        stationList = _useState14[0],\n        setStationList = _useState14[1];\n\n  const _useState15 = useState(true),\n        _useState16 = _slicedToArray(_useState15, 2),\n        isLoading = _useState16[0],\n        setIsLoading = _useState16[1];\n\n  const history = useHistory();\n  useEffect(() => {\n    getSwappingStationListAPI();\n  }, [pageCount]); //API calls\n\n  const getSwappingStationListAPI = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            setStationList([]);\n            setIsLoading(true);\n            currentUser = getCurrentUser();\n            _context.next = 5;\n            return axios.get(getSwappingStationAPI + pageCount + \"&search_param=\" + searchBy, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                setLastPageCount(responseData.data.last_page);\n                setStationList(responseData.data.data);\n              } else {\n                console.log(responseData.msg);\n              }\n\n              setIsLoading(false);\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function getSwappingStationListAPI() {\n      return _ref.apply(this, arguments);\n    };\n  }(); //Helper methods\n\n\n  const mapStation = hubId => {\n    history.push({\n      pathname: adminRoot + '/mapping/stationmapping',\n      state: {\n        hub_id: hubId\n      }\n    });\n  };\n\n  const renderPageList = () => {\n    const pageNumbers = [];\n\n    for (let i = 0; i < lastPageCount; i += 1) {\n      pageNumbers.push( /*#__PURE__*/React.createElement(DropdownItem, {\n        key: i,\n        onClick: () => {\n          setPageCount(i + 1);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }\n      }, i + 1));\n    }\n\n    return pageNumbers;\n  }; //Alert helper methods\n\n\n  const stationAlert = (status, msg) => {\n    setAlertVisible(true);\n    setAlertMsg(msg);\n\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  };\n\n  const onDismissAlert = () => {\n    setAlertVisible(false);\n  }; //handle search input\n\n\n  const handleSearch = () => {\n    setPageCount(1);\n    getSwappingStationListAPI();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"page_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Station\"), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-2 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Search\",\n    value: searchBy,\n    onChange: e => setSearchBy(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"default search-icon\",\n    color: \"primary\",\n    outline: true,\n    onClick: () => handleSearch(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-magnifier\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 106\n    }\n  }))))), /*#__PURE__*/React.createElement(Colxx, {\n    md: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-right mr-5 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, \"Page \"), /*#__PURE__*/React.createElement(UncontrolledDropdown, {\n    className: \"d-inline-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(DropdownToggle, {\n    caret: true,\n    color: \"outline-primary\",\n    size: \"xs\",\n    \"data-display\": \"static\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, pageCount), /*#__PURE__*/React.createElement(DropdownMenu, {\n    className: \"dropdownMenu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, renderPageList())), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 15\n    }\n  }, \" of \"), lastPageCount))), /*#__PURE__*/React.createElement(Row, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardSubtitle, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: alertColor,\n    isOpen: alertVisible,\n    toggle: onDismissAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, alertMsg)), /*#__PURE__*/React.createElement(Table, {\n    responsive: true,\n    bordered: true,\n    striped: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, \"EV Capacity\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, \"Remark1\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }, \"Remark2\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 17\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-center\",\n    colSpan: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"custom-list-loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 63\n    }\n  }))) : stationList.length > 0 ? stationList.map((item, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item.hub_master_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 23\n    }\n  }, pageCount == 1 ? index + 1 : (pageCount - 1) * 10 + index + 1), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }\n  }, item.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 23\n    }\n  }, item.ev_capacity), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 23\n    }\n  }, item.address), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 23\n    }\n  }, item.remark_1), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 23\n    }\n  }, item.remark_2), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"btn-primary default mr-1 btn-sm tbl_action_a\",\n    onClick: () => mapStation(item.hub_master_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon iconsminds-repeat-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 32\n    }\n  }), \" Map\"))))) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"text-center text-danger\",\n    colSpan: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, \"Data  Not  Found\")))))))));\n};\n\nexport default Stationmapping;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/mapping/Stationmapping.js"],"names":["React","useState","useEffect","Row","Card","CardBody","CardSubtitle","DropdownItem","DropdownMenu","DropdownToggle","UncontrolledDropdown","Alert","Table","Button","Input","InputGroup","Colxx","Separator","getCurrentUser","getSwappingStationAPI","adminRoot","axios","useHistory","Stationmapping","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","searchBy","setSearchBy","pageCount","setPageCount","lastPageCount","setLastPageCount","stationList","setStationList","isLoading","setIsLoading","history","getSwappingStationListAPI","currentUser","get","headers","Authorization","token","then","response","responseData","data","status","last_page","console","log","msg","catch","error","mapStation","hubId","push","pathname","state","hub_id","renderPageList","pageNumbers","i","stationAlert","onDismissAlert","handleSearch","e","target","value","length","map","item","index","hub_master_id","name","ev_capacity","address","remark_1","remark_2"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Table, Button,\n  Input,InputGroup \n} from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getSwappingStationAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\n\nconst Stationmapping = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //station list\n  const [stationList,setStationList] = useState([]);\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  useEffect(()=>{\n    getSwappingStationListAPI();\n  },[pageCount])\n\n  //API calls\n  const getSwappingStationListAPI = async() => {\n    setStationList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getSwappingStationAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setStationList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n   //Helper methods\n   const mapStation = (hubId) => {\n    history.push({\n      pathname:adminRoot+'/mapping/stationmapping',\n      state:{hub_id:hubId}\n    });\n  }\n\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const stationAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getSwappingStationListAPI();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Station</span>\n            <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                  <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                    {alertMsg}\n                  </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>EV Capacity</th>\n                    <th>Address</th>\n                    <th>Remark1</th>\n                    <th>Remark2</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"8\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                  (stationList.length>0)?\n                      stationList.map((item,index)=>\n                      <tr key={item.hub_master_id}>\n                      <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                      <td>{item.name}</td>\n                      <td>{item.ev_capacity}</td>\n                      <td>{item.address}</td>\n                      <td>{item.remark_1}</td>\n                      <td>{item.remark_2}</td>\n                      <td>\n                      <Button color=\"primary\" className=\"btn-primary default mr-1 btn-sm tbl_action_a\" onClick={()=>mapStation(item.hub_master_id)}>\n                            <b><i className=\"glyph-icon iconsminds-repeat-2\"></i> Map</b>\n                      </Button>\n                      </td>\n                    </tr>\n                    )\n                    :<tr>\n                        <td className=\"text-center text-danger\" colSpan=\"8\">Data  Not  Found</td>\n                    </tr>\n                  }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default Stationmapping;\n"]},"metadata":{},"sourceType":"module"}