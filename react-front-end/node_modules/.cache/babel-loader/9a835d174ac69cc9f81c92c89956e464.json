{"ast":null,"code":"var _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone-frontend-development\\\\src\\\\views\\\\app\\\\dashboard\\\\manager\\\\EnergyChart.js\";\nimport React from 'react';\nimport { Card, CardBody, CardTitle, UncontrolledDropdown, DropdownItem, DropdownToggle, DropdownMenu } from 'reactstrap';\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { LineChart } from '../../../../components/charts';\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\nimport { chartTooltip } from '../../../../components/charts/util'; //import { lineChartOptions } from '../../../../components/charts/config';\n\nconst moment = require('moment');\n\nconst colors = ThemeColors();\nconst today = moment();\ntoday.add(1, 'd').format('DD-MMM');\nconst dateLabel = Array(7).fill().map(() => today.subtract(1, 'd').format('DD-MMM'));\nlet total_last_7 = 0;\n\nconst EnergyChartCard = () => {\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"dashboard-my-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"dashboard.energy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), \" (\", abbreviateNumber(total_last_7), \")\"), showEnergyChart && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-line-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    data: EnergyChartData1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  })), !showEnergyChart && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-line-chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LineChart, {\n    data: EnergyChartData,\n    false: true,\n    lineChartOptions: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst EnergyChartData1 = {\n  labels: dateLabel,\n  datasets: [{\n    label: 'Complete',\n    data: [0, 0, 0, 0, 0, 0, 0],\n    borderColor: colors.themeColor1,\n    pointBackgroundColor: colors.foregroundColor,\n    pointBorderColor: colors.themeColor1,\n    pointHoverBackgroundColor: colors.themeColor1,\n    pointHoverBorderColor: colors.foregroundColor,\n    pointRadius: 6,\n    pointBorderWidth: 2,\n    pointHoverRadius: 8,\n    fill: false\n  }]\n};\nconst EnergyChartData = {\n  labels: dateLabel,\n  datasets: [{\n    label: 'Complete',\n    data: [0, 0, 0, 0, 0, 0, 0],\n    borderColor: colors.themeColor1,\n    pointBackgroundColor: colors.foregroundColor,\n    pointBorderColor: colors.themeColor1,\n    pointHoverBackgroundColor: colors.themeColor1,\n    pointHoverBorderColor: colors.foregroundColor,\n    pointRadius: 6,\n    pointBorderWidth: 2,\n    pointHoverRadius: 8,\n    fill: false\n  }]\n};\nlet showEnergyChart = true;\n\nconst setshowEnergyChart = value => {\n  showEnergyChart = value;\n};\n\nconst setEnergyChartData = responseData => {\n  setshowEnergyChart(true); // lineChartOptions.scales.yAxes[0].ticks.max=1000;\n  // lineChartOptions.scales.yAxes[0].ticks.min=1000;\n  // lineChartOptions.scales.yAxes[0].ticks.stepSize=1000;\n\n  total_last_7 = responseData.data.energy_sold.total_last_7;\n  EnergyChartData.labels = responseData.data.energy_sold.date;\n  EnergyChartData.datasets[0].data = responseData.data.energy_sold.data;\n  setshowEnergyChart(false);\n};\n\nconst abbreviateNumber = num => {\n  let fixed = 0;\n\n  if (num === null) {\n    return null;\n  } // terminate early\n\n\n  if (num === 0) {\n    return '0';\n  } // terminate early\n\n\n  fixed = !fixed || fixed < 0 ? 0 : fixed; // number of decimal places to show\n\n  var b = num.toPrecision(2).split(\"e\"),\n      // get power\n  k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3),\n      // floor at decimals, ceiling at trillions\n  c = k < 1 ? num.toFixed(0 + fixed) : (num / Math.pow(10, k * 3)).toFixed(1 + fixed),\n      // divide by power\n  d = c < 0 ? c : Math.abs(c),\n      // enforce -0 is 0\n  e = d + ['', 'K', 'M', 'B', 'T'][k]; // append power\n\n  return e;\n};\n\nexport { EnergyChartCard, setEnergyChartData, setshowEnergyChart };","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone-frontend-development/src/views/app/dashboard/manager/EnergyChart.js"],"names":["React","Card","CardBody","CardTitle","UncontrolledDropdown","DropdownItem","DropdownToggle","DropdownMenu","IntlMessages","LineChart","ThemeColors","chartTooltip","moment","require","colors","today","add","format","dateLabel","Array","fill","map","subtract","total_last_7","EnergyChartCard","abbreviateNumber","showEnergyChart","EnergyChartData1","EnergyChartData","labels","datasets","label","data","borderColor","themeColor1","pointBackgroundColor","foregroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointBorderWidth","pointHoverRadius","setshowEnergyChart","value","setEnergyChartData","responseData","energy_sold","date","num","fixed","b","toPrecision","split","k","length","Math","floor","min","slice","c","toFixed","pow","d","abs","e"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu,\n} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { LineChart } from '../../../../components/charts';\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\nimport { chartTooltip } from '../../../../components/charts/util';\n//import { lineChartOptions } from '../../../../components/charts/config';\n\nconst moment = require('moment');\n\nconst colors = ThemeColors();\n\nconst today = moment();\ntoday.add(1, 'd').format('DD-MMM')\nconst dateLabel = Array(7).fill().map(\n() => today.subtract(1, 'd').format('DD-MMM')\n);\nlet total_last_7=0;\n\nconst EnergyChartCard = () => {\n  return (\n    <Card className=\"dashboard-my-card\">     \n      <CardBody>\n        <CardTitle>\n          <IntlMessages id=\"dashboard.energy\" /> ({abbreviateNumber(total_last_7)})\n        </CardTitle>\n        {showEnergyChart && (\n        <div className=\"dashboard-line-chart\">\n          <LineChart  data={EnergyChartData1} />\n        </div>)}\n        {!showEnergyChart && (\n        <div className=\"dashboard-line-chart\">\n          <LineChart  data={EnergyChartData} false lineChartOptions />\n        </div>)}\n        \n      </CardBody>\n    </Card>\n  );\n};\nconst EnergyChartData1 = {\n  labels: dateLabel,\n  datasets: [\n    {\n      label: 'Complete',\n      data: [0,0,0,0,0,0,0],\n      borderColor: colors.themeColor1,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 6,\n      pointBorderWidth: 2,\n      pointHoverRadius: 8,\n      fill: false,\n    },\n  ]\n};\n\nconst EnergyChartData = {\n    labels: dateLabel,\n    datasets: [\n      {\n        label: 'Complete',\n        data: [0,0,0,0,0,0,0],\n        borderColor: colors.themeColor1,\n        pointBackgroundColor: colors.foregroundColor,\n        pointBorderColor: colors.themeColor1,\n        pointHoverBackgroundColor: colors.themeColor1,\n        pointHoverBorderColor: colors.foregroundColor,\n        pointRadius: 6,\n        pointBorderWidth: 2,\n        pointHoverRadius: 8,\n        fill: false,\n      },\n    ]\n  };\n  let showEnergyChart=true;\n  const  setshowEnergyChart = (value) => {showEnergyChart=value};\n  const setEnergyChartData = (responseData) => {\n    setshowEnergyChart(true);\n    // lineChartOptions.scales.yAxes[0].ticks.max=1000;\n    // lineChartOptions.scales.yAxes[0].ticks.min=1000;\n    // lineChartOptions.scales.yAxes[0].ticks.stepSize=1000;\n    total_last_7=responseData.data.energy_sold.total_last_7;\n\n    \n    EnergyChartData.labels= responseData.data.energy_sold.date;\n    EnergyChartData.datasets[0].data=responseData.data.energy_sold.data;\n    setshowEnergyChart(false);\n    \n\n  };\n  const abbreviateNumber =(num)=>{\n    let fixed=0;\n     if (num === null) { return null; } // terminate early\n   if (num === 0) { return '0'; } // terminate early\n   fixed = (!fixed || fixed < 0) ? 0 : fixed; // number of decimal places to show\n   var b = (num).toPrecision(2).split(\"e\"), // get power\n       k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3), // floor at decimals, ceiling at trillions\n       c = k < 1 ? num.toFixed(0 + fixed) : (num / Math.pow(10, k * 3) ).toFixed(1 + fixed), // divide by power\n       d = c < 0 ? c : Math.abs(c), // enforce -0 is 0\n       e = d + ['', 'K', 'M', 'B', 'T'][k]; // append power\n   return e;\n   }\n    \nexport  {EnergyChartCard,setEnergyChartData,setshowEnergyChart};\n"]},"metadata":{},"sourceType":"module"}