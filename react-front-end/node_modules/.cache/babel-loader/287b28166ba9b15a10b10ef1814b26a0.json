{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\src\\\\views\\\\app\\\\gogo\\\\start.js\";\nimport React, { createRef, useState } from 'react';\nimport { Row, Button, Col, Card, CardBody, FormGroup, Label, Spinner, Alert } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport { Formik, Form, Field } from 'formik';\nimport IntlMessages from '../../../helpers/IntlMessages';\nimport BottomNavigation from '../../../components/wizard/BottomNavigation';\nimport TopNavigation from '../../../components/wizard/TopNavigation';\nimport { validateOTPAPI, validateScanEVAPI, validateScanBatteryAPI, validatePairEVAPI } from \"../../../constants/defaultValues\";\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport axios from 'axios';\nimport { NotificationManager } from '../../../components/common/react-notifications';\nimport QrReader from 'react-qr-reader';\nimport { adminRoot } from \"../../../constants/defaultValues\";\n\nconst Start = ({\n  match,\n  intl\n}) => {\n  const forms = [createRef(null), createRef(null), createRef(null), createRef(null), createRef(null), createRef(null), createRef(null)];\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        bottomNavHidden = _useState2[0],\n        setBottomNavHidden = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        bottomNavHidden1 = _useState4[0],\n        setBottomNavHidden1 = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        loading1 = _useState8[0],\n        setLoading1 = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        QR1 = _useState10[0],\n        setQR1 = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        QR2 = _useState12[0],\n        setQR2 = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        QR3 = _useState14[0],\n        setQR3 = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        QR4 = _useState16[0],\n        setQR4 = _useState16[1];\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        QR5 = _useState18[0],\n        setQR5 = _useState18[1];\n\n  const _useState19 = useState(false),\n        _useState20 = _slicedToArray(_useState19, 2),\n        QR6 = _useState20[0],\n        setQR6 = _useState20[1];\n\n  const _useState21 = useState(''),\n        _useState22 = _slicedToArray(_useState21, 2),\n        _otp = _useState22[0],\n        setOTPStart = _useState22[1];\n\n  const _useState23 = useState(''),\n        _useState24 = _slicedToArray(_useState23, 2),\n        qrscan_val1 = _useState24[0],\n        setqrscan_val1 = _useState24[1];\n\n  const _useState25 = useState(''),\n        _useState26 = _slicedToArray(_useState25, 2),\n        qrscan_val2 = _useState26[0],\n        setqrscan_val2 = _useState26[1];\n\n  const _useState27 = useState(''),\n        _useState28 = _slicedToArray(_useState27, 2),\n        qrscan_val3 = _useState28[0],\n        setqrscan_val3 = _useState28[1];\n\n  const _useState29 = useState(''),\n        _useState30 = _slicedToArray(_useState29, 2),\n        qrscan_otp = _useState30[0],\n        setqrscan_otp = _useState30[1];\n\n  const _useState31 = useState(''),\n        _useState32 = _slicedToArray(_useState31, 2),\n        qrscan_val4 = _useState32[0],\n        setqrscan_val4 = _useState32[1];\n\n  const _useState33 = useState(''),\n        _useState34 = _slicedToArray(_useState33, 2),\n        qrscan_val5 = _useState34[0],\n        setqrscan_val5 = _useState34[1];\n\n  const _useState35 = useState(''),\n        _useState36 = _slicedToArray(_useState35, 2),\n        qrscan_val6 = _useState36[0],\n        setqrscan_val6 = _useState36[1];\n\n  const handleScanQR1 = resp => {\n    if (resp) {\n      setqrscan_val1(resp);\n      setQR1(false);\n    }\n  };\n\n  const handleScanQR2 = resp => {\n    if (resp) {\n      resp = resp.replace(/\\D/g, '');\n      setqrscan_val2(resp);\n      setQR2(false);\n    }\n  };\n\n  const handleScanQR3 = resp => {\n    if (resp) {\n      resp = resp.replace(/\\D/g, '');\n      setqrscan_val3(resp);\n      setQR3(false);\n    }\n  };\n\n  const handleScanQR4 = resp => {\n    if (resp) {\n      setqrscan_val4(resp);\n      setQR4(false);\n    }\n  };\n\n  const handleScanQR5 = resp => {\n    if (resp) {\n      resp = resp.replace(/\\D/g, '');\n      setqrscan_val5(resp);\n      setQR5(false);\n    }\n  };\n\n  const handleScanQR6 = resp => {\n    if (resp) {\n      resp = resp.replace(/\\D/g, '');\n      setqrscan_val6(resp);\n      setQR6(false);\n    }\n  };\n\n  const btnScanQR1 = e => {\n    setQR1(!QR1);\n  };\n\n  const btnScanQR2 = e => {\n    setQR2(!QR2);\n  };\n\n  const btnScanQR3 = e => {\n    setQR3(!QR3);\n  };\n\n  const btnScanQR4 = e => {\n    setQR4(!QR4);\n  };\n\n  const btnScanQR5 = e => {\n    setQR5(!QR5);\n  };\n\n  const btnScanQR6 = e => {\n    setQR6(!QR6);\n  };\n\n  const _useState37 = useState([{\n    valid: false,\n    name: 'scanev1',\n    val_id: 'qrscan_val1',\n    value: ''\n  }, {\n    valid: false,\n    name: 'discharge_bt1',\n    val_id: 'qrscan_val2',\n    value: ''\n  }, {\n    valid: false,\n    name: 'discharge_bt2',\n    val_id: 'qrscan_val3',\n    value: ''\n  }, {\n    valid: false,\n    name: 'otp',\n    val_id: 'qrscan_otp',\n    value: ''\n  }, {\n    valid: false,\n    name: 'scanev',\n    val_id: 'qrscan_val4',\n    value: ''\n  }, {\n    valid: false,\n    name: 'charge_bt1',\n    val_id: 'qrscan_val5',\n    value: ''\n  }, {\n    valid: false,\n    name: 'charge_bt2',\n    val_id: 'qrscan_val6',\n    value: ''\n  }]),\n        _useState38 = _slicedToArray(_useState37, 2),\n        fields = _useState38[0],\n        setFields = _useState38[1];\n\n  const createNotification = text => {\n    NotificationManager.error(text, 'Error!', 5000, () => {// alert('callback');\n    }, null, \"error filled\");\n  };\n\n  const validateOTP = value => {\n    let error;\n\n    if (!value) {\n      error = 'Please enter your start OTP';\n    } else if (!/^[0-9]{4}$/.test(value)) {\n      error = 'Invalid OTP. Please Enter valid OTP';\n    }\n\n    setOTPStart(value);\n    return error;\n  };\n\n  const validateScanEV = value => {\n    let error;\n\n    if (!qrscan_val4) {\n      error = 'Please enter your text';\n    }\n\n    return error;\n  };\n\n  const validateScanEV1 = value => {\n    let error;\n\n    if (!qrscan_val1) {\n      error = 'Please enter your text';\n    }\n\n    return error;\n  };\n\n  const validatedischarge_bt1 = value => {\n    let error;\n\n    if (!qrscan_val2) {\n      error = 'Please enter your text';\n    }\n\n    return error;\n  };\n\n  const validatedischarge_bt2 = value => {\n    let error;\n\n    if (!qrscan_val3) {\n      error = 'Please enter Discharged Battery ID';\n    }\n\n    return error;\n  };\n\n  const validatecharge_bt1 = value => {\n    let error;\n\n    if (!qrscan_val5) {\n      error = 'Please enter your text';\n    }\n\n    return error;\n  };\n\n  const validatecharge_bt2 = value => {\n    let error;\n\n    if (!qrscan_val6) {\n      error = 'Please enter your text';\n    }\n\n    return error;\n  };\n\n  const asyncLoading = extraIndex => {\n    if (extraIndex == 0) {\n      setLoading(true);\n      setBottomNavHidden(true);\n    } else {\n      setLoading1(true);\n      setBottomNavHidden1(true);\n    }\n  };\n\n  const stopAsyncLoading = extraIndex => {\n    if (extraIndex == 0) {\n      setLoading(false);\n      setBottomNavHidden(false);\n    } else {\n      setLoading1(false);\n      setBottomNavHidden1(false);\n    }\n  };\n\n  const onClickNext = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(goToNext, steps, step) {\n      var extraIndex, formIndex, form, _fields$formIndex, name, val_id;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            if (!(steps.length - 1 <= steps.indexOf(step))) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            extraIndex = steps.length == 5 ? 3 : 0;\n            formIndex = extraIndex + steps.indexOf(step);\n            form = forms[formIndex].current;\n            _fields$formIndex = fields[formIndex], name = _fields$formIndex.name, val_id = _fields$formIndex.val_id;\n            form.submitForm().then(() => {\n              const newFields = [...fields];\n              newFields[formIndex].value = form.values[name];\n              newFields[formIndex].valid = !form.errors[name];\n              setFields(newFields); // if (!form.errors[name] && form.touched[name] ) {\n\n              if (eval(val_id).trim() != \"\") {\n                asyncLoading(extraIndex);\n\n                switch (step.id) {\n                  case 'step1':\n                    validateScanEVAPICall({\n                      scanevVal: qrscan_val1\n                    }).then(res => {\n                      if (res.data.status === 1) {\n                        goToNext();\n                        step.isDone = true;\n                      } else createNotification(res.data.msg);\n\n                      stopAsyncLoading(extraIndex);\n                    }).catch(error => {\n                      createNotification(\"something went wrong\");\n                      stopAsyncLoading(extraIndex);\n                    });\n                    return;\n\n                  case 'step2':\n                    validateScanBatteryAPICall({\n                      batterytype: \"Discharged\",\n                      battery_sq: \"1\",\n                      batteryqrval: qrscan_val2,\n                      scanevVal: qrscan_val1\n                    }).then(res => {\n                      if (res.data.status === 1) {\n                        goToNext();\n                        step.isDone = true;\n                      } else createNotification(res.data.msg);\n\n                      stopAsyncLoading(extraIndex);\n                    }).catch(error => {\n                      createNotification(\"something went wrong\");\n                      stopAsyncLoading(extraIndex);\n                    });\n                    return;\n\n                  case 'step3':\n                    validateScanBatteryAPICall({\n                      batterytype: \"Discharged\",\n                      battery_sq: \"2\",\n                      batteryqrval: qrscan_val3,\n                      scanevVal: qrscan_val1\n                    }).then(res => {\n                      if (res.data.status === 1) {\n                        goToNext();\n                        step.isDone = true;\n                      } else createNotification(res.data.msg);\n\n                      stopAsyncLoading(extraIndex);\n                    }).catch(error => {\n                      createNotification(\"something went wrong\");\n                      stopAsyncLoading(extraIndex);\n                    });\n                    return;\n\n                  case 'step4':\n                    validateStartOTPAPI({\n                      otp: form.values[name]\n                    }).then(res => {\n                      if (res.data.status === 1) {\n                        goToNext();\n                        step.isDone = true;\n                      } else createNotification(res.data.msg);\n\n                      stopAsyncLoading(extraIndex);\n                    }).catch(error => {\n                      createNotification(\"something went wrong\");\n                      stopAsyncLoading(extraIndex);\n                    });\n                    return;\n\n                  case 'step5':\n                    validatePairEVAPICall({\n                      otp: _otp,\n                      ev_qr_code: qrscan_val4\n                    }).then(res => {\n                      if (res.data.status === 1) {\n                        goToNext();\n                        step.isDone = true;\n                      } else createNotification(res.data.msg);\n\n                      stopAsyncLoading(extraIndex);\n                    }).catch(error => {\n                      createNotification(\"something went wrong\");\n                      stopAsyncLoading(extraIndex);\n                    });\n                    return;\n\n                  case 'step6':\n                    validateScanBatteryAPICall({\n                      batterytype: \"Charged\",\n                      battery_sq: \"1\",\n                      batteryqrval: qrscan_val5,\n                      scanevVal: qrscan_val4\n                    }).then(res => {\n                      if (res.data.status === 1) {\n                        goToNext();\n                        step.isDone = true;\n                      } else createNotification(res.data.msg);\n\n                      stopAsyncLoading(extraIndex);\n                    }).catch(error => {\n                      createNotification(\"something went wrong\");\n                      stopAsyncLoading(extraIndex);\n                    });\n                    return;\n\n                  case 'step7':\n                    validateScanBatteryAPICall({\n                      batterytype: \"Charged\",\n                      battery_sq: \"2\",\n                      batteryqrval: qrscan_val6,\n                      scanevVal: qrscan_val4\n                    }).then(res => {\n                      if (res.data.status === 1) {\n                        goToNext();\n                        step.isDone = true;\n                      } else createNotification(res.data.msg);\n\n                      stopAsyncLoading(extraIndex);\n                    }).catch(error => {\n                      createNotification(\"something went wrong\");\n                      stopAsyncLoading(extraIndex);\n                    });\n                    return;\n\n                  case 'step8':\n                    return;\n                }\n              } else {\n                createNotification(\"Please Fill up data correctly\");\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function onClickNext(_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const onClickPrev = (goToPrev, steps, step) => {\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n\n    goToPrev();\n  }; //API call\n\n\n  const validateStartOTPAPI = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2({\n      otp\n    }) {\n      var currentUser, loginRes;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context2.next = 3;\n            return axios.post(validateOTPAPI, {\n              \"otp_value\": otp\n            }, {\n              headers: {\n                'Authorization': \"Bearer \".concat(currentUser.token)\n              }\n            });\n\n          case 3:\n            loginRes = _context2.sent;\n            return _context2.abrupt(\"return\", loginRes);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function validateStartOTPAPI(_x4) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const validateScanEVAPICall = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3({\n      scanevVal\n    }) {\n      var currentUser, scanevres;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context3.next = 3;\n            return axios.post(validateScanEVAPI, {\n              \"ev_qr_code\": scanevVal\n            }, {\n              headers: {\n                'Authorization': \"Bearer \".concat(currentUser.token)\n              }\n            });\n\n          case 3:\n            scanevres = _context3.sent;\n            return _context3.abrupt(\"return\", scanevres);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n\n    return function validateScanEVAPICall(_x5) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  const validatePairEVAPICall = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4({\n      otp,\n      ev_qr_code\n    }) {\n      var currentUser, scanevres;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context4.next = 3;\n            return axios.post(validatePairEVAPI, {\n              \"otp_value\": otp,\n              \"ev_qr_code\": ev_qr_code\n            }, {\n              headers: {\n                'Authorization': \"Bearer \".concat(currentUser.token)\n              }\n            });\n\n          case 3:\n            scanevres = _context4.sent;\n            return _context4.abrupt(\"return\", scanevres);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n\n    return function validatePairEVAPICall(_x6) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  const validateScanBatteryAPICall = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5({\n      batterytype,\n      battery_sq,\n      batteryqrval,\n      scanevVal\n    }) {\n      var currentUser, scanbatteryres;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context5.next = 3;\n            return axios.post(validateScanBatteryAPI, {\n              \"battery_type\": batterytype,\n              \"battery_sequence\": battery_sq,\n              \"battery_qr_code\": batteryqrval,\n              \"ev_qr_code\": scanevVal\n            }, {\n              headers: {\n                'Authorization': \"Bearer \".concat(currentUser.token)\n              }\n            });\n\n          case 3:\n            scanbatteryres = _context5.sent;\n            return _context5.abrupt(\"return\", scanbatteryres);\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n\n    return function validateScanBatteryAPICall(_x7) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  const messages = intl.messages;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    heading: \"menu.start\",\n    match: match,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"wizard wizard-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Wizard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 19\n    }\n  }, \"Unpair Batteries\")), /*#__PURE__*/React.createElement(TopNavigation, {\n    className: \"justify-content-center\",\n    disableNav: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Steps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Step, {\n    id: \"step1\",\n    name: \"Step 1\",\n    desc: \"Scan EV\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wizard-basic-step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 21\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    color: \"primary\",\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"wizard.async\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 29\n    }\n  }))) : /*#__PURE__*/React.createElement(Formik, {\n    innerRef: forms[0],\n    initialValues: {\n      scanev1: qrscan_val1\n    },\n    onSubmit: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 25\n    }\n  }, ({\n    errors,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    className: \"av-tooltip tooltip-label-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 33\n    }\n  }, \"Scan EV\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    name: \"scanev1\",\n    value: qrscan_val1,\n    onChange: e => setqrscan_val1(e.target.value),\n    validate: validateScanEV1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text scan_grp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn scan_btn btn-sm \",\n    onClick: btnScanQR1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-frame\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 41\n    }\n  }))))), QR1 && /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"6\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(QrReader, {\n    delay: 300,\n    onError: handleScanQR1,\n    onScan: handleScanQR1,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 39\n    }\n  }))), errors.scanev1 && touched.scanev1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 35\n    }\n  }, errors.scanev1)))))), /*#__PURE__*/React.createElement(Step, {\n    id: \"step2\",\n    name: \"Step 2\",\n    desc: \"Scan DB 1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wizard-basic-step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 21\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    color: \"primary\",\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"wizard.async\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 29\n    }\n  }))) : /*#__PURE__*/React.createElement(Formik, {\n    innerRef: forms[1],\n    initialValues: {\n      discharge_bt1: qrscan_val2\n    },\n    onSubmit: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 25\n    }\n  }, ({\n    errors,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    className: \"av-tooltip tooltip-label-right error-l-75\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 33\n    }\n  }, \"Scan Discharge Battery-1\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    name: \"discharge_bt1\",\n    type: \"text\",\n    value: qrscan_val2,\n    onChange: e => setqrscan_val2(e.target.value),\n    validate: validatedischarge_bt1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text scan_grp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn scan_btn btn-sm\",\n    onClick: btnScanQR2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-frame\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 41\n    }\n  }))))), QR2 && /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"6\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(QrReader, {\n    delay: 300,\n    onError: handleScanQR2,\n    onScan: handleScanQR2,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 39\n    }\n  }))), errors.discharge_bt1 && touched.discharge_bt1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 35\n    }\n  }, errors.discharge_bt1)))))), /*#__PURE__*/React.createElement(Step, {\n    id: \"step3\",\n    name: \"Step 3\",\n    desc: \"Scan DB 2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wizard-basic-step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 21\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    color: \"primary\",\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"wizard.async\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 29\n    }\n  }))) : /*#__PURE__*/React.createElement(Formik, {\n    innerRef: forms[2],\n    initialValues: {\n      discharge_bt2: qrscan_val3\n    },\n    onSubmit: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 25\n    }\n  }, ({\n    errors,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    className: \"av-tooltip tooltip-label-right error-l-75\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 33\n    }\n  }, \"Scan Discharge Battery-2\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    name: \"discharge_bt2\",\n    type: \"text\",\n    value: qrscan_val3,\n    onChange: e => setqrscan_val3(e.target.value),\n    validate: validatedischarge_bt2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text scan_grp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn scan_btn btn-sm\",\n    onClick: btnScanQR3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-frame\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 41\n    }\n  }))))), QR3 && /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"6\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(QrReader, {\n    delay: 300,\n    onError: handleScanQR3,\n    onScan: handleScanQR3,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 39\n    }\n  }))), errors.discharge_bt2 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 35\n    }\n  }, errors.discharge_bt2)))))), /*#__PURE__*/React.createElement(Step, {\n    id: \"step8\",\n    hideTopNav: true,\n    hidebottomnav: true,\n    render: ({\n      previous\n    }) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wizard-basic-step text-center pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 21\n      }\n    }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      color: \"primary\",\n      className: \"mb-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"wizard.async\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 29\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"wizard.content-thanks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(IntlMessages, {\n      id: \"wizard.registered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => window.location.reload(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 29\n      }\n    }, \"Restart\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 29\n      }\n    })))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(BottomNavigation, {\n    onClickNext: onClickNext,\n    onClickPrev: onClickPrev,\n    className: \"justify-content-center \".concat(bottomNavHidden && 'invisible'),\n    prevLabel: messages['wizard.prev'],\n    nextLabel: messages['wizard.next'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    className: \"wizard wizard-default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Wizard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 19\n    }\n  }, \"Pair Batteries\")), /*#__PURE__*/React.createElement(TopNavigation, {\n    className: \"justify-content-center\",\n    disableNav: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Steps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Step, {\n    id: \"step4\",\n    name: \"Step 1\",\n    desc: \"OTP\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wizard-basic-step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 21\n    }\n  }, loading1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    color: \"primary\",\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 645,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"wizard.async\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 29\n    }\n  }))) : /*#__PURE__*/React.createElement(Formik, {\n    innerRef: forms[3],\n    initialValues: {\n      otp: fields[3].value\n    } //onSubmit={() => {}}\n    ,\n    onSubmit: (values, actions) => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 653,\n      columnNumber: 25\n    }\n  }, ({\n    errors,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    className: \"av-tooltip tooltip-label-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 33\n    }\n  }, \"Enter OTP\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    name: \"otp\",\n    validate: validateOTP,\n    onChange: e => setqrscan_otp(e.target.value),\n    placeholder: \"Enter OTP\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 670,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 677,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text scan_grp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn scan_btn btn-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-pencil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 41\n    }\n  }))))), errors.otp && touched.otp && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 35\n    }\n  }, errors.otp)))))), /*#__PURE__*/React.createElement(Step, {\n    id: \"step5\",\n    name: \"Step 2\",\n    desc: \"Scan EV\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 700,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wizard-basic-step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 21\n    }\n  }, loading1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    color: \"primary\",\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 708,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"wizard.async\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 29\n    }\n  }))) : /*#__PURE__*/React.createElement(Formik, {\n    innerRef: forms[4],\n    initialValues: {\n      scanev: qrscan_val5\n    },\n    onSubmit: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 25\n    }\n  }, ({\n    errors,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    className: \"av-tooltip tooltip-label-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 33\n    }\n  }, \"Scan EV\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    name: \"scanev\",\n    value: qrscan_val4,\n    onChange: e => setqrscan_val4(e.target.value),\n    validate: validateScanEV,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 726,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text scan_grp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn scan_btn btn-sm\",\n    onClick: btnScanQR4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-frame\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 41\n    }\n  }))))), QR4 && /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"6\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(QrReader, {\n    delay: 300,\n    onError: handleScanQR4,\n    onScan: handleScanQR4,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 39\n    }\n  }))), errors.scanev && touched.scanev && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 35\n    }\n  }, errors.scanev)))))), /*#__PURE__*/React.createElement(Step, {\n    id: \"step6\",\n    name: \"Step 3\",\n    desc: \"Scan CB 1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wizard-basic-step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 21\n    }\n  }, loading1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    color: \"primary\",\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"wizard.async\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 29\n    }\n  }))) : /*#__PURE__*/React.createElement(Formik, {\n    innerRef: forms[5],\n    initialValues: {\n      charge_bt1: qrscan_val5\n    },\n    onSubmit: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 25\n    }\n  }, ({\n    errors,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    className: \"av-tooltip tooltip-label-right error-l-75\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 787,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 33\n    }\n  }, \"Scan Charged Battery-1\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 789,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    name: \"charge_bt1\",\n    type: \"text\",\n    value: qrscan_val5,\n    onChange: e => setqrscan_val5(e.target.value),\n    validate: validatecharge_bt1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 790,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 798,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text scan_grp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn scan_btn btn-sm\",\n    onClick: btnScanQR5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-frame\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 41\n    }\n  }))))), QR5 && /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"6\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 807,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(QrReader, {\n    delay: 300,\n    onError: handleScanQR5,\n    onScan: handleScanQR5,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 808,\n      columnNumber: 39\n    }\n  }))), errors.charge_bt1 && touched.charge_bt1 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 35\n    }\n  }, errors.charge_bt1)))))), /*#__PURE__*/React.createElement(Step, {\n    id: \"step7\",\n    name: \"Step 4\",\n    desc: \"Scan CB 2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 829,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wizard-basic-step\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 834,\n      columnNumber: 21\n    }\n  }, loading1 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 836,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    color: \"primary\",\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 838,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"wizard.async\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 29\n    }\n  }))) : /*#__PURE__*/React.createElement(Formik, {\n    innerRef: forms[6],\n    initialValues: {\n      charge_bt2: qrscan_val6\n    },\n    onSubmit: () => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 25\n    }\n  }, ({\n    errors,\n    touched\n  }) => /*#__PURE__*/React.createElement(Form, {\n    className: \"av-tooltip tooltip-label-right error-l-75\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 33\n    }\n  }, \"Scan Charged Battery-2\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 854,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Field, {\n    className: \"form-control\",\n    name: \"charge_bt2\",\n    type: \"text\",\n    value: qrscan_val6,\n    onChange: e => setqrscan_val6(e.target.value),\n    validate: validatecharge_bt2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 855,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 863,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text scan_grp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"btn scan_btn btn-sm\",\n    onClick: btnScanQR6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 865,\n      columnNumber: 39\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-frame\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 866,\n      columnNumber: 41\n    }\n  }))))), QR6 && /*#__PURE__*/React.createElement(Col, {\n    lg: \"6\",\n    md: \"6\",\n    sm: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 872,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(QrReader, {\n    delay: 300,\n    onError: handleScanQR6,\n    onScan: handleScanQR6,\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 39\n    }\n  }))), errors.charge_bt2 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"invalid-feedback d-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 35\n    }\n  }, errors.charge_bt2)))))), /*#__PURE__*/React.createElement(Step, {\n    id: \"step8\",\n    hideTopNav: true,\n    hidebottomnav: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 895,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wizard-basic-step text-center pt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 21\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 898,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    color: \"primary\",\n    className: \"mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 899,\n      columnNumber: 27\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"wizard.async\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 29\n    }\n  }))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"wizard.content-thanks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 907,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(IntlMessages, {\n    id: \"wizard.registered\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 910,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => window.location.reload(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 29\n    }\n  }, \"Restart\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 29\n    }\n  })))))), /*#__PURE__*/React.createElement(BottomNavigation, {\n    onClickNext: onClickNext,\n    onClickPrev: onClickPrev,\n    className: \"justify-content-center \".concat(bottomNavHidden1 && 'invisible'),\n    prevLabel: messages['wizard.prev'],\n    nextLabel: messages['wizard.next'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 921,\n      columnNumber: 17\n    }\n  })))))));\n};\n\nexport default injectIntl(Start); // const mapStateToProps = ({ authUser }) => {\n//   const { loading, error } = authUser;\n//   return { loading, error };\n// };\n// export default connect(mapStateToProps, {\n//   loginUserAction: loginUser,\n// })(injectIntl(Start));","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/gogo/start.js"],"names":["React","createRef","useState","Row","Button","Col","Card","CardBody","FormGroup","Label","Spinner","Alert","Colxx","Separator","Breadcrumb","Wizard","Steps","Step","injectIntl","Formik","Form","Field","IntlMessages","BottomNavigation","TopNavigation","validateOTPAPI","validateScanEVAPI","validateScanBatteryAPI","validatePairEVAPI","getCurrentUser","axios","NotificationManager","QrReader","adminRoot","Start","match","intl","forms","bottomNavHidden","setBottomNavHidden","bottomNavHidden1","setBottomNavHidden1","loading","setLoading","loading1","setLoading1","QR1","setQR1","QR2","setQR2","QR3","setQR3","QR4","setQR4","QR5","setQR5","QR6","setQR6","_otp","setOTPStart","qrscan_val1","setqrscan_val1","qrscan_val2","setqrscan_val2","qrscan_val3","setqrscan_val3","qrscan_otp","setqrscan_otp","qrscan_val4","setqrscan_val4","qrscan_val5","setqrscan_val5","qrscan_val6","setqrscan_val6","handleScanQR1","resp","handleScanQR2","replace","handleScanQR3","handleScanQR4","handleScanQR5","handleScanQR6","btnScanQR1","e","btnScanQR2","btnScanQR3","btnScanQR4","btnScanQR5","btnScanQR6","valid","name","val_id","value","fields","setFields","createNotification","text","error","validateOTP","test","validateScanEV","validateScanEV1","validatedischarge_bt1","validatedischarge_bt2","validatecharge_bt1","validatecharge_bt2","asyncLoading","extraIndex","stopAsyncLoading","onClickNext","goToNext","steps","step","length","indexOf","formIndex","form","current","submitForm","then","newFields","values","errors","eval","trim","id","validateScanEVAPICall","scanevVal","res","data","status","isDone","msg","catch","validateScanBatteryAPICall","batterytype","battery_sq","batteryqrval","validateStartOTPAPI","otp","validatePairEVAPICall","ev_qr_code","onClickPrev","goToPrev","currentUser","post","headers","token","loginRes","scanevres","scanbatteryres","messages","scanev1","touched","target","width","discharge_bt1","discharge_bt2","previous","window","location","reload","actions","scanev","charge_bt1","charge_bt2"],"mappings":"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","sourcesContent":["import React, { createRef, useState } from 'react';\nimport { Row, Button, Col, Card, CardBody, FormGroup, Label, Spinner, Alert } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport { Formik, Form, Field } from 'formik';\nimport IntlMessages from '../../../helpers/IntlMessages';\nimport BottomNavigation from '../../../components/wizard/BottomNavigation';\nimport TopNavigation from '../../../components/wizard/TopNavigation';\nimport { validateOTPAPI, validateScanEVAPI, validateScanBatteryAPI, validatePairEVAPI } from \"../../../constants/defaultValues\"\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport axios from 'axios';\nimport { NotificationManager } from '../../../components/common/react-notifications';\nimport QrReader from 'react-qr-reader'\nimport { adminRoot } from \"../../../constants/defaultValues\"\n\n\n\nconst Start = ({ match, intl }) => {\n  const forms = [createRef(null), createRef(null), createRef(null), createRef(null), createRef(null), createRef(null), createRef(null)];\n  const [bottomNavHidden, setBottomNavHidden] = useState(false);\n  const [bottomNavHidden1, setBottomNavHidden1] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loading1, setLoading1] = useState(false);\n  const [QR1, setQR1] = useState(false);\n  const [QR2, setQR2] = useState(false);\n  const [QR3, setQR3] = useState(false);\n  const [QR4, setQR4] = useState(false);\n  const [QR5, setQR5] = useState(false);\n  const [QR6, setQR6] = useState(false);\n  const [_otp, setOTPStart] = useState('');\n\n  const [qrscan_val1, setqrscan_val1] = useState('');\n  const [qrscan_val2, setqrscan_val2] = useState('');\n  const [qrscan_val3, setqrscan_val3] = useState('');\n  const [qrscan_otp, setqrscan_otp] = useState('');\n  const [qrscan_val4, setqrscan_val4] = useState('');\n  const [qrscan_val5, setqrscan_val5] = useState('');\n  const [qrscan_val6, setqrscan_val6] = useState('');\n\n  const handleScanQR1 = (resp) => { if (resp) { setqrscan_val1(resp); setQR1(false); } };\n  const handleScanQR2 = (resp) => { if (resp) { resp = resp.replace(/\\D/g, ''); setqrscan_val2(resp); setQR2(false); } };\n  const handleScanQR3 = (resp) => { if (resp) { resp = resp.replace(/\\D/g, ''); setqrscan_val3(resp); setQR3(false); } };\n  const handleScanQR4 = (resp) => { if (resp) { setqrscan_val4(resp); setQR4(false); } };\n  const handleScanQR5 = (resp) => { if (resp) { resp = resp.replace(/\\D/g, ''); setqrscan_val5(resp); setQR5(false); } };\n  const handleScanQR6 = (resp) => { if (resp) { resp = resp.replace(/\\D/g, ''); setqrscan_val6(resp); setQR6(false); } };\n\n  const btnScanQR1 = (e) => { setQR1(!QR1); };\n  const btnScanQR2 = (e) => { setQR2(!QR2); };\n  const btnScanQR3 = (e) => { setQR3(!QR3); };\n  const btnScanQR4 = (e) => { setQR4(!QR4); };\n  const btnScanQR5 = (e) => { setQR5(!QR5); };\n  const btnScanQR6 = (e) => { setQR6(!QR6); };\n\n  const [fields, setFields] = useState([\n    {\n      valid: false,\n      name: 'scanev1',\n      val_id: 'qrscan_val1',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'discharge_bt1',\n      val_id: 'qrscan_val2',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'discharge_bt2',\n      val_id: 'qrscan_val3',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'otp',\n      val_id: 'qrscan_otp',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'scanev',\n      val_id: 'qrscan_val4',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'charge_bt1',\n      val_id: 'qrscan_val5',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'charge_bt2',\n      val_id: 'qrscan_val6',\n      value: '',\n    },\n  ]);\n\n  const createNotification = (text) => {\n    NotificationManager.error(\n      text,\n      'Error!',\n      5000,\n      () => {\n        // alert('callback');\n      },\n      null,\n      \"error filled\"\n    );\n  };\n  const validateOTP = (value) => {\n    let error;\n    if (!value) {\n      error = 'Please enter your start OTP';\n    } else if (!/^[0-9]{4}$/.test(value)) {\n      error = 'Invalid OTP. Please Enter valid OTP';\n    }\n    setOTPStart(value);\n    return error;\n  };\n  const validateScanEV = (value) => {\n    let error;\n    if (!qrscan_val4) {\n      error = 'Please enter your text';\n    }\n    return error;\n  };\n  const validateScanEV1 = (value) => {\n    let error;\n    if (!qrscan_val1) {\n      error = 'Please enter your text';\n    }\n    return error;\n  };\n  const validatedischarge_bt1 = (value) => {\n    let error;\n    if (!qrscan_val2) {\n      error = 'Please enter your text';\n    }\n\n    return error;\n  };\n\n  const validatedischarge_bt2 = (value) => {\n    let error;\n    if (!qrscan_val3) {\n      error = 'Please enter Discharged Battery ID';\n    }\n    return error;\n  };\n  const validatecharge_bt1 = (value) => {\n    let error;\n    if (!qrscan_val5) {\n      error = 'Please enter your text';\n    }\n    return error;\n  };\n  const validatecharge_bt2 = (value) => {\n    let error;\n    if (!qrscan_val6) {\n      error = 'Please enter your text';\n    }\n    return error;\n  };\n\n  const asyncLoading = (extraIndex) => {\n\n    if (extraIndex == 0) {\n      setLoading(true);\n      setBottomNavHidden(true);\n    } else {\n      setLoading1(true);\n      setBottomNavHidden1(true);\n    }\n  };\n\n  const stopAsyncLoading = (extraIndex) => {\n    if (extraIndex == 0) {\n      setLoading(false);\n      setBottomNavHidden(false);\n    } else {\n      setLoading1(false);\n      setBottomNavHidden1(false);\n    }\n  };\n\n\n  const onClickNext = async (goToNext, steps, step) => {\n    if (steps.length - 1 <= steps.indexOf(step)) {\n      return;\n    }\n    const extraIndex = (steps.length == 5) ? 3 : 0;\n    const formIndex = extraIndex + steps.indexOf(step);\n\n\n    const form = forms[formIndex].current;\n    const { name, val_id } = fields[formIndex];\n    form.submitForm().then(() => {\n      const newFields = [...fields];\n\n      newFields[formIndex].value = form.values[name];\n      newFields[formIndex].valid = !form.errors[name];\n      setFields(newFields);\n\n      // if (!form.errors[name] && form.touched[name] ) {\n      if (eval(val_id).trim() != \"\") {\n        asyncLoading(extraIndex);\n\n        switch (step.id) {\n          case 'step1':\n            validateScanEVAPICall({ scanevVal: qrscan_val1 })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n\n              });\n            return;\n          case 'step2':\n            validateScanBatteryAPICall({ batterytype: \"Discharged\", battery_sq: \"1\", batteryqrval: qrscan_val2, scanevVal: qrscan_val1 })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n              });\n            return;\n          case 'step3':\n            validateScanBatteryAPICall({ batterytype: \"Discharged\", battery_sq: \"2\", batteryqrval: qrscan_val3, scanevVal: qrscan_val1 })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n\n              });\n            return;\n          case 'step4':\n            validateStartOTPAPI({ otp: form.values[name] })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n              });\n            return;\n          case 'step5':\n            validatePairEVAPICall({ otp: _otp, ev_qr_code: qrscan_val4 })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n\n              });\n            return;\n          case 'step6':\n            validateScanBatteryAPICall({ batterytype: \"Charged\", battery_sq: \"1\", batteryqrval: qrscan_val5, scanevVal: qrscan_val4 })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n              });\n            return;\n          case 'step7':\n            validateScanBatteryAPICall({ batterytype: \"Charged\", battery_sq: \"2\", batteryqrval: qrscan_val6, scanevVal: qrscan_val4 })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n              });\n            return;\n          case 'step8':\n            return;\n        }\n      } else {\n        createNotification(\"Please Fill up data correctly\");\n      }\n    });\n  };\n\n  const onClickPrev = (goToPrev, steps, step) => {\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n    goToPrev();\n  };\n\n  //API call\n  const validateStartOTPAPI = async ({ otp }) => {\n    const currentUser = getCurrentUser();\n    const loginRes = await axios.post(validateOTPAPI, { \"otp_value\": otp }, {\n      headers: {\n        'Authorization': `Bearer ${currentUser.token}`\n      }\n    });\n    return loginRes;\n  };\n  const validateScanEVAPICall = async ({ scanevVal }) => {\n    const currentUser = getCurrentUser();\n    const scanevres = await axios.post(validateScanEVAPI, { \"ev_qr_code\": scanevVal }, {\n      headers: {\n        'Authorization': `Bearer ${currentUser.token}`\n      }\n    });\n    return scanevres;\n  };\n  const validatePairEVAPICall = async ({ otp, ev_qr_code }) => {\n    const currentUser = getCurrentUser();\n\n    const scanevres = await axios.post(validatePairEVAPI, { \"otp_value\": otp, \"ev_qr_code\": ev_qr_code }, {\n      headers: {\n        'Authorization': `Bearer ${currentUser.token}`\n      }\n    });\n    return scanevres;\n  };\n  const validateScanBatteryAPICall = async ({ batterytype, battery_sq, batteryqrval, scanevVal }) => {\n    const currentUser = getCurrentUser();\n    const scanbatteryres = await axios.post(validateScanBatteryAPI, { \"battery_type\": batterytype, \"battery_sequence\": battery_sq, \"battery_qr_code\": batteryqrval, \"ev_qr_code\": scanevVal }, {\n      headers: {\n        'Authorization': `Bearer ${currentUser.token}`\n      }\n    });\n    return scanbatteryres;\n  };\n\n  const { messages } = intl;\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.start\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card>\n            <CardBody className=\"wizard wizard-default\">\n              <Wizard>\n                <div className=\"pt-3\">\n                  <h3>\n                    Unpair Batteries\n                  </h3>\n                </div>\n                <TopNavigation className=\"justify-content-center\" disableNav />\n                <Steps>\n\n                  <Step\n                    id=\"step1\"\n                    name=\"Step 1\"\n                    desc=\"Scan EV\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[0]}\n                          initialValues={{\n                            scanev1: qrscan_val1,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right\">\n                              <FormGroup>\n                                <Label>Scan EV</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"scanev1\"\n                                    value={qrscan_val1}\n                                    onChange={e => setqrscan_val1(e.target.value)}\n                                    validate={validateScanEV1}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm \" onClick={btnScanQR1}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR1 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR1}\n                                        onScan={handleScanQR1}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n                                {errors.scanev1 && touched.scanev1 && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.scanev1}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n                  <Step\n                    id=\"step2\"\n                    name=\"Step 2\"\n                    desc=\"Scan DB 1\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[1]}\n                          initialValues={{\n                            discharge_bt1: qrscan_val2,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                              <FormGroup>\n                                <Label>Scan Discharge Battery-1</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"discharge_bt1\"\n                                    type=\"text\"\n                                    value={qrscan_val2}\n                                    onChange={e => setqrscan_val2(e.target.value)}\n                                    validate={validatedischarge_bt1}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR2}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR2 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR2}\n                                        onScan={handleScanQR2}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n                                {errors.discharge_bt1 && touched.discharge_bt1 && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.discharge_bt1}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n                  <Step\n                    id=\"step3\"\n                    name=\"Step 3\"\n                    desc=\"Scan DB 2\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[2]}\n                          initialValues={{\n                            discharge_bt2: qrscan_val3,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                              <FormGroup>\n                                <Label>Scan Discharge Battery-2</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"discharge_bt2\"\n                                    type=\"text\"\n                                    value={qrscan_val3}\n                                    onChange={e => setqrscan_val3(e.target.value)}\n                                    validate={validatedischarge_bt2}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR3}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR3 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR3}\n                                        onScan={handleScanQR3}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n                                {errors.discharge_bt2 && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.discharge_bt2}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n                  <Step id=\"step8\" hideTopNav hidebottomnav render={({ previous }) => (\n                    <div className=\"wizard-basic-step text-center pt-3\">\n                      {loading ? (\n                        <div>\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <div>\n                          <h2 className=\"mb-2\">\n                            <IntlMessages id=\"wizard.content-thanks\" />\n                          </h2>\n                          <p>\n                            <IntlMessages id=\"wizard.registered\" />\n                          </p>\n\n                          <p>\n                            <Button onClick={() => window.location.reload(true)}>Restart</Button>\n                            <br />\n                          </p>\n                        </div>\n                      )}\n                    </div>)}>\n                  </Step>\n\n                </Steps>\n                <BottomNavigation\n                  onClickNext={onClickNext}\n                  onClickPrev={onClickPrev}\n                  className={`justify-content-center ${bottomNavHidden && 'invisible'\n                    }`}\n                  prevLabel={messages['wizard.prev']}\n                  nextLabel={messages['wizard.next']}\n                />\n              </Wizard>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card>\n            <CardBody className=\"wizard wizard-default\">\n              <Wizard>\n                <div className=\"pt-3\">\n                  <h3>\n                    Pair Batteries\n                  </h3>\n                </div>\n                <TopNavigation className=\"justify-content-center\" disableNav />\n                <Steps>\n                  <Step\n                    id=\"step4\"\n                    name=\"Step 1\"\n                    desc=\"OTP\"\n                  >\n                    <div className=\"wizard-basic-step\">\n\n                      {loading1 ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n\n\n\n                        <Formik\n                          innerRef={forms[3]}\n                          initialValues={{\n                            otp: fields[3].value,\n                          }}\n                          //onSubmit={() => {}}\n\n                          onSubmit={(values, actions) => {\n\n\n                          }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right\">\n                              <FormGroup>\n                                <Label>Enter OTP</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"otp\"\n                                    validate={validateOTP}\n                                    onChange={e => setqrscan_otp(e.target.value)}\n                                    placeholder=\"Enter OTP\"\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\">\n                                        <i className=\"glyph-icon simple-icon-pencil\"></i>\n                                      </Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {errors.otp && touched.otp && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.otp}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n\n                      )}\n\n                    </div>\n                  </Step>\n\n                  <Step\n                    id=\"step5\"\n                    name=\"Step 2\"\n                    desc=\"Scan EV\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading1 ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[4]}\n                          initialValues={{\n                            scanev: qrscan_val5,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right\">\n                              <FormGroup>\n                                <Label>Scan EV</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"scanev\"\n                                    value={qrscan_val4}\n                                    onChange={e => setqrscan_val4(e.target.value)}\n                                    validate={validateScanEV}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR4}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR4 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR4}\n                                        onScan={handleScanQR4}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n\n                                {errors.scanev && touched.scanev && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.scanev}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n                  <Step\n                    id=\"step6\"\n                    name=\"Step 3\"\n                    desc=\"Scan CB 1\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading1 ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[5]}\n                          initialValues={{\n                            charge_bt1: qrscan_val5,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                              <FormGroup>\n                                <Label>Scan Charged Battery-1</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"charge_bt1\"\n                                    type=\"text\"\n                                    value={qrscan_val5}\n                                    onChange={e => setqrscan_val5(e.target.value)}\n                                    validate={validatecharge_bt1}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR5}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR5 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR5}\n                                        onScan={handleScanQR5}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n\n                                {errors.charge_bt1 && touched.charge_bt1 && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.charge_bt1}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n                  <Step\n                    id=\"step7\"\n                    name=\"Step 4\"\n                    desc=\"Scan CB 2\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading1 ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[6]}\n                          initialValues={{\n                            charge_bt2: qrscan_val6,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                              <FormGroup>\n                                <Label>Scan Charged Battery-2</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"charge_bt2\"\n                                    type=\"text\"\n                                    value={qrscan_val6}\n                                    onChange={e => setqrscan_val6(e.target.value)}\n                                    validate={validatecharge_bt2}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR6}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR6 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR6}\n                                        onScan={handleScanQR6}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n\n                                {errors.charge_bt2 && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.charge_bt2}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n\n                  <Step id=\"step8\" hideTopNav hidebottomnav>\n                    <div className=\"wizard-basic-step text-center pt-3\">\n                      {loading ? (\n                        <div>\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <div>\n                          <h2 className=\"mb-2\">\n                            <IntlMessages id=\"wizard.content-thanks\" />\n                          </h2>\n                          <p>\n                            <IntlMessages id=\"wizard.registered\" />\n                          </p>\n                          <p>\n                            <Button onClick={() => window.location.reload(true)}>Restart</Button>\n                            <br />\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                  </Step>\n                </Steps>\n                <BottomNavigation\n                  onClickNext={onClickNext}\n                  onClickPrev={onClickPrev}\n                  className={`justify-content-center ${bottomNavHidden1 && 'invisible'\n                    }`}\n                  prevLabel={messages['wizard.prev']}\n                  nextLabel={messages['wizard.next']}\n                />\n              </Wizard>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n    </>\n  );\n};\n\nexport default injectIntl(Start);\n// const mapStateToProps = ({ authUser }) => {\n//   const { loading, error } = authUser;\n//   return { loading, error };\n// };\n// export default connect(mapStateToProps, {\n//   loginUserAction: loginUser,\n// })(injectIntl(Start));\n"]},"metadata":{},"sourceType":"module"}