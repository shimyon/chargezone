{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{createRef,useState}from'react';import{Row,Button,Col,Card,CardBody,FormGroup,Label,Spinner,Alert}from'reactstrap';import{Colxx,Separator}from'../../../components/common/CustomBootstrap';import Breadcrumb from'../../../containers/navs/Breadcrumb';import{Wizard,Steps,Step}from'react-albus';import{injectIntl}from'react-intl';import{Formik,Form,Field}from'formik';import IntlMessages from'../../../helpers/IntlMessages';import BottomNavigation from'../../../components/wizard/BottomNavigation';import TopNavigation from'../../../components/wizard/TopNavigation';import{validateOTPAPI,validateScanEVAPI,validateScanBatteryAPI,validatePairEVAPI}from\"../../../constants/defaultValues\";import{getCurrentUser}from'../../../helpers/Utils';import axios from'axios';import{NotificationManager}from'../../../components/common/react-notifications';import QrReader from'react-qr-reader';import{adminRoot}from\"../../../constants/defaultValues\";const Start=({match,intl})=>{const forms=[createRef(null),createRef(null),createRef(null),createRef(null),createRef(null),createRef(null),createRef(null)];const _useState=useState(false),_useState2=_slicedToArray(_useState,2),bottomNavHidden=_useState2[0],setBottomNavHidden=_useState2[1];const _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),bottomNavHidden1=_useState4[0],setBottomNavHidden1=_useState4[1];const _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];const _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),loading1=_useState8[0],setLoading1=_useState8[1];const _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),QR1=_useState10[0],setQR1=_useState10[1];const _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),QR2=_useState12[0],setQR2=_useState12[1];const _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),QR3=_useState14[0],setQR3=_useState14[1];const _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),QR4=_useState16[0],setQR4=_useState16[1];const _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),QR5=_useState18[0],setQR5=_useState18[1];const _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),QR6=_useState20[0],setQR6=_useState20[1];const _useState21=useState(''),_useState22=_slicedToArray(_useState21,2),_otp=_useState22[0],setOTPStart=_useState22[1];const _useState23=useState(''),_useState24=_slicedToArray(_useState23,2),qrscan_val1=_useState24[0],setqrscan_val1=_useState24[1];const _useState25=useState(''),_useState26=_slicedToArray(_useState25,2),qrscan_val2=_useState26[0],setqrscan_val2=_useState26[1];const _useState27=useState(''),_useState28=_slicedToArray(_useState27,2),qrscan_val3=_useState28[0],setqrscan_val3=_useState28[1];const _useState29=useState(''),_useState30=_slicedToArray(_useState29,2),qrscan_otp=_useState30[0],setqrscan_otp=_useState30[1];const _useState31=useState(''),_useState32=_slicedToArray(_useState31,2),qrscan_val4=_useState32[0],setqrscan_val4=_useState32[1];const _useState33=useState(''),_useState34=_slicedToArray(_useState33,2),qrscan_val5=_useState34[0],setqrscan_val5=_useState34[1];const _useState35=useState(''),_useState36=_slicedToArray(_useState35,2),qrscan_val6=_useState36[0],setqrscan_val6=_useState36[1];const handleScanQR1=resp=>{if(resp){setqrscan_val1(resp);setQR1(false);}};const handleScanQR2=resp=>{if(resp){resp=resp.replace(/\\D/g,'');setqrscan_val2(resp);setQR2(false);}};const handleScanQR3=resp=>{if(resp){resp=resp.replace(/\\D/g,'');setqrscan_val3(resp);setQR3(false);}};const handleScanQR4=resp=>{if(resp){setqrscan_val4(resp);setQR4(false);}};const handleScanQR5=resp=>{if(resp){resp=resp.replace(/\\D/g,'');setqrscan_val5(resp);setQR5(false);}};const handleScanQR6=resp=>{if(resp){resp=resp.replace(/\\D/g,'');setqrscan_val6(resp);setQR6(false);}};const btnScanQR1=e=>{setQR1(!QR1);};const btnScanQR2=e=>{setQR2(!QR2);};const btnScanQR3=e=>{setQR3(!QR3);};const btnScanQR4=e=>{setQR4(!QR4);};const btnScanQR5=e=>{setQR5(!QR5);};const btnScanQR6=e=>{setQR6(!QR6);};const _useState37=useState([{valid:false,name:'scanev1',val_id:'qrscan_val1',value:''},{valid:false,name:'discharge_bt1',val_id:'qrscan_val2',value:''},{valid:false,name:'discharge_bt2',val_id:'qrscan_val3',value:''},{valid:false,name:'otp',val_id:'qrscan_otp',value:''},{valid:false,name:'scanev',val_id:'qrscan_val4',value:''},{valid:false,name:'charge_bt1',val_id:'qrscan_val5',value:''},{valid:false,name:'charge_bt2',val_id:'qrscan_val6',value:''}]),_useState38=_slicedToArray(_useState37,2),fields=_useState38[0],setFields=_useState38[1];const bevTokenData={\"success\":null,\"successMessage\":null,\"errorMessage\":null,\"authToken\":null,\"validity\":null};const createNotification=text=>{NotificationManager.error(text,'Error!',5000,()=>{// alert('callback');\n},null,\"error filled\");};const validateOTP=()=>{let value=qrscan_otp;let error=null;if(!value){error='Please enter your start OTP';// } else if (!/^[0-9]{4}$/.test(value)) {\n}else if(value!='1234'){error='Invalid OTP. Please Enter valid OTP';}setOTPStart(value);return error;};const validateScanEV=value=>{let error;if(!qrscan_val4){error='Please enter your text';}return error;};const validateScanEV1=value=>{let error;if(!qrscan_val1){error='Please enter your text';}return error;};const validatedischarge_bt1=value=>{let error;if(!qrscan_val2){error='Please enter your text';}return error;};const validatedischarge_bt2=value=>{let error;if(!qrscan_val3){error='Please enter Discharged Battery ID';}return error;};const validatecharge_bt1=value=>{let error;if(!qrscan_val5){error='Please enter your text';}return error;};const validatecharge_bt2=value=>{let error;if(!qrscan_val6){error='Please enter your text';}return error;};const asyncLoading=extraIndex=>{if(extraIndex==0){setLoading(true);setBottomNavHidden(true);}else{setLoading1(true);setBottomNavHidden1(true);}};const stopAsyncLoading=extraIndex=>{if(extraIndex==0){setLoading(false);setBottomNavHidden(false);}else{setLoading1(false);setBottomNavHidden1(false);}};const onClickNext=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(goToNext,steps,step){var extraIndex,formIndex,form,_fields$formIndex,name,val_id;return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(!(steps.length-1<=steps.indexOf(step))){_context.next=2;break;}return _context.abrupt(\"return\");case 2:extraIndex=steps.length==5?3:0;formIndex=extraIndex+steps.indexOf(step);form=forms[formIndex].current;_fields$formIndex=fields[formIndex],name=_fields$formIndex.name,val_id=_fields$formIndex.val_id;form.submitForm().then(()=>{const newFields=[...fields];newFields[formIndex].value=form.values[name];newFields[formIndex].valid=!form.errors[name];setFields(newFields);// if (!form.errors[name] && form.touched[name] ) {\nif(eval(val_id).trim()!=\"\"){asyncLoading(extraIndex);switch(step.id){case'step1':validateScanEVAPICall({scanevVal:qrscan_val1}).then(res=>{if(res.data.status===1){goToNext();step.isDone=true;}else createNotification(res.data.msg);stopAsyncLoading(extraIndex);}).catch(error=>{createNotification(\"something went wrong\");stopAsyncLoading(extraIndex);});return;case'step2':validateScanBatteryAPICall({batterytype:\"Discharged\",battery_sq:\"1\",batteryqrval:qrscan_val2,scanevVal:qrscan_val1}).then(res=>{if(res.data.status===1){goToNext();step.isDone=true;}else createNotification(res.data.msg);stopAsyncLoading(extraIndex);}).catch(error=>{createNotification(\"something went wrong\");stopAsyncLoading(extraIndex);});return;case'step3':validateScanBatteryAPICall({batterytype:\"Discharged\",battery_sq:\"2\",batteryqrval:qrscan_val3,scanevVal:qrscan_val1}).then(res=>{if(res.data.status===1){goToNext();step.isDone=true;}else createNotification(res.data.msg);stopAsyncLoading(extraIndex);}).catch(error=>{createNotification(\"something went wrong\");stopAsyncLoading(extraIndex);});return;case'step4':let error=validateOTP();if(error==null){BevAuthToekn().then(res=>{bevTokenData.success=res.data.success;bevTokenData.errorMessage=res.data.errorMessage;bevTokenData.validity=null;if(res.data.success){bevTokenData.authToken=res.data.authToken;bevTokenData.successMessage=res.data.successMessage;bevTokenData.validity=res.data.validity;}stopAsyncLoading(extraIndex);goToNext();step.isDone=true;}).catch(err=>{createNotification(\"something went wrong\");stopAsyncLoading(extraIndex);});}else{createNotification(error);}// validateStartOTPAPI({ otp: form.values[name] })\n//   .then((res) => {\n//     if (res.data.status === 1) {\n//       goToNext();\n//       step.isDone = true;\n//     } else\n//       createNotification(res.data.msg);\n//     stopAsyncLoading(extraIndex);\n//   }).catch(error => {\n//     createNotification(\"something went wrong\");\n//     stopAsyncLoading(extraIndex);\n//   });\nreturn;case'step5':validatePairEVAPICall({otp:_otp,ev_qr_code:qrscan_val4}).then(res=>{if(res.data.status===1){goToNext();step.isDone=true;}else createNotification(res.data.msg);stopAsyncLoading(extraIndex);}).catch(error=>{createNotification(\"something went wrong\");stopAsyncLoading(extraIndex);});return;case'step6':validateScanBatteryAPICall({batterytype:\"Charged\",battery_sq:\"1\",batteryqrval:qrscan_val5,scanevVal:qrscan_val4}).then(res=>{if(res.data.status===1){goToNext();step.isDone=true;}else createNotification(res.data.msg);stopAsyncLoading(extraIndex);}).catch(error=>{createNotification(\"something went wrong\");stopAsyncLoading(extraIndex);});return;case'step7':validateScanBatteryAPICall({batterytype:\"Charged\",battery_sq:\"2\",batteryqrval:qrscan_val6,scanevVal:qrscan_val4}).then(res=>{if(res.data.status===1){goToNext();step.isDone=true;}else createNotification(res.data.msg);stopAsyncLoading(extraIndex);}).catch(error=>{createNotification(\"something went wrong\");stopAsyncLoading(extraIndex);});return;case'step8':return;}}else{createNotification(\"Please Fill up data correctly\");}});case 7:case\"end\":return _context.stop();}},_callee);}));return function onClickNext(_x,_x2,_x3){return _ref.apply(this,arguments);};}();const onClickPrev=(goToPrev,steps,step)=>{if(steps.indexOf(step)<=0){return;}goToPrev();};//API call\nconst validateStartOTPAPI=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2({otp}){var currentUser,loginRes;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:currentUser=getCurrentUser();_context2.next=3;return axios.post(validateOTPAPI,{\"otp_value\":otp},{headers:{'Authorization':\"Bearer \".concat(currentUser.token)}});case 3:loginRes=_context2.sent;return _context2.abrupt(\"return\",loginRes);case 5:case\"end\":return _context2.stop();}},_callee2);}));return function validateStartOTPAPI(_x4){return _ref2.apply(this,arguments);};}();const validateScanEVAPICall=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3({scanevVal}){var currentUser,scanevres;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:currentUser=getCurrentUser();_context3.next=3;return axios.post(validateScanEVAPI,{\"ev_qr_code\":scanevVal},{headers:{'Authorization':\"Bearer \".concat(currentUser.token)}});case 3:scanevres=_context3.sent;return _context3.abrupt(\"return\",scanevres);case 5:case\"end\":return _context3.stop();}},_callee3);}));return function validateScanEVAPICall(_x5){return _ref3.apply(this,arguments);};}();const validatePairEVAPICall=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4({otp,ev_qr_code}){var currentUser,scanevres;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:currentUser=getCurrentUser();_context4.next=3;return axios.post(validatePairEVAPI,{\"otp_value\":otp,\"ev_qr_code\":ev_qr_code},{headers:{'Authorization':\"Bearer \".concat(currentUser.token)}});case 3:scanevres=_context4.sent;return _context4.abrupt(\"return\",scanevres);case 5:case\"end\":return _context4.stop();}},_callee4);}));return function validatePairEVAPICall(_x6){return _ref4.apply(this,arguments);};}();const validateScanBatteryAPICall=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5({batterytype,battery_sq,batteryqrval,scanevVal}){var currentUser,scanbatteryres;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:currentUser=getCurrentUser();_context5.next=3;return axios.post(validateScanBatteryAPI,{\"battery_type\":batterytype,\"battery_sequence\":battery_sq,\"battery_qr_code\":batteryqrval,\"ev_qr_code\":scanevVal},{headers:{'Authorization':\"Bearer \".concat(currentUser.token)}});case 3:scanbatteryres=_context5.sent;return _context5.abrupt(\"return\",scanbatteryres);case 5:case\"end\":return _context5.stop();}},_callee5);}));return function validateScanBatteryAPICall(_x7){return _ref5.apply(this,arguments);};}();const BevAuthToekn=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var raw,request;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1)switch(_context6.prev=_context6.next){case 0:raw={\"userName\":\"billion-e\",\"password\":\"Rtj9on$Qds(\"};_context6.next=3;return axios.post(\"https://admin.billionmobility.com/BEV/api/ChargeZone/GenerateAuthToken\",raw);case 3:request=_context6.sent;return _context6.abrupt(\"return\",request);case 5:case\"end\":return _context6.stop();}},_callee6);}));return function BevAuthToekn(){return _ref6.apply(this,arguments);};}();const messages=intl.messages;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\"},/*#__PURE__*/React.createElement(Breadcrumb,{heading:\"menu.start\",match:match}),/*#__PURE__*/React.createElement(Separator,{className:\"mb-5\"}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",className:\"mb-4\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,{className:\"wizard wizard-default\"},/*#__PURE__*/React.createElement(Wizard,null,/*#__PURE__*/React.createElement(\"div\",{className:\"pt-3\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Unpair Batteries\")),/*#__PURE__*/React.createElement(TopNavigation,{className:\"justify-content-center\",disableNav:true}),/*#__PURE__*/React.createElement(Steps,null,/*#__PURE__*/React.createElement(Step,{id:\"step1\",name:\"Step 1\",desc:\"Scan EV\"},/*#__PURE__*/React.createElement(\"div\",{className:\"wizard-basic-step\"},loading?/*#__PURE__*/React.createElement(\"div\",{className:\"text-center pt-3\"},/*#__PURE__*/React.createElement(Spinner,{color:\"primary\",className:\"mb-1\"}),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"wizard.async\"}))):/*#__PURE__*/React.createElement(Formik,{innerRef:forms[0],initialValues:{scanev1:qrscan_val1},onSubmit:()=>{}},({errors,touched})=>/*#__PURE__*/React.createElement(Form,{className:\"av-tooltip tooltip-label-right\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Scan EV\"),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3 input-group\"},/*#__PURE__*/React.createElement(Field,{className:\"form-control\",name:\"scanev1\",value:qrscan_val1,onChange:e=>setqrscan_val1(e.target.value),validate:validateScanEV1}),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text scan_grp\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn scan_btn btn-sm \",onClick:btnScanQR1},/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-frame\"}))))),QR1&&/*#__PURE__*/React.createElement(Col,{lg:\"6\",md:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(QrReader,{delay:300,onError:handleScanQR1,onScan:handleScanQR1,style:{width:'100%'}}))),errors.scanev1&&touched.scanev1&&/*#__PURE__*/React.createElement(\"div\",{className:\"invalid-feedback d-block\"},errors.scanev1)))))),/*#__PURE__*/React.createElement(Step,{id:\"step2\",name:\"Step 2\",desc:\"Scan DB 1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"wizard-basic-step\"},loading?/*#__PURE__*/React.createElement(\"div\",{className:\"text-center pt-3\"},/*#__PURE__*/React.createElement(Spinner,{color:\"primary\",className:\"mb-1\"}),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"wizard.async\"}))):/*#__PURE__*/React.createElement(Formik,{innerRef:forms[1],initialValues:{discharge_bt1:qrscan_val2},onSubmit:()=>{}},({errors,touched})=>/*#__PURE__*/React.createElement(Form,{className:\"av-tooltip tooltip-label-right error-l-75\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Scan Discharge Battery-1\"),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3 input-group\"},/*#__PURE__*/React.createElement(Field,{className:\"form-control\",name:\"discharge_bt1\",type:\"text\",value:qrscan_val2,onChange:e=>setqrscan_val2(e.target.value),validate:validatedischarge_bt1}),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text scan_grp\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn scan_btn btn-sm\",onClick:btnScanQR2},/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-frame\"}))))),QR2&&/*#__PURE__*/React.createElement(Col,{lg:\"6\",md:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(QrReader,{delay:300,onError:handleScanQR2,onScan:handleScanQR2,style:{width:'100%'}}))),errors.discharge_bt1&&touched.discharge_bt1&&/*#__PURE__*/React.createElement(\"div\",{className:\"invalid-feedback d-block\"},errors.discharge_bt1)))))),/*#__PURE__*/React.createElement(Step,{id:\"step3\",name:\"Step 3\",desc:\"Scan DB 2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"wizard-basic-step\"},loading?/*#__PURE__*/React.createElement(\"div\",{className:\"text-center pt-3\"},/*#__PURE__*/React.createElement(Spinner,{color:\"primary\",className:\"mb-1\"}),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"wizard.async\"}))):/*#__PURE__*/React.createElement(Formik,{innerRef:forms[2],initialValues:{discharge_bt2:qrscan_val3},onSubmit:()=>{}},({errors,touched})=>/*#__PURE__*/React.createElement(Form,{className:\"av-tooltip tooltip-label-right error-l-75\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Scan Discharge Battery-2\"),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3 input-group\"},/*#__PURE__*/React.createElement(Field,{className:\"form-control\",name:\"discharge_bt2\",type:\"text\",value:qrscan_val3,onChange:e=>setqrscan_val3(e.target.value),validate:validatedischarge_bt2}),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text scan_grp\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn scan_btn btn-sm\",onClick:btnScanQR3},/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-frame\"}))))),QR3&&/*#__PURE__*/React.createElement(Col,{lg:\"6\",md:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(QrReader,{delay:300,onError:handleScanQR3,onScan:handleScanQR3,style:{width:'100%'}}))),errors.discharge_bt2&&/*#__PURE__*/React.createElement(\"div\",{className:\"invalid-feedback d-block\"},errors.discharge_bt2)))))),/*#__PURE__*/React.createElement(Step,{id:\"step8\",hideTopNav:true,hidebottomnav:true,render:({previous})=>/*#__PURE__*/React.createElement(\"div\",{className:\"wizard-basic-step text-center pt-3\"},loading?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Spinner,{color:\"primary\",className:\"mb-1\"}),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"wizard.async\"}))):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",{className:\"mb-2\"},/*#__PURE__*/React.createElement(IntlMessages,{id:\"wizard.content-thanks\"})),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"wizard.registered\"})),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Button,{onClick:()=>window.location.reload(true)},\"Restart\"),/*#__PURE__*/React.createElement(\"br\",null))))})),/*#__PURE__*/React.createElement(BottomNavigation,{onClickNext:onClickNext,onClickPrev:onClickPrev,className:\"justify-content-center \".concat(bottomNavHidden&&'invisible'),prevLabel:messages['wizard.prev'],nextLabel:messages['wizard.next']})))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Colxx,{xxs:\"12\",className:\"mb-4\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,{className:\"wizard wizard-default\"},/*#__PURE__*/React.createElement(Wizard,null,/*#__PURE__*/React.createElement(\"div\",{className:\"pt-3\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Pair Batteries\")),/*#__PURE__*/React.createElement(TopNavigation,{className:\"justify-content-center\",disableNav:true}),/*#__PURE__*/React.createElement(Steps,null,/*#__PURE__*/React.createElement(Step,{id:\"step4\",name:\"Step 1\",desc:\"OTP\"},/*#__PURE__*/React.createElement(\"div\",{className:\"wizard-basic-step\"},loading1?/*#__PURE__*/React.createElement(\"div\",{className:\"text-center pt-3\"},/*#__PURE__*/React.createElement(Spinner,{color:\"primary\",className:\"mb-1\"}),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"wizard.async\"}))):/*#__PURE__*/React.createElement(Formik,{innerRef:forms[3],initialValues:{otp:fields[3].value}//onSubmit={() => {}}\n,onSubmit:(values,actions)=>{}},({errors,touched})=>/*#__PURE__*/React.createElement(Form,{className:\"av-tooltip tooltip-label-right\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Enter OTP\"),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3 input-group\"},/*#__PURE__*/React.createElement(Field,{className:\"form-control\",name:\"otp\",value:qrscan_otp,validate:validateOTP,onChange:e=>setqrscan_otp(e.target.value),placeholder:\"Enter OTP\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text scan_grp\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn scan_btn btn-sm\"},/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-pencil\"}))))),errors.otp&&touched.otp&&/*#__PURE__*/React.createElement(\"div\",{className:\"invalid-feedback d-block\"},errors.otp)))))),/*#__PURE__*/React.createElement(Step,{id:\"step5\",name:\"Step 2\",desc:\"Scan EV\"},/*#__PURE__*/React.createElement(\"div\",{className:\"wizard-basic-step\"},loading1?/*#__PURE__*/React.createElement(\"div\",{className:\"text-center pt-3\"},/*#__PURE__*/React.createElement(Spinner,{color:\"primary\",className:\"mb-1\"}),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"wizard.async\"}))):/*#__PURE__*/React.createElement(Formik,{innerRef:forms[4],initialValues:{scanev:qrscan_val5},onSubmit:()=>{}},({errors,touched})=>/*#__PURE__*/React.createElement(Form,{className:\"av-tooltip tooltip-label-right\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Scan EV\"),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3 input-group\"},/*#__PURE__*/React.createElement(Field,{className:\"form-control\",name:\"scanev\",value:qrscan_val4,onChange:e=>setqrscan_val4(e.target.value),validate:validateScanEV}),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text scan_grp\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn scan_btn btn-sm\",onClick:btnScanQR4},/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-frame\"}))))),QR4&&/*#__PURE__*/React.createElement(Col,{lg:\"6\",md:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(QrReader,{delay:300,onError:handleScanQR4,onScan:handleScanQR4,style:{width:'100%'}}))),errors.scanev&&touched.scanev&&/*#__PURE__*/React.createElement(\"div\",{className:\"invalid-feedback d-block\"},errors.scanev)))))),/*#__PURE__*/React.createElement(Step,{id:\"step6\",name:\"Step 3\",desc:\"Scan CB 1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"wizard-basic-step\"},loading1?/*#__PURE__*/React.createElement(\"div\",{className:\"text-center pt-3\"},/*#__PURE__*/React.createElement(Spinner,{color:\"primary\",className:\"mb-1\"}),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"wizard.async\"}))):/*#__PURE__*/React.createElement(Formik,{innerRef:forms[5],initialValues:{charge_bt1:qrscan_val5},onSubmit:()=>{}},({errors,touched})=>/*#__PURE__*/React.createElement(Form,{className:\"av-tooltip tooltip-label-right error-l-75\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Scan Charged Battery-1\"),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3 input-group\"},/*#__PURE__*/React.createElement(Field,{className:\"form-control\",name:\"charge_bt1\",type:\"text\",value:qrscan_val5,onChange:e=>setqrscan_val5(e.target.value),validate:validatecharge_bt1}),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text scan_grp\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn scan_btn btn-sm\",onClick:btnScanQR5},/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-frame\"}))))),QR5&&/*#__PURE__*/React.createElement(Col,{lg:\"6\",md:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(QrReader,{delay:300,onError:handleScanQR5,onScan:handleScanQR5,style:{width:'100%'}}))),errors.charge_bt1&&touched.charge_bt1&&/*#__PURE__*/React.createElement(\"div\",{className:\"invalid-feedback d-block\"},errors.charge_bt1)))))),/*#__PURE__*/React.createElement(Step,{id:\"step7\",name:\"Step 4\",desc:\"Scan CB 2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"wizard-basic-step\"},loading1?/*#__PURE__*/React.createElement(\"div\",{className:\"text-center pt-3\"},/*#__PURE__*/React.createElement(Spinner,{color:\"primary\",className:\"mb-1\"}),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"wizard.async\"}))):/*#__PURE__*/React.createElement(Formik,{innerRef:forms[6],initialValues:{charge_bt2:qrscan_val6},onSubmit:()=>{}},({errors,touched})=>/*#__PURE__*/React.createElement(Form,{className:\"av-tooltip tooltip-label-right error-l-75\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Scan Charged Battery-2\"),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-3 input-group\"},/*#__PURE__*/React.createElement(Field,{className:\"form-control\",name:\"charge_bt2\",type:\"text\",value:qrscan_val6,onChange:e=>setqrscan_val6(e.target.value),validate:validatecharge_bt2}),/*#__PURE__*/React.createElement(\"div\",{className:\"input-group-append\"},/*#__PURE__*/React.createElement(\"span\",{className:\"input-group-text scan_grp\"},/*#__PURE__*/React.createElement(Button,{type:\"button\",className:\"btn scan_btn btn-sm\",onClick:btnScanQR6},/*#__PURE__*/React.createElement(\"i\",{className:\"glyph-icon simple-icon-frame\"}))))),QR6&&/*#__PURE__*/React.createElement(Col,{lg:\"6\",md:\"6\",sm:\"12\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(QrReader,{delay:300,onError:handleScanQR6,onScan:handleScanQR6,style:{width:'100%'}}))),errors.charge_bt2&&/*#__PURE__*/React.createElement(\"div\",{className:\"invalid-feedback d-block\"},errors.charge_bt2)))))),/*#__PURE__*/React.createElement(Step,{id:\"step8\",hideTopNav:true,hidebottomnav:true},/*#__PURE__*/React.createElement(\"div\",{className:\"wizard-basic-step text-center pt-3\"},loading?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Spinner,{color:\"primary\",className:\"mb-1\"}),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"wizard.async\"}))):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",{className:\"mb-2\"},/*#__PURE__*/React.createElement(IntlMessages,{id:\"wizard.content-thanks\"})),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(IntlMessages,{id:\"wizard.registered\"})),/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(Button,{onClick:()=>window.location.reload(true)},\"Restart\"),/*#__PURE__*/React.createElement(\"br\",null)))))),/*#__PURE__*/React.createElement(BottomNavigation,{onClickNext:onClickNext,onClickPrev:onClickPrev,className:\"justify-content-center \".concat(bottomNavHidden1&&'invisible'),prevLabel:messages['wizard.prev'],nextLabel:messages['wizard.next']})))))));};export default injectIntl(Start);// const mapStateToProps = ({ authUser }) => {\n//   const { loading, error } = authUser;\n//   return { loading, error };\n// };\n// export default connect(mapStateToProps, {\n//   loginUserAction: loginUser,\n// })(injectIntl(Start));","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/gogo/start.js"],"names":["React","createRef","useState","Row","Button","Col","Card","CardBody","FormGroup","Label","Spinner","Alert","Colxx","Separator","Breadcrumb","Wizard","Steps","Step","injectIntl","Formik","Form","Field","IntlMessages","BottomNavigation","TopNavigation","validateOTPAPI","validateScanEVAPI","validateScanBatteryAPI","validatePairEVAPI","getCurrentUser","axios","NotificationManager","QrReader","adminRoot","Start","match","intl","forms","bottomNavHidden","setBottomNavHidden","bottomNavHidden1","setBottomNavHidden1","loading","setLoading","loading1","setLoading1","QR1","setQR1","QR2","setQR2","QR3","setQR3","QR4","setQR4","QR5","setQR5","QR6","setQR6","_otp","setOTPStart","qrscan_val1","setqrscan_val1","qrscan_val2","setqrscan_val2","qrscan_val3","setqrscan_val3","qrscan_otp","setqrscan_otp","qrscan_val4","setqrscan_val4","qrscan_val5","setqrscan_val5","qrscan_val6","setqrscan_val6","handleScanQR1","resp","handleScanQR2","replace","handleScanQR3","handleScanQR4","handleScanQR5","handleScanQR6","btnScanQR1","e","btnScanQR2","btnScanQR3","btnScanQR4","btnScanQR5","btnScanQR6","valid","name","val_id","value","fields","setFields","bevTokenData","createNotification","text","error","validateOTP","validateScanEV","validateScanEV1","validatedischarge_bt1","validatedischarge_bt2","validatecharge_bt1","validatecharge_bt2","asyncLoading","extraIndex","stopAsyncLoading","onClickNext","goToNext","steps","step","length","indexOf","formIndex","form","current","submitForm","then","newFields","values","errors","eval","trim","id","validateScanEVAPICall","scanevVal","res","data","status","isDone","msg","catch","validateScanBatteryAPICall","batterytype","battery_sq","batteryqrval","BevAuthToekn","success","errorMessage","validity","authToken","successMessage","err","validatePairEVAPICall","otp","ev_qr_code","onClickPrev","goToPrev","validateStartOTPAPI","currentUser","post","headers","token","loginRes","scanevres","scanbatteryres","raw","request","messages","scanev1","touched","target","width","discharge_bt1","discharge_bt2","previous","window","location","reload","actions","scanev","charge_bt1","charge_bt2"],"mappings":"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","sourcesContent":["import React, { createRef, useState } from 'react';\nimport { Row, Button, Col, Card, CardBody, FormGroup, Label, Spinner, Alert } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport { Formik, Form, Field } from 'formik';\nimport IntlMessages from '../../../helpers/IntlMessages';\nimport BottomNavigation from '../../../components/wizard/BottomNavigation';\nimport TopNavigation from '../../../components/wizard/TopNavigation';\nimport { validateOTPAPI, validateScanEVAPI, validateScanBatteryAPI, validatePairEVAPI } from \"../../../constants/defaultValues\"\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport axios from 'axios';\nimport { NotificationManager } from '../../../components/common/react-notifications';\nimport QrReader from 'react-qr-reader'\nimport { adminRoot } from \"../../../constants/defaultValues\"\n\n\n\nconst Start = ({ match, intl }) => {\n  const forms = [createRef(null), createRef(null), createRef(null), createRef(null), createRef(null), createRef(null), createRef(null)];\n  const [bottomNavHidden, setBottomNavHidden] = useState(false);\n  const [bottomNavHidden1, setBottomNavHidden1] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loading1, setLoading1] = useState(false);\n  const [QR1, setQR1] = useState(false);\n  const [QR2, setQR2] = useState(false);\n  const [QR3, setQR3] = useState(false);\n  const [QR4, setQR4] = useState(false);\n  const [QR5, setQR5] = useState(false);\n  const [QR6, setQR6] = useState(false);\n  const [_otp, setOTPStart] = useState('');\n\n  const [qrscan_val1, setqrscan_val1] = useState('');\n  const [qrscan_val2, setqrscan_val2] = useState('');\n  const [qrscan_val3, setqrscan_val3] = useState('');\n  const [qrscan_otp, setqrscan_otp] = useState('');\n  const [qrscan_val4, setqrscan_val4] = useState('');\n  const [qrscan_val5, setqrscan_val5] = useState('');\n  const [qrscan_val6, setqrscan_val6] = useState('');\n\n  const handleScanQR1 = (resp) => { if (resp) { setqrscan_val1(resp); setQR1(false); } };\n  const handleScanQR2 = (resp) => { if (resp) { resp = resp.replace(/\\D/g, ''); setqrscan_val2(resp); setQR2(false); } };\n  const handleScanQR3 = (resp) => { if (resp) { resp = resp.replace(/\\D/g, ''); setqrscan_val3(resp); setQR3(false); } };\n  const handleScanQR4 = (resp) => { if (resp) { setqrscan_val4(resp); setQR4(false); } };\n  const handleScanQR5 = (resp) => { if (resp) { resp = resp.replace(/\\D/g, ''); setqrscan_val5(resp); setQR5(false); } };\n  const handleScanQR6 = (resp) => { if (resp) { resp = resp.replace(/\\D/g, ''); setqrscan_val6(resp); setQR6(false); } };\n\n  const btnScanQR1 = (e) => { setQR1(!QR1); };\n  const btnScanQR2 = (e) => { setQR2(!QR2); };\n  const btnScanQR3 = (e) => { setQR3(!QR3); };\n  const btnScanQR4 = (e) => { setQR4(!QR4); };\n  const btnScanQR5 = (e) => { setQR5(!QR5); };\n  const btnScanQR6 = (e) => { setQR6(!QR6); };\n\n  const [fields, setFields] = useState([\n    {\n      valid: false,\n      name: 'scanev1',\n      val_id: 'qrscan_val1',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'discharge_bt1',\n      val_id: 'qrscan_val2',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'discharge_bt2',\n      val_id: 'qrscan_val3',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'otp',\n      val_id: 'qrscan_otp',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'scanev',\n      val_id: 'qrscan_val4',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'charge_bt1',\n      val_id: 'qrscan_val5',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'charge_bt2',\n      val_id: 'qrscan_val6',\n      value: '',\n    },\n  ]);\n\n  const bevTokenData = {\n    \"success\": null,\n    \"successMessage\": null,\n    \"errorMessage\": null,\n    \"authToken\": null,\n    \"validity\": null\n  };\n\n  const createNotification = (text) => {\n    NotificationManager.error(\n      text,\n      'Error!',\n      5000,\n      () => {\n        // alert('callback');\n      },\n      null,\n      \"error filled\"\n    );\n  };\n  const validateOTP = () => {\n    let value = qrscan_otp;\n    let error = null;\n    if (!value) {\n      error = 'Please enter your start OTP';\n      // } else if (!/^[0-9]{4}$/.test(value)) {\n    } else if (value != '1234') {\n      error = 'Invalid OTP. Please Enter valid OTP';\n    }\n    setOTPStart(value);\n    return error;\n  };\n  const validateScanEV = (value) => {\n    let error;\n    if (!qrscan_val4) {\n      error = 'Please enter your text';\n    }\n    return error;\n  };\n  const validateScanEV1 = (value) => {\n    let error;\n    if (!qrscan_val1) {\n      error = 'Please enter your text';\n    }\n    return error;\n  };\n  const validatedischarge_bt1 = (value) => {\n    let error;\n    if (!qrscan_val2) {\n      error = 'Please enter your text';\n    }\n\n    return error;\n  };\n\n  const validatedischarge_bt2 = (value) => {\n    let error;\n    if (!qrscan_val3) {\n      error = 'Please enter Discharged Battery ID';\n    }\n    return error;\n  };\n  const validatecharge_bt1 = (value) => {\n    let error;\n    if (!qrscan_val5) {\n      error = 'Please enter your text';\n    }\n    return error;\n  };\n  const validatecharge_bt2 = (value) => {\n    let error;\n    if (!qrscan_val6) {\n      error = 'Please enter your text';\n    }\n    return error;\n  };\n\n  const asyncLoading = (extraIndex) => {\n\n    if (extraIndex == 0) {\n      setLoading(true);\n      setBottomNavHidden(true);\n    } else {\n      setLoading1(true);\n      setBottomNavHidden1(true);\n    }\n  };\n\n  const stopAsyncLoading = (extraIndex) => {\n    if (extraIndex == 0) {\n      setLoading(false);\n      setBottomNavHidden(false);\n    } else {\n      setLoading1(false);\n      setBottomNavHidden1(false);\n    }\n  };\n\n\n  const onClickNext = async (goToNext, steps, step) => {\n    if (steps.length - 1 <= steps.indexOf(step)) {\n      return;\n    }\n    const extraIndex = (steps.length == 5) ? 3 : 0;\n    const formIndex = extraIndex + steps.indexOf(step);\n\n\n    const form = forms[formIndex].current;\n    const { name, val_id } = fields[formIndex];\n    form.submitForm().then(() => {\n      const newFields = [...fields];\n\n      newFields[formIndex].value = form.values[name];\n      newFields[formIndex].valid = !form.errors[name];\n      setFields(newFields);\n\n      // if (!form.errors[name] && form.touched[name] ) {\n      if (eval(val_id).trim() != \"\") {\n        asyncLoading(extraIndex);\n\n        switch (step.id) {\n          case 'step1':\n            validateScanEVAPICall({ scanevVal: qrscan_val1 })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n\n              });\n            return;\n          case 'step2':\n            validateScanBatteryAPICall({ batterytype: \"Discharged\", battery_sq: \"1\", batteryqrval: qrscan_val2, scanevVal: qrscan_val1 })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n              });\n            return;\n          case 'step3':\n            validateScanBatteryAPICall({ batterytype: \"Discharged\", battery_sq: \"2\", batteryqrval: qrscan_val3, scanevVal: qrscan_val1 })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n\n              });\n            return;\n          case 'step4':\n            let error = validateOTP();\n            if (error == null) {\n              BevAuthToekn().then(res => {\n                bevTokenData.success = res.data.success;\n                bevTokenData.errorMessage = res.data.errorMessage;\n                bevTokenData.validity = null;\n                if (res.data.success) {\n                  bevTokenData.authToken = res.data.authToken;\n                  bevTokenData.successMessage = res.data.successMessage;\n                  bevTokenData.validity = res.data.validity;\n                }\n                stopAsyncLoading(extraIndex);\n                goToNext();\n                step.isDone = true;\n              }).catch(err => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n              });\n            } else {\n              createNotification(error);\n            }\n            // validateStartOTPAPI({ otp: form.values[name] })\n            //   .then((res) => {\n            //     if (res.data.status === 1) {\n            //       goToNext();\n            //       step.isDone = true;\n            //     } else\n            //       createNotification(res.data.msg);\n            //     stopAsyncLoading(extraIndex);\n            //   }).catch(error => {\n            //     createNotification(\"something went wrong\");\n            //     stopAsyncLoading(extraIndex);\n            //   });\n            return;\n          case 'step5':\n            validatePairEVAPICall({ otp: _otp, ev_qr_code: qrscan_val4 })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n\n              });\n            return;\n          case 'step6':\n            validateScanBatteryAPICall({ batterytype: \"Charged\", battery_sq: \"1\", batteryqrval: qrscan_val5, scanevVal: qrscan_val4 })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n              });\n            return;\n          case 'step7':\n            validateScanBatteryAPICall({ batterytype: \"Charged\", battery_sq: \"2\", batteryqrval: qrscan_val6, scanevVal: qrscan_val4 })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n              });\n            return;\n          case 'step8':\n            return;\n        }\n      } else {\n        createNotification(\"Please Fill up data correctly\");\n      }\n    });\n  };\n\n  const onClickPrev = (goToPrev, steps, step) => {\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n    goToPrev();\n  };\n\n  //API call\n  const validateStartOTPAPI = async ({ otp }) => {\n    const currentUser = getCurrentUser();\n    const loginRes = await axios.post(validateOTPAPI, { \"otp_value\": otp }, {\n      headers: {\n        'Authorization': `Bearer ${currentUser.token}`\n      }\n    });\n    return loginRes;\n  };\n  const validateScanEVAPICall = async ({ scanevVal }) => {\n    const currentUser = getCurrentUser();\n    const scanevres = await axios.post(validateScanEVAPI, { \"ev_qr_code\": scanevVal }, {\n      headers: {\n        'Authorization': `Bearer ${currentUser.token}`\n      }\n    });\n    return scanevres;\n  };\n  const validatePairEVAPICall = async ({ otp, ev_qr_code }) => {\n    const currentUser = getCurrentUser();\n\n    const scanevres = await axios.post(validatePairEVAPI, { \"otp_value\": otp, \"ev_qr_code\": ev_qr_code }, {\n      headers: {\n        'Authorization': `Bearer ${currentUser.token}`\n      }\n    });\n    return scanevres;\n  };\n  const validateScanBatteryAPICall = async ({ batterytype, battery_sq, batteryqrval, scanevVal }) => {\n    const currentUser = getCurrentUser();\n    const scanbatteryres = await axios.post(validateScanBatteryAPI, { \"battery_type\": batterytype, \"battery_sequence\": battery_sq, \"battery_qr_code\": batteryqrval, \"ev_qr_code\": scanevVal }, {\n      headers: {\n        'Authorization': `Bearer ${currentUser.token}`\n      }\n    });\n    return scanbatteryres;\n  };\n\n  const BevAuthToekn = async () => {\n    var raw = {\n      \"userName\": \"billion-e\",\n      \"password\": \"Rtj9on$Qds(\"\n    };\n\n    let request = await axios.post(\"https://admin.billionmobility.com/BEV/api/ChargeZone/GenerateAuthToken\", raw);\n    return request;\n  }\n\n\n  const { messages } = intl;\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.start\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card>\n            <CardBody className=\"wizard wizard-default\">\n              <Wizard>\n                <div className=\"pt-3\">\n                  <h3>\n                    Unpair Batteries\n                  </h3>\n                </div>\n                <TopNavigation className=\"justify-content-center\" disableNav />\n                <Steps>\n\n                  <Step\n                    id=\"step1\"\n                    name=\"Step 1\"\n                    desc=\"Scan EV\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[0]}\n                          initialValues={{\n                            scanev1: qrscan_val1,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right\">\n                              <FormGroup>\n                                <Label>Scan EV</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"scanev1\"\n                                    value={qrscan_val1}\n                                    onChange={e => setqrscan_val1(e.target.value)}\n                                    validate={validateScanEV1}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm \" onClick={btnScanQR1}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR1 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR1}\n                                        onScan={handleScanQR1}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n                                {errors.scanev1 && touched.scanev1 && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.scanev1}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n                  <Step\n                    id=\"step2\"\n                    name=\"Step 2\"\n                    desc=\"Scan DB 1\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[1]}\n                          initialValues={{\n                            discharge_bt1: qrscan_val2,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                              <FormGroup>\n                                <Label>Scan Discharge Battery-1</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"discharge_bt1\"\n                                    type=\"text\"\n                                    value={qrscan_val2}\n                                    onChange={e => setqrscan_val2(e.target.value)}\n                                    validate={validatedischarge_bt1}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR2}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR2 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR2}\n                                        onScan={handleScanQR2}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n                                {errors.discharge_bt1 && touched.discharge_bt1 && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.discharge_bt1}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n                  <Step\n                    id=\"step3\"\n                    name=\"Step 3\"\n                    desc=\"Scan DB 2\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[2]}\n                          initialValues={{\n                            discharge_bt2: qrscan_val3,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                              <FormGroup>\n                                <Label>Scan Discharge Battery-2</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"discharge_bt2\"\n                                    type=\"text\"\n                                    value={qrscan_val3}\n                                    onChange={e => setqrscan_val3(e.target.value)}\n                                    validate={validatedischarge_bt2}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR3}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR3 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR3}\n                                        onScan={handleScanQR3}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n                                {errors.discharge_bt2 && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.discharge_bt2}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n                  <Step id=\"step8\" hideTopNav hidebottomnav render={({ previous }) => (\n                    <div className=\"wizard-basic-step text-center pt-3\">\n                      {loading ? (\n                        <div>\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <div>\n                          <h2 className=\"mb-2\">\n                            <IntlMessages id=\"wizard.content-thanks\" />\n                          </h2>\n                          <p>\n                            <IntlMessages id=\"wizard.registered\" />\n                          </p>\n\n                          <p>\n                            <Button onClick={() => window.location.reload(true)}>Restart</Button>\n                            <br />\n                          </p>\n                        </div>\n                      )}\n                    </div>)}>\n                  </Step>\n\n                </Steps>\n                <BottomNavigation\n                  onClickNext={onClickNext}\n                  onClickPrev={onClickPrev}\n                  className={`justify-content-center ${bottomNavHidden && 'invisible'\n                    }`}\n                  prevLabel={messages['wizard.prev']}\n                  nextLabel={messages['wizard.next']}\n                />\n              </Wizard>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card>\n            <CardBody className=\"wizard wizard-default\">\n              <Wizard>\n                <div className=\"pt-3\">\n                  <h3>\n                    Pair Batteries\n                  </h3>\n                </div>\n                <TopNavigation className=\"justify-content-center\" disableNav />\n                <Steps>\n                  <Step\n                    id=\"step4\"\n                    name=\"Step 1\"\n                    desc=\"OTP\"\n                  >\n                    <div className=\"wizard-basic-step\">\n\n                      {loading1 ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n\n\n\n                        <Formik\n                          innerRef={forms[3]}\n                          initialValues={{\n                            otp: fields[3].value,\n                          }}\n                          //onSubmit={() => {}}\n\n                          onSubmit={(values, actions) => {\n\n\n                          }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right\">\n                              <FormGroup>\n                                <Label>Enter OTP</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"otp\"\n                                    value={qrscan_otp}\n                                    validate={validateOTP}\n                                    onChange={e => setqrscan_otp(e.target.value)}\n                                    placeholder=\"Enter OTP\"\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\">\n                                        <i className=\"glyph-icon simple-icon-pencil\"></i>\n                                      </Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {errors.otp && touched.otp && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.otp}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n\n                      )}\n\n                    </div>\n                  </Step>\n\n                  <Step\n                    id=\"step5\"\n                    name=\"Step 2\"\n                    desc=\"Scan EV\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading1 ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[4]}\n                          initialValues={{\n                            scanev: qrscan_val5,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right\">\n                              <FormGroup>\n                                <Label>Scan EV</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"scanev\"\n                                    value={qrscan_val4}\n                                    onChange={e => setqrscan_val4(e.target.value)}\n                                    validate={validateScanEV}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR4}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR4 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR4}\n                                        onScan={handleScanQR4}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n\n                                {errors.scanev && touched.scanev && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.scanev}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n                  <Step\n                    id=\"step6\"\n                    name=\"Step 3\"\n                    desc=\"Scan CB 1\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading1 ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[5]}\n                          initialValues={{\n                            charge_bt1: qrscan_val5,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                              <FormGroup>\n                                <Label>Scan Charged Battery-1</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"charge_bt1\"\n                                    type=\"text\"\n                                    value={qrscan_val5}\n                                    onChange={e => setqrscan_val5(e.target.value)}\n                                    validate={validatecharge_bt1}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR5}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR5 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR5}\n                                        onScan={handleScanQR5}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n\n                                {errors.charge_bt1 && touched.charge_bt1 && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.charge_bt1}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n                  <Step\n                    id=\"step7\"\n                    name=\"Step 4\"\n                    desc=\"Scan CB 2\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading1 ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[6]}\n                          initialValues={{\n                            charge_bt2: qrscan_val6,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                              <FormGroup>\n                                <Label>Scan Charged Battery-2</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"charge_bt2\"\n                                    type=\"text\"\n                                    value={qrscan_val6}\n                                    onChange={e => setqrscan_val6(e.target.value)}\n                                    validate={validatecharge_bt2}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR6}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR6 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR6}\n                                        onScan={handleScanQR6}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n\n                                {errors.charge_bt2 && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.charge_bt2}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n\n                  <Step id=\"step8\" hideTopNav hidebottomnav>\n                    <div className=\"wizard-basic-step text-center pt-3\">\n                      {loading ? (\n                        <div>\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <div>\n                          <h2 className=\"mb-2\">\n                            <IntlMessages id=\"wizard.content-thanks\" />\n                          </h2>\n                          <p>\n                            <IntlMessages id=\"wizard.registered\" />\n                          </p>\n                          <p>\n                            <Button onClick={() => window.location.reload(true)}>Restart</Button>\n                            <br />\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                  </Step>\n                </Steps>\n                <BottomNavigation\n                  onClickNext={onClickNext}\n                  onClickPrev={onClickPrev}\n                  className={`justify-content-center ${bottomNavHidden1 && 'invisible'\n                    }`}\n                  prevLabel={messages['wizard.prev']}\n                  nextLabel={messages['wizard.next']}\n                />\n              </Wizard>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n    </>\n  );\n};\n\nexport default injectIntl(Start);\n// const mapStateToProps = ({ authUser }) => {\n//   const { loading, error } = authUser;\n//   return { loading, error };\n// };\n// export default connect(mapStateToProps, {\n//   loginUserAction: loginUser,\n// })(injectIntl(Start));\n"]},"metadata":{},"sourceType":"module"}