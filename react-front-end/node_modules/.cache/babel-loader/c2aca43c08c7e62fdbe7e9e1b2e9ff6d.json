{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\src\\\\views\\\\app\\\\pages\\\\UpdateFleet.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Row, FormGroup, Card, CardBody, Label, Input, Button, Alert } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils';\nimport { getFleetOperatorByIdAPI, updateFleetOperatorAPI, getUsersByRolesAPI, adminRoot } from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateFleet = () => {\n  //multiSelect state\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedOptions = _useState2[0],\n        setSelectedOptions = _useState2[1]; //fleet users list \n\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        fleetOperatorUsers = _useState4[0],\n        setFleetOperatorUsers = _useState4[1]; //Fleet Operator details state\n\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        name = _useState6[0],\n        setName = _useState6[1];\n\n  const _useState7 = useState([]),\n        _useState8 = _slicedToArray(_useState7, 2),\n        contactPerson = _useState8[0],\n        setContactPerson = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        contactEmail = _useState10[0],\n        setContactEmail = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        contactNumber = _useState12[0],\n        setContactNumber = _useState12[1];\n\n  const _useState13 = useState(\"\"),\n        _useState14 = _slicedToArray(_useState13, 2),\n        address = _useState14[0],\n        setAddress = _useState14[1];\n\n  const _useState15 = useState(\"\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        remark1 = _useState16[0],\n        setRemark1 = _useState16[1];\n\n  const _useState17 = useState(\"\"),\n        _useState18 = _slicedToArray(_useState17, 2),\n        remark2 = _useState18[0],\n        setRemark2 = _useState18[1]; //alert states\n\n\n  const _useState19 = useState(false),\n        _useState20 = _slicedToArray(_useState19, 2),\n        alertVisible = _useState20[0],\n        setAlertVisible = _useState20[1];\n\n  const _useState21 = useState(\"\"),\n        _useState22 = _slicedToArray(_useState21, 2),\n        alertMsg = _useState22[0],\n        setAlertMsg = _useState22[1];\n\n  const _useState23 = useState(\"\"),\n        _useState24 = _slicedToArray(_useState23, 2),\n        alertColor = _useState24[0],\n        setAlertColor = _useState24[1]; //state to disable button on click\n\n\n  const _useState25 = useState(false),\n        _useState26 = _slicedToArray(_useState25, 2),\n        buttonDisabled = _useState26[0],\n        setButtonDisabled = _useState26[1];\n\n  const history = useHistory();\n  const location = useLocation();\n  useEffect(() => {\n    getFleetOperatorUsersAPICall();\n    getFleetOperatorByIdAPICall();\n  }, []); //API calls\n\n  const getFleetOperatorUsersAPICall = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context.next = 3;\n            return axios.post(getUsersByRolesAPI, {\n              user_role: \"fleet operator\"\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n              let users = [];\n\n              if (responseData.status === 1) {\n                responseData.data.map((item, index) => {\n                  users.push({\n                    label: item.name,\n                    value: item.id,\n                    key: index\n                  });\n                });\n                setFleetOperatorUsers(users);\n              } else {\n                console.log(responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    return function getFleetOperatorUsersAPICall() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const getFleetOperatorByIdAPICall = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            currentUser = getCurrentUser();\n            _context2.next = 3;\n            return axios.post(getFleetOperatorByIdAPI, {\n              fleet_operator_id: location.state.fleet_operator_id\n            }, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n              let tempData = [];\n\n              if (responseData.status === 1) {\n                setName(responseData.data.name);\n                setContactPerson(responseData.data.contact_person);\n                setContactEmail(responseData.data.contact_email);\n                setContactNumber(responseData.data.contact_number);\n                setAddress(responseData.data.address);\n                setRemark1(responseData.data.remark_1);\n                setRemark2(responseData.data.remark_2);\n                responseData.data.users.map((item, index) => {\n                  tempData.push({\n                    label: item.name,\n                    value: item.id,\n                    key: index\n                  });\n                });\n                setSelectedOptions(tempData);\n              } else {\n                fleetUpdatedAlert(responseData.msg);\n              }\n            }).catch(error => {\n              console.log(error);\n            });\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    return function getFleetOperatorByIdAPICall() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const updateFleetOperatorAPICall = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params) {\n      var currentUser;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            setButtonDisabled(true);\n            currentUser = getCurrentUser();\n            _context3.next = 4;\n            return axios.post(updateFleetOperatorAPI, params, {\n              headers: {\n                Authorization: \"Bearer \".concat(currentUser.token)\n              }\n            }).then(response => {\n              const responseData = response.data;\n\n              if (responseData.status === 1) {\n                history.push({\n                  pathname: adminRoot + '/pages/fleetoperator',\n                  state: {\n                    responseStatus: responseData.status,\n                    responseMsg: responseData.msg\n                  }\n                });\n              } else {\n                setButtonDisabled(false);\n                fleetUpdatedAlert(responseData.msg);\n              }\n            }).catch(error => {\n              setButtonDisabled(false);\n              console.log(error);\n            });\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n\n    return function updateFleetOperatorAPICall(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); //helper methods\n  //Alert helper methods\n\n\n  const fleetUpdatedAlert = msg => {\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  };\n\n  const onDismissAlert = () => {\n    setAlertVisible(false);\n  }; //Form Validation Schema\n\n\n  const FleetOperatorDetailsValidationSchema = yup.object().shape({\n    name: yup.string().required(\"Name is required\"),\n    address: yup.string().required(\"Address is required\"),\n    contact_person: yup.string().required(\"Contact Person is required\"),\n    contact_email: yup.string().email(\"Invalid Email format\").required(\"Contact email is required\"),\n    contact_number: yup.string().matches(/\\+?\\d[\\d -]{8,12}\\d/, \"Invalid contact number\").length(10, \"Invalid contact number length\").required(\"Contact number is required\")\n  });\n  const initialValues = {\n    name: name,\n    contact_person: contactPerson,\n    contact_email: contactEmail,\n    contact_number: contactNumber,\n    address: address,\n    remark_1: remark1,\n    remark_2: remark2\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"page_title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }, \"Update Fleet Operator\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: \"fleetoperator\",\n    className: \"mt-2 btn-primary default btn-sm float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"glyph-icon simple-icon-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 20\n    }\n  }), \" Fleet Operator List\")), /*#__PURE__*/React.createElement(Separator, {\n    className: \"mb-5 mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    initialValues: initialValues,\n    validationSchema: FleetOperatorDetailsValidationSchema,\n    onSubmit: values => {\n      const usersSelected = [];\n      selectedOptions.map(item => {\n        usersSelected.push(item.value);\n      });\n      const params = {\n        fleet_operator_id: location.state.fleet_operator_id,\n        name: values.name,\n        users: usersSelected,\n        contact_person: values.contact_person,\n        contact_email: values.contact_email,\n        contact_number: values.contact_number,\n        address: values.address,\n        remark_1: values.remark_1,\n        remark_2: values.remark_2\n      };\n      updateFleetOperatorAPICall(params);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, ({\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    values,\n    touched,\n    errors\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    xxs: \"12\",\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    color: alertColor,\n    isOpen: alertVisible,\n    toggle: onDismissAlert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 31\n    }\n  }, alertMsg)), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 33\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Name\",\n    name: \"name\",\n    value: values.name,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.name && touched.name ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 33\n    }\n  }), errors.name && touched.name && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 35\n    }\n  }, errors.name))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 33\n    }\n  }, \"Users\"), /*#__PURE__*/React.createElement(Select, {\n    components: {\n      Input: CustomSelectInput\n    },\n    className: \"react-select\",\n    classNamePrefix: \"react-select\",\n    isMulti: true,\n    name: \"form-field-name\",\n    value: selectedOptions,\n    onChange: setSelectedOptions,\n    options: fleetOperatorUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 35\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 33\n    }\n  }, \"Contact Person\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Contact Person\",\n    name: \"contact_person\",\n    value: values.contact_person,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.contact_person && touched.contact_person ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 33\n    }\n  }), errors.contact_person && touched.contact_person && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 35\n    }\n  }, errors.contact_person))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 33\n    }\n  }, \"Contact Email\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Contact Email\",\n    name: \"contact_email\",\n    value: values.contact_email,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.contact_email && touched.contact_email ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 33\n    }\n  }), errors.contact_email && touched.contact_email && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 35\n    }\n  }, errors.contact_email))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 33\n    }\n  }, \"Contact Number\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Contact Number\",\n    name: \"contact_number\",\n    value: values.contact_number,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.contact_number && touched.contact_number ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 33\n    }\n  }), errors.contact_number && touched.contact_number && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 35\n    }\n  }, errors.contact_number))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 33\n    }\n  }, \"Address\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    placeholder: \"Address\",\n    name: \"address\",\n    value: values.address,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.address && touched.address ? \"input-error\" : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 33\n    }\n  }), errors.address && touched.address && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 35\n    }\n  }, errors.address))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 33\n    }\n  }, \"Remark1\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"remark_1\",\n    placeholder: \"Remark1\",\n    value: values.remark_1,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Colxx, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 33\n    }\n  }, \"Remark2\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    name: \"remark_2\",\n    placeholder: \"Remark2\",\n    value: values.remark_2,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Colxx, {\n    md: \"12\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"default mr-2\",\n    onClick: handleSubmit,\n    disabled: buttonDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 35\n    }\n  }, \"Update\")), /*#__PURE__*/React.createElement(Button, {\n    color: \"light\",\n    className: \"default\",\n    onClick: () => {\n      history.goBack();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 35\n    }\n  }, \"Cancel\")))))))))));\n};\n\nexport default UpdateFleet;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/views/app/pages/UpdateFleet.js"],"names":["React","useState","useEffect","Row","FormGroup","Card","CardBody","Label","Input","Button","Alert","Colxx","Separator","CustomSelectInput","Select","getCurrentUser","getFleetOperatorByIdAPI","updateFleetOperatorAPI","getUsersByRolesAPI","adminRoot","axios","useHistory","useLocation","Formik","yup","UpdateFleet","selectedOptions","setSelectedOptions","fleetOperatorUsers","setFleetOperatorUsers","name","setName","contactPerson","setContactPerson","contactEmail","setContactEmail","contactNumber","setContactNumber","address","setAddress","remark1","setRemark1","remark2","setRemark2","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","buttonDisabled","setButtonDisabled","history","location","getFleetOperatorUsersAPICall","getFleetOperatorByIdAPICall","currentUser","post","user_role","headers","Authorization","token","then","response","responseData","data","users","status","map","item","index","push","label","value","id","key","console","log","msg","catch","error","fleet_operator_id","state","tempData","contact_person","contact_email","contact_number","remark_1","remark_2","fleetUpdatedAlert","updateFleetOperatorAPICall","params","pathname","responseStatus","responseMsg","onDismissAlert","FleetOperatorDetailsValidationSchema","object","shape","string","required","email","matches","length","initialValues","values","usersSelected","handleChange","handleBlur","handleSubmit","touched","errors","goBack"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getFleetOperatorByIdAPI,updateFleetOperatorAPI,getUsersByRolesAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateFleet = () => {\n  //multiSelect state\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  //fleet users list \n  const [fleetOperatorUsers, setFleetOperatorUsers] = useState([]);\n  //Fleet Operator details state\n  const [name,setName] = useState(\"\");\n  const [contactPerson,setContactPerson] = useState([]);\n  const [contactEmail,setContactEmail] = useState(\"\");\n  const [contactNumber,setContactNumber] = useState(\"\");\n  const [address,setAddress] = useState(\"\");\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getFleetOperatorUsersAPICall();\n    getFleetOperatorByIdAPICall();\n  },[])\n\n  //API calls\n  const getFleetOperatorUsersAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getUsersByRolesAPI,\n      {user_role:\"fleet operator\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let users=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           users.push({label:item.name,value:item.id,key:index})\n         })\n         setFleetOperatorUsers(users);\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getFleetOperatorByIdAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getFleetOperatorByIdAPI,\n    {\n        fleet_operator_id:location.state.fleet_operator_id\n    },\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        let tempData = [];\n        if (responseData.status === 1) {\n        setName(responseData.data.name);\n        setContactPerson(responseData.data.contact_person);\n        setContactEmail(responseData.data.contact_email);\n        setContactNumber(responseData.data.contact_number);\n        setAddress(responseData.data.address);\n        setRemark1(responseData.data.remark_1);\n        setRemark2(responseData.data.remark_2);\n        responseData.data.users.map((item,index)=>{\n            tempData.push({label:item.name,value:item.id,key:index})\n        })\n        setSelectedOptions(tempData);\n        }else{\n          fleetUpdatedAlert(responseData.msg);\n        }\n    }).catch(error=>{\n        console.log(error);\n    })\n}\n\nconst updateFleetOperatorAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(updateFleetOperatorAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/fleetoperator',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          fleetUpdatedAlert(responseData.msg);\n        }\n    }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n    })\n}\n\n  //helper methods\n  //Alert helper methods\n  const fleetUpdatedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const FleetOperatorDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name is required\"),\n    address:yup.string()\n        .required(\"Address is required\"),\n    contact_person:yup.string()\n        .required(\"Contact Person is required\"),\n    contact_email:yup.string()\n        .email(\"Invalid Email format\")\n        .required(\"Contact email is required\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n        .required(\"Contact number is required\"),\n  });\n\n  const initialValues = {\n    name:name,\n    contact_person:contactPerson,\n    contact_email:contactEmail,\n    contact_number:contactNumber,\n    address:address,\n    remark_1:remark1,\n    remark_2:remark2\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Fleet Operator</span>\n            <a href=\"fleetoperator\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Fleet Operator List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialValues}\n        validationSchema={FleetOperatorDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const usersSelected = [];\n          selectedOptions.map(item=>{\n            usersSelected.push(item.value)\n          })\n          const params = {\n            fleet_operator_id:location.state.fleet_operator_id,\n            name:values.name,\n            users:usersSelected,\n            contact_person:values.contact_person,\n            contact_email:values.contact_email,\n            contact_number:values.contact_number,\n            address:values.address,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2\n          }\n          updateFleetOperatorAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Users\n                                </Label>\n                                  <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={selectedOptions}\n                                    onChange={setSelectedOptions}\n                                    options={fleetOperatorUsers}\n                                  />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Person\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Person\"\n                                  name=\"contact_person\"\n                                  value={values.contact_person}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_person && touched.contact_person ? \"input-error\":null}\n                                />\n                                {errors.contact_person && touched.contact_person &&(\n                                  <span className=\"error\">{errors.contact_person}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Email\"\n                                  name=\"contact_email\"\n                                  value={values.contact_email}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_email && touched.contact_email ? \"input-error\":null}\n                                />\n                                {errors.contact_email && touched.contact_email &&(\n                                  <span className=\"error\">{errors.contact_email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Address\"\n                                  name=\"address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik> \n    </>\n  );\n};\n\nexport default UpdateFleet;"]},"metadata":{},"sourceType":"module"}