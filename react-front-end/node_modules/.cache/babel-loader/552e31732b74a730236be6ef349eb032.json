{"ast":null,"code":"import _objectSpread from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Shimyon\\\\Emoiss\\\\RiteshBhai\\\\cdzb\\\\chargezone\\\\react-front-end\\\\src\\\\components\\\\charts\\\\SmallLine.js\";\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable no-underscore-dangle */\n\n/* eslint-disable no-param-reassign */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\nimport { smallLineChartOptions } from './config';\n\nconst addCommas = nStr => {\n  nStr += '';\n  const x = nStr.split('.');\n  let x1 = x[0];\n  const x2 = x.length > 1 ? \".\".concat(x[1]) : '';\n  const rgx = /(\\d+)(\\d{3})/;\n\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, '$1,$2');\n  }\n\n  return x1 + x2;\n};\n\nconst Scatter = ({\n  data\n}) => {\n  const chartContainer = useRef(null);\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        setChartInstance = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentValue = _useState4[0],\n        setCurrentValue = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentLabel = _useState6[0],\n        setCurrentLabel = _useState6[1];\n\n  const changeState = (yLabel, xLabel) => {\n    setCurrentValue(yLabel);\n    setCurrentLabel(xLabel);\n  };\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      Chart.controllers.lineWithLine = Chart.controllers.line;\n      Chart.controllers.lineWithLine = Chart.controllers.line.extend({\n        draw(ease) {\n          Chart.controllers.line.prototype.draw.call(this, ease);\n          const _this$chart = this.chart,\n                ctx = _this$chart.ctx,\n                tooltip = _this$chart.tooltip,\n                scales = _this$chart.scales;\n\n          if (tooltip._active && tooltip._active[0]) {\n            const activePoint = tooltip._active[0];\n\n            const _activePoint$tooltipP = activePoint.tooltipPosition(),\n                  x = _activePoint$tooltipP.x;\n\n            const topY = scales['y-axis-0'].top;\n            const bottomY = scales['y-axis-0'].bottom;\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(x, topY);\n            ctx.lineTo(x, bottomY);\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = 'rgba(0,0,0,0.1)';\n            ctx.stroke();\n            ctx.restore();\n          }\n        }\n\n      });\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: 'lineWithLine',\n        options: _objectSpread(_objectSpread({}, smallLineChartOptions), {}, {\n          tooltips: {\n            intersect: false,\n            enabled: false,\n\n            custom(tooltipModel) {\n              if (tooltipModel && tooltipModel.dataPoints) {\n                const yLabel = tooltipModel.dataPoints[0].yLabel;\n                const xLabel = tooltipModel.dataPoints[0].xLabel;\n                const label = tooltipModel.body[0].lines[0].split(':')[0];\n                changeState(\"$\".concat(addCommas(yLabel)), \"\".concat(label, \"-\").concat(xLabel));\n              }\n            }\n\n          }\n        }),\n        plugins: [{\n          afterInit(chart, _options) {\n            const yLabel = chart.data.datasets[0].data[0];\n            const xLabel = chart.data.labels[0];\n            const label = chart.data.datasets[0].label;\n            changeState(\"$\".concat(addCommas(yLabel)), \"\".concat(label, \"-\").concat(xLabel));\n          }\n\n        }],\n        data\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead color-theme-1 mb-1 value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, currentValue), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0 label text-small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, currentLabel)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: chartContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Scatter;","map":{"version":3,"sources":["D:/Shimyon/Emoiss/RiteshBhai/cdzb/chargezone/react-front-end/src/components/charts/SmallLine.js"],"names":["React","useEffect","useRef","useState","Chart","smallLineChartOptions","addCommas","nStr","x","split","x1","x2","length","rgx","test","replace","Scatter","data","chartContainer","setChartInstance","currentValue","setCurrentValue","currentLabel","setCurrentLabel","changeState","yLabel","xLabel","current","controllers","lineWithLine","line","extend","draw","ease","prototype","call","chart","ctx","tooltip","scales","_active","activePoint","tooltipPosition","topY","top","bottomY","bottom","save","beginPath","moveTo","lineTo","lineWidth","strokeStyle","stroke","restore","context","getContext","newChartInstance","type","options","tooltips","intersect","enabled","custom","tooltipModel","dataPoints","label","body","lines","plugins","afterInit","_options","datasets","labels"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-param-reassign */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { smallLineChartOptions } from './config';\n\nconst addCommas = (nStr) => {\n  nStr += '';\n  const x = nStr.split('.');\n  let x1 = x[0];\n  const x2 = x.length > 1 ? `.${x[1]}` : '';\n  const rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, '$1,$2');\n  }\n  return x1 + x2;\n};\n\nconst Scatter = ({ data }) => {\n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n  const [currentValue, setCurrentValue] = useState('');\n  const [currentLabel, setCurrentLabel] = useState('');\n\n  const changeState = (yLabel, xLabel) => {\n    setCurrentValue(yLabel);\n    setCurrentLabel(xLabel);\n  };\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      Chart.controllers.lineWithLine = Chart.controllers.line;\n      Chart.controllers.lineWithLine = Chart.controllers.line.extend({\n        draw(ease) {\n          Chart.controllers.line.prototype.draw.call(this, ease);\n          const {\n            chart: { ctx, tooltip, scales },\n          } = this;\n\n          if (tooltip._active && tooltip._active[0]) {\n            const activePoint = tooltip._active[0];\n            const { x } = activePoint.tooltipPosition();\n            const topY = scales['y-axis-0'].top;\n            const bottomY = scales['y-axis-0'].bottom;\n            ctx.save();\n            ctx.beginPath();\n            ctx.moveTo(x, topY);\n            ctx.lineTo(x, bottomY);\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = 'rgba(0,0,0,0.1)';\n            ctx.stroke();\n            ctx.restore();\n          }\n        },\n      });\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: 'lineWithLine',\n        options: {\n          ...smallLineChartOptions,\n          tooltips: {\n            intersect: false,\n            enabled: false,\n            custom(tooltipModel) {\n              if (tooltipModel && tooltipModel.dataPoints) {\n                const { yLabel } = tooltipModel.dataPoints[0];\n                const { xLabel } = tooltipModel.dataPoints[0];\n                const label = tooltipModel.body[0].lines[0].split(':')[0];\n                changeState(`$${addCommas(yLabel)}`, `${label}-${xLabel}`);\n              }\n            },\n          },\n        },\n        plugins: [\n          {\n            afterInit(chart, _options) {\n              const yLabel = chart.data.datasets[0].data[0];\n              const xLabel = chart.data.labels[0];\n              const { label } = chart.data.datasets[0];\n              changeState(`$${addCommas(yLabel)}`, `${label}-${xLabel}`);\n            },\n          },\n        ],\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data]);\n\n  return (\n    <>\n      <div>\n        <p className=\"lead color-theme-1 mb-1 value\">{currentValue}</p>\n        <p className=\"mb-0 label text-small\">{currentLabel}</p>\n      </div>\n      <div className=\"chart\">\n        <canvas ref={chartContainer} />\n      </div>\n    </>\n  );\n};\n\nexport default Scatter;\n"]},"metadata":{},"sourceType":"module"}