{"version":3,"sources":["components/common/CustomSelectInput.js","helpers/ThemeColors.js","components/charts/config.js","components/charts/Doughnut.js","components/charts/Line.js","components/charts/Pie.js","views/app/dashboard/operator/ChargerDoughnut.js","components/charts/util.js","views/app/dashboard/operator/ConnectorDoughnut.js","views/app/dashboard/operator/BatteryStatusChart.js","components/cards/IconCard.js","components/carousel/GlideComponent.js","views/app/dashboard/manager/cardCarousel.js","views/app/dashboard/manager/SwapChart.js","views/app/dashboard/manager/EnergyChart.js","views/app/dashboard/manager/KPICards.js","views/app/dashboard/manager/StationDoughnut.js","views/app/gogo/start.js","containers/navs/Breadcrumb.js","components/wizard/BottomNavigation.js","components/wizard/TopNavigation.js","views/app/pages/UserMaster.js","views/app/pages/AddUser.js","views/app/pages/UpdateUser.js","views/app/pages/RoleMaster.js","views/app/pages/AddRole.js","views/app/pages/BatteryMaster.js","views/app/pages/AddBattery.js","views/app/pages/UpdateBattery.js","views/app/pages/EvMaster.js","views/app/pages/AddEV.js","views/app/pages/UpdateEv.js","views/app/pages/BulkChargerMaster.js","views/app/pages/AddBulkCharger.js","views/app/pages/UpdateBulkCharger.js","views/app/pages/FleetMaster.js","views/app/pages/AddFleet.js","views/app/pages/UpdateFleet.js","views/app/pages/OwnerMaster.js","views/app/pages/AddOwner.js","views/app/pages/UpdateOwner.js","views/app/pages/OEMMaster.js","views/app/pages/AddOEM.js","views/app/pages/UpdateOem.js","views/app/pages/SwappingStationMaster.js","views/app/pages/AddSwappingStation.js","views/app/pages/UpdateSwappingStation.js","views/app/pages/FaultMaster.js","views/app/pages/AddFault.js","views/app/pages/UpdateFault.js","views/app/pages/CountryMaster.js","views/app/pages/StateMaster.js","views/app/pages/CityMaster.js","views/app/dashboard/Admin_dashboard.js","views/app/dashboard/Mgr_dashboard.js","views/app/mapping/Evmapping.js","views/app/mapping/AddEvmapping.js","views/app/mapping/Batterymapping.js","views/app/mapping/AddBatterymapping.js","views/app/mapping/Chargermapping.js","views/app/mapping/Stationmapping.js","views/app/mapping/StationDetail.js","views/app/operations/Transaction.js","views/app/operations/Queue.js","views/app/inventory/Battery.js","views/app/inventory/AddBattery.js","views/app/inventory/UpdateBatteryInventory.js","views/app/inventory/Charger.js","views/app/inventory/AddCharger.js","views/app/inventory/UpdateChargerInventory.js","views/app/inventory/EvInventoryMaster.js","views/app/inventory/AddEvInventory.js","views/app/inventory/UpdateEvInventory.js","views/app/reports/batterySwappingNetworkReport.js","views/app/reports/batteryHistoricalData.js","views/app/reports/chargingSummary.js","views/app/reports/swappingTransaction.js","views/app/reports/swap.js","views/app/reports/weeklyBillingRef.js","views/app/reports/faultsAndAlerts.js","views/app/dashboard/operator/cardCarousel.js","views/app/dashboard/Operator_dashboard.js"],"names":["CustomSelectInput","props","customProps","autoCorrect","autoCapitalize","Input","ThemeColors","rootStyle","getComputedStyle","document","body","themeColor1","getPropertyValue","trim","themeColor2","themeColor3","themeColor4","themeColor5","themeColor6","themeColor1_10","themeColor2_10","themeColor3_10","themeColor4_10","themeColor5_10","themeColor6_10","primaryColor","foregroundColor","separatorColor","lineChartOptions","legend","display","position","responsive","maintainAspectRatio","tooltips","chartTooltip","plugins","datalabels","scales","yAxes","gridLines","lineWidth","color","drawBorder","ticks","beginAtZero","padding","xAxes","pieChartOptions","labels","usePointStyle","fontSize","title","layout","bottom","doughnutChartOptions","cutoutPercentage","Doughnut","data","shadow","chartContainer","useRef","current","Chart","defaults","doughnutWithShadow","doughnut","controllers","extend","draw","ease","prototype","call","this","ctx","chart","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","apply","arguments","restore","context","getContext","newChartInstance","destroy","type","options","centerTextPlugin","ref","Line","useState","setChartInstance","useEffect","lineWithShadow","line","stroke","Pie","pieWithShadow","pie","colors","ChargerDoughnut","controls","className","id","caret","outline","right","loading2","doughnutChartData1","blankMsg","doughnutChartData","datasets","label","borderColor","backgroundColor","borderWidth","setBlankMsg","value","setChargerChartData","oprntl","flty","titleFontColor","bodyFontColor","bodySpacing","xPadding","yPadding","cornerRadius","afterDatasetsUpdate","beforeDraw","width","chartArea","height","activeLabel","activeValue","dataset","meta","_meta","Object","keys","total","newtotal","reduce","a","b","activePercentage","parseFloat","toFixed","legendItems","hidden","pointAvailable","pointIndex","pointDataIndex","font","fillStyle","textBaseline","text","textX","Math","round","measureText","textY","fillText","text2","textX2","textY2","beforeEvent","event","firstPoint","getElementAtEvent","_index","_datasetIndex","ConnectorDoughnut","chartClass","loading4","polarAreaChartData1","polarAreaChartData","setConnectorChartData","in_use","available","faulty","setLoading4","BatteryStatusChart","cardClass","loading3","map","s","index","key","status","data1","setBatteryChartData","React","memo","icon","resizeTimeOut","mountTimeOut","GlideComponent","Component","constructor","super","onResize","bind","renderDots","componentDidMount","initGlide","componentDidUpdate","destroyGlide","componentWillUnmount","clearTimeout","setTimeout","glideCarousel","update","Glide","carousel","settings","direction","getDirection","mount","on","createEvent","initEvent","window","dispatchEvent","Children","count","children","dots","i","push","data-glide-dir","render","node","data-glide-el","hideNav","defaultProps","IconCardsCarousel","mgr_carousel_data","item","setStationCount","setChargerCount","setConnectorCount","setBatteriesCount","setEVCount","moment","require","today","add","format","dateLabel","Array","fill","subtract","total_last_7","SwapChartCard","showSwapChart","SwapChartData1","SwapChartData","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointBorderWidth","pointHoverRadius","setshowSwapChart","setSwapChartData","responseData","swapping","date","complete_swap_data","EnergyChartCard","abbreviateNumber","showEnergyChart","EnergyChartData1","EnergyChartData","false","setshowEnergyChart","setEnergyChartData","energy_sold","num","fixed","toPrecision","split","k","length","floor","min","slice","c","pow","abs","KPICards","last30","setKPIChartData","StationDoughnut","setStationChartData","Start","match","intl","forms","createRef","bottomNavHidden","setBottomNavHidden","bottomNavHidden1","setBottomNavHidden1","loading","setLoading","loading1","setLoading1","QR1","setQR1","QR2","setQR2","QR3","setQR3","QR4","setQR4","QR5","setQR5","QR6","setQR6","_otp","setOTPStart","qrscan_val1","setqrscan_val1","qrscan_val2","setqrscan_val2","qrscan_val3","setqrscan_val3","qrscan_otp","setqrscan_otp","qrscan_val4","setqrscan_val4","qrscan_val5","setqrscan_val5","qrscan_val6","setqrscan_val6","handleScanQR1","resp","handleScanQR2","replace","handleScanQR3","handleScanQR4","handleScanQR5","handleScanQR6","btnScanQR1","e","btnScanQR2","btnScanQR3","btnScanQR4","btnScanQR5","btnScanQR6","valid","name","val_id","fields","setFields","bevTokenData","driveVerifyDetail","createNotification","NotificationManager","error","createNotificationInfo","info","validateOTP","validateScanEV","validateScanEV1","validatedischarge_bt1","validatedischarge_bt2","validatecharge_bt1","validatecharge_bt2","asyncLoading","extraIndex","stopAsyncLoading","onClickNext","goToNext","steps","step","indexOf","formIndex","form","submitForm","then","newFields","values","errors","eval","validateScanEVAPICall","scanevVal","res","isDone","msg","catch","validateScanBatteryAPICall","batterytype","battery_sq","batteryqrval","validatePairEVAPICall","otp","ev_qr_code","respair","driver_verify_require","is_ev_verify_require","url","driver_verify_url","userid","driver_verify_user","password","driver_verify_pass","eligible_url","driver_verify_eligible_url","BevAuthToekn","driveToken","success","errorMessage","validity","authToken","successMessage","DriveEligibility","resdriver","availableSwaps","onClickPrev","goToPrev","validateStartOTPAPI","currentUser","getCurrentUser","axios","post","validateOTPAPI","headers","token","loginRes","validateScanEVAPI","scanevres","validatePairEVAPI","validateScanBatteryAPI","scanbatteryres","posturl","raw","request","get","console","log","messages","xxs","heading","disableNav","desc","innerRef","initialValues","scanev1","onSubmit","touched","onChange","target","validate","onClick","lg","md","sm","delay","onError","onScan","style","discharge_bt1","discharge_bt2","hideTopNav","hidebottomnav","previous","location","reload","prevLabel","nextLabel","actions","placeholder","scanev","charge_bt1","charge_bt2","injectIntl","getMenuTitle","sub","adminRoot","getUrl","path","BreadcrumbItems","substr","paths","filter","x","active","to","BreadcrumbContainer","BottomNavigation","next","TopNavigation","topNavClick","getClassName","stepItem","go","itemClick","UserMaster","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","modalVisible","setModalVisible","searchBy","setSearchBy","pageCount","setPageCount","lastPageCount","setLastPageCount","userList","setUserList","userID","setUserID","userToDeleleteId","setUserToDeleleteId","isLoading","setIsLoading","history","useHistory","useLocation","getUserListAPICall","userAlert","getUserListAPI","Authorization","response","last_page","deleteUserAPICall","userId","deleteUserAPI","user_id","userDeletedAlert","state","undefined","responseStatus","responseMsg","toggleModal","href","size","data-display","pageNumbers","renderPageList","isOpen","toggle","bordered","striped","colSpan","scope","username","contact_number","email","role_name","pathname","AddUser","selectedOptions","setSelectedOptions","userRolesList","setUserRolesList","buttonDisabled","setButtonDisabled","getUserRolesAPICall","getUserRolesAPI","userRoles","addUserAPICall","params","addUserAPI","addUserAlert","onDismissAlert","UserDetailsValidationSchema","yup","shape","required","matches","confirm_password","equals","validationSchema","roles","handleChange","handleBlur","handleSubmit","onBlur","components","classNamePrefix","disabled","goBack","UpdateUser","setName","setEmail","contactNumber","setContactNumber","setUsername","errorConfirmPassword","setErrorConfirmPassword","getUserByIdAPICall","getUserByIdAPI","tempData","updateUserAPICall","updateUserAPI","updateUserAlert","nullable","enableReinitialize","roleValue","isArray","RoleMaster","AddRole","BatteryMaster","collapse1","setCollapse1","collapse2","setCollapse2","collapse3","setCollapse3","collapse4","setCollapse4","collapse5","setCollapse5","collapse6","setCollapse6","collapse7","setCollapse7","infoModalVisible","setInfoModalVisible","batteryList","setBatteryList","batteryID","setBatteryID","batteryToDeleteId","setBatteryToDeleteId","batteryInfo","setBatteryInfo","batteryAllData","setBatteryAllData","makYear","setMakeYear","chemistry","setChemistry","getBatteryListAPICall","batteryAlert","getBatteryListAPI","deleteBatteryAPICall","batteryId","deleteBatterytAPI","battery_master_id","batteryDeletedAlert","toggleInfoModal","batteryItem","tempAllData","all_data","JSON","parse","make_year","month","year","oem_name","model_name","type_of_connector","minimum_delivered","nominal_capacity","minimum_capacity","series_cell","parallel_cell","cell_type","cell_make","total_cells","nominal_voltage","pack_configuration","bms_type","weight","dimension","remark_1","remark_2","operating_voltage_range","charging_mode","recommended_voltage","discharging_current","pulsed_discharge_current","standard_charging_current","cell_low_protection_level","cell_low_protection_recovery","cell_high_protection_level","cell_high_protection_recovery","battery_cells_efficiency","battery_cells_faliure","battery_pack_efficiency","battery_pack_faliure","bleeding_start_voltage","over_temp_pro_dis","over_temp_recovery_dis","over_temp_pro_charge","over_temp_recovery_charge","ec_remark_1","ec_remark_2","max_working_temp","storage_temp","temp_control_cell","temp_control_pack","temp_control_swapping","tc_remark_1","tc_remark_2","module_dimension","cabinet_design","degradation_sensors","power_connector","rs_can","casing","mc_remark_1","mc_remark_2","cell_over_voltage","cell_under_voltage","charging_over_current","discharging_over_current","output_short_circuit","cell_temp_protection_discharging","p_remark_1","p_remark_2","cycle_life","capacity_retention","depth_discharge","w_remark_1","w_remark_2","communication_prototcol","network_communication","i_remark_1","i_remark_2","AddBattery","oem","setOem","oemList","setOemList","setMonth","setYear","imageSelected","setImageSelected","imagePreview","setImagePreview","imageErrorFLag","setImageErrorFlag","imageKey","setImageKey","getOemAPICall","getOemAPI","oem_id","addBatteryAlert","addBatteryAPICall","addBatteryAPI","BatteryDetailsValidationSchema","getYear","yearList","temp","gc_remark_1","gc_remark_2","formData","FormData","append","stringify","isValid","accept","imageFile","fileExtension","pop","URL","createObjectURL","handleImageSelect","files","src","alt","UpdateBattery","imageFilePath","setImageFilePath","modelName","setModelName","connectorType","setConnectorType","gcRemark1","setGcRemark1","gcRemark2","setGcRemark2","nominalCapacity","setNominalCapacity","minimumCapacity","setMinimumCapacity","seriesCell","setSeriesCell","parallelCell","setParallelCell","cellType","setCellType","cellMake","setCellMake","totalCells","setTotalCells","nominalVoltage","setNominalVoltage","minimumDelivered","setMinimumDelivered","packConfiguration","setPackConfiguration","bmsType","setBmsType","setWeight","setDimension","operatingVoltageRange","setOperatingVoltageRange","chargingMode","setChargingMode","recommendedVoltage","setRecommendedVoltage","dischargingCurrent","setDischargingCurrent","pulsedDischargeCurrent","setPulsedDischargeCurrent","standardChargingCurrent","setStandardChargingCurrent","cellLowProtectionLevel","setCellLowProtectionLevel","cellLowProtectionRecovery","setCellLowProtectionRecovery","cellHighProtectionLevel","setCellHighProtectionLevel","cellHighProtectionRecovery","setCellHighProtectionRecovery","batteryCellsEfficiency","setBatteryCellsEfficiency","batteryCellsFaliure","setBatteryCellsFaliure","batteryPackEfficiency","setBatteryPackEfficiency","batteryPackFaliure","setBatteryPackFaliure","bleedingstartvoltage","setBleedingstartvoltage","overTempProDis","setOverTempProDis","overTempRecoveryDis","setOverTempRecoveryDis","overTempProCharge","setOverTempProCharge","overTempRecoveryCharge","setOverTempRecoveryCharge","maxWorkingTemp","setMaxWorkingTemp","storageTemp","setStorageTemp","tempControlCell","setTempControlCell","tempControlPack","setTempControlPack","tempControlSwapping","setTempControlSwapping","moduleDimension","setModuleDimension","cabinetDesign","setCabinetDesign","degradationSensors","setDegradationSensors","powerConnector","setPowerConnector","rsCan","setRsCan","setCasing","cellOverVoltage","setCellOverVoltage","cellUnderVoltage","setCellUnderVoltage","chargingOverCurrent","setChargingOverCurrent","dischargingOverCurrent","setDischargingOverCurrent","outputShortCircuit","setOutputShortCircuit","cellTempProtectionDischarging","setCellTempProtectionDischarging","cycleLife","setCycleLife","capacityRetention","setCapacityRetention","depthDischarge","setDepthDischarge","communicationPrototcol","setcommunicationPrototcol","networkCommunication","setNetworkCommunication","ecRemark1","setEcRemark1","ecRemark2","setEcRemark2","tcRemark1","setTcRemark1","tcRemark2","setTcRemark2","mcRemark1","setMcRemark1","mcRemark2","setMcRemark2","pRemark1","setPRemark1","pRemark2","setPRemark2","wRemark1","setWRemark1","wRemark2","setWRemark2","iRemark1","setIRemark1","iRemark2","setIRemark2","getBatteryByIdAPICall","updateBatteryAlert","getBatteryByIdAPI","allData","file_img","file_name_path","updateBatteryAPICall","updateBatteryAPI","EvMaster","evList","setEvList","evID","setEvID","evToDeleteId","setEvToDeleteId","getEvListAPICall","evAlert","getEvListAPI","deleteEvAPICall","evId","deleteEvAPI","ev_master_id","evDeletedAlert","vehicle_model","vehicle_make","vehicle_type","battery_capacity","fleet_operator_name","ev_driver","AddEV","fleetOpNames","setFleetOpNames","GetFleetOperatorAPICall","getFleetOperatorAPI","addEvAPICall","addEvAPI","evAddedAlert","EvDetailsValidationSchema","fleet_owner_id","fleet_operator_id","UpdateEv","vehicleModel","setVehicleModel","vehicleMake","setVehicleMake","vehicleType","setVehicleType","batteryCapacity","setBatteryCapacity","fleetOwner","setFleetOwner","evDriver","setEvDriver","remark1","setRemark1","remark2","setRemark2","getEvByIdAPICall","getEvByIdAPI","evUpdatedAlert","updateEvAPICall","updateEvAPI","BulkChargerMaster","bulkChargerList","setBulkChargerList","bulkChargerID","setBulkChargerID","bulkChargerToDeleteId","setBulkChargerToDeleteId","bulkChargerInfo","setBulkChargerInfo","bulkChargerAllData","setBulkChargerAllData","getBulkChargerListAPICall","bulkChargerAlert","getBulkChargerListAPI","deleteBulkChargerAPICall","bulkChargerId","deleteBulkChargerAPI","charger_master_id","bulkChargerDeletedAlert","bulkChargerItem","make","model","no_of_connetor","output_power","bulkCharger_master_id","battery_modules","battery_type","battery_slot_dimension","battery_slot_indicator","charging_connector","voltage","max_input_power","frequency","thd_power_factor","protection","charging_voltage","max_charging_current","power_of_each_battery_slot","full_load_power_of_each_slot","input_impedance","static_voltage_regulation","ripple_and_noise","output_protection","efficiency","acoustic_noise","operating_temp","humidity","ambient_pressure","temperature_sensor","accessories","battery_door_locking","thickness","colour","cable_entry","alarms","emergency_protection","cooling","ip_rating","mechanical","surge_protection","fire_safety","smoke_detector","thermal_detector","fire_suppresion_system","video_surevillance","water_level_sensor","mtbf","user_authentication","communication","indication","interface_mode","identification","user_interface","application_use","AddBulkCharger","addBulkChargerAlert","addBulkChargerAPICall","addBulkChargerAPI","BulkChargerDetailsValidationSchema","UpdateBulkCharger","batteryModules","setBatteryModules","batteryType","setBatteryType","batterySlotDimension","setBatterySlotDimension","noOfConnetor","setNoOfConnetor","batterySlotIndicator","setBatterySlotIndicator","chargingConnector","setChargingConnector","setVoltage","maxInputPower","setMaxInputPower","setFrequency","setCurrent","thdPowerFactor","setThdPowerFactor","setProtection","chargingVoltage","setChargingVoltage","outputPower","setOutputPower","maxChargingCurrent","setMaxChargingCurrent","powerOfEachBatterySlot","setPowerOfEachBatterySlot","fullLoadPowerOfEachSlot","setFullLoadPowerOfEachSlot","inputImpedance","setInputImpedance","staticVoltageRegulation","setStaticVoltageRegulation","rippleAndNoise","setRippleAndNoise","outputProtection","setOutputProtection","setEfficiency","acousticNoise","setAcousticNoise","operatingTemp","setOperatingTemp","setHumidity","ambientPressure","setAmbientPressure","setAccessories","batteryDoorLocking","setBatteryDoorLocking","setThickness","setColour","cableEntry","setCableEntry","setAlarms","emergencyProtection","setEmergencyProtection","setCooling","ipRating","setIpRating","setMechanical","surgeProtection","setSurgeProtection","fireSafety","setFireSafety","smokeDetector","setSmokeDetector","thermalDetector","setThermalDetector","fireSuppresionSystem","setFireSuppresionSystem","videoSurevillance","setVideoSurevillance","waterLevelSensor","setWaterLevelSensor","setMtbf","userAuthentication","setUserAuthentication","setDisplay","setCommunication","setIndication","interfaceMode","setInterfaceMode","setIdentification","userInterface","setUserInterface","applicationUse","setApplicationUse","getBulkChargerByIdAPICall","getBulkChargerByIdAPI","updateBulkChargerAlert","updateBulkChargerAPICall","updateBulkChargerAPI","FleetMaster","fleetOperatorList","setFleetOperatorList","fleetOperatorID","setFleetOperatorID","fleetOperatorToDeleteId","setFleetOperatorToDeleteId","getFleetOperatorListAPICall","fleetOperatorAlert","getFleetOperatorListAPI","deleteFleetOperatorAPICall","fleetOperatorId","deleteFleetOperatorAPI","fleetOperatorDeletedAlert","users_name","address","contact_person","contact_email","AddFleet","fleetOperatorUsers","setFleetOperatorUsers","getFleetOperatorUsersAPICall","getUsersByRolesAPI","user_role","users","fleetAddedAlert","addFleetOperatorAPICall","addFleetOperatorAPI","FleetOperatorDetailsValidationSchema","usersSelected","isMulti","UpdateFleet","contactPerson","setContactPerson","contactEmail","setContactEmail","setAddress","getFleetOperatorByIdAPICall","getFleetOperatorByIdAPI","fleetUpdatedAlert","updateFleetOperatorAPICall","updateFleetOperatorAPI","OwnerMaster","ownerList","setOwnerList","ownerID","setOwnerID","ownerToDeleleteId","setOwnerToDeleleteId","getOwnerListAPICall","ownerAlert","getOwnerListAPI","deleteOwnerAPICall","ownerId","deleteOwnerAPI","owner_master_id","ownerDeletedAlert","remark","AddOwner","addOwnerAPICall","addOwnerAPI","ownerAddedAlert","OwnerDetailsValidationSchema","UpdateOwner","ownerName","setOwnerName","setRemark","getOwnerByIdAPICall","getOwnerByIdAPI","ownerUpdatedAlert","updateOwnerAPICall","updateOwnerAPI","OEMMaster","oemID","setOemID","oemToDeleteId","setOemToDeleteId","getOemListAPICall","oemAlert","getOemListAPI","deleteOemAPICall","oemId","deleteOemAPI","oemDeletedAlert","AddOEM","oemUsers","setOemUsers","setType","getOemUsersAPICall","oemAddedAlert","addOemAPICall","addOemAPI","OemDetailsValidationSchema","UpdateOEM","getOemByIdAPICall","getOemUsersAPI","oemUpdatedAlert","getOemByIdAPI","updateOemAPICall","updateOemAPI","SwappingStationMaster","stationList","setStationList","stationID","setStationID","stationToDeleteId","setStationToDeleteId","getSwappingStationListAPI","stationAlert","getSwappingStationAPI","deleteSwappingStationAPICall","stationId","deleteSwappingStationAPI","hub_master_id","stationDeletedAlert","ev_capacity","city_name","state_name","country_name","station_id","AddSwappingStation","countryList","setCountryList","stateList","setStateList","cityList","setCityList","countryId","setCountryId","stateId","setStateId","cityId","setCityId","getCountryNamesAPICall","getCountriesAPI","getStateNamesAPICall","country","getStatesByCountryAPI","country_id","getCityNamesAPICall","getCitiesByStateAPI","state_id","addSwappingStationAPICall","addSwappingStationAPI","stationAddedAlert","StationDetailsValidationSchema","latitude","longitude","city_id","handleCountrySelect","handleStateSelect","handleCitySelect","city","UpdateSwappingStation","stationName","setStationName","evCapacity","setEvCapacity","setLongitude","setLatitude","stationAddress","setStationAddress","getStationByIdAPICall","getStationByIdAPI","stationUpdatedAlert","updateSwappingStationAPICall","updateSwappingStationAPI","FaultMaster","faultList","setFaultList","faultID","setFaultID","faultToDeleleteId","setFaultToDeleleteId","getFaultListAPICall","faultAlert","getFaultListAPI","deleteFaultAPICall","faultId","deleteFaultAPI","fault_master_id","faultDeletedAlert","bit_position","AddFault","setOemId","errorTypeFlag","setErrorTypeFlag","errorOemFlag","setErrorOemFlag","typeId","faultAddedAlert","addFaultAPICall","addFaultAPI","FaultDetailsValidationSchema","handleTypeSelect","typeValue","handleTypeBlur","handleOemSelect","oemValue","handleOemBlur","UpdateFault","faultTitle","setFaultTitle","setPosition","getFaultByIdAPICall","faultUpdatedAlert","getFaultByIdAPI","updateFaultAPICall","updateFaultAPI","CountryMaster","listFlag","setListFlag","toggleChange","setToggleChange","modalUpdateVisible","setModalUpdateVisible","buttonState","setButtonState","countryName","setCountryName","getCountryListAPICall","getCountryListAPI","getCountryByIdAPICall","getCountryByIdAPI","country_master_id","countryAlert","addCountryAPICall","addCountryAPI","updateCountryAPICall","updateCountryAPI","deleteCountryAPICall","deleteCountryAPI","toggleUpdateModal","CountryDetailsValidationSchema","StateMaster","stateName","setStateName","getStateListAPICall","getStateListAPI","stateAlert","getStateByIdAPICall","getStateByIdAPI","state_master_id","addStateAPICall","addStateAPI","updateStateAPICall","updateStateAPI","deleteStateAPICall","deleteStateAPI","StateDetailsValidationSchema","CityMaster","cityName","setCityName","getCityListAPICall","getCityListAPI","cityAlert","getCityByIdAPICall","getCityByIdAPI","city_master_id","addCityAPICall","addCityAPI","updateCityAPICall","updateCityAPI","deleteCityAPICall","deleteCityAPI","CityDetailsValidationSchema","Admin_dashboard","stationNameData","setStationNameData","setSwappingChartData","swappingDropHeader","setSwappingDropHeader","swappingStation","setSwappingStation","setChargerData","chargerStation","slotStation","GetStationNamesAPICall","GetDashboardDataAPICall","getStationsAPI","getDashboardDataAPI","station","batteries","chargers","ev","slots","in_charging","charged","discharged","out","operational","inuse","cumulative","misc","unit_30","avg_unit_per_ev_per_day","daily","swap_30","incomplete_swap_data","handleSwappingStationSelect","currentTarget","textContent","header","xl","Mgr_dashboard","Evmapping","evData","setEvData","selectedHub","setSelectedHub","updateEvMappingId","setUpdateEvMappingId","evType","setEvType","deleteEvMappingId","setDeleteEvMappingId","isUpdate","setIsUpdate","alertModalVisible","setAlertModalVisible","alertModalMsg","setAlertModalMsg","alertModalColor","setAlertModalColor","getEvMappingAPICall","getEvMappingAPI","getEvInventoryByIdAPICall","evInventoryId","getEvInventoryByIdAPI","ev_inventory_id","hub_id","mapEvAPICall","evMappingId","hubId","mapEvAPI","evMappingDeletedAlert","updateEvMappingDetails","e_qr_code","station_name","vehicle_vin","AddEvmapping","postdata","alert","Batterymapping","batteryMappingList","setBatteryMappingList","deleteBatteryId","setDeleteBatteryId","updateBatteryId","setUpdateBatteryId","setStationId","getBatteryMappingAPICall","getBatteryMappingAPI","mapBatteryAPICall","mapBatteryAPI","battery_inventory_id","updateBatteryMappingDetails","b_qr_code","serial_number","bin","soc","handleStationChange","AddBatterymapping","Chargermapping","chargerMappingList","setChargerMappingList","chargerType","setChargerType","deleteChargerId","setDeleteChargerId","updateChargerId","setUpdateChargerId","getChargerMappingAPICall","getChargerMappingAPI","mapChargerAPICall","chargerId","mapChargerAPI","charger_inventory_id","chargerDeletedAlert","updateChargerMappingDetails","qr_code","no_of_slot","owner_name","charger_id","Stationmapping","mapStation","StationDetail","unmapAlertVisible","setUnmapAlertVisible","fleetOutline","setFleetOutline","operatorOutline","setOperatorOutline","managerOutline","setManagerOutline","userRole","setUserRole","mappingId","setMappingId","unmapId","setUnmapId","mappedList","setMappedList","unmappedList","setUnmappedList","getMappingListByRoleAPICall","getFleetOperatorMappingListAPICall","getOperatorMappingListAPICall","getManagerMappingListAPICall","getFleetOperatorMappingListAPI","mapped_fleet_operator","other_fleet_operator","getUserMappingListByRoleAPI","mapped_user","other_user","MapByRoleAPICall","idToMap","mapstate","MapStationWithFleetAPICall","MapStationWithOperatorAPICall","MapStationWithManagerAPICall","fleetId","mapFleetOperatorAPI","mapAlert","unMapAlert","mapByRoleAPI","unMapID","sortDetail","hubName","hub_name","fleet_id","Transaction","transactionList","setTransactionList","status_val","getTransactionAPICall","getTransactionAPI","transaction_log_id","operator","discharged_battery_bin_1","discharged_battery_soc_1","discharged_battery_bv_1","discharged_battery_rec_1","charged_battery_bin_1","charged_battery_soc_1","charged_battery_bv_1","charged_battery_rec_1","discharged_battery_bin_2","discharged_battery_soc_2","discharged_battery_bv_2","discharged_battery_rec_2","charged_battery_bin_2","charged_battery_soc_2","charged_battery_bv_2","charged_battery_rec_2","end_otp","Queue","getQueueLogAPICall","getQueueLogAPI","queue_master_id","registration_no","discharged_b1_qr_code","charged_b1_qr_code","discharged_b2_qr_code","charged_b2_qr_code","Battery","faultModalVisible","setFaultModalVisible","batteryInventoryList","setBatteryInventoryList","batteryInventoryID","setBatteryInventoryID","batteryInventoryToDeleteId","setBatteryInventoryToDeleteId","getBatteryInventoryListAPICall","batteryInventoryAlert","getBatteryInventoryListAPI","deleteBatteryInventoryAPICall","batteryInventoryId","deleteBatteryInventoryAPI","batteryInventoryDeletedAlert","toggleFaultModal","faults","imei","bv","rec","lat","lon","total_alarm","alarm_list","ownerNameData","setOwnerNameData","batteryData","setBatteryData","GetOwnerNamesAPICall","GetBatteryDataAPICall","getOwnersAPI","getBatteryDataAPI","addBatteryInventoryAPICall","addBatteryInventoryAPI","addBatteryInventoryAlert","BatteryInventoryDetailsValidationSchema","own_by","UpdateBatteryInventory","setBin","serialNumber","setSerialNumber","bQrCode","setBQrCode","setHubId","ownBy","setOwnBy","batteryMasterId","setBatteryMasterId","setImei","setSoc","setBv","setRec","setLat","setLon","getBatteryInventoryByIdAPICall","getBatteryInventoryByIdAPI","updateBatteryInventoryAPICall","updateBatteryInventoryAPI","UpdateBatteryInventoryAlert","Charger","chargerInventoryList","setChargerInventoryList","chargerInventoryID","setChargerInventoryID","chargerInventoryToDeleteId","setChargerInventoryToDeleteId","getChargerInventoryListAPICall","chargerInventoryAlert","getChargerInventoryListAPI","deleteChargerInventoryAPICall","chargerInventoryId","deleteChargerInventoryAPI","chargerInventoryDeletedAlert","AddCharger","chargerMasterData","setChargerMasterData","GetChargerMasterAPICall","getChargerAPI","addChargerInventoryAPICall","addChargerInventoryAPI","addChargerInventoryAlert","ChargerInventoryDetailsValidationSchema","numberOfSlots","of","slot_id","slots_data","setValues","field","previousNumber","parseInt","splice","onChangeSlots","ticket","ticketErrors","ticketTouched","component","UpdateChargerInventory","setChargerId","qrCode","setQrCode","chargerMasterId","setChargerMasterId","noOfSlot","setNoOfSlot","slotData","setSlotData","getChargerInventoryByIdAPICall","getChargerInventoryByIdAPI","updateChargerInventoryAPICall","updateChargerInventoryAPI","updateChargerInventoryAlert","EvInventoryMaster","evInventoryList","setEvInventoryList","evInventoryID","setEvInventoryID","evInventoryToDeleteId","setEvInventoryToDeleteId","getEvInventoryListAPICall","evInventoryAlert","getEvInventoryListAPI","deleteEvInventoryAPICall","deleteEvInventoryAPI","evInventoryDeletedAlert","vechicle_id","AddEvInventory","GetEvDataAPICall","getEvAPI","addEvInventoryAPICall","addEvInventoryAPI","addEvInventoryAlert","EvInventoryDetailsValidationSchema","UpdateEvInventory","eQrCode","setEQrCode","evMasterId","setEvMasterId","registrationNo","setRegistrationNo","vechicleId","setVechicleId","vechicleVin","setVechicleVin","updateEvInventoryAPICall","updateEvInventoryAPI","updateEvInventoryAlert","BatterySwappingNetworkReport","stationNames","setStationNames","report","setReport","getStationsByCityAPI","getBSNReportAPICall","page","bsnReportAPI","downloadBSNReportAPICall","downloadBsnReportAPI","link","createElement","file","appendChild","click","removeChild","total_ev","total_charger","total_connector","total_batteries","BatteryHistoricalData","fromDate","setFromDate","toDate","setToDate","downloadExcelReport","tempFromDate","tempToDate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","from_date","to_date","historyReportAPI","showTimeInput","placeholderText","selected","dateFormat","ChargingSummary","fleetSelectedOptions","setFleetSelectedOptions","stationSelectedOptions","setStationSelectedOptions","stations","fleet","ChargingSummaryDetailsValidationSchema","connector_id","fleetSelected","stationSelected","SwappingTransaction","setFleetOperatorId","evQrCode","setEvQrCode","getSwappingTransactionReportAPICall","operator_id","swappingTransactionReportAPI","downloadSwappingReportAPICall","downloadSwappingReportAPI","rowSpan","start_time","discharge1_kwh","end_time","charge1_kwh","diff_time","diffcharge1","discharge2_kwh","charge2_kwh","diffcharge2","SwapReport","getSwapReportAPICall","swapReportAPI","downloadSwapReportAPICall","downloadSwapReportAPI","WeeklyBillingRef","buttonType","setButtonType","fromDateError","setFromDateError","toDateError","setToDateError","dates","setDates","reportParams","setReportParams","getWeeklyBillRefReportAPICall","weeklyBillRefReportAPI","energy_data","selected_week_dates","downloadWeeklyBillRefReportAPICall","downloadWeeklyBillRefReportAPI","Day_1","Day_2","Day_3","Day_4","Day_5","Day_6","Day_7","total_energy_supp","total_bill_amount","FaultsAndAlerts","getFaultReportAPICall","faultReportAPI","downloadFaultReportAPICall","downloadfaultReportAPI","owner_id","occur_date","occur_time","IconCard","Operator_dashboard","batteryStatus","setRefresh","battery_satus_id","Row"],"mappings":"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","file":"static/js/start.c166c880.chunk.js","sourcesContent":["import React from 'react';\nimport { components } from 'react-select';\n\nconst CustomSelectInput = (props) => {\n  const customProps = { ...props };\n  delete customProps.autoCorrect;\n  delete customProps.autoCapitalize;\n  return <components.Input {...customProps} />;\n};\n\nexport default CustomSelectInput;\n","export const ThemeColors = () => {\n  const rootStyle = getComputedStyle(document.body);\n  return {\n    themeColor1: rootStyle.getPropertyValue('--theme-color-1').trim(),\n    themeColor2: rootStyle.getPropertyValue('--theme-color-2').trim(),\n    themeColor3: rootStyle.getPropertyValue('--theme-color-3').trim(),\n    themeColor4: rootStyle.getPropertyValue('--theme-color-4').trim(),\n    themeColor5: rootStyle.getPropertyValue('--theme-color-5').trim(),\n    themeColor6: rootStyle.getPropertyValue('--theme-color-6').trim(),\n    themeColor1_10: rootStyle.getPropertyValue('--theme-color-1-10').trim(),\n    themeColor2_10: rootStyle.getPropertyValue('--theme-color-2-10').trim(),\n    themeColor3_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor4_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor5_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor6_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    primaryColor: rootStyle.getPropertyValue('--primary-color').trim(),\n    foregroundColor: rootStyle.getPropertyValue('--foreground-color').trim(),\n    separatorColor: rootStyle.getPropertyValue('--separator-color').trim(),\n  };\n};\n","import { chartTooltip } from './util';\n\nexport const lineChartOptions = {\n  legend: {\n    display: false,\n    position: 'bottom',\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  tooltips: chartTooltip,\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n           beginAtZero: true,\n          // stepSize: 10,\n          // min: 0,\n          // max: 100,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: true,\n        },\n      },\n    ],\n  },\n};\nexport const polarAreaChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scale: {\n    ticks: {\n      display: false,\n    },\n  },\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const areaChartOptions = {\n  legend: {\n    display: false,\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  tooltips: chartTooltip,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 10,\n          min: 10,\n          max: 100,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n  },\n};\n\nexport const scatterChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 20,\n          min: -80,\n          max: 80,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n        },\n      },\n    ],\n  },\n  tooltips: chartTooltip,\n\n  // legend: {\n  //   position: 'bottom',\n  //   labels: {\n  //     padding: 30,\n  //     usePointStyle: true,\n  //     fontSize: 12,\n  //   },\n  // },\n  // responsive: true,\n  // maintainAspectRatio: false,\n  // scales: {\n  //   yAxes: [\n  //     {\n  //       gridLines: {\n  //         display: true,\n  //         lineWidth: 1,\n  //         color: 'rgba(0,0,0,0.1)',\n  //         drawBorder: false,\n  //       },\n  //       ticks: {\n  //         beginAtZero: true,\n  //         stepSize: 20,\n  //         min: -80,\n  //         max: 80,\n  //         padding: 20,\n  //       },\n  //     },\n  //   ],\n  //   xAxes: [\n  //     {\n  //       gridLines: {\n  //         display: true,\n  //         lineWidth: 1,\n  //         color: 'rgba(0,0,0,0.1)',\n  //       },\n  //     },\n  //   ],\n  // },\n};\n\nexport const barChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 100,\n          min: 300,\n          max: 800,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n  },\n  tooltips: chartTooltip,\n};\n\nexport const radarChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scale: {\n    ticks: {\n      display: false,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const pieChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  title: {\n    display: false,\n  },\n  layout: {\n    padding: {\n      bottom: 20,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const doughnutChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  title: {\n    display: false,\n  },\n  cutoutPercentage: 80,\n  layout: {\n    padding: {\n      bottom: 20,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const smallLineChartOptions = {\n  layout: {\n    padding: {\n      left: 5,\n      right: 5,\n      top: 10,\n      bottom: 10,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n        display: false,\n      },\n    ],\n    xAxes: [\n      {\n        display: false,\n      },\n    ],\n  },\n};\n","/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { centerTextPlugin } from './util';\nimport { doughnutChartOptions } from './config';\n\nconst Doughnut = ({ data, shadow = false }) => {\n  const chartContainer = useRef(null);\n  // const [, setChartInstance] = useState(null);\n  if (chartContainer && chartContainer.current) {\n    if (shadow) {\n      Chart.defaults.doughnutWithShadow = Chart.defaults.doughnut;\n      Chart.controllers.doughnutWithShadow = Chart.controllers.doughnut.extend(\n        {\n          draw(ease) {\n            Chart.controllers.doughnut.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.15)';\n            ctx.shadowBlur = 10;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 10;\n            ctx.responsive = true;\n            Chart.controllers.doughnut.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        }\n      );\n    }\n    const context = chartContainer.current.getContext('2d');\n    let newChartInstance;\n    if(newChartInstance){newChartInstance.destroy()};\n    newChartInstance = new Chart(context, {\n      type: shadow ? 'doughnutWithShadow' : 'doughnut',\n      options: doughnutChartOptions,\n      plugins: [centerTextPlugin],\n      data,\n    });\n    // setChartInstance(newChartInstance);\n  }\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default Doughnut;\n","/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { lineChartOptions } from './config';\n\nconst Line = ({ data, shadow = false }) => {\n  \n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      if (shadow) {\n        Chart.controllers.lineWithShadow = Chart.controllers.line;\n        Chart.controllers.lineWithShadow = Chart.controllers.line.extend({\n          draw(ease) {\n            Chart.controllers.line.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.15)';\n            ctx.shadowBlur = 10;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 10;\n            ctx.responsive = true;\n            ctx.stroke();\n            Chart.controllers.line.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        });\n      }\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: shadow ? 'lineWithShadow' : 'line',\n        options: lineChartOptions,\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data, shadow]);\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default Line;\n","/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { pieChartOptions } from './config';\n\nconst Pie = ({ data, shadow = false }) => {\n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      if (shadow) {\n        Chart.defaults.pieWithShadow = Chart.defaults.pie;\n        Chart.controllers.pieWithShadow = Chart.controllers.pie.extend({\n          draw(ease) {\n            Chart.controllers.pie.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.15)';\n            ctx.shadowBlur = 10;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 10;\n            ctx.responsive = true;\n            Chart.controllers.pie.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        });\n      }\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: shadow ? 'pieWithShadow' : 'pie',\n        options: pieChartOptions,\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data, shadow]);\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default Pie;\n","import React from 'react';\nimport { Card, CardBody, CardTitle, UncontrolledDropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu, Spinner} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { DoughnutChart } from '../../../../components/charts';\n\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\n\nconst colors = ThemeColors();\n\n\nconst ChargerDoughnut =  ({ controls = false })  => {\n  return (\n    <Card className=\"dashboard-my-card\">\n      <CardBody>\n         <CardTitle>\n          <IntlMessages id=\"dashboard.charger\" />\n          {controls && (\n          <div className=\"btn-group float-right float-none-xs \">\n            <UncontrolledDropdown>\n              <DropdownToggle caret color=\"primary\" className=\"btn-xs\" outline>\n                <IntlMessages id=\"dashboard.all\" />\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.operational\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.faulty\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        )}\n        </CardTitle>\n      {loading2 && (\n                  <div className=\"dashboard-donut-chart\">\n                  <DoughnutChart  data={doughnutChartData1} />\n                </div>\n              ) } { (!loading2 && !blankMsg) &&\n      <div className=\"dashboard-donut-chart\">\n        <DoughnutChart  data={doughnutChartData} />\n      </div>\n}\n{ blankMsg &&\n      <div className=\"dashboard-donut-chart text-center\">\n        Data Not Found\n      </div>\n}\n      </CardBody>\n    </Card>\n  );\n};\nconst doughnutChartData1 = {\n  labels: ['Operational', 'Faulty'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [ colors.themeColor2, colors.themeColor1],\n      backgroundColor: [\n        colors.themeColor3_10,\n        colors.themeColor2_10,\n      ],\n      borderWidth: 2,\n      data: [1, 0],\n    },\n  ],\n};\nconst doughnutChartData = {\n  labels: ['Operational', 'Faulty'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [ colors.themeColor2, colors.themeColor1],\n      backgroundColor: [\n        colors.themeColor3_10,\n        colors.themeColor2_10,\n      ],\n      borderWidth: 2,\n      data: [1, 0],\n    },\n  ],\n};\nlet loading2=true;\nlet blankMsg=false;\nconst  setLoading2 = (value) => {loading2=value};\nconst  setBlankMsg = (value) => {blankMsg=value};\n//const setChargerChartData = (index,value) => {doughnutChartData.datasets[0].data[index]=value;};\nconst setChargerChartData = (oprntl,flty) => {\n  doughnutChartData.datasets[0].data[0]=oprntl;\n  doughnutChartData.datasets[0].data[1]=flty;\n\n  if(oprntl==0 && flty==0)\n  {\n    setBlankMsg(true);\n    \n  }else\n  {\n   setBlankMsg(false);\n  }\n  setLoading2(false);\n  \n\n};\n\nexport  {ChargerDoughnut,setLoading2,setChargerChartData};\n","import { ThemeColors } from '../../helpers/ThemeColors';\n\nexport const chartTooltip = {\n  backgroundColor: ThemeColors().foregroundColor,\n  titleFontColor: ThemeColors().primaryColor,\n  borderColor: ThemeColors().separatorColor,\n  borderWidth: 0.5,\n  bodyFontColor: ThemeColors().primaryColor,\n  bodySpacing: 10,\n  xPadding: 15,\n  yPadding: 15,\n  cornerRadius: 0.15,\n};\n\nexport const centerTextPlugin = {\n  afterDatasetsUpdate(chart) {},\n  beforeDraw(chart) {\n    const width = chart.chartArea.right;\n    const height = chart.chartArea.bottom;\n    const { ctx } = chart.chart;\n    ctx.restore();\n\n    let activeLabel = chart.data.labels[0];\n    let activeValue = chart.data.datasets[0].data[0];\n    let dataset = chart.data.datasets[0];\n    let meta = dataset._meta[Object.keys(dataset._meta)[0]];\n    let { total } = meta;\n\n    let newtotal = (chart.data.datasets[0].data)?chart.data.datasets[0].data.reduce((a, b) => a+b):total;\n\n    let activePercentage = parseFloat(((activeValue / newtotal) * 100).toFixed(1));\n    activePercentage = chart.legend.legendItems[0].hidden\n      ? 0\n      : activePercentage;\n    if (chart.pointAvailable) {\n      activeLabel = chart.data.labels[chart.pointIndex];\n      activeValue =\n        chart.data.datasets[chart.pointDataIndex].data[chart.pointIndex];\n\n      dataset = chart.data.datasets[chart.pointDataIndex];\n      meta = dataset._meta[Object.keys(dataset._meta)[0]];\n      total = (chart.data.datasets[0].data)?chart.data.datasets[0].data.reduce((a, b) => a+b):meta.total;\n      activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1));\n      activePercentage = chart.legend.legendItems[chart.pointIndex].hidden\n        ? 0\n        : activePercentage;\n    }\n\n    ctx.font = '36px Nunito, sans-serif';\n    ctx.fillStyle = ThemeColors().primaryColor;\n    ctx.textBaseline = 'middle';\n\n    const text = `${activePercentage}%`;\n    const textX = Math.round((width - ctx.measureText(text).width) / 2);\n    const textY = height / 2;\n    ctx.fillText(text, textX, textY);\n\n    ctx.font = '14px Nunito, sans-serif';\n    ctx.textBaseline = 'middle';\n\n    const text2 = activeLabel;\n    const textX2 = Math.round((width - ctx.measureText(text2).width) / 2);\n    const textY2 = height / 2 - 30;\n    ctx.fillText(text2, textX2, textY2);\n\n    ctx.save();\n  },\n  beforeEvent(chart, event, options) {\n    const firstPoint = chart.getElementAtEvent(event)[0];\n\n    if (firstPoint) {\n      chart.pointIndex = firstPoint._index;\n      chart.pointDataIndex = firstPoint._datasetIndex;\n      chart.pointAvailable = true;\n    }\n  },\n};\n","import React from 'react';\nimport { Card, CardBody, CardTitle, UncontrolledDropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu, } from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { PolarAreaChart } from '../../../../components/charts';\nimport { DoughnutChart } from '../../../../components/charts';\nimport { PieChart } from '../../../../components/charts';\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\n\nconst colors = ThemeColors();\n\n\nconst ConnectorDoughnut =  ({ chartClass = 'dashboard-donut-chart', controls = false })  => {\n  return (\n    <Card className=\"dashboard-my-card\">\n      <CardBody>\n        <CardTitle>\n          <IntlMessages id=\"dashboard.connectors\" />\n          {controls && (\n          <div className=\"btn-group float-right float-none-xs \">\n            <UncontrolledDropdown>\n              <DropdownToggle caret color=\"primary\" className=\"btn-xs\" outline>\n                <IntlMessages id=\"dashboard.all\" />\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.in\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.out\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        )}\n        </CardTitle>\n      \n       \n        \n        {(loading4 ) && (\n                   <div className={chartClass}>\n                   <PieChart  data={polarAreaChartData1} />\n                 </div>\n                ) } { (!loading4 && !blankMsg) &&\n                  <div className={chartClass}>\n                  <PieChart  data={polarAreaChartData} />\n                </div>\n}\n{ blankMsg &&\n      <div className=\"dashboard-donut-chart text-center\">\n        Data Not Found\n      </div>\n}\n      </CardBody>\n    </Card>\n  );\n};\nconst polarAreaChartData1 = {\n  labels: ['In Use', 'Available', 'Faulty'],\n  datasets: [\n    {\n      data: [33, 33,34],\n      borderWidth: 2,\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\n      backgroundColor: [\n        colors.themeColor1_10,\n        colors.themeColor2_10,\n        colors.themeColor3_10,\n        \n      ],\n    },\n  ],\n};\nconst polarAreaChartData = {\n  labels: ['In Use', 'Available', 'Faulty'],\n  datasets: [\n    {\n      data: [33, 33,34],\n      borderWidth: 2,\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3, colors.themeColor4],\n      backgroundColor: [\n        colors.themeColor1_10,\n        colors.themeColor2_10,\n        colors.themeColor3_10,\n        colors.themeColor4_10,\n      ],\n    },\n  ],\n};\nconst  setBlankMsg = (value) => {blankMsg=value};\nlet blankMsg=false;\n\nconst setConnectorChartData = (in_use,available,faulty) => {\n\n if(in_use==0 && available==0 && faulty==0)\n {\n   setBlankMsg(true);\n   \n }else\n {\n  setBlankMsg(false);\n }\n\n  polarAreaChartData.datasets[0].data[0]=in_use;\n  polarAreaChartData.datasets[0].data[1]=available;\n  polarAreaChartData.datasets[0].data[2]=faulty;\n \n  // polarAreaChartData.labels[0]=\"In Use(\"+in_use+\")\";\n  // polarAreaChartData.labels[1]=\"Available(\"+available+\")\";\n  // polarAreaChartData.labels[2]=\"Faulty(\"+faulty+\")\";\n\n\n  setLoading4(false);\n  \n\n};\nlet loading4=true;\nconst  setLoading4 = (value) => {loading4=value};\n\nexport  {ConnectorDoughnut,setConnectorChartData};\n","import React from 'react';\nimport { Card, CardBody, CardTitle ,Progress,Spinner} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\n\n\nconst BatteryStatusChart =  ({ cardClass = 'dashboard-donut-chart' }) => {\n  return (\n    <Card className={cardClass}>\n      <CardBody>\n        <CardTitle>\n          <IntlMessages id=\"dashboard.batteries\" />\n        </CardTitle>\n        {loading3 && (\n                  <div className=\"text-center pt-3\">\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"dashboard.loading\" />\n                    </p>\n                  </div>\n                ) }\n        {(!loading3 && !blankMsg) && data.map((s, index) => {\n          return (\n            <div key={index} className=\"mb-4\">\n              <p className=\"mb-2\">\n                {s.title}\n                <span className=\"float-right text-muted\">\n                  {s.status}/{s.total}\n                </span>\n              </p>\n              <Progress value={(s.status / s.total) * 100} />\n            </div>\n          );\n        })}\n\n{(blankMsg) && data1.map((s, index) => {\n          return (\n            <div key={index} className=\"mb-4\">\n              <p className=\"mb-2\">\n                {s.title}\n                <span className=\"float-right text-muted\">\n                  {s.status}/{s.total}\n                </span>\n              </p>\n              <Progress value={(s.status / s.total) * 100} />\n            </div>\n          );\n        })}\n\n        \n        \n      </CardBody>\n    </Card>\n  );\n};\nconst  setBlankMsg = (value) => {blankMsg=value};\nlet blankMsg=false;\nconst data = [\n  {\n    title: 'In Charge',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Charged',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Discharged',\n    total: 0,\n    status: 0,\n    \n  },\n  {\n    title: 'Faulty',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Out',\n    total: 0,\n    status: 0,\n  },\n \n];\nconst data1 = [\n  {\n    title: 'In Charge',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Charged',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Discharged',\n    total: 0,\n    status: 0,\n    \n  },\n  {\n    title: 'Faulty',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Out',\n    total: 0,\n    status: 0,\n  },\n \n];\n\nconst setBatteryChartData = (index,total,status) => {data[index].status=status;data[index].total=total;\n\n  setBlankMsg(false);\n if(data[0].total==0 && data[1].total==0 && data[2].total==0 && data[3].total==0 && data[4].total==0)\n {\n   setBlankMsg(true);\n   \n }\n};\nlet loading3= false;\nconst  setLoading3 = (value) => {loading3=value};\n\nexport  {BatteryStatusChart,setBatteryChartData,setLoading3};\n","import React from 'react';\nimport { Card, CardBody } from 'reactstrap';\nimport IntlMessages from '../../helpers/IntlMessages';\n\nconst IconCard = ({ className = 'mb-4', icon, title, value }) => {\n  return (\n    <div className={`icon-row-item ${className}`}>\n      <Card>\n        <CardBody className=\"text-center\">\n          <i className={icon} />\n          <p className=\"card-text font-weight-semibold mb-0\">\n            <IntlMessages id={title} />\n          </p>\n          <p className=\"lead text-center\">{value}</p>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default React.memo(IconCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Glide from '@glidejs/glide';\nimport { getDirection } from '../../helpers/Utils';\nimport '@glidejs/glide/dist/css/glide.core.min.css';\n\nlet resizeTimeOut = -1;\nlet mountTimeOut = -1;\n\nclass GlideComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onResize = this.onResize.bind(this);\n    this.renderDots = this.renderDots.bind(this);\n  }\n\n  componentDidMount() {\n    this.initGlide();\n  }\n\n  componentDidUpdate() {\n    this.destroyGlide();\n    this.initGlide();\n  }\n\n  componentWillUnmount() {\n    this.destroyGlide();\n  }\n\n  onResize() {\n    clearTimeout(resizeTimeOut);\n    resizeTimeOut = setTimeout(() => {\n      this.glideCarousel.update();\n      resizeTimeOut = -1;\n    }, 500);\n  }\n\n  initGlide() {\n    this.glideCarousel = new Glide(this.carousel, {\n      ...this.props.settings,\n      direction: getDirection().direction,\n    });\n    this.glideCarousel.mount();\n    this.glideCarousel.on('resize', this.onResize);\n    mountTimeOut = setTimeout(() => {\n      const event = document.createEvent('HTMLEvents');\n      event.initEvent('resize', false, false);\n      window.dispatchEvent(event);\n    }, 500);\n  }\n\n  destroyGlide() {\n    clearTimeout(resizeTimeOut);\n    clearTimeout(mountTimeOut);\n    if (this.glideCarousel) {\n      this.glideCarousel.destroy();\n    }\n  }\n\n  renderDots() {\n    const total = React.Children.count(this.props.children);\n    const dots = [];\n    for (let i = 0; i < total; i++) {\n      dots.push(\n        <button\n          type=\"button\"\n          className=\"glide__bullet slider-dot\"\n          key={i}\n          data-glide-dir={`=${i}`}\n        />\n      );\n    }\n    return dots;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"glide\" ref={(node) => (this.carousel = node)}>\n          <div data-glide-el=\"track\" className=\"glide__track\">\n            <div className=\"glide__slides\">{this.props.children}</div>\n          </div>\n          {!this.props.settings.hideNav && (\n            <div className=\"glide__arrows slider-nav\" data-glide-el=\"controls\">\n              <button\n                type=\"button\"\n                className=\"glide__arrow glide__arrow--left left-arrow btn btn-link\"\n                data-glide-dir=\"<\"\n              >\n                <i className=\"simple-icon-arrow-left\" />\n              </button>\n\n              <div\n                className=\"glide__bullets slider-dot-container\"\n                data-glide-el=\"controls[nav]\"\n              >\n                {this.renderDots()}\n              </div>\n\n              <button\n                type=\"button\"\n                className=\"glide__arrow glide__arrow--right right-arrow btn btn-link\"\n                data-glide-dir=\">\"\n              >\n                <i className=\"simple-icon-arrow-right\" />\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nGlideComponent.defaultProps = {\n  settings: {},\n};\n\nGlideComponent.propTypes = {\n  settings: PropTypes.shape({\n    type: PropTypes.string,\n    startAt: PropTypes.number,\n    perView: PropTypes.number,\n    focusAt: PropTypes.oneOf([PropTypes.number, PropTypes.string]),\n    gap: PropTypes.number,\n    autoplay: PropTypes.bool,\n    hoverpause: PropTypes.bool,\n    keyboard: PropTypes.bool,\n    bound: PropTypes.bool,\n    swipeThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    dragThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    perTouch: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    touchRatio: PropTypes.number,\n    touchAngle: PropTypes.number,\n    animationDuration: PropTypes.number,\n    rewind: PropTypes.bool,\n    rewindDuration: PropTypes.number,\n    animationTimingFunc: PropTypes.string,\n    direction: PropTypes.string,\n    peek: PropTypes.object,\n    breakpoints: PropTypes.object,\n    classes: PropTypes.object,\n    throttle: PropTypes.number,\n  }),\n  // id: PropTypes.string,\n  // className: PropTypes.string,\n};\n\nexport default GlideComponent;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport IconCard from '../../../../components/cards/IconCard';\nimport GlideComponent from \"../../../../components/carousel/GlideComponent\";\n\nconst IconCardsCarousel = ({ className = 'icon-cards-row ' }) => {\n   \n\n  return (\n    <div className={className}>\n \n      {/* <GlideComponent\n        settings={{\n          gap: 2,\n          perView: 5,\n          type: 'carousel',\n          breakpoints: {\n            320: { perView: 1 },\n            520: { perView: 2 },\n            620: { perView: 3 },\n            720: { perView: 4 },\n            \n          },\n          hideNav: true,\n        }}\n      >\n        {mgr_carousel_data.map((item, index) => {\n          return (\n            <div key={`icon_card_${index}`}>\n              <IconCard {...item} className=\"mb-3\" />\n            </div>\n          );\n        })}\n      </GlideComponent>  */}\n      <div className=\"dashboard-top-row\">\n        {mgr_carousel_data.map((item, index) => {\n            return (              \n            <div key={`icon_card_${index}`} className=\"dashboard-top-cards\">\n              <IconCard {...item} className=\"mb-3\" />\n            </div>            \n            );\n          })}\n      </div>\n    </div>\n  );\n};\nlet mgr_carousel_data = [\n  { title: 'dashboard.active-station', icon: 'iconsminds-gas-pump', value: 0 },\n    {title: 'dashboard.active-charger',icon: 'iconsminds-flash-2',value: 0,},\n    {title: 'dashboard.connector',icon: 'iconsminds-plug-in',value: 0,},\n    { title: 'dashboard.batteries', icon: 'iconsminds-battery-100', value: 0 },\n    {title: 'dashboard.ev',icon: 'iconsminds-car',value: 0, },\n  ];  \n  const setStationCount = (value) => {mgr_carousel_data[0].value=value;};\n  const setChargerCount = (value) => {mgr_carousel_data[1].value=value;};\n  const setConnectorCount = (value) => {mgr_carousel_data[2].value=value;};\n  const setBatteriesCount = (value) => {mgr_carousel_data[3].value=value;};\n  const setEVCount = (value) => {mgr_carousel_data[4].value=value;};\n\n\n\nexport  {IconCardsCarousel,setChargerCount,setConnectorCount,setBatteriesCount,setEVCount,setStationCount};\n","import React from 'react';\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  \n} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { LineChart } from '../../../../components/charts';\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\nconst moment = require('moment');\n\nconst colors = ThemeColors();\n\nconst today = moment();\ntoday.add(1, 'd').format('DD-MMM')\nconst dateLabel = Array(7).fill().map(\n() => today.subtract(1, 'd').format('DD-MMM')\n);\nlet total_last_7=0;\nconst SwapChartCard = () => {\n  return (\n    <Card className=\"dashboard-my-card\">\n     \n      <CardBody>\n        <CardTitle>\n          <IntlMessages id=\"dashboard.swaps\" />({total_last_7})\n        </CardTitle>\n        {showSwapChart && (\n        <div className=\"dashboard-line-chart\">\n          <LineChart  data={SwapChartData1} />\n        </div>)}\n        {!showSwapChart && (\n        <div className=\"dashboard-line-chart\">\n          <LineChart  data={SwapChartData} />\n        </div>)}\n        \n      </CardBody>\n    </Card>\n  );\n};\nconst SwapChartData1 = {\n  labels:dateLabel,\n  datasets: [\n    {\n      label: 'Complete',\n      data: [0,0,0,0,0,0,0],\n      borderColor: colors.themeColor1,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 6,\n      pointBorderWidth: 2,\n      pointHoverRadius: 8,\n      fill: false,\n    },\n   \n  ]\n};\n\nconst SwapChartData = {\n    labels:dateLabel,\n    datasets: [\n      {\n        label: 'Complete',\n        data: [0,0,0,0,0,0,0],\n        borderColor: colors.themeColor1,\n        pointBackgroundColor: colors.foregroundColor,\n        pointBorderColor: colors.themeColor1,\n        pointHoverBackgroundColor: colors.themeColor1,\n        pointHoverBorderColor: colors.foregroundColor,\n        pointRadius: 6,\n        pointBorderWidth: 2,\n        pointHoverRadius: 8,\n        fill: false,\n      },\n      \n    ]\n  };\n  let showSwapChart=true;\n  const  setshowSwapChart = (value) => {showSwapChart=value};\n  const setSwapChartData = (responseData) => {\n\n    setshowSwapChart(true);\n     //lineChartOptions.scales.yAxes[0].ticks.max=500;\n    // lineChartOptions.scales.yAxes[0].ticks.min=1000;\n     //lineChartOptions.scales.yAxes[0].ticks.stepSize=100;\n    total_last_7=responseData.data.swapping.total_last_7;\n    SwapChartData.labels= responseData.data.swapping.date;\n    SwapChartData.datasets[0].data=responseData.data.swapping.complete_swap_data;\n    //SwapChartData.datasets[1].data=responseData.data.swapping.incomplete_swap_data;\n    setshowSwapChart(false);\n    \n\n  };\n\n\nexport  {SwapChartCard,setSwapChartData,setshowSwapChart};\n","import React from 'react';\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu,\n} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { LineChart } from '../../../../components/charts';\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\nimport { chartTooltip } from '../../../../components/charts/util';\n//import { lineChartOptions } from '../../../../components/charts/config';\n\nconst moment = require('moment');\n\nconst colors = ThemeColors();\n\nconst today = moment();\ntoday.add(1, 'd').format('DD-MMM')\nconst dateLabel = Array(7).fill().map(\n() => today.subtract(1, 'd').format('DD-MMM')\n);\nlet total_last_7=0;\n\nconst EnergyChartCard = () => {\n  return (\n    <Card className=\"dashboard-my-card\">     \n      <CardBody>\n        <CardTitle>\n          <IntlMessages id=\"dashboard.energy\" /> ({abbreviateNumber(total_last_7)})\n        </CardTitle>\n        {showEnergyChart && (\n        <div className=\"dashboard-line-chart\">\n          <LineChart  data={EnergyChartData1} />\n        </div>)}\n        {!showEnergyChart && (\n        <div className=\"dashboard-line-chart\">\n          <LineChart  data={EnergyChartData} false lineChartOptions />\n        </div>)}\n        \n      </CardBody>\n    </Card>\n  );\n};\nconst EnergyChartData1 = {\n  labels: dateLabel,\n  datasets: [\n    {\n      label: 'Complete',\n      data: [0,0,0,0,0,0,0],\n      borderColor: colors.themeColor1,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 6,\n      pointBorderWidth: 2,\n      pointHoverRadius: 8,\n      fill: false,\n    },\n  ]\n};\n\nconst EnergyChartData = {\n    labels: dateLabel,\n    datasets: [\n      {\n        label: 'Complete',\n        data: [0,0,0,0,0,0,0],\n        borderColor: colors.themeColor1,\n        pointBackgroundColor: colors.foregroundColor,\n        pointBorderColor: colors.themeColor1,\n        pointHoverBackgroundColor: colors.themeColor1,\n        pointHoverBorderColor: colors.foregroundColor,\n        pointRadius: 6,\n        pointBorderWidth: 2,\n        pointHoverRadius: 8,\n        fill: false,\n      },\n    ]\n  };\n  let showEnergyChart=true;\n  const  setshowEnergyChart = (value) => {showEnergyChart=value};\n  const setEnergyChartData = (responseData) => {\n    setshowEnergyChart(true);\n    // lineChartOptions.scales.yAxes[0].ticks.max=1000;\n    // lineChartOptions.scales.yAxes[0].ticks.min=1000;\n    // lineChartOptions.scales.yAxes[0].ticks.stepSize=1000;\n    total_last_7=responseData.data.energy_sold.total_last_7;\n\n    \n    EnergyChartData.labels= responseData.data.energy_sold.date;\n    EnergyChartData.datasets[0].data=responseData.data.energy_sold.data;\n    setshowEnergyChart(false);\n    \n\n  };\n  const abbreviateNumber =(num)=>{\n    let fixed=0;\n     if (num === null) { return null; } // terminate early\n   if (num === 0) { return '0'; } // terminate early\n   fixed = (!fixed || fixed < 0) ? 0 : fixed; // number of decimal places to show\n   var b = (num).toPrecision(2).split(\"e\"), // get power\n       k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3), // floor at decimals, ceiling at trillions\n       c = k < 1 ? num.toFixed(0 + fixed) : (num / Math.pow(10, k * 3) ).toFixed(1 + fixed), // divide by power\n       d = c < 0 ? c : Math.abs(c), // enforce -0 is 0\n       e = d + ['', 'K', 'M', 'B', 'T'][k]; // append power\n   return e;\n   }\n    \nexport  {EnergyChartCard,setEnergyChartData,setshowEnergyChart};\n","import React from 'react';\nimport { Card, CardBody, Col, Row,Spinner} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\n\n\nconst KPICards =  ({ cardClass = 'text-center mb-2' }) => {\n  return (\n    <div>\n        \n        {loading3 && (\n                  <div className=\"text-center pt-3\">\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"dashboard.loading\" />\n                    </p>\n                  </div>\n                ) }\n        {!loading3 && data.map((s, index) => {\n          return (\n            <Card className={cardClass} key={index}>\n            <CardBody>\n            <div  >\n                    <p className=\"lead color-theme-1 mb-1 value \">{s.total}</p>\n                    <p className=\"mb-0 label text-small font-weight-semibold mb-1\"> {s.title}</p>\n                    <p className=\"mb-0 label text-small\"> {s.last30} </p>\n                \n\n            </div>\n            </CardBody>\n            </Card>\n          );\n        })}\n        \n        </div>\n          );\n};\n\nconst data = [\n    {\n        title: 'Units Sold',\n        total: 0,\n        last30 : \"0 in last 30 days\"\n      },\n      {\n        title: 'Units/Day per EV',\n        total: 0,\n        last30 : \" \"\n      },\n    {\n        title: 'Swaps/Day',\n        total: 0,\n        last30 : \"0 in last 30 days\"\n      },\n   \n \n  \n \n];\n\nconst setKPIChartData = (index,total,last30) => {data[index].total=total;data[index].last30 =last30;};\nlet loading3= false;\nconst  setLoading3 = (value) => {loading3=value};\n\nexport  {KPICards,setKPIChartData,setLoading3};\n","import React from 'react';\nimport { Card, CardBody, CardTitle, UncontrolledDropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu, Spinner} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { DoughnutChart } from '../../../../components/charts';\n\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\n\nconst colors = ThemeColors();\n\n\nconst StationDoughnut =  ({ controls = false })  => {\n  return (\n    <Card className=\"dashboard-my-card\">\n      <CardBody>\n         <CardTitle>\n          <IntlMessages id=\"dashboard.station\" />\n          {controls && (\n          <div className=\"btn-group float-right float-none-xs \">\n            <UncontrolledDropdown>\n              <DropdownToggle caret color=\"primary\" className=\"btn-xs\" outline>\n                <IntlMessages id=\"dashboard.all\" />\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.operational\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.faulty\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        )}\n        </CardTitle>\n      {loading2 && (\n                  <div className=\"dashboard-donut-chart\">\n                  <DoughnutChart  data={doughnutChartData1} />\n                </div>\n              ) } { (!loading2  && !blankMsg)  &&\n      <div className=\"dashboard-donut-chart\">\n        <DoughnutChart  data={doughnutChartData} />\n      </div>\n}\n{ blankMsg &&\n      <div className=\"dashboard-donut-chart text-center\">\n        Data Not Found\n      </div>\n}\n      </CardBody>\n    </Card>\n  );\n};\nconst doughnutChartData1 = {\n  labels: ['Operational', 'Faulty'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [ colors.themeColor2, colors.themeColor1],\n      backgroundColor: [\n        colors.themeColor3_10,\n        colors.themeColor2_10,\n      ],\n      borderWidth: 2,\n      data: [1, 0],\n    },\n  ],\n};\nconst doughnutChartData = {\n  labels: ['Operational', 'Faulty'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [ colors.themeColor2, colors.themeColor1],\n      backgroundColor: [\n        colors.themeColor3_10,\n        colors.themeColor2_10,\n      ],\n      borderWidth: 2,\n      data: [1, 0],\n    },\n  ],\n};\nlet blankMsg=false;\nconst  setBlankMsg = (value) => {blankMsg=value};\n\nlet loading2=true;\nconst  setLoading2 = (value) => {loading2=value};\n//const setChargerChartData = (index,value) => {doughnutChartData.datasets[0].data[index]=value;};\nconst setStationChartData = (oprntl,flty) => {\n  doughnutChartData.datasets[0].data[0]=oprntl;\n  doughnutChartData.datasets[0].data[1]=flty;\n\n\n  if(oprntl==0 && flty==0)\n  {\n    setBlankMsg(true);\n    \n  }\n  else\n {\n  setBlankMsg(false);\n }\n  setLoading2(false);\n  \n\n};\n\nexport  {StationDoughnut,setLoading2,setStationChartData};\n","import React, { createRef, useState } from 'react';\nimport { Row, Button, Col, Card, CardBody, FormGroup, Label, Spinner, Alert } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport { Formik, Form, Field } from 'formik';\nimport IntlMessages from '../../../helpers/IntlMessages';\nimport BottomNavigation from '../../../components/wizard/BottomNavigation';\nimport TopNavigation from '../../../components/wizard/TopNavigation';\nimport { validateOTPAPI, validateScanEVAPI, validateScanBatteryAPI, validatePairEVAPI } from \"../../../constants/defaultValues\"\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport axios from 'axios';\nimport { NotificationManager } from '../../../components/common/react-notifications';\nimport QrReader from 'react-qr-reader'\nimport { adminRoot } from \"../../../constants/defaultValues\"\n\n\n\nconst Start = ({ match, intl }) => {\n  const forms = [createRef(null), createRef(null), createRef(null), createRef(null), createRef(null), createRef(null), createRef(null)];\n  const [bottomNavHidden, setBottomNavHidden] = useState(false);\n  const [bottomNavHidden1, setBottomNavHidden1] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loading1, setLoading1] = useState(false);\n  const [QR1, setQR1] = useState(false);\n  const [QR2, setQR2] = useState(false);\n  const [QR3, setQR3] = useState(false);\n  const [QR4, setQR4] = useState(false);\n  const [QR5, setQR5] = useState(false);\n  const [QR6, setQR6] = useState(false);\n  const [_otp, setOTPStart] = useState('');\n\n  const [qrscan_val1, setqrscan_val1] = useState('');\n  const [qrscan_val2, setqrscan_val2] = useState('');\n  const [qrscan_val3, setqrscan_val3] = useState('');\n  const [qrscan_otp, setqrscan_otp] = useState('');\n  const [qrscan_val4, setqrscan_val4] = useState('');\n  const [qrscan_val5, setqrscan_val5] = useState('');\n  const [qrscan_val6, setqrscan_val6] = useState('');\n\n  const handleScanQR1 = (resp) => { if (resp) { setqrscan_val1(resp); setQR1(false); } };\n  const handleScanQR2 = (resp) => { if (resp) { resp = resp.replace(/\\D/g, ''); setqrscan_val2(resp); setQR2(false); } };\n  const handleScanQR3 = (resp) => { if (resp) { resp = resp.replace(/\\D/g, ''); setqrscan_val3(resp); setQR3(false); } };\n  const handleScanQR4 = (resp) => { if (resp) { setqrscan_val4(resp); setQR4(false); } };\n  const handleScanQR5 = (resp) => { if (resp) { resp = resp.replace(/\\D/g, ''); setqrscan_val5(resp); setQR5(false); } };\n  const handleScanQR6 = (resp) => { if (resp) { resp = resp.replace(/\\D/g, ''); setqrscan_val6(resp); setQR6(false); } };\n\n  const btnScanQR1 = (e) => { setQR1(!QR1); };\n  const btnScanQR2 = (e) => { setQR2(!QR2); };\n  const btnScanQR3 = (e) => { setQR3(!QR3); };\n  const btnScanQR4 = (e) => { setQR4(!QR4); };\n  const btnScanQR5 = (e) => { setQR5(!QR5); };\n  const btnScanQR6 = (e) => { setQR6(!QR6); };\n\n  const [fields, setFields] = useState([\n    {\n      valid: false,\n      name: 'scanev1',\n      val_id: 'qrscan_val1',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'discharge_bt1',\n      val_id: 'qrscan_val2',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'discharge_bt2',\n      val_id: 'qrscan_val3',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'otp',\n      val_id: 'qrscan_otp',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'scanev',\n      val_id: 'qrscan_val4',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'charge_bt1',\n      val_id: 'qrscan_val5',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'charge_bt2',\n      val_id: 'qrscan_val6',\n      value: '',\n    },\n  ]);\n\n  const bevTokenData = {\n    \"success\": null,\n    \"successMessage\": null,\n    \"errorMessage\": null,\n    \"authToken\": null,\n    \"validity\": null\n  };\n\n  const driveVerifyDetail = {\n    \"url\": null,\n    \"userid\": null,\n    \"password\": null,\n    \"eligible_url\": null\n  };\n  const createNotification = (text) => {\n    NotificationManager.error(\n      text,\n      'Error!',\n      5000,\n      () => {\n        // alert('callback');\n      },\n      null,\n      \"error filled\"\n    );\n  };\n  const createNotificationInfo = (text) => {\n    NotificationManager.info(\n      text,\n      'Info!',\n      5000,\n      () => {\n        // alert('callback');\n      },\n      null\n    );\n  };\n  const validateOTP = () => {\n    let value = qrscan_otp;\n    let error = null;\n    if (!value) {\n      error = 'Please enter your start OTP';\n      // } else if (!/^[0-9]{4}$/.test(value)) {\n    } else if (value != '1234') {\n      error = 'Invalid OTP. Please Enter valid OTP';\n    }\n    setOTPStart(value);\n    return error;\n  };\n  const validateScanEV = (value) => {\n    let error;\n    if (!qrscan_val4) {\n      error = 'Please enter your text';\n    }\n    return error;\n  };\n  const validateScanEV1 = (value) => {\n    let error;\n    if (!qrscan_val1) {\n      error = 'Please enter your text';\n    }\n    return error;\n  };\n  const validatedischarge_bt1 = (value) => {\n    let error;\n    if (!qrscan_val2) {\n      error = 'Please enter your text';\n    }\n\n    return error;\n  };\n\n  const validatedischarge_bt2 = (value) => {\n    let error;\n    if (!qrscan_val3) {\n      error = 'Please enter Discharged Battery ID';\n    }\n    return error;\n  };\n  const validatecharge_bt1 = (value) => {\n    let error;\n    if (!qrscan_val5) {\n      error = 'Please enter your text';\n    }\n    return error;\n  };\n  const validatecharge_bt2 = (value) => {\n    let error;\n    if (!qrscan_val6) {\n      error = 'Please enter your text';\n    }\n    return error;\n  };\n\n  const asyncLoading = (extraIndex) => {\n\n    if (extraIndex == 0) {\n      setLoading(true);\n      setBottomNavHidden(true);\n    } else {\n      setLoading1(true);\n      setBottomNavHidden1(true);\n    }\n  };\n\n  const stopAsyncLoading = (extraIndex) => {\n    if (extraIndex == 0) {\n      setLoading(false);\n      setBottomNavHidden(false);\n    } else {\n      setLoading1(false);\n      setBottomNavHidden1(false);\n    }\n  };\n\n\n  const onClickNext = async (goToNext, steps, step) => {\n    if (steps.length - 1 <= steps.indexOf(step)) {\n      return;\n    }\n    const extraIndex = (steps.length == 5) ? 3 : 0;\n    const formIndex = extraIndex + steps.indexOf(step);\n\n\n    const form = forms[formIndex].current;\n    const { name, val_id } = fields[formIndex];\n    form.submitForm().then(() => {\n      const newFields = [...fields];\n\n      newFields[formIndex].value = form.values[name];\n      newFields[formIndex].valid = !form.errors[name];\n      setFields(newFields);\n\n      // if (!form.errors[name] && form.touched[name] ) {\n      if (eval(val_id).trim() != \"\") {\n        asyncLoading(extraIndex);\n\n        switch (step.id) {\n          case 'step1':\n            validateScanEVAPICall({ scanevVal: qrscan_val1 })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n\n              });\n            return;\n          case 'step2':\n            validateScanBatteryAPICall({ batterytype: \"Discharged\", battery_sq: \"1\", batteryqrval: qrscan_val2, scanevVal: qrscan_val1 })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n              });\n            return;\n          case 'step3':\n            validateScanBatteryAPICall({ batterytype: \"Discharged\", battery_sq: \"2\", batteryqrval: qrscan_val3, scanevVal: qrscan_val1 })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n\n              });\n            return;\n          case 'step4':\n            let error = validateOTP();\n            if (error == null) {\n              goToNext();\n              step.isDone = true;\n              stopAsyncLoading(extraIndex);\n            } else {\n              createNotification(error);\n            }\n            // validateStartOTPAPI({ otp: form.values[name] })\n            //   .then((res) => {\n            //     if (res.data.status === 1) {\n            //       goToNext();\n            //       step.isDone = true;\n            //     } else\n            //       createNotification(res.data.msg);\n            //     stopAsyncLoading(extraIndex);\n            //   }).catch(error => {\n            //     createNotification(\"something went wrong\");\n            //     stopAsyncLoading(extraIndex);\n            //   });\n            return;\n          case 'step5':\n            debugger\n            validatePairEVAPICall({ otp: _otp, ev_qr_code: qrscan_val4 })\n              .then(async (respair) => {\n                debugger\n                if (respair.data.status === 1) {\n\n                  if (respair.data.data && respair.data.data.driver_verify_require === 1 && respair.data.data.is_ev_verify_require === 1) {\n                    createNotificationInfo(\"Two factor authentication check for EV\");\n                    driveVerifyDetail.url = respair.data.data.driver_verify_url;\n                    driveVerifyDetail.userid = respair.data.data.driver_verify_user;\n                    driveVerifyDetail.password = respair.data.data.driver_verify_pass;\n                    driveVerifyDetail.eligible_url = respair.data.data.driver_verify_eligible_url;\n                    debugger;\n\n                    let driveToken = await BevAuthToekn();\n                    bevTokenData.success = driveToken.data.success;\n                    bevTokenData.errorMessage = driveToken.data.errorMessage;\n                    bevTokenData.validity = null;\n                    if (driveToken.data.success) {\n                      bevTokenData.authToken = driveToken.data.authToken;\n                      bevTokenData.successMessage = driveToken.data.successMessage;\n                      bevTokenData.validity = driveToken.data.validity;\n\n                      let resdriver = await DriveEligibility();\n                      if (resdriver.data.success) {\n                        if (resdriver.data.availableSwaps == 0) {\n                          createNotification(\"No swap available for this EV!\");\n                          stopAsyncLoading(extraIndex);\n                        }\n                        else if (resdriver.data.successMessage === \"Success!\") {\n                          goToNext();\n                          step.isDone = true;\n                          stopAsyncLoading(extraIndex);\n                        }\n                        else {\n                          createNotification(resdriver.data.successMessage);\n                          stopAsyncLoading(extraIndex);\n                        }\n                      } else {\n                        createNotification(resdriver.data.successMessage);\n                        stopAsyncLoading(extraIndex);\n                      }\n                    }\n                    else {\n                      createNotification(driveToken.data.msg);\n                      stopAsyncLoading(extraIndex);\n                    }\n                  } else {\n                    goToNext();\n                    step.isDone = true;\n                  }\n                } else\n                  createNotification(respair.data.msg);\n                stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n              });\n            // BevAuthToekn().then(res => {\n            //   debugger;\n            //   bevTokenData.success = res.data.success;\n            //   bevTokenData.errorMessage = res.data.errorMessage;\n            //   bevTokenData.validity = null;\n            //   if (res.data.success) {\n            //     bevTokenData.authToken = res.data.authToken;\n            //     bevTokenData.successMessage = res.data.successMessage;\n            //     bevTokenData.validity = res.data.validity;\n            //   }\n            //   DriveEligibility().then(resdriver => {\n            //     debugger\n            //     if (res.data.success) {\n            //       if (resdriver.data.status === 1) {\n            //         validatePairEVAPICall({ otp: _otp, ev_qr_code: qrscan_val4 })\n            //           .then((respair) => {\n            //             if (respair.data.status === 1) {\n            //               goToNext();\n            //               step.isDone = true;\n            //             } else\n            //               createNotification(respair.data.msg);\n            //             stopAsyncLoading(extraIndex);\n            //           }).catch(error => {\n            //             createNotification(\"something went wrong\");\n            //             stopAsyncLoading(extraIndex);\n            //           });\n            //       } else {\n            //         createNotification(res.data.successMessage);\n            //       }\n            //     } else {\n            //       createNotification(res.data.msg);\n            //     }\n            //   })\n            // }).catch(err => {\n            //   createNotification(\"something went wrong\");\n            //   stopAsyncLoading(extraIndex);\n            // });\n\n            return;\n          case 'step6':\n            validateScanBatteryAPICall({ batterytype: \"Charged\", battery_sq: \"1\", batteryqrval: qrscan_val5, scanevVal: qrscan_val4 })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n              });\n            return;\n          case 'step7':\n            validateScanBatteryAPICall({ batterytype: \"Charged\", battery_sq: \"2\", batteryqrval: qrscan_val6, scanevVal: qrscan_val4 })\n              .then((res) => {\n                if (res.data.status === 1) {\n                  goToNext();\n                  step.isDone = true;\n                } else\n                  createNotification(res.data.msg);\n                stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n              });\n            return;\n          case 'step8':\n            return;\n        }\n      } else {\n        createNotification(\"Please Fill up data correctly\");\n      }\n    });\n  };\n\n  const onClickPrev = (goToPrev, steps, step) => {\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n    goToPrev();\n  };\n\n  //API call\n  const validateStartOTPAPI = async ({ otp }) => {\n    const currentUser = getCurrentUser();\n    const loginRes = await axios.post(validateOTPAPI, { \"otp_value\": otp }, {\n      headers: {\n        'Authorization': `Bearer ${currentUser.token}`\n      }\n    });\n    return loginRes;\n  };\n  const validateScanEVAPICall = async ({ scanevVal }) => {\n    const currentUser = getCurrentUser();\n    const scanevres = await axios.post(validateScanEVAPI, { \"ev_qr_code\": scanevVal }, {\n      headers: {\n        'Authorization': `Bearer ${currentUser.token}`\n      }\n    });\n    return scanevres;\n  };\n  const validatePairEVAPICall = async ({ otp, ev_qr_code }) => {\n    const currentUser = getCurrentUser();\n\n    const scanevres = await axios.post(validatePairEVAPI, { \"otp_value\": otp, \"ev_qr_code\": ev_qr_code }, {\n      headers: {\n        'Authorization': `Bearer ${currentUser.token}`\n      }\n    });\n    return scanevres;\n  };\n  const validateScanBatteryAPICall = async ({ batterytype, battery_sq, batteryqrval, scanevVal }) => {\n    const currentUser = getCurrentUser();\n    const scanbatteryres = await axios.post(validateScanBatteryAPI, { \"battery_type\": batterytype, \"battery_sequence\": battery_sq, \"battery_qr_code\": batteryqrval, \"ev_qr_code\": scanevVal }, {\n      headers: {\n        'Authorization': `Bearer ${currentUser.token}`\n      }\n    });\n    return scanbatteryres;\n  };\n\n  const BevAuthToekn = async () => {\n    //\"https://admin.billionmobility.com/BEV/api/ChargeZone/GenerateAuthToken\"\n\n    let posturl = driveVerifyDetail.url;\n    var raw = {\n      \"userName\": driveVerifyDetail.userid, // \"billion-e\",\n      \"password\": driveVerifyDetail.password// \"Rtj9on$Qds(\"\n    };\n\n    let request = await axios.post(posturl, raw);\n    return request;\n  }\n\n  const DriveEligibility = async () => {\n    //\"https://admin.billionmobility.com/BEV/api/ChargeZone/isDriverEligibleForBatterySwap\"\n    debugger\n    let posturl = driveVerifyDetail.eligible_url;\n\n    const headers = {\n      'authToken': bevTokenData.authToken\n    }\n\n    // var raw = {\n    //   \"vehicleVin\": qrscan_val4\n    // };\n    posturl += `?vehicleVin=${qrscan_val4}`;\n    let request = await axios.get(posturl, {\n      headers: headers\n    }).catch(error => {\n      console.log(error);\n      createNotification(\"Something went wrong\");\n    });\n    return request;\n  }\n\n\n  const { messages } = intl;\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <Breadcrumb heading=\"menu.start\" match={match} />\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card>\n            <CardBody className=\"wizard wizard-default\">\n              <Wizard>\n                <div className=\"pt-3\">\n                  <h3>\n                    Unpair Batteries\n                  </h3>\n                </div>\n                <TopNavigation className=\"justify-content-center\" disableNav />\n                <Steps>\n\n                  <Step\n                    id=\"step1\"\n                    name=\"Step 1\"\n                    desc=\"Scan EV\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[0]}\n                          initialValues={{\n                            scanev1: qrscan_val1,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right\">\n                              <FormGroup>\n                                <Label>Scan EV</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"scanev1\"\n                                    value={qrscan_val1}\n                                    onChange={e => setqrscan_val1(e.target.value)}\n                                    validate={validateScanEV1}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm \" onClick={btnScanQR1}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR1 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR1}\n                                        onScan={handleScanQR1}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n                                {errors.scanev1 && touched.scanev1 && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.scanev1}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n                  <Step\n                    id=\"step2\"\n                    name=\"Step 2\"\n                    desc=\"Scan DB 1\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[1]}\n                          initialValues={{\n                            discharge_bt1: qrscan_val2,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                              <FormGroup>\n                                <Label>Scan Discharge Battery-1</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"discharge_bt1\"\n                                    type=\"text\"\n                                    value={qrscan_val2}\n                                    onChange={e => setqrscan_val2(e.target.value)}\n                                    validate={validatedischarge_bt1}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR2}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR2 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR2}\n                                        onScan={handleScanQR2}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n                                {errors.discharge_bt1 && touched.discharge_bt1 && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.discharge_bt1}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n                  <Step\n                    id=\"step3\"\n                    name=\"Step 3\"\n                    desc=\"Scan DB 2\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[2]}\n                          initialValues={{\n                            discharge_bt2: qrscan_val3,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                              <FormGroup>\n                                <Label>Scan Discharge Battery-2</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"discharge_bt2\"\n                                    type=\"text\"\n                                    value={qrscan_val3}\n                                    onChange={e => setqrscan_val3(e.target.value)}\n                                    validate={validatedischarge_bt2}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR3}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR3 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR3}\n                                        onScan={handleScanQR3}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n                                {errors.discharge_bt2 && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.discharge_bt2}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n                  <Step id=\"step8\" hideTopNav hidebottomnav render={({ previous }) => (\n                    <div className=\"wizard-basic-step text-center pt-3\">\n                      {loading ? (\n                        <div>\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <div>\n                          <h2 className=\"mb-2\">\n                            <IntlMessages id=\"wizard.content-thanks\" />\n                          </h2>\n                          <p>\n                            <IntlMessages id=\"wizard.registered\" />\n                          </p>\n\n                          <p>\n                            <Button onClick={() => window.location.reload(true)}>Restart</Button>\n                            <br />\n                          </p>\n                        </div>\n                      )}\n                    </div>)}>\n                  </Step>\n\n                </Steps>\n                <BottomNavigation\n                  onClickNext={onClickNext}\n                  onClickPrev={onClickPrev}\n                  className={`justify-content-center ${bottomNavHidden && 'invisible'\n                    }`}\n                  prevLabel={messages['wizard.prev']}\n                  nextLabel={messages['wizard.next']}\n                />\n              </Wizard>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card>\n            <CardBody className=\"wizard wizard-default\">\n              <Wizard>\n                <div className=\"pt-3\">\n                  <h3>\n                    Pair Batteries\n                  </h3>\n                </div>\n                <TopNavigation className=\"justify-content-center\" disableNav />\n                <Steps>\n                  <Step\n                    id=\"step4\"\n                    name=\"Step 1\"\n                    desc=\"OTP\"\n                  >\n                    <div className=\"wizard-basic-step\">\n\n                      {loading1 ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n\n\n\n                        <Formik\n                          innerRef={forms[3]}\n                          initialValues={{\n                            otp: fields[3].value,\n                          }}\n                          //onSubmit={() => {}}\n\n                          onSubmit={(values, actions) => {\n\n\n                          }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right\">\n                              <FormGroup>\n                                <Label>Enter OTP</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"otp\"\n                                    value={qrscan_otp}\n                                    validate={validateOTP}\n                                    onChange={e => setqrscan_otp(e.target.value)}\n                                    placeholder=\"Enter OTP\"\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\">\n                                        <i className=\"glyph-icon simple-icon-pencil\"></i>\n                                      </Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {errors.otp && touched.otp && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.otp}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n\n                      )}\n\n                    </div>\n                  </Step>\n\n                  <Step\n                    id=\"step5\"\n                    name=\"Step 2\"\n                    desc=\"Scan EV\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading1 ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[4]}\n                          initialValues={{\n                            scanev: qrscan_val5,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right\">\n                              <FormGroup>\n                                <Label>Scan EV</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"scanev\"\n                                    value={qrscan_val4}\n                                    onChange={e => setqrscan_val4(e.target.value)}\n                                    validate={validateScanEV}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR4}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR4 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR4}\n                                        onScan={handleScanQR4}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n\n                                {errors.scanev && touched.scanev && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.scanev}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n                  <Step\n                    id=\"step6\"\n                    name=\"Step 3\"\n                    desc=\"Scan CB 1\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading1 ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[5]}\n                          initialValues={{\n                            charge_bt1: qrscan_val5,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                              <FormGroup>\n                                <Label>Scan Charged Battery-1</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"charge_bt1\"\n                                    type=\"text\"\n                                    value={qrscan_val5}\n                                    onChange={e => setqrscan_val5(e.target.value)}\n                                    validate={validatecharge_bt1}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR5}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR5 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR5}\n                                        onScan={handleScanQR5}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n\n                                {errors.charge_bt1 && touched.charge_bt1 && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.charge_bt1}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n                  <Step\n                    id=\"step7\"\n                    name=\"Step 4\"\n                    desc=\"Scan CB 2\"\n                  >\n                    <div className=\"wizard-basic-step\">\n                      {loading1 ? (\n                        <div className=\"text-center pt-3\">\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <Formik\n                          innerRef={forms[6]}\n                          initialValues={{\n                            charge_bt2: qrscan_val6,\n                          }}\n                          onSubmit={() => { }}\n                        >\n                          {({ errors, touched }) => (\n                            <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                              <FormGroup>\n                                <Label>Scan Charged Battery-2</Label>\n                                <div className=\"mb-3 input-group\">\n                                  <Field\n                                    className=\"form-control\"\n                                    name=\"charge_bt2\"\n                                    type=\"text\"\n                                    value={qrscan_val6}\n                                    onChange={e => setqrscan_val6(e.target.value)}\n                                    validate={validatecharge_bt2}\n                                  />\n                                  <div className=\"input-group-append\">\n                                    <span className=\"input-group-text scan_grp\">\n                                      <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR6}>\n                                        <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                                    </span>\n                                  </div>\n                                </div>\n                                {QR6 &&\n                                  <Col lg=\"6\" md=\"6\" sm=\"12\">\n                                    <div>\n                                      <QrReader\n                                        delay={300}\n                                        onError={handleScanQR6}\n                                        onScan={handleScanQR6}\n                                        style={{ width: '100%' }}\n                                      />\n                                    </div>\n                                  </Col>}\n\n                                {errors.charge_bt2 && (\n                                  <div className=\"invalid-feedback d-block\">\n                                    {errors.charge_bt2}\n                                  </div>\n                                )}\n                              </FormGroup>\n                            </Form>\n                          )}\n                        </Formik>\n                      )}\n                    </div>\n                  </Step>\n\n                  <Step id=\"step8\" hideTopNav hidebottomnav>\n                    <div className=\"wizard-basic-step text-center pt-3\">\n                      {loading ? (\n                        <div>\n                          <Spinner color=\"primary\" className=\"mb-1\" />\n                          <p>\n                            <IntlMessages id=\"wizard.async\" />\n                          </p>\n                        </div>\n                      ) : (\n                        <div>\n                          <h2 className=\"mb-2\">\n                            <IntlMessages id=\"wizard.content-thanks\" />\n                          </h2>\n                          <p>\n                            <IntlMessages id=\"wizard.registered\" />\n                          </p>\n                          <p>\n                            <Button onClick={() => window.location.reload(true)}>Restart</Button>\n                            <br />\n                          </p>\n                        </div>\n                      )}\n                    </div>\n                  </Step>\n                </Steps>\n                <BottomNavigation\n                  onClickNext={onClickNext}\n                  onClickPrev={onClickPrev}\n                  className={`justify-content-center ${bottomNavHidden1 && 'invisible'\n                    }`}\n                  prevLabel={messages['wizard.prev']}\n                  nextLabel={messages['wizard.next']}\n                />\n              </Wizard>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n\n    </>\n  );\n};\n\nexport default injectIntl(Start);\n// const mapStateToProps = ({ authUser }) => {\n//   const { loading, error } = authUser;\n//   return { loading, error };\n// };\n// export default connect(mapStateToProps, {\n//   loginUserAction: loginUser,\n// })(injectIntl(Start));\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if('/'+sub===adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub, index) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport { WithWizard } from 'react-albus';\nimport { Button } from 'reactstrap';\n \nconst BottomNavigation = ({\n  className,\n  onClickPrev,\n  prevLabel,\n  onClickNext,\n  nextLabel,\n}) => {\n  return (\n    <WithWizard\n      render={({ next, previous, step, steps }) => (\n        <div className={`wizard-buttons ${className}`}>\n          <Button\n            color=\"primary\"\n            className={`mr-1 ${steps.indexOf(step) <= 0 ? 'disabled' : ''}`}\n            onClick={() => {\n              onClickPrev(previous, steps, step);\n            }}\n          >\n            {prevLabel}\n          </Button>\n\n          <Button\n            color=\"primary\"\n            className={\n              steps.indexOf(step) >= steps.length - 1 ? 'disabled' : ''\n            }\n            onClick={() => {\n              onClickNext(next, steps, step);\n            }}\n          >\n            {nextLabel}\n          </Button>\n        </div>\n      )}\n    />\n  );\n};\nexport default BottomNavigation;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport { WithWizard } from 'react-albus';\nimport { NavLink } from 'react-router-dom';\n\nconst TopNavigation = ({ className, disableNav, topNavClick }) => {\n  const getClassName = (steps, step, index, stepItem) => {\n    if (steps.indexOf(step) === index) {\n      return 'step-doing';\n    }\n    if (steps.indexOf(step) > index || stepItem.isDone) {\n      stepItem.isDone = true;\n      return 'step-done';\n    }\n    return 'step';\n  };\n\n  const itemClick = (stepItem, push) => {\n    if (disableNav) {\n      return;\n    }\n    topNavClick(stepItem, push);\n  };\n\n  return (\n    <WithWizard\n      render={({ next, previous, step, steps, go, push }) => (\n        <ul\n          className={`nav nav-tabs ${className}${\n            disableNav ? ' disabled' : ''\n          }`}\n        > \n          {steps.map((stepItem, index) => {\n            if (!stepItem.hideTopNav) {\n              return (\n                <li\n                  key={`topNavStep_${index}`}\n                  className={`nav-item ${getClassName(\n                    steps,\n                    step,\n                    index,\n                    stepItem\n                  )}`}\n                >\n                  <NavLink\n                    to=\"#\"\n                    location={{}}\n                    className=\"nav-link\"\n                    onClick={() => itemClick(stepItem, push)}\n                  >\n                    <span>{stepItem.name}</span>\n                    <small>{stepItem.desc}</small>\n                  </NavLink>\n                </li>\n              );\n            }\n            return <span key={`topNavStep_${index}`} />;\n          })}\n        </ul>\n      )}\n    />\n  );\n};\n\nexport default TopNavigation;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table,Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  Input,InputGroup \n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot, getUserListAPI,deleteUserAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\n\nconst UserMaster = ({ match }) => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //user states\n  const [userList,setUserList] = useState([]);\n  const [userID,setUserID] = useState(\"\");\n  const [userToDeleleteId,setUserToDeleleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getUserListAPICall();\n    userAlert();\n  },[pageCount,userID])\n\n  //API CALLS\n  const getUserListAPICall = async() => {\n    setUserList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getUserListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setUserList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteUserAPICall = async(userId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteUserAPI,\n      {user_id:userId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setUserID(userId);\n          userDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  const updateUser = (userId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updateUser',\n      state:{user_id:userId}\n    });\n  }\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //ALert helper methods\n  const userDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const userAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (userId) => {\n    setUserToDeleleteId(userId)\n    setModalVisible(!modalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getUserListAPICall();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <span className=\"page_title\">User</span>\n            <a href=\"adduser\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n            <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n            </CardSubtitle> \n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Username</th>\n                    <th>Full Name</th>\n                    <th>Contact Number</th>\n                    <th>Email</th>\n                    <th>Roles</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"7\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                      userList.length > 0 ?\n                          userList.map((item,index)=>\n                            <tr key={index}>\n                              <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index+1}</th>\n                              <td>{item.username}</td>\n                              <td>{item.name}</td>\n                              <td>{item.contact_number}</td>\n                              <td>{item.email}</td>\n                              <td>{item.role_name}</td>\n                              <td>\n                                  <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateUser(item.id)}}>\n                                      <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                                  </a>\n                                  <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                                      <i className=\"glyph-icon simple-icon-trash\"></i>\n                                  </Button>\n                              </td>\n                            </tr>\n                          ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"7\">Data  Not  Found</td>\n                      </tr>\n                }\n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  Are you sure you would like to delete this user?\n                  <Button color=\"success\" className=\"mt-4\" onClick={()=>{deleteUserAPICall(userToDeleleteId)}}>\n                    Delete User\n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                    Cancel\n                  </Button>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default UserMaster;\n","import React, { useState,useEffect }  from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot, addUserAPI,getUserRolesAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nimport { useHistory } from \"react-router-dom\";\n\nconst AddUser = () => {\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  //user roles\n  const [userRolesList,setUserRolesList] = useState([]);\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    getUserRolesAPICall();\n  },[])\n\n   //API CALLS\n   const getUserRolesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getUserRolesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let userRoles=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           userRoles.push({label:item.name,value:item.id,key:index})\n         })\n         setUserRolesList(userRoles);\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addUserAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addUserAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/user',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          addUserAlert(responseData.msg);\n          setButtonDisabled(false);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Alert helper methods\n  const addUserAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const UserDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name name is required\"),\n    email:yup.string()\n        .email(\"Inavlid email format\")\n        .required(\"Email is required\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n        .required(\"Contact number is required\"),\n    username:yup.string()\n        .required(\"Username is required\"),\n    password:yup.string()\n        .required(\"Password is required\"),\n    confirm_password:yup.string()\n        .equals([yup.ref('password')], \"Passwords must match\")\n        .required(\"Password is required\"),\n  });\n\n  const initialValues = {\n    name:\"\",\n    email:\"\",\n    contact_number:\"\",\n    username:\"\",\n    password:\"\",\n    confirm_password:\"\",\n  };\n  \n  return (    \n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add User</span>\n            <a href=\"User\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> User List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={UserDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n            name:values.name,\n            email:values.email,\n            roles:[selectedOptions.label],\n            contact_number:values.contact_number,\n            username:values.username,\n            password:values.password\n          }\n          addUserAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Full Name \"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Email\"\n                                  value={values.email}\n                                  name=\"email\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.email && touched.email ? \"input-error\":null}\n                                />\n                                {errors.email && touched.email &&(\n                                  <span className=\"error\">{errors.email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Role\n                                </Label>\n                                <Select\n                                  components={{ Input: CustomSelectInput }}\n                                  className=\"react-select\"\n                                  classNamePrefix=\"react-select\"\n                                  name=\"form-field-name\"\n                                  value={selectedOptions}\n                                  onChange={setSelectedOptions}\n                                  options={userRolesList}                                  \n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Username\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"username\"\n                                  placeholder=\"Username\"\n                                  value={values.username}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.username && touched.username ? \"input-error\":null}\n                                />\n                                 {errors.username && touched.username &&(\n                                  <span className=\"error\">{errors.username}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Password\n                                </Label>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Password\"\n                                  name=\"password\"\n                                  value={values.password}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.password && touched.password ? \"input-error\":null}\n                                />\n                                {errors.password && touched.password &&(\n                                  <span className=\"error\">{errors.password}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Confirm Password\n                                </Label>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Confirm Password\"\n                                  name=\"confirm_password\"\n                                  value={values.confirm_password}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.confirm_password && touched.confirm_password ? \"input-error\":null}\n                                />\n                                {errors.confirm_password && touched.confirm_password &&(\n                                  <span className=\"error\">{errors.confirm_password}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default AddUser;","import React, { useState,useEffect }  from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot, updateUserAPI,getUserRolesAPI,getUserByIdAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport { useHistory,useLocation } from \"react-router-dom\";\n\nconst UpdateUser = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //multiSelect state\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  //user roles\n  const [userRolesList,setUserRolesList] = useState([]);\n  //user details state\n  const [name,setName] = useState(\"\");\n  const [email,setEmail] = useState(\"\");\n  const [contactNumber,setContactNumber] = useState(\"\");\n  const [username,setUsername] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  // error state\n  const [errorConfirmPassword,setErrorConfirmPassword] = useState(false);\n\n  const history = useHistory();\n  const location = useLocation();\n\n\n  useEffect(()=>{\n    getUserRolesAPICall();\n    getUserByIdAPICall();\n  },[])\n\n   //API CALLS\n   const getUserRolesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getUserRolesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let userRoles=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           userRoles.push({label:item.name,value:item.id,key:index})\n         })\n         setUserRolesList(userRoles);\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const getUserByIdAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getUserByIdAPI,\n    {\n        user_id:location.state.user_id\n    },\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        let tempData = [];\n        if (responseData.status === 1) {\n        setName(responseData.data.name);\n        setEmail(responseData.data.email);\n        setContactNumber(responseData.data.contact_number);\n        setUsername(responseData.data.username);\n        responseData.data.roles.map((item,index)=>{\n            tempData.push({label:item.name,value:item.id,key:index})\n        })\n        setSelectedOptions(tempData);\n        }else{\n        console.log(responseData.msg);\n        }\n    }).catch(error=>{\n        console.log(error);\n    })\n  }\n\n  const updateUserAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(updateUserAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/user',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          updateUserAlert(responseData.msg);\n        }\n    }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n    })\n  }\n  //Alert helper methods\n  const updateUserAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle password confirmation\n  // const handleConfirmPassword = (value)=>{\n  //   setConfirmPassword(value);\n  //   if (password === value) {\n  //     setErrorConfirmPassword(false);\n  //   } else {\n  //     setErrorConfirmPassword(true);\n  //   }\n  // }\n  //Form Validation Schema\n  const UserDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name name is required\"),\n    email:yup.string()\n        .email(\"Inavlid email format\")\n        .required(\"Email is required\"),\n    contact_number:yup.string()\n                .nullable()\n                .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n                .length(10,\"Invalid contact number length\")\n                .required(\"Contact number is required\"),\n    username:yup.string()\n        .required(\"Username is required\"),\n    password:yup.string(),\n    confirm_password:yup.string()\n        .equals([yup.ref('password')], \"Passwords must match\")\n  });\n  \n  return (    \n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update User</span>\n            <a href=\"User\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> User List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true} \n        initialValues={{\n            name:name,\n            email:email,\n            contact_number:contactNumber,\n            username:username,\n            password:\"\",\n            confirm_password:\"\",\n        }}\n        validationSchema={UserDetailsValidationSchema} \n        onSubmit={(values)=>{\n          setErrorConfirmPassword(false);\n          if (values.password === values.confirm_password) {\n            let roleValue;\n            if (Array.isArray(selectedOptions)) {\n              roleValue = selectedOptions[0].label;\n            } else {\n              roleValue = selectedOptions.label;\n            }\n            const params = {\n              user_id:location.state.user_id,\n              name:values.name,\n              email:values.email,\n              roles:[roleValue],\n              contact_number:values.contact_number,\n              username:values.username,\n              password:values.password\n            }\n          updateUserAPICall(params);\n          } else {\n            setErrorConfirmPassword(true);\n            return;\n          }\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                  {alertMsg}\n                                </Alert>\n                              </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Full Name \"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Email\"\n                                  value={values.email}\n                                  name=\"email\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.email && touched.email ? \"input-error\":null}\n                                />\n                                {errors.email && touched.email &&(\n                                  <span className=\"error\">{errors.email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Role\n                                </Label>\n                                <Select\n                                  components={{ Input: CustomSelectInput }}\n                                  className=\"react-select\"\n                                  classNamePrefix=\"react-select\"\n                                  name=\"form-field-name\"\n                                  value={selectedOptions}\n                                  onChange={setSelectedOptions}\n                                  options={userRolesList}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Username\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"username\"\n                                  placeholder=\"Username\"\n                                  value={values.username}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.username && touched.username ? \"input-error\":null}\n                                />\n                                 {errors.username && touched.username &&(\n                                  <span className=\"error\">{errors.username}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Password\n                                </Label>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Password\"\n                                  name=\"password\"\n                                  value={values.password}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.password && touched.password ? \"input-error\":null}\n                                />\n                                {errors.password && touched.password &&(\n                                  <span className=\"error\">{errors.password}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Confirm Password\n                                </Label>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Confirm Password\"\n                                  name=\"confirm_password\"\n                                  value={values.confirm_password}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.confirm_password && touched.confirm_password ? \"input-error\":null}\n                                />\n                                {errors.confirm_password && touched.confirm_password &&(\n                                  <span className=\"error\">{errors.confirm_password}</span>\n                                )}\n                                {errorConfirmPassword && \n                                  <span className=\"error\">{\"\\n\"+\"Please confirm Password\"}</span>\n                                }\n                              </FormGroup>\n                            </Colxx>\n                            {/* <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Password\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Password\"\n                                  name=\"password\"\n                                  value={password}\n                                  onChange={e=>setPassword(e.target.value)}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Confirm Password\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Confirm Password\"\n                                  name=\"confirm_password\"\n                                  value={confirmPassword}\n                                  onChange={e=>handleConfirmPassword(e.target.value)}\n                                />\n                                {errorConfirmPassword && \n                                  <span className=\"error\">Passwords must match</span>\n                                }\n                              </FormGroup>\n                            </Colxx> */}\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default UpdateUser;","import React, { useEffect, useState } from 'react';\nimport { Row, Card, CardBody, CardTitle, Table, Button } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getUserRolesAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\n\n\nconst RoleMaster = ({ match }) => {\n  //user roles state\n  const [userRolesList,setUserRolesList] = useState([]);\n  const [isLoading,setIsLoading] = useState(true);\n\n  useEffect(()=>{\n    getUserRolesAPICall();\n  },[])\n\n  //API CALLS\n  const getUserRolesAPICall = async() => {\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getUserRolesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n         setUserRolesList(responseData.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Role</span>\n            <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-5\">\n\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Role Name</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"2\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                  userRolesList.length > 0 ?\n                    userRolesList.map((item,index)=>\n                      <tr key={index}>\n                        <th scope=\"row\">{index +1}</th>\n                        <td>{item.name}</td>\n                      </tr>\n                    ):<tr>\n                        <td className=\"text-center text-danger\" colSpan=\"2\">Data  Not  Found</td>\n                    </tr>\n                }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default RoleMaster;\n","import React from 'react';\nimport { \n  Row, Card, CardBody, FormGroup,Label, Input, CustomInput, Button\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\n\nconst AddRole = () => {\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Role</span>\n            <a href=\"Role\" className=\"mt-2 btn-primary default btn-sm tbl_action_btn float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Role List</b>\n            </a>\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card className=\"mb-4\">\n              <CardBody> \n                  <Row>\n                    <Colxx sm={12}>\n                      <FormGroup>\n                        <Label>\n                          Role Name\n                        </Label>\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Role Name\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx sm={3}>\n                      <FormGroup>\n                        <CustomInput\n                          type=\"checkbox\"\n                          label=\"Role Create\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx sm={3}>\n                      <FormGroup>\n                        <CustomInput\n                          type=\"checkbox\"\n                          label=\"Role Update\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx sm={3}>\n                      <FormGroup>\n                        <CustomInput\n                          type=\"checkbox\"\n                          label=\"User List\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx sm={3}>\n                      <FormGroup>\n                        <CustomInput\n                          type=\"checkbox\"\n                          label=\"Report Permission\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx sm=\"12\" className=\"text-center\">\n                      <Button color=\"primary\" className=\"default mr-2\">\n                          <b>Add</b>\n                      </Button>\n                      <Button color=\"light\" className=\"default\">\n                          <b>Cancel</b>\n                      </Button>\n                    </Colxx>\n                  </Row>\n              </CardBody>\n              </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default AddRole;\n","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle,Collapse, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,InputGroup \n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getBatteryListAPI,deleteBatterytAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\nconst BatteryMaster = ({ match }) => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //collapse states\n  const [collapse1, setCollapse1] = useState(false);\n  const [collapse2, setCollapse2] = useState(false);\n  const [collapse3, setCollapse3] = useState(false);\n  const [collapse4, setCollapse4] = useState(false);\n  const [collapse5, setCollapse5] = useState(false);\n  const [collapse6, setCollapse6] = useState(false);\n  const [collapse7, setCollapse7] = useState(false);\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [infoModalVisible,setInfoModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //battery list\n  const [batteryList,setBatteryList] = useState([]);\n  const [batteryID,setBatteryID] = useState(\"\");\n  const [batteryToDeleteId,setBatteryToDeleteId] = useState(\"\");\n  //data states\n  const [batteryInfo,setBatteryInfo] = useState({});\n  const [batteryAllData,setBatteryAllData] = useState({});\n  const [makYear,setMakeYear] = useState(\"\");\n  const [chemistry,setChemistry] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getBatteryListAPICall();\n    batteryAlert();\n  },[batteryID,pageCount])\n\n  //API calls\n  const getBatteryListAPICall = async() => {\n    setBatteryList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getBatteryListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setBatteryList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteBatteryAPICall = async(batteryId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteBatterytAPI,\n      {battery_master_id:batteryId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setBatteryID(batteryId);\n          batteryDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          batteryDeletedAlert(responseData.status,responseData.msg)\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updateBattery = (batteryId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updatebattery',\n      state:{battery_master_id:batteryId}\n    });\n  }\n\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const batteryDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n\n  const batteryAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (batteryId) => {\n    setBatteryToDeleteId(batteryId)\n    setModalVisible(!modalVisible);\n  }\n  //modal for all data\n  const toggleInfoModal = (batteryItem) => {\n    let tempAllData = {};\n    if (batteryItem.all_data==undefined) {\n      tempAllData = {};\n    }else {\n      tempAllData = JSON.parse(batteryItem.all_data);\n      setMakeYear(tempAllData.make_year.month.label + tempAllData.make_year.year.label);\n      setChemistry(tempAllData.chemistry);\n      setBatteryInfo(batteryItem);\n      setBatteryAllData(tempAllData)\n    }    \n    setInfoModalVisible(!infoModalVisible);\n  }\n   //handle search input\n   const handleSearch = () => {\n      setPageCount(1);\n      getBatteryListAPICall();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Battery</span>\n            <a href=\"addbattery\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                  <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                    {alertMsg}\n                  </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>OEM</th>\n                    <th>Model</th>\n                    <th>Make Year</th>\n                    <th>Type of Connector</th>\n                    <th>Chemistry</th>\n                    <th>Minimum Delivered Kwh</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"8\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    batteryList.length > 0 ?\n                      batteryList.map((item,index)=>\n                        <tr key={index}>\n                          <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                          <td>{item.oem_name}</td>\n                          <td>{item.model_name}</td>\n                          <td>{item.make_year}</td>\n                          <td>{item.type_of_connector}</td>\n                          <td>{JSON.parse(item.all_data)!=null?JSON.parse(item.all_data).chemistry.label:\"\"}</td>\n                          <td>{JSON.parse(item.all_data)!=null?JSON.parse(item.all_data).minimum_delivered:\"\"}</td>\n                          <td>\n                          {item.all_data!=null && <Button color=\"primary\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>{toggleInfoModal(item)}}>\n                                <i className=\"glyph-icon simple-icon-eye\"></i>\n                            </Button>}\n                            <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateBattery(item.battery_master_id)}}>\n                                <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                            </a>\n                            <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.battery_master_id)}}>\n                                <i className=\"glyph-icon simple-icon-trash\"></i>\n                            </Button>                        \n                          </td>\n                        </tr>\n                        ):<tr>\n                              <td className=\"text-center text-danger\" colSpan=\"7\">Data  Not  Found</td>\n                          </tr>\n                        }                  \n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  Are you sure you would like to delete this battery?\n                  <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteBatteryAPICall(batteryToDeleteId)}>\n                    Delete Battery \n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                    Cancel\n                  </Button>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n        <div className=\"modal-dialog modal-fullscreen\" >\n          <Modal\n            isOpen={infoModalVisible}\n            toggle={toggleInfoModal} \n            className=\"modal-fullscreen\">\n            <ModalBody>\n              <Row>\n                <Colxx md=\"12\">\n                    <i className=\"simple-icon-close float-right mr-4 close-icon\" onClick={toggleInfoModal}></i>\n                </Colxx>\n              </Row>\n              <Row className=\"mt-2\">\n                  <Colxx xxs=\"12\" lg=\"12\">\n                    <ul className=\"list-unstyled mb-4\">\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">1</span>\n                                General Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse1 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse1(!collapse1)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse1}>\n                            <div className=\"card-body pt-0\">\n                              <Row>\n                                <Colxx md=\"6\">\n                                  <b>OEM:</b> {batteryInfo.oem_name}\n                                </Colxx>\n                                <Colxx md=\"6\" >\n                                  <b>Model:</b> {batteryInfo.model_name}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Make Year:</b> {makYear}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Chemistry:</b> {chemistry.label}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Nominal Capacity:</b> {batteryAllData.nominal_capacity}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Minimum Capacity:</b> {batteryAllData.minimum_capacity}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>No. of cell in series:</b> {batteryAllData.series_cell}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>No. of cell in parallel:</b> {batteryAllData.parallel_cell}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                 <b> Cell Type:</b> {batteryAllData.cell_type}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Cell Make:</b> {batteryAllData.cell_make}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Total number of cells:</b> {batteryAllData.total_cells}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Nominal voltage:</b> {batteryAllData.nominal_voltage}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Minimum delivered KWH:</b> {batteryAllData.minimum_delivered}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Pack Configuration:</b> {batteryAllData.pack_configuration}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>BMS type:</b> {batteryAllData.bms_type}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                 <b> Weight:</b> {batteryAllData.weight}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Dimension:</b> {batteryAllData.dimension}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Type of Connector:</b> {batteryInfo.type_of_connector}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Remark 1:</b> {batteryInfo.remark_1}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Remark 2:</b> {batteryInfo.remark_2}\n                                </Colxx>\n                              </Row>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">2</span>\n                                Electrical Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse2 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse2(!collapse2)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse2}>\n                            <div className=\"card-body pt-0\">\n                              <Row>\n                                <Colxx md=\"6\">\n                                  <b>Operating voltage range:</b> {batteryAllData.operating_voltage_range}\n                                </Colxx>\n                                <Colxx md=\"6\" >\n                                  <b>Charging mode:</b> {batteryAllData.charging_mode}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Recommended voltage:</b> {batteryAllData.recommended_voltage}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Std. DisCh. current:</b> {batteryAllData.discharging_current}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Pulsed DisCh. Current(A):</b> {batteryAllData.pulsed_discharge_current}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Std. Charging Current(A):</b> {batteryAllData.standard_charging_current}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Cell low cut pro level:</b> {batteryAllData.cell_low_protection_level}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Cell low cut pro rec level:</b> {batteryAllData.cell_low_protection_recovery}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Cell high cut pro level:</b> {batteryAllData.cell_high_protection_level}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Cell high cut pro recovery level:</b> {batteryAllData.cell_high_protection_recovery}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Battery cells efficiency rate:</b> {batteryAllData.battery_cells_efficiency}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Battery cells failure rate:</b> {batteryAllData.battery_cells_faliure}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Battery pack effi rate:</b> {batteryAllData.battery_pack_efficiency}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Battery pack failure rate:</b> {batteryAllData.battery_pack_faliure}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Bleeding start voltage level:</b> {batteryAllData.bleeding_start_voltage}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Over Temp. pro DisCh.mode:</b> {batteryAllData.over_temp_pro_dis}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Temp. pro rec DisCh.mode:</b> {batteryAllData.over_temp_recovery_dis}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Temp. pro charge mode:</b> {batteryAllData.over_temp_pro_charge}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Temp. pro rec charge mode:</b> {batteryAllData.over_temp_recovery_charge}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Remark 1:</b> {batteryAllData.ec_remark_1}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Remark 2:</b> {batteryAllData.ec_remark_2}\n                                </Colxx>\n                              </Row>\n                            </div>\n                          </Collapse>\n                        </Card>\n                        </li>\n                        <li>\n                          <Card className=\"question d-flex mb-4\">\n                            <div className=\"d-flex flex-grow-1 min-width-zero\">\n                              <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                                <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                  <span className=\"heading-number d-inline-block\">3</span>\n                                  Temprature Characteristics\n                                </div>\n                              </div>\n                              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                                <Button\n                                  outline\n                                  color=\"theme-3\"\n                                  className={`icon-button ml-1 rotate-icon-click ${\n                                    collapse3 ? 'rotate' : ''\n                                  }`}\n                                  onClick={() => setCollapse3(!collapse3)}\n                                >\n                                  <i className=\"simple-icon-arrow-down\" />\n                                </Button>\n                              </div>\n                            </div>\n                            <Collapse isOpen={collapse3}>\n                              <div className=\"card-body pt-0\">\n                                <div className=\"edit-mode\">\n                                  <Row>\n                                    <Colxx md=\"6\">\n                                      <b>Max. Working Temp.:</b> {batteryAllData.max_working_temp}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Storage Temp.:</b> {batteryAllData.storage_temp}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Temp. control at cell level:</b> {batteryAllData.temp_control_cell}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Temp. control at pack level:</b> {batteryAllData.temp_control_pack}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Temp. control at swap. level:</b> {batteryAllData.temp_control_swapping}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark 1:</b> {batteryAllData.tc_remark_1}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark 2:</b> {batteryAllData.tc_remark_2}\n                                    </Colxx>\n                                  </Row>\n                                </div>\n                              </div>\n                            </Collapse>\n                          </Card>\n                        </li>\n                        <li>\n                          <Card className=\"question d-flex mb-4\">\n                            <div className=\"d-flex flex-grow-1 min-width-zero\">\n                              <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                                <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                  <span className=\"heading-number d-inline-block\">4</span>\n                                  Mechanical Characteristics\n                                </div>\n                              </div>\n                              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                                <Button\n                                  outline\n                                  color=\"theme-3\"\n                                  className={`icon-button ml-1 rotate-icon-click ${\n                                    collapse4 ? 'rotate' : ''\n                                  }`}\n                                  onClick={() => setCollapse4(!collapse4)}\n                                >\n                                  <i className=\"simple-icon-arrow-down\" />\n                                </Button>\n                              </div>\n                            </div>\n                            <Collapse isOpen={collapse4}>\n                              <div className=\"card-body pt-0\">\n                                <div className=\"edit-mode\">\n                                  <Row>\n                                    <Colxx md=\"6\">\n                                      <b>Module dimension:</b> {batteryAllData.module_dimension}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Cabinet design:</b> {batteryAllData.cabinet_design}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Degradation of sensors/connectors:</b> {batteryAllData.degradation_sensors}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Power connector:</b> {batteryAllData.power_connector}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>RS485/CAN:</b> {batteryAllData.rs_can}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Casing:</b> {batteryAllData.casing}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark 1:</b> {batteryAllData.mc_remark_1}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark 2:</b> {batteryAllData.mc_remark_2}\n                                    </Colxx>\n                                  </Row>\n                                </div>\n                              </div>\n                            </Collapse>\n                          </Card>\n                        </li>\n                        <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">5</span>\n                                Protections\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse5 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse5(!collapse5)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse5}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Row>\n                                  <Colxx md=\"6\">\n                                    <b>Cell over voltage pro:</b> {batteryAllData.cell_over_voltage}\n                                  </Colxx>\n                                  <Colxx md=\"6\" >\n                                    <b>Cell under voltage pro:</b> {batteryAllData.cell_under_voltage}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Ch. ov. current pro:</b> {batteryAllData.charging_over_current}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>DisCh. ov. current pro:</b> {batteryAllData.discharging_over_current}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Output short circuit pro:</b> {batteryAllData.output_short_circuit}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Cell Temp Pro. in DisCh.:</b> {batteryAllData.cell_temp_protection_discharging}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Remark 1:</b> {batteryAllData.p_remark_1}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Remark 2:</b> {batteryAllData.p_remark_2}\n                                  </Colxx>\n                                </Row>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                        </li>\n                        <li>\n                          <Card className=\"question d-flex mb-4\">\n                            <div className=\"d-flex flex-grow-1 min-width-zero\">\n                              <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                                <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                  <span className=\"heading-number d-inline-block\">6</span>\n                                  Warranty\n                                </div>\n                              </div>\n                              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                                <Button\n                                  outline\n                                  color=\"theme-3\"\n                                  className={`icon-button ml-1 rotate-icon-click ${\n                                    collapse6 ? 'rotate' : ''\n                                  }`}\n                                  onClick={() => setCollapse6(!collapse6)}\n                                >\n                                  <i className=\"simple-icon-arrow-down\" />\n                                </Button>\n                              </div>\n                            </div>\n                            <Collapse isOpen={collapse6}>\n                              <div className=\"card-body pt-0\">\n                                <div className=\"edit-mode\">\n                                  <Row>\n                                    <Colxx md=\"6\">\n                                      <b>Cycle Life:</b> {batteryAllData.cycle_life}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Capacity Retention of 70%:</b> {batteryAllData.capacity_retention}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Depth of DisCh.:</b> {batteryAllData.depth_discharge}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark 1:</b> {batteryAllData.w_remark_1}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark 2:</b> {batteryAllData.w_remark_2}\n                                    </Colxx>\n                                  </Row>\n                                </div>\n                              </div>\n                            </Collapse>\n                          </Card>\n                        </li>\n                        <li>\n                          <Card className=\"question d-flex mb-4\">\n                            <div className=\"d-flex flex-grow-1 min-width-zero\">\n                              <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                                <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                  <span className=\"heading-number d-inline-block\">7</span>\n                                  Interface\n                                </div>\n                              </div>\n                              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                                <Button\n                                  outline\n                                  color=\"theme-3\"\n                                  className={`icon-button ml-1 rotate-icon-click ${\n                                    collapse7 ? 'rotate' : ''\n                                  }`}\n                                  onClick={() => setCollapse7(!collapse7)}\n                                >\n                                  <i className=\"simple-icon-arrow-down\" />\n                                </Button>\n                              </div>\n                            </div>\n                            <Collapse isOpen={collapse7}>\n                              <div className=\"card-body pt-0\">\n                                <div className=\"edit-mode\">\n                                  <Row>\n                                    <Colxx md=\"6\">\n                                      <b>Communication Prototcol:</b> {batteryAllData.communication_prototcol}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Network Communication:</b> {batteryAllData.network_communication}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark 1:</b> {batteryAllData.i_remark_1}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark 2:</b> {batteryAllData.i_remark_2}\n                                    </Colxx>  \n                                  </Row>\n                                </div>\n                              </div>\n                            </Collapse>\n                          </Card>\n                        </li>\n                    </ul>\n                  </Colxx>\n              </Row>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleInfoModal}>\n                Close\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </div>        \n      </Row>\n    </>\n  );\n};\nexport default BatteryMaster;","import React, { useState, useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardSubtitle,Alert,\n  Label,Input, Button,Collapse,Form,Badge\n } from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getOemAPI,addBatteryAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst AddBattery = () => {\n   //alert states\n   const [alertVisible,setAlertVisible] = useState(false);\n   const [alertMsg,setAlertMsg] = useState(\"\");\n   const [alertColor,setAlertColor] = useState(\"\");\n  //collapse states\n  const [collapse1, setCollapse1] = useState(false);\n  const [collapse2, setCollapse2] = useState(false);\n  const [collapse3, setCollapse3] = useState(false);\n  const [collapse4, setCollapse4] = useState(false);\n  const [collapse5, setCollapse5] = useState(false);\n  const [collapse6, setCollapse6] = useState(false);\n  const [collapse7, setCollapse7] = useState(false);\n  //dropdown states\n  const [oem,setOem] = useState(\"\");\n  const [oemList,setOemList] = useState([]);\n  const [month,setMonth] = useState(null);\n  const [year,setYear] = useState(null);\n  const [chemistry,setChemistry] = useState(\"\");\n  //image states\n  const [imageSelected,setImageSelected] = useState();\n  const [imagePreview,setImagePreview] = useState();\n  const [imageErrorFLag,setImageErrorFlag] = useState(false);\n  const [imageKey,setImageKey] = useState(true); //boolean key to rerender input on removing image\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n \n  const history = useHistory();\n\n  useEffect(()=>{\n    getOemAPICall();\n  },[])\n\n  //API calls\n  const getOemAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:\"1\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let tempData = [];\n        if (responseData.status === 1) {          \n          responseData.data.map(item=>{\n            tempData.push({label: item.name, value: item.oem_id, id:item.oem_id});\n          })\n          setOemList(tempData);\n        }else{\n          addBatteryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addBatteryAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addBatteryAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/battery',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          addBatteryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const BatteryDetailsValidationSchema = yup.object().shape({\n    model_name:yup.string()\n        .required(\"Model name is required\"),\n    type_of_connector:yup.string()\n        .required(\"Type of connector is required\"),\n  });\n\n  const initialValues = {    \n    model_name:\"\",\n    nominal_capacity:\"\",\n    minimum_capacity:\"\",\n    series_cell:\"\",\n    parallel_cell:\"\",\n    cell_type:\"\",\n    cell_make:\"\",\n    total_cells:\"\",\n    nominal_voltage:\"\",\n    minimum_delivered:\"\",\n    pack_configuration:\"\",\n    bms_type:\"\",\n    weight:\"\",\n    dimension:\"\",\n    type_of_connector:\"\",\n    gc_remark_1:\"\",\n    gc_remark_2:\"\",\n    operating_voltage_range:\"\",\n    charging_mode:\"\",\n    recommended_voltage:\"\",\n    discharging_current:\"\",\n    pulsed_discharge_current:\"\",\n    standard_charging_current:\"\",\n    cell_low_protection_level:\"\",\n    cell_low_protection_recovery:\"\",\n    cell_high_protection_level:\"\",\n    cell_high_protection_recovery:\"\",\n    battery_cells_efficiency:\"\",\n    battery_cells_faliure:\"\",\n    battery_pack_efficiency:\"\",\n    battery_pack_faliure:\"\",\n    bleeding_start_voltage:\"\",\n    over_temp_pro_dis:\"\",\n    over_temp_recovery_dis:\"\",\n    over_temp_pro_charge:\"\",\n    over_temp_recovery_charge:\"\",\n    max_working_temp:\"\",\n    storage_temp:\"\",\n    temp_control_cell:\"\",\n    temp_control_pack:\"\",\n    temp_control_swapping:\"\",\n    module_dimension:\"\",\n    cabinet_design:\"\",\n    degradation_sensors:\"\",\n    power_connector:\"\",\n    rs_can:\"\",\n    casing:\"\",\n    cell_over_voltage:\"\",\n    cell_under_voltage:\"\",\n    charging_over_current:\"\",\n    discharging_over_current:\"\",\n    output_short_circuit:\"\",\n    cell_temp_protection_discharging:\"\",\n    cycle_life:\"\",\n    capacity_retention:\"\",\n    depth_discharge:\"\",\n    communication_prototcol:\"\",\n    network_communication:\"\",\n    ec_remark_1:\"\",\n    ec_remark_2:\"\",\n    tc_remark_1:\"\",\n    tc_remark_2:\"\",\n    mc_remark_1:\"\",\n    mc_remark_2:\"\",\n    p_remark_1:\"\",\n    p_remark_2:\"\",\n    w_remark_1:\"\",\n    w_remark_2:\"\",\n    i_remark_1:\"\",\n    i_remark_2:\"\",\n  };\n\n  //helper methods\n  const getYear = () => {\n    let yearList = [];\n    for (let index = 0; index <= 20; index++) {\n      const temp = {label:2010+index,value:index+1,id:index+1}\n      yearList.push(temp);\n    }\n    return yearList\n  };\n  //Alert helper methods\n  const addBatteryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //image selection methods\n  const handleImageSelect = (imageFile) =>{\n    const fileExtension = imageFile.name.split('.').pop();\n    if (fileExtension == \"jpg\" || fileExtension == \"jpeg\" || fileExtension == \"png\") {\n      setImageErrorFlag(false);\n      setImageSelected(imageFile);\n      setImagePreview(URL.createObjectURL(imageFile));\n    } else {\n      setImageErrorFlag(true);\n    }\n  }\n  const handleDeleteImage = () =>{\n    setImageKey(!imageKey);\n    setImagePreview();\n    setImageSelected();\n  }\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={BatteryDetailsValidationSchema} \n        onSubmit={(values)=>{\n         if (month == null || year == null) {\n           addBatteryAlert(\"Make Year is required\");\n           return;\n         }\n          let formData  = new FormData();\n          const tempData={\n              make_year:{month:month,year:year},\n              chemistry:chemistry,\n              nominal_capacity:values.nominal_capacity,\n              minimum_capacity:values.minimum_capacity,\n              series_cell:values.series_cell,\n              parallel_cell:values.parallel_cell,\n              cell_type:values.cell_type,\n              cell_make:values.cell_make,\n              total_cells:values.total_cells,\n              nominal_voltage:values.nominal_voltage,\n              minimum_delivered:values.minimum_delivered,\n              pack_configuration:values.pack_configuration,\n              bms_type:values.bms_type,\n              weight:values.weight,\n              dimension:values.dimension,\n              operating_voltage_range:\"\",\n              charging_mode:values.charging_mode,\n              recommended_voltage:values.recommended_voltage,\n              discharging_current:values.discharging_current,\n              pulsed_discharge_current:values.pulsed_discharge_current,\n              standard_charging_current:values.standard_charging_current,\n              cell_low_protection_level:values.cell_low_protection_level,\n              cell_low_protection_recovery:values.cell_low_protection_recovery,\n              cell_high_protection_level:values.cell_high_protection_level,\n              cell_high_protection_recovery:values.cell_high_protection_recovery,\n              battery_cells_efficiency:values.battery_cells_efficiency,\n              battery_cells_faliure:values.battery_cells_faliure,\n              battery_pack_efficiency:values.battery_pack_efficiency,\n              battery_pack_faliure:values.battery_pack_faliure,\n              bleeding_start_voltage:values.bleeding_start_voltage,\n              over_temp_pro_dis:values.over_temp_pro_dis,\n              over_temp_recovery_dis:values.over_temp_recovery_dis,\n              over_temp_pro_charge:values.over_temp_pro_charge,\n              over_temp_recovery_charge:values.over_temp_recovery_charge,\n              max_working_temp:values.max_working_temp,\n              storage_temp:values.storage_temp,\n              temp_control_cell:values.temp_control_cell,\n              temp_control_pack:values.temp_control_pack,\n              temp_control_swapping:values.temp_control_swapping,\n              module_dimension:values.module_dimension,\n              cabinet_design:values.cabinet_design,\n              degradation_sensors:values.degradation_sensors,\n              power_connector:values.power_connector,\n              rs_can:values.rs_can,\n              casing:values.casing,\n              cell_over_voltage:values.cell_over_voltage,\n              cell_under_voltage:values.cell_under_voltage,\n              charging_over_current:values.charging_over_current,\n              discharging_over_current:values.discharging_over_current,\n              output_short_circuit:values.output_short_circuit,\n              cell_temp_protection_discharging:values.cell_temp_protection_discharging,\n              cycle_life:values.cycle_life,\n              capacity_retention:values.capacity_retention,\n              depth_discharge:values.depth_discharge,\n              communication_prototcol:values.communication_prototcol,\n              network_communication:values.network_communication,\n              ec_remark_1:values.ec_remark_1,\n              ec_remark_2:values.ec_remark_2,\n              tc_remark_1:values.tc_remark_1,\n              tc_remark_2:values.tc_remark_2,\n              mc_remark_1:values.mc_remark_1,\n              mc_remark_2:values.mc_remark_2,\n              p_remark_1:values.p_remark_1,\n              p_remark_2:values.p_remark_2,\n              w_remark_1:values.w_remark_1,\n              w_remark_2:values.w_remark_2,\n              i_remark_1:values.i_remark_1,\n              i_remark_2:values.i_remark_2,\n          }\n          formData.append('oem_id',oem.value);\n          formData.append('model_name',values.model_name,);\n          formData.append('type_of_connector',values.type_of_connector);\n          formData.append('make_year',month.label+\"-\"+year.label);\n          formData.append('img_file',imageSelected);\n          formData.append('remark_1',values.gc_remark_1);\n          formData.append('remark_2',values.gc_remark_2);\n          formData.append('all_data',JSON.stringify(tempData));\n          addBatteryAPICall(formData);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors,isValid})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\">\n                    <span className=\"page_title\">Add Battery</span>\n                      <Button color=\"light\" className=\"default float-right\" onClick={()=>history.goBack()}>\n                          <b>Cancel</b>\n                      </Button>\n                      <Button color=\"primary\" className=\"default mr-2 float-right\" onClick={handleSubmit}  disabled={buttonDisabled}>\n                        <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Add</b>\n                      </Button>              \n                  <Separator className=\"mb-5\" />\n                </Colxx>\n              </Row>\n              <Row>\n                <Colxx xxs=\"12\" lg=\"12\">\n                  <ul className=\"list-unstyled mb-4\">\n                    <li>\n                      <CardSubtitle className=\"mb-3\">\n                        <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                          {alertMsg}\n                        </Alert>\n                      </CardSubtitle>\n                    </li>\n                    <li>\n                      <Card className={isValid?\"question d-flex mb-4\":\"question d-flex mb-4 cardBorderError\"}>\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">1</span>\n                              General Characteristics\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse1 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse1(!collapse1)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse1}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                        OEM\n                                      </Label>\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Select OEM\"\n                                        value={oem}\n                                        onChange={(e) => setOem(e)}\n                                        options={oemList}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Model Name\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Model Name\"\n                                        name=\"model_name\"\n                                        value={values.model_name}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        className={errors.model_name && touched.model_name ? \"input-error\":null}\n                                      />\n                                      {errors.model_name && touched.model_name &&(\n                                        <span className=\"error\">{errors.model_name}</span>\n                                      )}\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Make Year\n                                      </Label>\n                                      <Row>\n                                      <Colxx md=\"6\">\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Month\"\n                                        value={month}\n                                        onChange={(e) => setMonth(e)}\n                                        options={[\n                                          { label: 'Jan', value: '1', id: 1 },\n                                          { label: 'Feb', value: '2', id: 2 },\n                                          { label: 'Mar', value: '3', id: 3 },\n                                          { label: 'Apr', value: '4', id: 4 },\n                                          { label: 'May', value: '5', id: 5 },\n                                          { label: 'Jun', value: '6', id: 6 },\n                                          { label: 'Jul', value: '7', id: 7 },\n                                          { label: 'Aug', value: '8', id: 8 },\n                                          { label: 'Sep', value: '9', id: 9 },\n                                          { label: 'Oct', value: '10', id: 10 },\n                                          { label: 'Nov', value: '11', id: 11 },\n                                          { label: 'Dec', value: '12', id: 12 },\n                                        ]}\n                                      />\n                                      </Colxx>\n                                      <Colxx md=\"6\">\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Year\"\n                                        value={year}\n                                        onChange={(e) => setYear(e)}\n                                        options={getYear()}\n                                      />\n                                      </Colxx>\n                                      </Row>\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Chemistry\n                                      </Label>\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        value={chemistry}\n                                        onChange={(e) => setChemistry(e)}\n                                        options={[\n                                          { label: 'NMC', value: '1', id: 1 },\n                                          { label: 'NCA', value: '2', id: 2 },\n                                          { label: 'LFP', value: '3', id: 3 },\n                                          { label: 'LTO', value: '4', id: 4 },\n                                          { label: 'LMO', value: '5', id: 5 }\n                                        ]}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Nominal Capacity (AH)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Nominal Capacity (AH)\"\n                                        name=\"nominal_capacity\"\n                                        value={values.nominal_capacity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Minimum Capacity (AH)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Minimum Capacity (AH)\"\n                                        name=\"minimum_capacity\"\n                                        value={values.minimum_capacity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      No. of cell in series\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"No. of cell in series\"\n                                        name=\"series_cell\"\n                                        value={values.series_cell}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      No. of cell in parallel\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"No. of cell in parallel\"\n                                        name=\"parallel_cell\"\n                                        value={values.parallel_cell}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell Type\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell Type\"\n                                        name=\"cell_type\"\n                                        value={values.cell_type}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell Make\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell Make\"\n                                        name=\"cell_make\"\n                                        value={values.cell_make}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>Remark1\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Total number of cells\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Total number of cells\"\n                                        name=\"total_cells\"\n                                        value={values.total_cells}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Nominal voltage (V)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Nominal voltage (V)\"\n                                        name=\"nominal_voltage\"\n                                        value={values.nominal_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Minimum delivered KWH\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Minimum delivered KWH\"\n                                        name=\"minimum_delivered\"\n                                        value={values.minimum_delivered}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Pack Configuration\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Pack Configuration\"\n                                        name=\"pack_configuration\"\n                                        value={values.pack_configuration}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      BMS type\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"BMS type\"\n                                        name=\"bms_type\"\n                                        value={values.bms_type}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Weight\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Weight\"\n                                        name=\"weight\"\n                                        value={values.weight}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Dimension\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Module dimension\"\n                                        name=\"dimension\"\n                                        value={values.dimension}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Type of Connector\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Type of Connector\"\n                                        name=\"type_of_connector\"\n                                        value={values.type_of_connector}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                      {errors.type_of_connector && touched.type_of_connector &&(\n                                        <span className=\"error\">{errors.type_of_connector}</span>\n                                      )}\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                        Image\n                                      </Label>\n                                      <Input\n                                        key={imageKey}\n                                        type=\"file\"\n                                        name=\"upload_image\"\n                                        accept=\".png,.jpg,.jpeg\"\n                                        onChange={e=>handleImageSelect(e.target.files[0])}\n                                      />\n                                      {imageErrorFLag && \n                                        <span className=\"error\">Image must be either png,jpg or jpeg format</span>\n                                      }\n                                    </FormGroup>\n                                  </Colxx>\n                                  {imagePreview!=null &&\n                                    <Colxx sm={3}>\n                                      <div>\n                                        <Button className=\"custom-badge default tbl_action_btn\" onClick={()=>handleDeleteImage()}><i className=\"glyph-icon simple-icon-trash image-remove-icon\"></i></Button>\n                                        <img src={imagePreview} height=\"100px\" width=\"150px\" alt=\"Image Preview\"/>\n                                      </div>\n                                    </Colxx>\n                                  }\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"gc_remark_1\"\n                                        value={values.gc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"gc_remark_2\"\n                                        value={values.gc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                    </li>\n                    <li>\n                      <Card className=\"question d-flex mb-4\">\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">2</span>\n                              Electrical Characteristics\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse2 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse2(!collapse2)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse2}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Operating Voltage Range(V)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Operating voltage range(V)\"\n                                        name=\"operating_voltage_range\"\n                                        value={values.operating_voltage_range}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Charging Mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Charging mode\"\n                                        name=\"charging_mode\"\n                                        value={values.charging_mode}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Recommended Voltage (V)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Recommended voltage (V)\"\n                                        name=\"recommended_voltage\"\n                                        value={values.recommended_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Std. DisCh. Current (A)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Std. DisCh. current\"\n                                        name=\"discharging_current\"\n                                        value={values.discharging_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Pulsed Discharge Current(A)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Pulsed Discharge Current(A)\"\n                                        name=\"pulsed_discharge_current\"\n                                        value={values.pulsed_discharge_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Std. Charging Current(A)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Std. Charging Current(A)\"\n                                        name=\"standard_charging_current\"\n                                        value={values.standard_charging_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell low cut prot. level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell low cut prot. level\"\n                                        name=\"cell_low_protection_level\"\n                                        value={values.cell_low_protection_level}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell low cut prot. recovery level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell low cut prot. recovery level\"\n                                        name=\"cell_low_protection_recovery\"\n                                        value={values.cell_low_protection_recovery}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell high cut prot. level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell high cut prot. level\"\n                                        name=\"cell_high_protection_level\"\n                                        value={values.cell_high_protection_level}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell high cut prot. recovery level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell high cut prot. rec level\"\n                                        name=\"cell_high_protection_recovery\"\n                                        value={values.cell_high_protection_recovery}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery cells efficiency rate\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery cells efficiency rate\"\n                                        name=\"battery_cells_efficiency\"\n                                        value={values.battery_cells_efficiency}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery cells failure rate\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery cells failure rate\"\n                                        name=\"battery_cells_faliure\"\n                                        value={values.battery_cells_faliure}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery pack efficiency rate\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery pack efficiency rate\"\n                                        name=\"battery_pack_efficiency\"\n                                        value={values.battery_pack_efficiency}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery pack failure rate\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery pack failure rate\"\n                                        name=\"battery_pack_faliure\"\n                                        value={values.battery_pack_faliure}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Bleeding start voltage level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Bleeding start voltage level\"\n                                        name=\"bleeding_start_voltage\"\n                                        value={values.bleeding_start_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Over Temp. prot. in DisCh.mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Over Temp. prot. DisCh.mode\"\n                                        name=\"over_temp_pro_dis\"\n                                        value={values.over_temp_pro_dis}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Over Temp. prot. recovery in DisCh.mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Temp. prot. rec DisCh.mode\"\n                                        name=\"over_temp_recovery_dis\"\n                                        value={values.over_temp_recovery_dis}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Over Temp. prot. in charge mode \n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Temp. prot. charge mode\"\n                                        name=\"over_temp_pro_charge\"\n                                        value={values.over_temp_pro_charge}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Over Temp. prot. recovery in charge mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Temp. prot. rec charge mode\"\n                                        name=\"over_temp_recovery_charge\"\n                                        value={values.over_temp_recovery_charge}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"ec_remark_1\"\n                                        value={values.ec_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"ec_remark_2\"\n                                        value={values.ec_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">3</span>\n                                Temprature Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse3 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse3(!collapse3)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse3}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>                        \n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Maximum Working Temp.\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Max. Working Temp.\"\n                                          name=\"max_working_temp\"\n                                          value={values.max_working_temp}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Storage Temp.\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Storage Temp.\"\n                                          name=\"storage_temp\"\n                                          value={values.storage_temp}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Temp. control at cell level\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Temp. control at cell level\"\n                                          name=\"temp_control_cell\"\n                                          value={values.temp_control_cell}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Temp. control at pack level\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Temp. control at pack level\"\n                                          name=\"temp_control_pack\"\n                                          value={values.temp_control_pack}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Temp. control at swapping panel level\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Temp. control at swapping panel level\"\n                                          name=\"temp_control_swapping\"\n                                          value={values.temp_control_swapping}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"tc_remark_1\"\n                                        value={values.tc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"tc_remark_2\"\n                                        value={values.tc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>                        \n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">4</span>\n                                Mechanical Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse4 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse4(!collapse4)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse4}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Module dimension\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Module dimension\"\n                                          name=\"module_dimension\"\n                                          value={values.module_dimension}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Cabinet design\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Cabinet design\"\n                                          name=\"cabinet_design\"\n                                          value={values.cabinet_design}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Degradation of sensors/connectors\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Degradation of sensors\"\n                                          name=\"degradation_sensors\"\n                                          value={values.degradation_sensors}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Power connector\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Power connector\"\n                                          name=\"power_connector\"\n                                          value={values.power_connector}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        RS485/CAN\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"RS485/CAN\"\n                                          name=\"rs_can\"\n                                          value={values.rs_can}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Casing\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Casing\"\n                                          name=\"casing\"\n                                          value={values.casing}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"mc_remark_1\"\n                                        value={values.mc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"mc_remark_2\"\n                                        value={values.mc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                      <Card className=\"question d-flex mb-4\">\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">5</span>\n                              Protections\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse5 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse5(!collapse5)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse5}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell over voltage prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell over voltage prot.\"\n                                        name=\"cell_over_voltage\"\n                                        value={values.cell_over_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell under voltage prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell under voltage prot.\"\n                                        name=\"cell_under_voltage\"\n                                        value={values.cell_under_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Charging over current prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Charging over current prot.\"\n                                        name=\"charging_over_current\"\n                                        value={values.charging_over_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      DisCh. over current prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"DisCh. over current prot.\"\n                                        name=\"discharging_over_current\"\n                                        value={values.discharging_over_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Output short circuit prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Output short circuit prot.\"\n                                        name=\"output_short_circuit\"\n                                        value={values.output_short_circuit}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell temp prot. in DisCh. mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell temp prot. in DisCh. mode\"\n                                        name=\"cell_temp_protection_discharging\"\n                                        value={values.cell_temp_protection_discharging}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"p_remark_1\"\n                                        value={values.p_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"p_remark_2\"\n                                        value={values.p_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">6</span>\n                                Warranty\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse6 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse6(!collapse6)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse6}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Cycle life @ 80 DoD% / No. of Years\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Cycle life @ 80 DoD% / No. of Years\"\n                                          name=\"cycle_life\"\n                                          value={values.cycle_life}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Capacity retention of 70%\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Capacity retention of 70%\"\n                                          name=\"capacity_retention\"\n                                          value={values.capacity_retention}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Depth of Discharge (DoD) upon return\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Depth of Discharge (DoD) upon return\"\n                                          name=\"depth_discharge\"\n                                          value={values.depth_discharge}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"w_remark_1\"\n                                        value={values.w_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"w_remark_2\"\n                                        value={values.w_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">7</span>\n                                Interface\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse7 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse7(!collapse7)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse7}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Communication Protocol\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Communication Protocol\"\n                                          name=\"communication_prototcol\"\n                                          value={values.communication_prototcol}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Netwrok Communication\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Netwrok Communication\"\n                                          name=\"network_communication\"\n                                          value={values.network_communication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"i_remark_1\"\n                                        value={values.i_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"i_remark_2\"\n                                        value={values.i_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                  </ul>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AddBattery;   \n","import React, { useState, useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardSubtitle,Alert,\n  Label,Input, Button,Collapse,Form,\n } from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getOemAPI,updateBatteryAPI,getBatteryByIdAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateBattery = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //collapse states\n  const [collapse1, setCollapse1] = useState(false);\n  const [collapse2, setCollapse2] = useState(false);\n  const [collapse3, setCollapse3] = useState(false);\n  const [collapse4, setCollapse4] = useState(false);\n  const [collapse5, setCollapse5] = useState(false);\n  const [collapse6, setCollapse6] = useState(false);\n  const [collapse7, setCollapse7] = useState(false);\n  //dropdown states\n  const [oem,setOem] = useState({});\n  const [oemList,setOemList] = useState([]);\n  const [month,setMonth] = useState();\n  const [year,setYear] = useState();\n  const [chemistry,setChemistry] = useState(\"\");\n  //image states\n  const [imageSelected,setImageSelected] = useState();\n  const [imageFilePath,setImageFilePath] = useState();\n  const [imagePreview,setImagePreview] = useState();\n  const [imageErrorFLag,setImageErrorFlag] = useState(false);\n  const [imageKey,setImageKey] = useState(true); //boolean key to rerender input on removing image\n  //form default values states\n  const [modelName,setModelName] = useState(\"\");\n  const [connectorType,setConnectorType] = useState(\"\");\n  const [gcRemark1,setGcRemark1] = useState(\"\");\n  const [gcRemark2,setGcRemark2] = useState(\"\");\n  const [nominalCapacity,setNominalCapacity] = useState(\"\");\n  const [minimumCapacity,setMinimumCapacity] = useState(\"\");\n  const [seriesCell,setSeriesCell] = useState(\"\");\n  const [parallelCell,setParallelCell] = useState(\"\");\n  const [cellType,setCellType] = useState(\"\");\n  const [cellMake,setCellMake] = useState(\"\");\n  const [totalCells,setTotalCells] = useState(\"\");\n  const [nominalVoltage,setNominalVoltage] = useState(\"\");\n  const [minimumDelivered,setMinimumDelivered] = useState(\"\");\n  const [packConfiguration,setPackConfiguration] = useState(\"\");\n  const [bmsType,setBmsType] = useState(\"\");\n  const [weight,setWeight] = useState(\"\");\n  const [dimension,setDimension] = useState(\"\");            \n  const [operatingVoltageRange,setOperatingVoltageRange] = useState(\"\");\n  const [chargingMode,setChargingMode] = useState(\"\");\n  const [recommendedVoltage,setRecommendedVoltage] = useState(\"\");\n  const [dischargingCurrent,setDischargingCurrent] = useState(\"\");           \n  const [pulsedDischargeCurrent,setPulsedDischargeCurrent] = useState(\"\");\n  const [standardChargingCurrent,setStandardChargingCurrent] = useState(\"\");\n  const [cellLowProtectionLevel,setCellLowProtectionLevel] = useState(\"\");            \n  const [cellLowProtectionRecovery,setCellLowProtectionRecovery] = useState(\"\");\n  const [cellHighProtectionLevel,setCellHighProtectionLevel] = useState(\"\");\n  const [cellHighProtectionRecovery,setCellHighProtectionRecovery] = useState(\"\");\n  const [batteryCellsEfficiency,setBatteryCellsEfficiency] = useState(\"\");\n  const [batteryCellsFaliure,setBatteryCellsFaliure] = useState(\"\");\n  const [batteryPackEfficiency,setBatteryPackEfficiency] = useState(\"\");\n  const [batteryPackFaliure,setBatteryPackFaliure] = useState(\"\");\n  const [bleedingstartvoltage,setBleedingstartvoltage] = useState(\"\");\n  const [overTempProDis,setOverTempProDis] = useState(\"\");\n  const [overTempRecoveryDis,setOverTempRecoveryDis] = useState(\"\");\n  const [overTempProCharge,setOverTempProCharge] = useState(\"\");\n  const [overTempRecoveryCharge,setOverTempRecoveryCharge] = useState(\"\");\n  const [maxWorkingTemp,setMaxWorkingTemp] = useState(\"\");\n  const [storageTemp,setStorageTemp] = useState(\"\");\n  const [tempControlCell,setTempControlCell] = useState(\"\");\n  const [tempControlPack,setTempControlPack] = useState(\"\");\n  const [tempControlSwapping,setTempControlSwapping] = useState(\"\");\n  const [moduleDimension,setModuleDimension] = useState(\"\");\n  const [cabinetDesign,setCabinetDesign] = useState(\"\");\n  const [degradationSensors,setDegradationSensors] = useState(\"\");\n  const [powerConnector,setPowerConnector] = useState(\"\");\n  const [rsCan,setRsCan] = useState(\"\");\n  const [casing,setCasing] = useState(\"\");\n  const [cellOverVoltage,setCellOverVoltage] = useState(\"\");\n  const [cellUnderVoltage,setCellUnderVoltage] = useState(\"\");\n  const [chargingOverCurrent,setChargingOverCurrent] = useState(\"\");\n  const [dischargingOverCurrent,setDischargingOverCurrent] = useState(\"\");\n  const [outputShortCircuit,setOutputShortCircuit] = useState(\"\");\n  const [cellTempProtectionDischarging,setCellTempProtectionDischarging] = useState(\"\");\n  const [cycleLife,setCycleLife] = useState(\"\");\n  const [capacityRetention,setCapacityRetention] = useState(\"\");\n  const [depthDischarge,setDepthDischarge] = useState(\"\");            \n  const [communicationPrototcol,setcommunicationPrototcol] = useState(\"\");            \n  const [networkCommunication,setNetworkCommunication] = useState(\"\");\n  const [ecRemark1,setEcRemark1] = useState(\"\");\n  const [ecRemark2,setEcRemark2] = useState(\"\");   \n  const [tcRemark1,setTcRemark1] = useState(\"\");\n  const [tcRemark2,setTcRemark2] = useState(\"\");          \n  const [mcRemark1,setMcRemark1] = useState(\"\");\n  const [mcRemark2,setMcRemark2] = useState(\"\"); \n  const [pRemark1,setPRemark1] = useState(\"\");\n  const [pRemark2,setPRemark2] = useState(\"\"); \n  const [wRemark1,setWRemark1] = useState(\"\");\n  const [wRemark2,setWRemark2] = useState(\"\"); \n  const [iRemark1,setIRemark1] = useState(\"\");\n  const [iRemark2,setIRemark2] = useState(\"\"); \n \n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getOemAPICall();\n    getBatteryByIdAPICall();\n},[])\n\n\n  //API calls\n  const getOemAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:\"1\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let tempData = [];\n        if (responseData.status === 1) {          \n          responseData.data.map(item=>{\n            tempData.push({label: item.name, value: item.oem_id, id:item.oem_id});\n          })\n          setOemList(tempData);\n        }else{\n          updateBatteryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getBatteryByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getBatteryByIdAPI,\n        {\n            battery_master_id:location.state.battery_master_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            let allData = {};\n            if (responseData.status === 1) {\n                setImagePreview(responseData.data.file_img);\n                setImageFilePath(responseData.data.file_name_path);\n                setOem({label:responseData.data.oem_name,value:responseData.data.oem_id,id:responseData.data.oem_id});\n                setModelName(responseData.data.model_name);\n                setConnectorType(responseData.data.type_of_connector);\n                setGcRemark1(responseData.data.remark_1);\n                setGcRemark2(responseData.data.remark_2);\n                allData = JSON.parse(responseData.data.all_data);\n                setMonth(allData.make_year.month);\n                setYear(allData.make_year.year);\n                setChemistry(allData.chemistry);\n                setNominalCapacity(allData.nominal_capacity);\n                setMinimumCapacity(allData.minimum_capacity);\n                setSeriesCell(allData.series_cell);\n                setParallelCell(allData.parallel_cell);\n                setCellType(allData.cell_type);\n                setCellMake(allData.cell_make);\n                setTotalCells(allData.total_cells);\n                setNominalVoltage(allData.nominal_voltage);\n                setMinimumDelivered(allData.minimum_delivered);\n                setPackConfiguration(allData.pack_configuration);\n                setBmsType(allData.bms_type);\n                setWeight(allData.weight);\n                setDimension(allData.dimension);\n                setOperatingVoltageRange(allData.operating_voltage_range);\n                setChargingMode(allData.chargingMode);\n                setRecommendedVoltage(allData.recommended_voltage);\n                setDischargingCurrent(allData.discharging_current);\n                setPulsedDischargeCurrent(allData.pulsed_discharge_current);\n                setStandardChargingCurrent(allData.standard_charging_current);\n                setCellLowProtectionLevel(allData.cell_low_protection_level);\n                setCellLowProtectionRecovery(allData.cell_low_protection_recovery);\n                setCellHighProtectionLevel(allData.cell_high_protection_level);\n                setCellHighProtectionRecovery(allData.cell_high_protection_recovery);\n                setBatteryCellsEfficiency(allData.battery_cells_efficiency);\n                setBatteryCellsFaliure(allData.battery_cells_faliure);\n                setBatteryPackEfficiency(allData.battery_pack_efficiency);\n                setBatteryPackFaliure(allData.battery_pack_faliure);\n                setBleedingstartvoltage(allData.bleeding_start_voltage);\n                setOverTempProDis(allData.over_temp_pro_dis);\n                setOverTempRecoveryDis(allData.over_temp_recovery_dis);\n                setOverTempProCharge(allData.over_temp_pro_charge);\n                setOverTempRecoveryCharge(allData.over_temp_recovery_charge);\n                setMaxWorkingTemp(allData.max_working_temp);\n                setStorageTemp(allData.storage_temp);\n                setTempControlCell(allData.temp_control_cell);\n                setTempControlPack(allData.temp_control_pack);\n                setTempControlSwapping(allData.temp_control_swapping);\n                setModuleDimension(allData.module_dimension);\n                setCabinetDesign(allData.cabinet_design);\n                setDegradationSensors(allData.degradation_sensors);\n                setPowerConnector(allData.power_connector);\n                setRsCan(allData.rs_can);\n                setCasing(allData.casing);\n                setCellOverVoltage(allData.cell_over_voltage);\n                setCellUnderVoltage(allData.cell_under_voltage);\n                setChargingOverCurrent(allData.charging_over_current);\n                setDischargingOverCurrent(allData.discharging_over_current);\n                setOutputShortCircuit(allData.output_short_circuit);\n                setCellTempProtectionDischarging(allData.cell_temp_protection_discharging);\n                setCycleLife(allData.cycle_life);\n                setCapacityRetention(allData.capacity_retention);\n                setDepthDischarge(allData.depth_discharge);\n                setcommunicationPrototcol(allData.communication_prototcol);\n                setNetworkCommunication(allData.network_communication);\n                setEcRemark1(allData.ec_remark_1);\n                setEcRemark2(allData.ec_remark_2);\n                setTcRemark1(allData.tc_remark_1);\n                setTcRemark2(allData.tc_remark_2);\n                setMcRemark1(allData.mc_remark_1);\n                setMcRemark2(allData.mc_remark_2);\n                setPRemark1(allData.p_remark_1);\n                setPRemark2(allData.p_remark_2);\n                setWRemark1(allData.w_remark_1);\n                setWRemark2(allData.w_remark_2);\n                setIRemark1(allData.i_remark_1);\n                setIRemark2(allData.i_remark_2);\n            }else{\n              updateBatteryAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n    const updateBatteryAPICall = async(params) => {\n        setButtonDisabled(true);\n        const currentUser = getCurrentUser();\n        await axios.post(updateBatteryAPI,\n        params,\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n            history.push({\n                pathname:adminRoot+'/pages/battery',\n                state:{\n                responseStatus:responseData.status,\n                responseMsg:responseData.msg\n                }\n            })\n            }else{\n              setButtonDisabled(false);\n              updateBatteryAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            setButtonDisabled(false);\n            console.log(error);\n        })\n    }\n\n  //Form Validation Schema\n  const BatteryDetailsValidationSchema = yup.object().shape({\n    model_name:yup.string()\n        .required(\"Model name is required\"),\n    type_of_connector:yup.string()\n        .required(\"Type of connector is required\"),\n  });\n\n  //helpers\n  const getYear = () => {\n    let yearList = [];\n    for (let index = 0; index <= 20; index++) {\n      const temp = {label:2010+index,value:index+1,id:index+1}\n      yearList.push(temp);\n    }\n    return yearList\n  };\n  //Alert helper methods\n  const updateBatteryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //image selection methods\n  const handleImageSelect = (imageFile) =>{\n    const fileExtension = imageFile.name.split('.').pop();\n    if (fileExtension == \"jpg\" || fileExtension == \"jpeg\" || fileExtension == \"png\") {\n      setImageErrorFlag(false);\n      setImageSelected(imageFile);\n      setImageFilePath(\"\");\n      setImagePreview(URL.createObjectURL(imageFile));\n    } else {\n      setImageErrorFlag(true);\n    }\n  }\n  const handleDeleteImage = () =>{\n    setImageKey(!imageKey);\n    setImagePreview();\n    setImageFilePath(\"\");\n  }\n\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            model_name:modelName,\n            nominal_capacity:nominalCapacity,\n            minimum_capacity:minimumCapacity,\n            series_cell:seriesCell,\n            parallel_cell:parallelCell,\n            cell_type:cellType,\n            cell_make:cellMake,\n            total_cells:totalCells,\n            nominal_voltage:nominalVoltage,\n            minimum_delivered:minimumDelivered,\n            pack_configuration:packConfiguration,\n            bms_type:bmsType,\n            weight:weight,\n            dimension:dimension,\n            type_of_connector:connectorType,\n            gc_remark_1:gcRemark1,\n            gc_remark_2:gcRemark2,\n            operating_voltage_range:operatingVoltageRange,\n            charging_mode:chargingMode,\n            recommended_voltage:recommendedVoltage,\n            discharging_current:dischargingCurrent,\n            pulsed_discharge_current:pulsedDischargeCurrent,\n            standard_charging_current:standardChargingCurrent,\n            cell_low_protection_level:cellLowProtectionLevel,\n            cell_low_protection_recovery:cellLowProtectionRecovery,\n            cell_high_protection_level:cellHighProtectionLevel,\n            cell_high_protection_recovery:cellHighProtectionRecovery,\n            battery_cells_efficiency:batteryCellsEfficiency,\n            battery_cells_faliure:batteryCellsFaliure,\n            battery_pack_efficiency:batteryPackEfficiency,\n            battery_pack_faliure:batteryPackFaliure,\n            bleeding_start_voltage:bleedingstartvoltage,\n            over_temp_pro_dis:overTempProDis,\n            over_temp_recovery_dis:overTempRecoveryDis,\n            over_temp_pro_charge:overTempProCharge,\n            over_temp_recovery_charge:overTempRecoveryCharge,\n            max_working_temp:maxWorkingTemp,\n            storage_temp:storageTemp,\n            temp_control_cell:tempControlCell,\n            temp_control_pack:tempControlPack,\n            temp_control_swapping:tempControlSwapping,\n            module_dimension:moduleDimension,\n            cabinet_design:cabinetDesign,\n            degradation_sensors:degradationSensors,\n            power_connector:powerConnector,\n            rs_can:rsCan,\n            casing:casing,\n            cell_over_voltage:cellOverVoltage,\n            cell_under_voltage:cellUnderVoltage,\n            charging_over_current:chargingOverCurrent,\n            discharging_over_current:dischargingOverCurrent,\n            output_short_circuit:outputShortCircuit,\n            cell_temp_protection_discharging:cellTempProtectionDischarging,\n            cycle_life:cycleLife,\n            capacity_retention:capacityRetention,\n            depth_discharge:depthDischarge,\n            communication_prototcol:communicationPrototcol,\n            network_communication:networkCommunication,\n            ec_remark_1:ecRemark1,\n            ec_remark_2:ecRemark2,\n            tc_remark_1:tcRemark1,\n            tc_remark_2:tcRemark2,\n            mc_remark_1:mcRemark1,\n            mc_remark_2:mcRemark2,\n            p_remark_1:pRemark1,\n            p_remark_2:pRemark2,\n            w_remark_1:wRemark1,\n            w_remark_2:wRemark2,\n            i_remark_1:iRemark1,\n            i_remark_2:iRemark2,\n        }}\n        validationSchema={BatteryDetailsValidationSchema} \n        onSubmit={(values)=>{\n          if (month == null || year == null) {\n            updateBatteryAlert(\"Make Year is required\");\n            return;\n          }\n          let formData  = new FormData();\n          const tempData={\n              make_year:{month:month,year:year},\n              chemistry:chemistry,\n              nominal_capacity:values.nominal_capacity,\n              minimum_capacity:values.minimum_capacity,\n              series_cell:values.series_cell,\n              parallel_cell:values.parallel_cell,\n              cell_type:values.cell_type,\n              cell_make:values.cell_make,\n              total_cells:values.total_cells,\n              nominal_voltage:values.nominal_voltage,\n              minimum_delivered:values.minimum_delivered,\n              pack_configuration:values.pack_configuration,\n              bms_type:values.bms_type,\n              weight:values.weight,\n              dimension:values.dimension,\n              operating_voltage_range:values.operating_voltage_range,\n              charging_mode:values.charging_mode,\n              recommended_voltage:values.recommended_voltage,\n              discharging_current:values.discharging_current,\n              pulsed_discharge_current:values.pulsed_discharge_current,\n              standard_charging_current:values.standard_charging_current,\n              cell_low_protection_level:values.cell_low_protection_level,\n              cell_low_protection_recovery:values.cell_low_protection_recovery,\n              cell_high_protection_level:values.cell_high_protection_level,\n              cell_high_protection_recovery:values.cell_high_protection_recovery,\n              battery_cells_efficiency:values.battery_cells_efficiency,\n              battery_cells_faliure:values.battery_cells_faliure,\n              battery_pack_efficiency:values.battery_pack_efficiency,\n              battery_pack_faliure:values.battery_pack_faliure,\n              bleeding_start_voltage:values.bleeding_start_voltage,\n              over_temp_pro_dis:values.over_temp_pro_dis,\n              over_temp_recovery_dis:values.over_temp_recovery_dis,\n              over_temp_pro_charge:values.over_temp_pro_charge,\n              over_temp_recovery_charge:values.over_temp_recovery_charge,\n              max_working_temp:values.max_working_temp,\n              storage_temp:values.storage_temp,\n              temp_control_cell:values.temp_control_cell,\n              temp_control_pack:values.temp_control_pack,\n              temp_control_swapping:values.temp_control_swapping,\n              module_dimension:values.module_dimension,\n              cabinet_design:values.cabinet_design,\n              degradation_sensors:values.degradation_sensors,\n              power_connector:values.power_connector,\n              rs_can:values.rs_can,\n              casing:values.casing,\n              cell_over_voltage:values.cell_over_voltage,\n              cell_under_voltage:values.cell_under_voltage,\n              charging_over_current:values.charging_over_current,\n              discharging_over_current:values.discharging_over_current,\n              output_short_circuit:values.output_short_circuit,\n              cell_temp_protection_discharging:values.cell_temp_protection_discharging,\n              cycle_life:values.cycle_life,\n              capacity_retention:values.capacity_retention,\n              depth_discharge:values.depth_discharge,\n              communication_prototcol:values.communication_prototcol,\n              network_communication:values.network_communication,\n              ec_remark_1:values.ec_remark_1,\n              ec_remark_2:values.ec_remark_2,\n              tc_remark_1:values.tc_remark_1,\n              tc_remark_2:values.tc_remark_2,\n              mc_remark_1:values.mc_remark_1,\n              mc_remark_2:values.mc_remark_2,\n              p_remark_1:values.p_remark_1,\n              p_remark_2:values.p_remark_2,\n              w_remark_1:values.w_remark_1,\n              w_remark_2:values.w_remark_2,\n              i_remark_1:values.i_remark_1,\n              i_remark_2:values.i_remark_2,\n          }\n          formData.append('battery_master_id',location.state.battery_master_id);\n          formData.append('oem_id',oem.value);\n          formData.append('model_name',values.model_name,);\n          formData.append('type_of_connector',values.type_of_connector);\n          formData.append('make_year',month.label+\"-\"+year.label);\n          formData.append('file_name_path',imageFilePath);\n          formData.append('remark_1',values.gc_remark_1);\n          formData.append('remark_2',values.gc_remark_2);\n          formData.append('all_data',JSON.stringify(tempData));\n          if (imageSelected!=null){\n            formData.append('img_file',imageSelected);\n          }\n          updateBatteryAPICall(formData);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors,isValid})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\">\n                    <span className=\"page_title\">Update Battery</span>\n                      <Button color=\"light\" className=\"default float-right\" onClick={()=>history.goBack()}>\n                          <b>Cancel</b>\n                      </Button>\n                      <Button color=\"primary\" className=\"default mr-2 float-right\" onClick={handleSubmit} disabled={buttonDisabled}>\n                        <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Update</b>\n                      </Button>              \n                  <Separator className=\"mb-5\" />\n                </Colxx>\n              </Row>\n              <Row>\n                <Colxx xxs=\"12\" lg=\"12\">\n                  <ul className=\"list-unstyled mb-4\">\n                    <li>\n                      <CardSubtitle className=\"mb-3\">\n                        <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                          {alertMsg}\n                        </Alert>\n                      </CardSubtitle>\n                    </li>\n                    <li>\n                      <Card className={isValid?\"question d-flex mb-4\":\"question d-flex mb-4 cardBorderError\"}>\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">1</span>\n                              General Characteristics\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse1 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse1(!collapse1)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse1}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                        OEM\n                                      </Label>\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Year\"\n                                        value={oem}\n                                        onChange={(e) => setOem(e)}\n                                        options={oemList}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Model Name\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Model Name\"\n                                        name=\"model_name\"\n                                        value={values.model_name}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        className={errors.model_name && touched.model_name ? \"input-error\":null}\n                                      />\n                                      {errors.model_name && touched.model_name &&(\n                                        <span className=\"error\">{errors.model_name}</span>\n                                      )}\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Make Year\n                                      </Label>\n                                      <Row>\n                                      <Colxx md=\"6\">\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Month\"\n                                        value={month}\n                                        onChange={(e) => setMonth(e)}\n                                        options={[\n                                          { label: 'Jan', value: '1', id: 1 },\n                                          { label: 'Feb', value: '2', id: 2 },\n                                          { label: 'Mar', value: '3', id: 3 },\n                                          { label: 'Apr', value: '4', id: 4 },\n                                          { label: 'May', value: '5', id: 6 },\n                                          { label: 'Jun', value: '6', id: 7 },\n                                          { label: 'Jul', value: '7', id: 8 },\n                                          { label: 'Aug', value: '8', id: 9 },\n                                          { label: 'Sep', value: '9', id: 10 },\n                                          { label: 'Oct', value: '10', id: 11 },\n                                          { label: 'Nov', value: '11', id: 12 },\n                                          { label: 'Dec', value: '12', id: 13 },\n                                        ]}\n                                      />\n                                      </Colxx>\n                                      <Colxx md=\"6\">\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Year\"\n                                        value={year}\n                                        onChange={(e) => setYear(e)}\n                                        options={getYear()}\n                                      />\n                                      </Colxx>\n                                      </Row>\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Chemistry\n                                      </Label>\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        value={chemistry}\n                                        onChange={(e) => setChemistry(e)}\n                                        options={[\n                                          { label: 'NMC', value: '1', id: 1 },\n                                          { label: 'NCA', value: '2', id: 2 },\n                                          { label: 'LFP', value: '3', id: 3 },\n                                          { label: 'LTO', value: '4', id: 4 },\n                                          { label: 'LMO', value: '5', id: 5 }\n                                        ]}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Nominal Capacity (AH)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Nominal Capacity (AH)\"\n                                        name=\"nominal_capacity\"\n                                        value={values.nominal_capacity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Minimum Capacity (AH)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Minimum Capacity (AH)\"\n                                        name=\"minimum_capacity\"\n                                        value={values.minimum_capacity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      No. of cell in series\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"No. of cell in series\"\n                                        name=\"series_cell\"\n                                        value={values.series_cell}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      No. of cell in parallel\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"No. of cell in parallel\"\n                                        name=\"parallel_cell\"\n                                        value={values.parallel_cell}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell Type\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell Type\"\n                                        name=\"cell_type\"\n                                        value={values.cell_type}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell Make\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell Make\"\n                                        name=\"cell_make\"\n                                        value={values.cell_make}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Total number of cells\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Total number of cells\"\n                                        name=\"total_cells\"\n                                        value={values.total_cells}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Nominal voltage (V)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Nominal voltage (V)\"\n                                        name=\"nominal_voltage\"\n                                        value={values.nominal_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Minimum delivered KWH\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Minimum delivered KWH\"\n                                        name=\"minimum_delivered\"\n                                        value={values.minimum_delivered}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Pack Configuration\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Pack Configuration\"\n                                        name=\"pack_configuration\"\n                                        value={values.pack_configuration}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      BMS type\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"BMS type\"\n                                        name=\"bms_type\"\n                                        value={values.bms_type}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Weight\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Weight\"\n                                        name=\"weight\"\n                                        value={values.weight}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Dimension\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Module dimension\"\n                                        name=\"dimension\"\n                                        value={values.dimension}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Type of Connector\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Type of Connector\"\n                                        name=\"type_of_connector\"\n                                        value={values.type_of_connector}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                      {errors.type_of_connector && touched.type_of_connector &&(\n                                        <span className=\"error\">{errors.type_of_connector}</span>\n                                      )}\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                        Image\n                                      </Label>\n                                      <Input\n                                        key={imageKey}\n                                        type=\"file\"\n                                        name=\"upload_image\"\n                                        accept=\".png,.jpg,.jpeg\"\n                                        onChange={e=>handleImageSelect(e.target.files[0])}\n                                      />\n                                      {imageErrorFLag && \n                                        <span className=\"error\">Image must be either png,jpg or jpeg format</span>\n                                      }\n                                    </FormGroup>\n                                  </Colxx>\n                                  {(imagePreview!=null && imagePreview!=\"\") &&\n                                    <Colxx sm={3}>\n                                      <div>\n                                        <Button className=\"custom-badge default tbl_action_btn\" onClick={()=>handleDeleteImage()}><i className=\"glyph-icon simple-icon-trash image-remove-icon\"></i></Button>\n                                        <img src={imagePreview} height=\"100px\" width=\"150px\" alt=\"Image Preview\"/>\n                                      </div>\n                                    </Colxx>\n                                  }                \n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark 1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"gc_remark_1\"\n                                        value={values.gc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark 2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"gc_remark_2\"\n                                        value={values.gc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                    </li>\n                    <li>\n                      <Card className=\"question d-flex mb-4\">\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">2</span>\n                              Electrical Characteristics\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse2 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse2(!collapse2)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse2}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Operating Voltage Range(V)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Operating voltage range(V)\"\n                                        name=\"operating_voltage_range\"\n                                        value={values.operating_voltage_range}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Charging Mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Charging mode\"\n                                        name=\"charging_mode\"\n                                        value={values.charging_mode}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Recommended Voltage (V)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Recommended voltage (V)\"\n                                        name=\"recommended_voltage\"\n                                        value={values.recommended_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Std. DisCh. Current (A)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Std. DisCh. current\"\n                                        name=\"discharging_current\"\n                                        value={values.discharging_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Pulsed Discharge Current(A)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Pulsed Discharge Current(A)\"\n                                        name=\"pulsed_discharge_current\"\n                                        value={values.pulsed_discharge_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Std. Charging Current(A)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Std. Charging Current(A)\"\n                                        name=\"standard_charging_current\"\n                                        value={values.standard_charging_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell low cut prot. level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell low cut prot. level\"\n                                        name=\"cell_low_protection_level\"\n                                        value={values.cell_low_protection_level}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell low cut prot. recovery level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell low cut prot. recovery level\"\n                                        name=\"cell_low_protection_recovery\"\n                                        value={values.cell_low_protection_recovery}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell high cut prot. level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell high cut prot. level\"\n                                        name=\"cell_high_protection_level\"\n                                        value={values.cell_high_protection_level}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell high cut prot. recovery level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell high cut prot. rec level\"\n                                        name=\"cell_high_protection_recovery\"\n                                        value={values.cell_high_protection_recovery}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery cells efficiency rate\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery cells efficiency rate\"\n                                        name=\"battery_cells_efficiency\"\n                                        value={values.battery_cells_efficiency}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery cells failure rate\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery cells failure rate\"\n                                        name=\"battery_cells_faliure\"\n                                        value={values.battery_cells_faliure}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery pack efficiency rate\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery pack efficiency rate\"\n                                        name=\"battery_pack_efficiency\"\n                                        value={values.battery_pack_efficiency}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery pack failure rate\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery pack failure rate\"\n                                        name=\"battery_pack_faliure\"\n                                        value={values.battery_pack_faliure}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Bleeding start voltage level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Bleeding start voltage level\"\n                                        name=\"bleeding_start_voltage\"\n                                        value={values.bleeding_start_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Over temp. prot. in DisCh.mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Over Temp. prot. DisCh.mode\"\n                                        name=\"over_temp_pro_dis\"\n                                        value={values.over_temp_pro_dis}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Over temp. prot. recovery in DisCh.mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Temp. prot. rec DisCh.mode\"\n                                        name=\"over_temp_recovery_dis\"\n                                        value={values.over_temp_recovery_dis}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Over temp. prot. in charge mode \n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Temp. prot. charge mode\"\n                                        name=\"over_temp_pro_charge\"\n                                        value={values.over_temp_pro_charge}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Over temp. prot. recovery in charge mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Temp. prot. rec charge mode\"\n                                        name=\"over_temp_recovery_charge\"\n                                        value={values.over_temp_recovery_charge}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"ec_remark_1\"\n                                        value={values.ec_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"ec_remark_2\"\n                                        value={values.ec_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">3</span>\n                                Temprature Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse3 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse3(!collapse3)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse3}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>                        \n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Maximum Working Temp.\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Max. Working Temp.\"\n                                          name=\"max_working_temp\"\n                                          value={values.max_working_temp}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Storage Temp.\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Storage Temp.\"\n                                          name=\"storage_temp\"\n                                          value={values.storage_temp}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Temp. control at cell level\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Temp. control at cell level\"\n                                          name=\"temp_control_cell\"\n                                          value={values.temp_control_cell}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Temp. control at pack level\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Temp. control at pack level\"\n                                          name=\"temp_control_pack\"\n                                          value={values.temp_control_pack}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Temp. control at swapping panel level\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Temp. control at swapping panel level\"\n                                          name=\"temp_control_swapping\"\n                                          value={values.temp_control_swapping}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"tc_remark_1\"\n                                        value={values.tc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"tc_remark_2\"\n                                        value={values.tc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>                        \n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">4</span>\n                                Mechanical Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse4 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse4(!collapse4)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse4}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Module dimension\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Module dimension\"\n                                          name=\"module_dimension\"\n                                          value={values.module_dimension}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Cabinet design\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Cabinet design\"\n                                          name=\"cabinet_design\"\n                                          value={values.cabinet_design}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Degradation of sensors/connectors\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Degradation of sensors\"\n                                          name=\"degradation_sensors\"\n                                          value={values.degradation_sensors}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Power connector\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Power connector\"\n                                          name=\"power_connector\"\n                                          value={values.power_connector}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        RS485/CAN\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"RS485/CAN\"\n                                          name=\"rs_can\"\n                                          value={values.rs_can}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Casing\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Casing\"\n                                          name=\"casing\"\n                                          value={values.casing}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"mc_remark_1\"\n                                        value={values.mc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"mc_remark_2\"\n                                        value={values.mc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                      <Card className=\"question d-flex mb-4\">\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">5</span>\n                              Protections\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse5 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse5(!collapse5)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse5}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell over voltage prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell over voltage prot.\"\n                                        name=\"cell_over_voltage\"\n                                        value={values.cell_over_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell under voltage prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell under voltage prot.\"\n                                        name=\"cell_under_voltage\"\n                                        value={values.cell_under_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Charging over current prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Charging over current prot.\"\n                                        name=\"charging_over_current\"\n                                        value={values.charging_over_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      DisCh. over current prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"DisCh. over current prot.\"\n                                        name=\"discharging_over_current\"\n                                        value={values.discharging_over_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Output short circuit prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Output short circuit prot.\"\n                                        name=\"output_short_circuit\"\n                                        value={values.output_short_circuit}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell temp prot. in DisCh. mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell temp prot. in DisCh. mode\"\n                                        name=\"cell_temp_protection_discharging\"\n                                        value={values.cell_temp_protection_discharging}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"p_remark_1\"\n                                        value={values.p_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"p_remark_2\"\n                                        value={values.p_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">6</span>\n                                Warranty\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse6 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse6(!collapse6)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse6}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Cycle life @ 80 DoD% / No. of Years\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Cycle life @ 80 DoD% / No. of Years\"\n                                          name=\"cycle_life\"\n                                          value={values.cycle_life}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Capacity retention of 70%\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Capacity retention of 70%\"\n                                          name=\"capacity_retention\"\n                                          value={values.capacity_retention}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Depth of Discharge (DoD) upon return\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Depth of Discharge (DoD) upon return\"\n                                          name=\"depth_discharge\"\n                                          value={values.depth_discharge}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"w_remark_1\"\n                                        value={values.w_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"w_remark_2\"\n                                        value={values.w_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">7</span>\n                                Interface\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse7 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse7(!collapse7)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse7}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Communication Protocol\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Communication Protocol\"\n                                          name=\"communication_prototcol\"\n                                          value={values.communication_prototcol}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Netwrok Communication\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Netwrok Communication\"\n                                          name=\"network_communication\"\n                                          value={values.network_communication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"i_remark_1\"\n                                        value={values.i_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"i_remark_2\"\n                                        value={values.i_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                  </ul>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default UpdateBattery;   \n","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  Input,InputGroup \n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getEvListAPI,deleteEvAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\nconst EvMaster = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //station list\n  const [evList,setEvList] = useState([]);\n  const [evID,setEvID] = useState(\"\");\n  const [evToDeleteId,setEvToDeleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n  \n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getEvListAPICall();\n    evAlert();\n  },[evID,pageCount])\n\n  //API calls\n  const getEvListAPICall = async() => {\n    setEvList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getEvListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setEvList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n      setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteEvAPICall = async(evId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteEvAPI,\n      {ev_master_id:evId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setEvID(evId);\n          evDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updateEv = (evId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updateev',\n      state:{ev_master_id:evId}\n    });\n  }\n\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const evDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const evAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (evId) => {\n    setEvToDeleteId(evId)\n    setModalVisible(!modalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getEvListAPICall();\n  }\n\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Electrical Vehicle</span>\n            <a href=\"addev\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                  <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                    {alertMsg}\n                  </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Vehicle Model</th>\n                    <th>Vehicle Make</th>\n                    <th>Vehicle Type</th>\n                    <th>Battery Capacity</th>\n                    <th>Fleet Owner</th>\n                    <th>EV Driver</th>\n                    <th>Remark1</th>\n                    <th>Remark2</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"10\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                  evList.length > 0 ?\n                    evList.map((item,index)=>\n                        <tr key={index}>\n                        <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                        <td>{item.vehicle_model}</td>\n                        <td>{item.vehicle_make}</td>\n                        <td>{item.vehicle_type}</td>\n                        <td>{item.battery_capacity}</td>\n                        <td>{item.fleet_operator_name}</td>\n                        <td>{JSON.parse(item.all_data)!=null?JSON.parse(item.all_data).ev_driver:\"\"}</td>\n                        <td>{item.remark_1}</td>\n                        <td>{item.remark_2}</td>\n                        <td>\n                          <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateEv(item.ev_master_id)}}>\n                              <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                          </a>\n                          <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.ev_master_id)}}>\n                              <i className=\"glyph-icon simple-icon-trash\"></i>\n                          </Button>\n                        </td>\n                      </tr>\n                      ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"10\">Data  Not  Found</td>\n                        </tr>\n                    }\n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  Are you sure you would like to delete this EV?\n                  <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteEvAPICall(evToDeleteId)}>\n                    Delete EV \n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                    Cancel\n                  </Button>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default EvMaster;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row, FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {addEvAPI,adminRoot,getFleetOperatorAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst AddEV = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  const [fleetOpNames,setFleetOpNames] = useState([]); \n\n  useEffect(()=>{\n      GetFleetOperatorAPICall();\n  },[]);\n\n  const history = useHistory();\n\n  const GetFleetOperatorAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n        if (responseData.status === 1) {\n         setFleetOpNames(responseData.data);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  //API calls\n  const addEvAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addEvAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/ev',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          evAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const evAddedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const EvDetailsValidationSchema = yup.object().shape({\n    vehicle_model:yup.string()\n        .required(\"Vehicle Model is required\"),\n    vehicle_make:yup.string()\n        .required(\"Vehicle Make is required\"),\n    vehicle_type:yup.string()\n        .required(\"Vehicle Type is required\"),\n    battery_capacity:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"Battery Capacity is required\"),\n    fleet_owner_id:yup.string()\n        .required(\"Fleet Owner is required\"),\n  });\n\n  const initialValues = {\n    vehicle_model:\"\",\n    vehicle_make:\"\",\n    vehicle_type:\"\",\n    battery_capacity:\"\",\n    fleet_owner_id:\"\",\n    ev_driver:\"\",\n    remark_1:\"\",\n    remark_2:\"\"\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add EV</span>\n            <a href=\"ev\" className=\"btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> EV List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={EvDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const tempAllData = {ev_driver:values.ev_driver}\n          const params = {\n            vehicle_model:values.vehicle_model,\n            vehicle_make:values.vehicle_make,\n            vehicle_type:values.vehicle_type,\n            battery_capacity:values.battery_capacity,\n            fleet_owner_id:values.fleet_owner_id,\n            all_data:JSON.stringify(tempAllData),\n            remark_1:values.remark_1,\n            remark_2:values.remark_2\n          }\n          addEvAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                          <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                  Vehicle Model\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Vehicle Model\"\n                                  name=\"vehicle_model\"\n                                  value={values.vehicle_model}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.vehicle_model && touched.vehicle_model ? \"input-error\":null}\n                                />\n                                {errors.vehicle_model && touched.vehicle_model &&(\n                                  <span className=\"error\">{errors.vehicle_model}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                  Vehicle Make\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Vehicle Make\"\n                                  value={values.vehicle_make}\n                                  name=\"vehicle_make\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.vehicle_make && touched.vehicle_make ? \"input-error\":null}\n                                />\n                                {errors.vehicle_make && touched.vehicle_make &&(\n                                  <span className=\"error\">{errors.vehicle_make}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                Vehicle Type\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Vehicle Type\"\n                                  name=\"vehicle_type\"\n                                  value={values.vehicle_type}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.vehicle_type && touched.vehicle_type ? \"input-error\":null}\n                                />\n                                {errors.vehicle_type && touched.vehicle_type &&(\n                                  <span className=\"error\">{errors.vehicle_type}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                Battery Capacity\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  placeholder=\"Battery Capacity\"\n                                  name=\"battery_capacity\"\n                                  value={values.battery_capacity}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.battery_capacity && touched.battery_capacity ? \"input-error\":null}\n                                />\n                                {errors.battery_capacity && touched.battery_capacity &&(\n                                  <span className=\"error\">{errors.battery_capacity}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                  Fleet Owner\n                                </Label>\n                                <Input \n                                  type=\"select\"\n                                  name=\"fleet_owner_id\"\n                                  value={values.fleet_owner_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option key=\"\" value=\"\">All Fleet</option>\n                                  {fleetOpNames.map(item=>\n                                    <option key={item.fleet_operator_id} value={item.fleet_operator_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.fleet_owner_id && touched.fleet_owner_id &&(\n                                  <span className=\"error\">{errors.fleet_owner_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                  EV Driver\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"EV Driver\"\n                                  name=\"ev_driver\"\n                                  value={values.ev_driver}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.ev_driver && touched.ev_driver ? \"input-error\":null}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark 1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark 1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark 2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark 2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default AddEV;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row, FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {updateEvAPI,getEvByIdAPI,adminRoot,getFleetOperatorAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst UpdateEv = () => {\n  const history = useHistory();\n  const location = useLocation();\n  //states\n  const [vehicleModel,setVehicleModel] = useState(\"\");\n  const [vehicleMake,setVehicleMake] = useState(\"\");\n  const [vehicleType,setVehicleType] = useState(\"\");\n  const [batteryCapacity,setBatteryCapacity] = useState(\"\");\n  const [fleetOwner,setFleetOwner] = useState(\"\");\n  const [evDriver,setEvDriver] = useState(\"\");\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  const [fleetOpNames,setFleetOpNames] = useState([]); \n\n  useEffect(()=>{\n      GetFleetOperatorAPICall();\n      getEvByIdAPICall();\n  },[])\n\n  //API calls\n  const GetFleetOperatorAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n        if (responseData.status === 1) {\n         setFleetOpNames(responseData.data);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n    const getEvByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getEvByIdAPI,\n        {\n            ev_master_id:location.state.ev_master_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n                setVehicleModel(responseData.data.vehicle_model);\n                setVehicleMake(responseData.data.vehicle_make);\n                setVehicleType(responseData.data.vehicle_type);\n                setBatteryCapacity(responseData.data.battery_capacity);\n                setFleetOwner(responseData.data.fleet_owner_id);\n                setEvDriver(JSON.parse(responseData.data.all_data).ev_driver);\n                (responseData.data.remark_1!=null)?setRemark1(responseData.data.remark_1):setRemark1(\"\");\n                (responseData.data.remark_2!=null)?setRemark2(responseData.data.remark_2):setRemark2(\"\");\n            }else{\n              evUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n    const updateEvAPICall = async(params) => {\n        setButtonDisabled(true);\n        const currentUser = getCurrentUser();\n        await axios.post(updateEvAPI,\n        params,\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n              history.push({\n                pathname:adminRoot+'/pages/ev',\n                state:{\n                  responseStatus:responseData.status,\n                  responseMsg:responseData.msg\n                }\n              })\n            }else{\n              setButtonDisabled(false);\n              evUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            setButtonDisabled(false);\n            console.log(error);\n        })\n    }\n\n  //helper methods\n  //Alert helper methods\n  const evUpdatedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const EvDetailsValidationSchema = yup.object().shape({\n    vehicle_model:yup.string()\n        .required(\"Vehicle Model is required\"),\n    vehicle_make:yup.string()\n        .required(\"Vehicle Make is required\"),\n    vehicle_type:yup.string()\n        .required(\"Vehicle Type is required\"),\n    battery_capacity:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"Battery Capacity is required\"),\n    fleet_owner_id:yup.string()\n        .nullable()\n        .required(\"Fleet Owner is required\"),\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update EV</span>\n            <a href=\"ev\" className=\"btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> EV List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n      enableReinitialize ={true}\n        initialValues={{\n            vehicle_model:vehicleModel,\n            vehicle_make:vehicleMake,\n            vehicle_type:vehicleType,\n            battery_capacity:batteryCapacity,\n            fleet_owner_id:fleetOwner,\n            ev_driver:evDriver,\n            remark_1:remark1,\n            remark_2:remark2\n        }}\n        validationSchema={EvDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const tempAllData = {ev_driver:values.ev_driver}\n          const params = {\n            ev_master_id: location.state.ev_master_id,\n            vehicle_model:values.vehicle_model,\n            vehicle_make:values.vehicle_make,\n            vehicle_type:values.vehicle_type,\n            battery_capacity:values.battery_capacity,\n            fleet_owner_id:values.fleet_owner_id,\n            all_data:JSON.stringify(tempAllData),\n            remark_1:values.remark_1,\n            remark_2:values.remark_2,\n          }\n          updateEvAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                  Vehicle Model\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Vehicle Model\"\n                                  name=\"vehicle_model\"\n                                  value={values.vehicle_model}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.vehicle_model && touched.vehicle_model ? \"input-error\":null}\n                                />\n                                {errors.vehicle_model && touched.vehicle_model &&(\n                                  <span className=\"error\">{errors.vehicle_model}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                  Vehicle Make\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Vehicle Make\"\n                                  value={values.vehicle_make}\n                                  name=\"vehicle_make\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.vehicle_make && touched.vehicle_make ? \"input-error\":null}\n                                />\n                                {errors.vehicle_make && touched.vehicle_make &&(\n                                  <span className=\"error\">{errors.vehicle_make}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                Vehicle Type\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Vehicle Type\"\n                                  name=\"vehicle_type\"\n                                  value={values.vehicle_type}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.vehicle_type && touched.vehicle_type ? \"input-error\":null}\n                                />\n                                {errors.vehicle_type && touched.vehicle_type &&(\n                                  <span className=\"error\">{errors.vehicle_type}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                Battery Capacity\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  placeholder=\"Battery Capacity\"\n                                  name=\"battery_capacity\"\n                                  value={values.battery_capacity}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.battery_capacity && touched.battery_capacity ? \"input-error\":null}\n                                />\n                                {errors.battery_capacity && touched.battery_capacity &&(\n                                  <span className=\"error\">{errors.battery_capacity}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                  Fleet Owner\n                                </Label>\n                                <Input \n                                  type=\"select\"\n                                  name=\"fleet_owner_id\"\n                                  value={values.fleet_owner_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option key=\"\" value=\"\">All Fleet</option>\n                                  {fleetOpNames.map((item,index)=>\n                                    <option key={index} value={item.fleet_operator_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.fleet_owner_id && touched.fleet_owner_id &&(\n                                  <span className=\"error\">{errors.fleet_owner_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                  EV Driver\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"EV Driver\"\n                                  name=\"ev_driver\"\n                                  value={values.ev_driver}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.ev_driver && touched.ev_driver ? \"input-error\":null}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark 1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark 1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark 2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark 2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default UpdateEv;","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Collapse,\n  Input,InputGroup \n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getBulkChargerListAPI,deleteBulkChargerAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\nconst BulkChargerMaster = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //collapse states\n  const [collapse1, setCollapse1] = useState(false);\n  const [collapse2, setCollapse2] = useState(false);\n  const [collapse3, setCollapse3] = useState(false);\n  const [collapse4, setCollapse4] = useState(false);\n  const [collapse5, setCollapse5] = useState(false);\n  const [collapse6, setCollapse6] = useState(false);\n  const [collapse7, setCollapse7] = useState(false);\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [infoModalVisible,setInfoModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //bulkCharger list\n  const [bulkChargerList,setBulkChargerList] = useState([]);\n  const [bulkChargerID,setBulkChargerID] = useState(\"\");\n  const [bulkChargerToDeleteId,setBulkChargerToDeleteId] = useState(\"\");\n  //data states\n  const [bulkChargerInfo,setBulkChargerInfo] = useState({});\n  const [bulkChargerAllData,setBulkChargerAllData] = useState({});\n  const [isLoading,setIsLoading] = useState(true);\n  \n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getBulkChargerListAPICall();\n    bulkChargerAlert();\n  },[bulkChargerID,pageCount])\n\n  //API calls\n  const getBulkChargerListAPICall = async() => {\n    setBulkChargerList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getBulkChargerListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setBulkChargerList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const deleteBulkChargerAPICall = async(bulkChargerId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteBulkChargerAPI,\n      {charger_master_id:bulkChargerId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setBulkChargerID(bulkChargerId);\n          bulkChargerDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          bulkChargerDeletedAlert(responseData.status,responseData.msg)\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updatebulkCharger = (bulkChargerId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updatebulkcharger',\n      state:{bulkCharger_master_id:bulkChargerId}\n    });\n  }\n\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const bulkChargerDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const bulkChargerAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (bulkChargerId) => {\n    setBulkChargerToDeleteId(bulkChargerId)\n    setModalVisible(!modalVisible);\n  }\n  //modal for all data\n  const toggleInfoModal = (bulkChargerItem) => {\n    let tempAllData = {};\n    if (bulkChargerItem.all_data==undefined) {\n      tempAllData = {};\n    }else {\n      tempAllData = JSON.parse(bulkChargerItem.all_data);\n      setBulkChargerInfo(bulkChargerItem);\n      setBulkChargerAllData(tempAllData)\n    }    \n    setInfoModalVisible(!infoModalVisible);\n  }\n    //handle search input\n    const handleSearch = () => {\n        setPageCount(1);\n        getBulkChargerListAPICall();\n    }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Bulk Charger</span>\n            <a href=\"addbulkcharger\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>OEM</th>\n                    <th>Make</th>\n                    <th>Model</th>\n                    <th>Dimension</th>\n                    <th>No. Of Connectors</th>\n                    <th>Output Power</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"8\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    bulkChargerList.length > 0 ?\n                      bulkChargerList.map((item,index)=>\n                      <tr key={index}>\n                      <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                      <td>{item.oem_name}</td>\n                      <td>{item.make}</td>\n                      <td>{item.model}</td>\n                      <td>{item.dimension}</td>\n                      <td>{JSON.parse(item.all_data)!=null?JSON.parse(item.all_data).no_of_connetor:\"\"}</td>\n                      <td>{JSON.parse(item.all_data)!=null?JSON.parse(item.all_data).output_power:\"\"}</td>\n                      <td>\n                      {item.all_data!=null && <Button color=\"primary\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>{toggleInfoModal(item)}}>\n                            <i className=\"glyph-icon simple-icon-eye\"></i>\n                        </Button>}\n                        <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updatebulkCharger(item.id)}}>\n                            <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                        </a>\n                        <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                            <i className=\"glyph-icon simple-icon-trash\"></i>\n                        </Button>                        \n                      </td>\n                    </tr>\n                    ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"8\">Data  Not  Found</td>\n                      </tr>\n                    }\n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  Are you sure you would like to delete this bulkCharger?\n                  <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteBulkChargerAPICall(bulkChargerToDeleteId)}>\n                    Delete \n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                    Cancel\n                  </Button>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n        <div className=\"modal-dialog modal-fullscreen\" >\n          <Modal\n            isOpen={infoModalVisible}\n            toggle={toggleInfoModal} \n            className=\"modal-fullscreen\">\n            <ModalBody>\n              <Row>\n                <Colxx md=\"12\">\n                    <i className=\"simple-icon-close float-right mr-4 close-icon\" onClick={toggleInfoModal}></i>\n                </Colxx>\n              </Row>\n              <Row className=\"mt-2\">\n                  <Colxx xxs=\"12\" lg=\"12\">\n                    <ul className=\"list-unstyled mb-4\">\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">1</span>\n                                General Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse1 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse1(!collapse1)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse1}>\n                            <div className=\"card-body pt-0\">\n                              <Row>\n                                <Colxx md=\"6\">\n                                  <b>OEM:</b> {bulkChargerAllData.oem_name}\n                                </Colxx>\n                                <Colxx md=\"6\" >\n                                  <b>Model:</b> {bulkChargerInfo.model}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Make Year:</b> {bulkChargerInfo.make}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Battery modules :</b> {bulkChargerAllData.battery_modules}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Battery Type :</b> {bulkChargerAllData.battery_type}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Battery Capacity :</b> {bulkChargerAllData.battery_capacity}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Battery slot Dimension :</b> {bulkChargerAllData.battery_slot_dimension}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>No. of Connetor :</b> {bulkChargerAllData.no_of_connetor}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                 <b> Battery Slot Indicator:</b> {bulkChargerAllData.battery_slot_indicator}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Charging Connector :</b> {bulkChargerAllData.charging_connector}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Remark1 :</b> {bulkChargerInfo.remark_1}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Remark2 :</b> {bulkChargerInfo.remark_2}\n                                </Colxx>\n                              </Row>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">2</span>\n                                Electrical Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse2 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse2(!collapse2)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse2}>\n                            <div className=\"card-body pt-0\">\n                              <Row>\n                                <Colxx md=\"6\">\n                                  <b>Voltage:</b> {bulkChargerAllData.voltage}\n                                </Colxx>\n                                <Colxx md=\"6\" >\n                                  <b>Max. Input Power:</b> {bulkChargerAllData.max_input_power}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Frequency:</b> {bulkChargerAllData.frequency}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Current:</b> {bulkChargerAllData.current}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>THD/Power Factor :</b> {bulkChargerAllData.thd_power_factor}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Protection :</b> {bulkChargerAllData.protection}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Charging Voltage :</b> {bulkChargerAllData.charging_voltage}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Output Power :</b> {bulkChargerAllData.output_power}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Max. Charging Current:</b> {bulkChargerAllData.max_charging_current}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Power of Each Battery Slot :</b> {bulkChargerAllData.power_of_each_battery_slot}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Full load power of Each Slot :</b> {bulkChargerAllData.full_load_power_of_each_slot}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Input Impedance :</b> {bulkChargerAllData.input_impedance}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Static Voltage Regulation :</b> {bulkChargerAllData.static_voltage_regulation}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Ripple and Noise :</b> {bulkChargerAllData.ripple_and_noise}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Output Protection:</b> {bulkChargerAllData.output_protection}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Efficiency:</b> {bulkChargerAllData.efficiency}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b> Acoustic Noise:</b> {bulkChargerAllData.acoustic_noise}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Remark1 :</b> {bulkChargerAllData.ec_remark_1}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Remark2 :</b> {bulkChargerAllData.ec_remark_2}\n                                </Colxx>\n                              </Row>\n                            </div>\n                          </Collapse>\n                        </Card>\n                        </li>\n                        <li>\n                          <Card className=\"question d-flex mb-4\">\n                            <div className=\"d-flex flex-grow-1 min-width-zero\">\n                              <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                                <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                  <span className=\"heading-number d-inline-block\">3</span>\n                                  Temprature Characteristics\n                                </div>\n                              </div>\n                              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                                <Button\n                                  outline\n                                  color=\"theme-3\"\n                                  className={`icon-button ml-1 rotate-icon-click ${\n                                    collapse3 ? 'rotate' : ''\n                                  }`}\n                                  onClick={() => setCollapse3(!collapse3)}\n                                >\n                                  <i className=\"simple-icon-arrow-down\" />\n                                </Button>\n                              </div>\n                            </div>\n                            <Collapse isOpen={collapse3}>\n                              <div className=\"card-body pt-0\">\n                                <div className=\"edit-mode\">\n                                  <Row>\n                                    <Colxx md=\"6\">\n                                      <b>Operating Temp.:</b> {bulkChargerAllData.operating_temp}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Storage Temp.:</b> {bulkChargerAllData.storage_temp}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Humidity:</b> {bulkChargerAllData.humidity}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Ambient Pressure:</b> {bulkChargerAllData.ambient_pressure}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Temp. Sensor:</b> {bulkChargerAllData.temperature_sensor}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Remark1 :</b> {bulkChargerAllData.tc_remark_1}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark2 :</b> {bulkChargerAllData.tc_remark_2}\n                                    </Colxx>\n                                  </Row>\n                                </div>\n                              </div>\n                            </Collapse>\n                          </Card>\n                        </li>\n                        <li>\n                          <Card className=\"question d-flex mb-4\">\n                            <div className=\"d-flex flex-grow-1 min-width-zero\">\n                              <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                                <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                  <span className=\"heading-number d-inline-block\">4</span>\n                                  Mechanical Characteristics\n                                </div>\n                              </div>\n                              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                                <Button\n                                  outline\n                                  color=\"theme-3\"\n                                  className={`icon-button ml-1 rotate-icon-click ${\n                                    collapse4 ? 'rotate' : ''\n                                  }`}\n                                  onClick={() => setCollapse4(!collapse4)}\n                                >\n                                  <i className=\"simple-icon-arrow-down\" />\n                                </Button>\n                              </div>\n                            </div>\n                            <Collapse isOpen={collapse4}>\n                              <div className=\"card-body pt-0\">\n                                <div className=\"edit-mode\">\n                                  <Row>\n                                    <Colxx md=\"6\">\n                                      <b>Accessories:</b> {bulkChargerAllData.accessories}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Battery Door Locking:</b> {bulkChargerAllData.battery_door_locking}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Dimension:</b> {bulkChargerInfo.dimension}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Thickness:</b> {bulkChargerAllData.thickness}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Colour:</b> {bulkChargerAllData.colour}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Cable entry:</b> {bulkChargerAllData.cable_entry}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark1 :</b> {bulkChargerAllData.mc_remark_1}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark2 :</b> {bulkChargerAllData.mc_remark_2}\n                                    </Colxx>\n                                  </Row>\n                                </div>\n                              </div>\n                            </Collapse>\n                          </Card>\n                        </li>\n                        <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">5</span>\n                                Protections\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse5 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse5(!collapse5)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse5}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Row>\n                                  <Colxx md=\"6\">\n                                    <b>Alarms:</b> {bulkChargerAllData.alarms}\n                                  </Colxx>\n                                  <Colxx md=\"6\" >\n                                    <b>Emergency Protection:</b> {bulkChargerAllData.emergency_protection}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Cooling:</b> {bulkChargerAllData.cooling}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>IP Rating:</b> {bulkChargerAllData.ip_rating}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Mechanical:</b> {bulkChargerAllData.mechanical}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Surge Protection:</b> {bulkChargerAllData.surge_protection}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Fire and Safety:</b> {bulkChargerAllData.fire_safety}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Smoke Detector:</b> {bulkChargerAllData.smoke_detector}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Thermal Detector:</b> {bulkChargerAllData.thermal_detector}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Fire Suppresion System:</b> {bulkChargerAllData.fire_suppresion_system}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Video Surevillance:</b> {bulkChargerAllData.video_surevillance}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Water Level Sensor:</b> {bulkChargerAllData.water_level_sensor}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Remark1 :</b> {bulkChargerAllData.p_remark_1}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Remark2 :</b> {bulkChargerAllData.p_remark_2}\n                                  </Colxx>\n                                </Row>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                        </li>\n                        <li>\n                          <Card className=\"question d-flex mb-4\">\n                            <div className=\"d-flex flex-grow-1 min-width-zero\">\n                              <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                                <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                  <span className=\"heading-number d-inline-block\">6</span>\n                                  Warranty\n                                </div>\n                              </div>\n                              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                                <Button\n                                  outline\n                                  color=\"theme-3\"\n                                  className={`icon-button ml-1 rotate-icon-click ${\n                                    collapse6 ? 'rotate' : ''\n                                  }`}\n                                  onClick={() => setCollapse6(!collapse6)}\n                                >\n                                  <i className=\"simple-icon-arrow-down\" />\n                                </Button>\n                              </div>\n                            </div>\n                            <Collapse isOpen={collapse6}>\n                              <div className=\"card-body pt-0\">\n                                <div className=\"edit-mode\">\n                                  <Row>\n                                    <Colxx md=\"6\">\n                                      <b>MTBF:</b> {bulkChargerAllData.mtbf}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark1 :</b> {bulkChargerAllData.w_remark_1}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark2 :</b> {bulkChargerAllData.w_remark_2}\n                                    </Colxx>\n                                  </Row>\n                                </div>\n                              </div>\n                            </Collapse>\n                          </Card>\n                        </li>\n                        <li>\n                          <Card className=\"question d-flex mb-4\">\n                            <div className=\"d-flex flex-grow-1 min-width-zero\">\n                              <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                                <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                  <span className=\"heading-number d-inline-block\">7</span>\n                                  Interface\n                                </div>\n                              </div>\n                              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                                <Button\n                                  outline\n                                  color=\"theme-3\"\n                                  className={`icon-button ml-1 rotate-icon-click ${\n                                    collapse7 ? 'rotate' : ''\n                                  }`}\n                                  onClick={() => setCollapse7(!collapse7)}\n                                >\n                                  <i className=\"simple-icon-arrow-down\" />\n                                </Button>\n                              </div>\n                            </div>\n                            <Collapse isOpen={collapse7}>\n                              <div className=\"card-body pt-0\">\n                                <div className=\"edit-mode\">\n                                  <Row>\n                                    <Colxx md=\"6\">\n                                      <b>User Authentication:</b> {bulkChargerAllData.user_authentication}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Display:</b> {bulkChargerAllData.display}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Communication:</b> {bulkChargerAllData.communication}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Indication:</b> {bulkChargerAllData.indication}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Interface mode:</b> {bulkChargerAllData.interface_mode}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Identification:</b> {bulkChargerAllData.identification}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>User Interface:</b> {bulkChargerAllData.user_interface}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Network Communication:</b> {bulkChargerAllData.network_communication}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Application Use:</b> {bulkChargerAllData.application_use}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark1 :</b> {bulkChargerAllData.i_remark_1}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark2 :</b> {bulkChargerAllData.i_remark_2}\n                                    </Colxx>\n                                  </Row>\n                                </div>\n                              </div>\n                            </Collapse>\n                          </Card>\n                        </li>\n                    </ul>\n                  </Colxx>\n              </Row>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleInfoModal}>\n                Close\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </div> \n      </Row>\n    </>\n  );\n};\nexport default BulkChargerMaster;\n","import React, { useState, useEffect } from 'react';\nimport { \n  Row,FormGroup, Card,CardSubtitle,\n  Label,Input, Button, Collapse,Form,Alert\n } from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getOemAPI,addBulkChargerAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst AddBulkCharger = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //collapse states\n  const [collapse1, setCollapse1] = useState(false);\n  const [collapse2, setCollapse2] = useState(false);\n  const [collapse3, setCollapse3] = useState(false);\n  const [collapse4, setCollapse4] = useState(false);\n  const [collapse5, setCollapse5] = useState(false);\n  const [collapse6, setCollapse6] = useState(false);\n  const [collapse7, setCollapse7] = useState(false);\n  //dropdown states\n  const [oem,setOem] = useState(\"\");\n  const [oemList,setOemList] = useState([]);\n  const [month,setMonth] = useState(null);\n  const [year,setYear] = useState(null);\n  //image states\n  const [imageSelected,setImageSelected] = useState();\n  const [imagePreview,setImagePreview] = useState();\n  const [imageErrorFLag,setImageErrorFlag] = useState(false);\n  const [imageKey,setImageKey] = useState(true); //boolean key to rerender input on removing image\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    getOemAPICall();\n  },[])\n\n  // //API calls\n  const getOemAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:\"3\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let tempData = [];\n        if (responseData.status === 1) {          \n          responseData.data.map(item=>{\n            tempData.push({label: item.name, value: item.oem_id, id:item.oem_id});\n          })\n          setOemList(tempData);\n        }else{\n          addBulkChargerAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addBulkChargerAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addBulkChargerAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/bulkcharger',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          addBulkChargerAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const BulkChargerDetailsValidationSchema = yup.object().shape({\n    model:yup.string()\n        .required(\"Model name is required\"),\n    dimension:yup.string()\n        .required(\"Dimension is required\"),\n  });\n\n  const initialValues = {    \n    model:\"\",\n    battery_modules:\"\",\n    battery_type:\"\",\n    battery_capacity:\"\",\n    battery_slot_dimension:\"\",\n    no_of_connetor:\"\",\n    battery_slot_indicator:\"\",\n    charging_connector:\"\",\n    gc_remark_1:\"\",\n    gc_remark_2:\"\",\n    voltage:\"\",\n    max_input_power:\"\",\n    frequency:\"\",\n    current:\"\",\n    thd_power_factor:\"\",\n    protection:\"\",\n    charging_voltage:\"\",\n    output_power:\"\",\n    max_charging_current:\"\",\n    power_of_each_battery_slot:\"\",\n    full_load_power_of_each_slot:\"\",\n    input_impedance:\"\",\n    static_voltage_regulation:\"\",\n    ripple_and_noise:\"\",\n    output_protection:\"\",\n    efficiency:\"\",\n    acoustic_noise:\"\",\n    operating_temp:\"\",\n    storage_temp:\"\",\n    humidity:\"\",\n    ambient_pressure:\"\",\n    accessories:\"\",\n    accessories:\"\",\n    battery_door_locking:\"\",\n    dimension:\"\",\n    thickness:\"\",\n    colour:\"\",\n    cable_entry:\"\",\n    alarms:\"\",\n    emergency_protection:\"\",\n    cooling:\"\",\n    ip_rating:\"\",\n    mechanical:\"\",\n    surge_protection:\"\",\n    power_connector:\"\",\n    fire_safety:\"\",\n    smoke_detector:\"\",\n    thermal_detector:\"\",\n    fire_suppresion_system:\"\",\n    video_surevillance:\"\",\n    water_level_sensor:\"\",\n    mtbf:\"\",\n    user_authentication:\"\",\n    display:\"\",\n    communication:\"\",\n    indication:\"\",\n    interface_mode:\"\",\n    identification:\"\",\n    user_interface:\"\",\n    network_communication:\"\",\n    application_use:\"\",\n    ec_remark_1:\"\",\n    ec_remark_2:\"\",\n    tc_remark_1:\"\",\n    tc_remark_2:\"\",\n    mc_remark_1:\"\",\n    mc_remark_2:\"\",\n    p_remark_1:\"\",\n    p_remark_2:\"\",\n    w_remark_1:\"\",\n    w_remark_2:\"\",\n    i_remark_1:\"\",\n    i_remark_2:\"\",\n  };\n\n  //helper\n  const getYear = () => {\n    let yearList = [];\n    for (let index = 0; index <= 20; index++) {\n      const temp = {label:2010+index,value:index+1,id:index+1}\n      yearList.push(temp);\n    }\n    return yearList\n  };\n  //Alert helper methods\n  const addBulkChargerAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //image selection methods\n  const handleImageSelect = (imageFile) =>{\n    const fileExtension = imageFile.name.split('.').pop();\n    if (fileExtension == \"jpg\" || fileExtension == \"jpeg\" || fileExtension == \"png\") {\n      setImageErrorFlag(false);\n      setImageSelected(imageFile);\n      setImagePreview(URL.createObjectURL(imageFile));\n    } else {\n      setImageErrorFlag(true);\n    }\n  }\n  const handleDeleteImage = () =>{\n    setImageKey(!imageKey);\n    setImagePreview();\n    setImageSelected();\n  }\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={BulkChargerDetailsValidationSchema} \n        onSubmit={(values)=>{\n          if (month == null || year == null) {\n            addBulkChargerAlert(\"Make Year is required\");\n            return;\n          }\n          let formData = new FormData();\n          const tempData={\n            oem_name:oem.label,\n            make:{month:month,year:year},\n            battery_modules:values.battery_modules,\n            battery_type:values.battery_type,\n            battery_capacity:values.battery_capacity,\n            battery_slot_dimension:values.battery_slot_dimension,\n            no_of_connetor:values.no_of_connetor,\n            battery_slot_indicator:values.battery_slot_indicator,\n            charging_connector:values.charging_connector,\n            voltage:values.voltage,\n            max_input_power:values.max_input_power,\n            frequency:values.frequency,\n            current:values.current,\n            thd_power_factor:values.thd_power_factor,\n            protection:values.protection,\n            charging_voltage:values.charging_voltage,\n            output_power:values.output_power,\n            max_charging_current:values.max_charging_current,\n            power_of_each_battery_slot:values.power_of_each_battery_slot,\n            full_load_power_of_each_slot:values.full_load_power_of_each_slot,\n            input_impedance:values.input_impedance,\n            static_voltage_regulation:values.static_voltage_regulation,\n            ripple_and_noise:values.ripple_and_noise,\n            output_protection:values.output_protection,\n            efficiency:values.efficiency,\n            acoustic_noise:values.acoustic_noise,\n            operating_temp:values.operating_temp,\n            storage_temp:values.storage_temp,\n            humidity:values.humidity,\n            ambient_pressure:values.ambient_pressure,\n            accessories:values.accessories,\n            accessories:values.accessories,\n            battery_door_locking:values.battery_door_locking,\n            thickness:values.thickness,\n            colour:values.colour,\n            cable_entry:values.cable_entry,\n            alarms:values.alarms,\n            emergency_protection:values.emergency_protection,\n            cooling:values.cooling,\n            ip_rating:values.ip_rating,\n            mechanical:values.mechanical,\n            surge_protection:values.surge_protection,\n            power_connector:values.power_connector,\n            fire_safety:values.fire_safety,\n            smoke_detector:values.smoke_detector,\n            thermal_detector:values.thermal_detector,\n            fire_suppresion_system:values.fire_suppresion_system,\n            video_surevillance:values.video_surevillance,\n            water_level_sensor:values.water_level_sensor,\n            mtbf:values.mtbf,\n            user_authentication:values.user_authentication,\n            display:values.display,\n            communication:values.communication,\n            indication:values.indication,\n            interface_mode:values.interface_mode,\n            identification:values.identification,\n            user_interface:values.user_interface,\n            network_communication:values.network_communication,\n            application_use:values.application_use,\n            ec_remark_1:values.ec_remark_1,\n            ec_remark_2:values.ec_remark_2,\n            tc_remark_1:values.tc_remark_1,\n            tc_remark_2:values.tc_remark_2,\n            mc_remark_1:values.mc_remark_1,\n            mc_remark_2:values.mc_remark_2,\n            p_remark_1:values.p_remark_1,\n            p_remark_2:values.p_remark_2,\n            w_remark_1:values.w_remark_1,\n            w_remark_2:values.w_remark_2,\n            i_remark_1:values.i_remark_1,\n            i_remark_2:values.i_remark_2,\n          }\n          formData.append('oem_id',oem.value);\n          formData.append('model',values.model,);\n          formData.append('dimension',values.dimension);\n          formData.append('make',month.label+\"-\"+year.label);\n          formData.append('img_file',imageSelected);\n          formData.append('remark_1',values.gc_remark_1);\n          formData.append('remark_2',values.gc_remark_2);\n          formData.append('all_data',JSON.stringify(tempData));\n          addBulkChargerAPICall(formData);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors,isValid})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\">\n                    <span className=\"page_title\">Add Bulk Charger</span>\n                      <Button color=\"light\" className=\"default float-right\" onClick={()=>history.goBack()}>\n                          <b>Cancel</b>\n                      </Button>\n                      <Button color=\"primary\" className=\"default mr-2 float-right\" onClick={handleSubmit} disabled={buttonDisabled}>\n                        <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Add</b>\n                      </Button>              \n                  <Separator className=\"mb-5\" />\n                </Colxx>\n              </Row>\n              <Row>\n                <Colxx xxs=\"12\" lg=\"12\">\n                  <ul className=\"list-unstyled mb-4\">\n                    <li>\n                      <CardSubtitle className=\"mb-3\">\n                        <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                          {alertMsg}\n                        </Alert>\n                      </CardSubtitle>\n                    </li>\n                    <li>\n                      <Card className={isValid?\"question d-flex mb-4\":\"question d-flex mb-4 cardBorderError\"}>\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">1</span>\n                              General Characteristics\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse1 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse1(!collapse1)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse1}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                                <Row>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                        OEM\n                                      </Label>\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Select OEM\"\n                                        value={oem}\n                                        onChange={(e) => setOem(e)}\n                                        options={oemList}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Model Name\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Model Name\"\n                                        name=\"model\"\n                                        value={values.model}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        className={errors.model && touched.model ? \"input-error\":null}\n                                      />\n                                      {errors.model && touched.model &&(\n                                        <span className=\"error\">{errors.model}</span>\n                                      )}\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Make Year\n                                      </Label>\n                                      <Row>\n                                      <Colxx md=\"6\">\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Month\"\n                                        value={month}\n                                        onChange={(e) => setMonth(e)}\n                                        options={[\n                                          { label: 'January', value: '1', id: 1 },\n                                          { label: 'February', value: '2', id: 2 },\n                                          { label: 'March', value: '3', id: 3 },\n                                          { label: 'April', value: '4', id: 4 },\n                                          { label: 'May', value: '5', id: 6 },\n                                          { label: 'June', value: '6', id: 7 },\n                                          { label: 'July', value: '7', id: 8 },\n                                          { label: 'August', value: '8', id: 9 },\n                                          { label: 'September', value: '9', id: 10 },\n                                          { label: 'October', value: '10', id: 11 },\n                                          { label: 'November', value: '11', id: 12 },\n                                          { label: 'December', value: '12', id: 13 },\n                                        ]}\n                                      />\n                                      </Colxx>\n                                      <Colxx md=\"6\">\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Year\"\n                                        value={year}\n                                        onChange={(e) => setYear(e)}\n                                        options={getYear()}\n                                      />\n                                      </Colxx>\n                                      </Row>\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx md={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery modules \n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery modules \"\n                                        name=\"battery_modules\"\n                                        value={values.battery_modules}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx md={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery Type (AH)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery Type (AH)\"\n                                        name=\"battery_type\"\n                                        value={values.battery_type}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery Capacity (AH)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery Capacity (AH)\"\n                                        name=\"battery_capacity\"\n                                        value={values.battery_capacity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery slot dimension\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery slot dimension\"\n                                        name=\"battery_slot_dimension\"\n                                        value={values.battery_slot_dimension}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      No. of connetor\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"no. of connetor\"\n                                        name=\"no_of_connetor\"\n                                        value={values.no_of_connetor}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery slot indicator\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery slot indicator\"\n                                        name=\"battery_slot_indicator\"\n                                        value={values.battery_slot_indicator}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Charging Connector\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Charging Connector\"\n                                        name=\"charging_connector\"\n                                        value={values.charging_connector}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                        Image\n                                      </Label>\n                                      <Input\n                                        key={imageKey}\n                                        type=\"file\"\n                                        name=\"upload_image\"\n                                        accept=\".png,.jpg,.jpeg\"\n                                        onChange={e=>handleImageSelect(e.target.files[0])}\n                                      />\n                                      {imageErrorFLag && \n                                        <span className=\"error\">Image must be either png,jpg or jpeg format</span>\n                                      }\n                                    </FormGroup>\n                                  </Colxx>\n                                  {imagePreview!=null &&\n                                    <Colxx sm={3}>\n                                      <div>\n                                        <Button className=\"custom-badge default tbl_action_btn\" onClick={()=>handleDeleteImage()}><i className=\"glyph-icon simple-icon-trash image-remove-icon\"></i></Button>\n                                        <img src={imagePreview} height=\"100px\" width=\"150px\" alt=\"Image Preview\"/>\n                                      </div>\n                                    </Colxx>\n                                  }\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"gc_remark_1\"\n                                        value={values.gc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"gc_remark_2\"\n                                        value={values.gc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                    </li>\n                    <li>\n                      <Card className=\"question d-flex mb-4\">\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">2</span>\n                              Electrical Characteristics\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse2 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse2(!collapse2)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse2}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Voltage\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Voltage\"\n                                        name=\"voltage\"\n                                        value={values.voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Max input power\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Max input power\"\n                                        name=\"max_input_power\"\n                                        value={values.max_input_power}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Frequency\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Frequency\"\n                                        name=\"frequency\"\n                                        value={values.frequency}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Current \n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Current\"\n                                        name=\"current\"\n                                        value={values.current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      THD/Power Factor\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"THD/Power Factor\"\n                                        name=\"thd_power_factor\"\n                                        value={values.thd_power_factor}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Protection\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Protection\"\n                                        name=\"protection\"\n                                        value={values.protection}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Charging Voltage\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Charging Voltage\"\n                                        name=\"charging_voltage\"\n                                        value={values.charging_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Output power\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Output power\"\n                                        name=\"output_power\"\n                                        value={values.output_power}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Max charging current\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Max charging current\"\n                                        name=\"max_charging_current\"\n                                        value={values.max_charging_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Power of each battery slot\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Power of each battery slot\"\n                                        name=\"power_of_each_battery_slot\"\n                                        value={values.power_of_each_battery_slot}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Full load power of each slot\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Full load power of each slot\"\n                                        name=\"full_load_power_of_each_slot\"\n                                        value={values.full_load_power_of_each_slot}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Input impedance\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Input impedance\"\n                                        name=\"input_impedance\"\n                                        value={values.input_impedance}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Static voltage regulation\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Static voltage regulation\"\n                                        name=\"static_voltage_regulation\"\n                                        value={values.static_voltage_regulation}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Ripple and noise\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Ripple and noise\"\n                                        name=\"ripple_and_noise\"\n                                        value={values.ripple_and_noise}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Output protection\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Output protection\"\n                                        name=\"output_protection\"\n                                        value={values.output_protection}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Efficiency\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Efficiency\"\n                                        name=\"efficiency\"\n                                        value={values.efficiency}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Acoustic Noise\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Acoustic Noise\"\n                                        name=\"acoustic_noise\"\n                                        value={values.acoustic_noise}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"ec_remark_1\"\n                                        value={values.ec_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"ec_remark_2\"\n                                        value={values.ec_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">3</span>\n                                Temprature Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse3 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse3(!collapse3)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse3}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                  <Row>                        \n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Operating Temp.\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Operating Temp.\"\n                                          name=\"operating_temp\"\n                                          value={values.operating_temp}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Storage Temp.\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Storage Temp.\"\n                                          name=\"storage_temp\"\n                                          value={values.storage_temp}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Humidity\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Humidity\"\n                                          name=\"humidity\"\n                                          value={values.humidity}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Temp. sensor\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Temp. sensor\"\n                                          name=\"temperature_sensor\"\n                                          value={values.temperature_sensor}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"tc_remark_1\"\n                                        value={values.tc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"tc_remark_2\"\n                                        value={values.tc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>                          \n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className={isValid?\"question d-flex mb-4\":\"question d-flex mb-4 cardBorderError\"}>\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">4</span>\n                                Mechanical Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse4 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse4(!collapse4)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse4}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Ambient pressure\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Ambient pressure\"\n                                          name=\"ambient_pressure\"\n                                          value={values.ambient_pressure}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Accessories\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Accessories\"\n                                          name=\"accessories\"\n                                          value={values.accessories}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Battery door locking\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Battery door locking\"\n                                          name=\"battery_door_locking\"\n                                          value={values.battery_door_locking}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Dimension\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Dimension\"\n                                          name=\"dimension\"\n                                          value={values.dimension}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                         {errors.dimension && touched.dimension &&(\n                                            <span className=\"error\">{errors.dimension}</span>\n                                          )}\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Thickness\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Thickness\"\n                                          name=\"thickness\"\n                                          value={values.thickness}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Colour\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Colour\"\n                                          name=\"colour\"\n                                          value={values.colour}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Cable entry\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Cable entry\"\n                                          name=\"cable_entry\"\n                                          value={values.cable_entry}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx> \n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"mc_remark_1\"\n                                        value={values.mc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"mc_remark_2\"\n                                        value={values.mc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                      <Card className=\"question d-flex mb-4\">\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">5</span>\n                              Protections\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse5 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse5(!collapse5)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse5}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Alarms\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Alarms\"\n                                        name=\"alarms\"\n                                        value={values.alarms}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Emergency protection\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Emergency protection\"\n                                        name=\"emergency_protection\"\n                                        value={values.emergency_protection}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cooling\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cooling\"\n                                        name=\"cooling\"\n                                        value={values.cooling}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      IP Rating\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"IP Rating\"\n                                        name=\"ip_rating\"\n                                        value={values.ip_rating}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Mechanical\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Mechanical\"\n                                        name=\"mechanical\"\n                                        value={values.mechanical}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Surge protection\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Surge protection\"\n                                        name=\"surge_protection\"\n                                        value={values.surge_protection}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Power Connector\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Power Connector\"\n                                          name=\"power_connector\"\n                                          value={values.power_connector}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Fire safety\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Fire safety\"\n                                          name=\"fire_safety\"\n                                          value={values.fire_safety}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Smoke Detector\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Smoke Detector\"\n                                          name=\"smoke_detector\"\n                                          value={values.smoke_detector}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Thermal Detector\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Thermal Detector\"\n                                          name=\"thermal_detector\"\n                                          value={values.thermal_detector}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Fire suppresion system\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Fire suppresion system\"\n                                          name=\"fire_suppresion_system\"\n                                          value={values.fire_suppresion_system}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Video Surevillance\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Video Surevillance\"\n                                          name=\"video_surevillance\"\n                                          value={values.video_surevillance}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Water level sensor\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Water level sensor\"\n                                          name=\"water_level_sensor\"\n                                          value={values.water_level_sensor}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"p_remark_1\"\n                                        value={values.p_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"p_remark_2\"\n                                        value={values.p_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx> \n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">6</span>\n                                Warranty\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse6 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse6(!collapse6)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse6}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        MTBF\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"MTBF\"\n                                          name=\"mtbf\"\n                                          value={values.mtbf}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"w_remark_1\"\n                                        value={values.w_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"w_remark_2\"\n                                        value={values.w_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">7</span>\n                                Interface\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse7 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse7(!collapse7)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse7}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        User Authentication\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"User Authentication\"\n                                          name=\"user_authentication\"\n                                          value={values.user_authentication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Display\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Display\"\n                                          name=\"display\"\n                                          value={values.display}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Communication \n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Communication \"\n                                          name=\"communication\"\n                                          value={values.communication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Indication\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Indication\"\n                                          name=\"indication\"\n                                          value={values.indication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Interface mode\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Interface mode\"\n                                          name=\"interface_mode\"\n                                          value={values.interface_mode}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Identification\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Identification\"\n                                          name=\"identification\"\n                                          value={values.identification}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        User interface\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"User interface\"\n                                          name=\"user_interface\"\n                                          value={values.user_interface}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Netwrok Communication\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Netwrok Communication\"\n                                          name=\"network_communication\"\n                                          value={values.network_communication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Application use\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Application use\"\n                                          name=\"application_use\"\n                                          value={values.application_use}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"i_remark_1\"\n                                        value={values.i_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"i_remark_2\"\n                                        value={values.i_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                  </ul>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AddBulkCharger;\n\n{/* <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Bulk Charger</span>\n            <a href=\"bulkcharger\" className=\"btn btn-light default btn-sm float-right\">\n                <b>Cancel</b>\n            </a>\n            <Button color=\"primary\" className=\"default mr-2 btn-sm float-right\">\n                <b>Add</b>\n            </Button>\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n        <ul className=\"list-unstyled mb-4\">\n        <li>\n            <Card className=\"question d-flex mb-4\">\n              <div className=\"d-flex flex-grow-1 min-width-zero\">\n                <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                  <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                    <span className=\"heading-number d-inline-block\">1</span>\n                    General Characteristics\n                  </div>\n                </div>\n                <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                  <Button\n                    outline\n                    color=\"theme-3\"\n                    className={`icon-button ml-1 rotate-icon-click ${\n                      collapse1 ? 'rotate' : ''\n                    }`}\n                    onClick={() => setCollapse1(!collapse1)}\n                  >\n                    <i className=\"simple-icon-arrow-down\" />\n                  </Button>\n                </div>\n              </div>\n              <Collapse isOpen={collapse1}>\n                <div className=\"card-body pt-0\">\n                  <div className=\"edit-mode\">\n                    <Form>\n                      <Row>\n                          <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            OEM\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"OEM\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Model Name\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Model Name\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Make Year\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Make\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Battery Modules\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Battery Modules\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Battery Type\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Battery Type\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Battery Capacity\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Battery Capacity\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Battery Slot Dimension\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Battery Slot Dimension\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            No. of Connetor\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"No. of Connetor\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Battery Slot Indicator\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Battery Slot Indicator\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Charging Connector\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Charging Connector\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Remark1\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Remark1\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Remark2\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Remark2\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                      </Row>\n                    </Form>\n                  </div>\n                </div>\n              </Collapse>\n            </Card>\n            </li>\n            <li>\n              <Card className=\"question d-flex mb-4\">\n                <div className=\"d-flex flex-grow-1 min-width-zero\">\n                  <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                    <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                      <span className=\"heading-number d-inline-block\">2</span>\n                      Electrical Characteristics\n                    </div>\n                  </div>\n                  <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                    <Button\n                      outline\n                      color=\"theme-3\"\n                      className={`icon-button ml-1 rotate-icon-click ${\n                        collapse2 ? 'rotate' : ''\n                      }`}\n                      onClick={() => setCollapse2(!collapse2)}\n                    >\n                      <i className=\"simple-icon-arrow-down\" />\n                    </Button>\n                  </div>\n                </div>\n                <Collapse isOpen={collapse2}>\n                  <div className=\"card-body pt-0\">\n                    <div className=\"edit-mode\">\n                      <Form>\n                        <Row>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Voltage\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Voltage\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Max. Input Power\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Max. Input Power\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Frequency\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Frequency\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Current\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Current\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              THD/Power Factor\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"THD/Power Factor\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Protection\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Protection\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Charging Voltage\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Charging Voltage\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Output Power\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Output Power\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Max. Charging Current\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Max. Charging Current\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Power of Each Battery Slot\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Power of Each Battery Slot\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Full load power of Each Slot\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Full load power of Each Slot\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Input Impedance\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Input Impedance\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Static Voltage Regulation\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Static Voltage Regulation\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Ripple and Noise\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Ripple and Noise\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Output Protection\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Output Protection\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Efficiency\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Efficiency\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Acoustic Noise\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Acoustic Noise\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    </div>\n                  </div>\n                </Collapse>\n              </Card>\n              </li>\n              <li>\n              <Card className=\"question d-flex mb-4\">\n                <div className=\"d-flex flex-grow-1 min-width-zero\">\n                  <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                    <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                      <span className=\"heading-number d-inline-block\">3</span>\n                      Temp. Characteristics\n                    </div>\n                  </div>\n                  <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                    <Button\n                      outline\n                      color=\"theme-3\"\n                      className={`icon-button ml-1 rotate-icon-click ${\n                        collapse3 ? 'rotate' : ''\n                      }`}\n                      onClick={() => setCollapse3(!collapse3)}\n                    >\n                      <i className=\"simple-icon-arrow-down\" />\n                    </Button>\n                  </div>\n                </div>\n                <Collapse isOpen={collapse3}>\n                  <div className=\"card-body pt-0\">\n                    <div className=\"edit-mode\">\n                      <Form>\n                        <Row>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Operating Temp.\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Operating Temp.\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Storage Temp.\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Storage Temp.\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Humidity\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Humidity\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Ambient Pressure\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Ambient Pressure\"\n                              />\n                            </FormGroup>\n                          </Colxx> \n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Temp. Sensor\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Temp. Sensor\"\n                              />\n                            </FormGroup>\n                          </Colxx>     \n                        </Row>\n                      </Form>\n                    </div>\n                  </div>\n                </Collapse>\n              </Card>\n              </li>\n              <li>\n              <Card className=\"question d-flex mb-4\">\n                <div className=\"d-flex flex-grow-1 min-width-zero\">\n                  <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                    <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                      <span className=\"heading-number d-inline-block\">4</span>\n                      Mechanical characteristics\n                    </div>\n                  </div>\n                  <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                    <Button\n                      outline\n                      color=\"theme-3\"\n                      className={`icon-button ml-1 rotate-icon-click ${\n                        collapse4 ? 'rotate' : ''\n                      }`}\n                      onClick={() => setCollapse4(!collapse4)}\n                    >\n                      <i className=\"simple-icon-arrow-down\" />\n                    </Button>\n                  </div>\n                </div>\n                <Collapse isOpen={collapse4}>\n                  <div className=\"card-body pt-0\">\n                    <div className=\"edit-mode\">\n                      <Form>\n                        <Row>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Accessories\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Accessories\"\n                              />\n                            </FormGroup>\n                          </Colxx>                                    \n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Battery Door Locking\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Battery Door Locking\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Dimension\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Dimension\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Thickness\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Thickness\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Colour\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Colour\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Cable entry\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Cable entry\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    </div>\n                  </div>\n                </Collapse>\n              </Card>\n              </li>\n              <li>\n              <Card className=\"question d-flex mb-4\">\n                <div className=\"d-flex flex-grow-1 min-width-zero\">\n                  <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                    <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                      <span className=\"heading-number d-inline-block\">5</span>\n                      Protections\n                    </div>\n                  </div>\n                  <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                    <Button\n                      outline\n                      color=\"theme-3\"\n                      className={`icon-button ml-1 rotate-icon-click ${\n                        collapse5 ? 'rotate' : ''\n                      }`}\n                      onClick={() => setCollapse5(!collapse5)}\n                    >\n                      <i className=\"simple-icon-arrow-down\" />\n                    </Button>\n                  </div>\n                </div>\n                <Collapse isOpen={collapse5}>\n                  <div className=\"card-body pt-0\">\n                    <div className=\"edit-mode\">\n                      <Form>\n                        <Row>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Alarms\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Alarms\"\n                              />\n                            </FormGroup>\n                          </Colxx>                  \n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Emergency Protection\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Emergency Protection\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Cooling\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Cooling\"\n                              />\n                            </FormGroup>\n                          </Colxx>                  \n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              IP Rating\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"IP Rating\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Mechanical\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Mechanical\"\n                              />\n                            </FormGroup>\n                          </Colxx>                  \n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Surge Protection\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Surge Protection\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Fire & Safety\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Fire & Safety\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Smoke Detector\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Smoke Detector\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Thermal Detector\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Thermal Detector\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Fire Suppresion System\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Fire Suppresion System\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Video Surevillance\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Video Surevillance\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Water Level Sensor\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Water Level Sensor\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    </div>\n                  </div>\n                </Collapse>\n              </Card>\n              </li>\n              <li>\n              <Card className=\"question d-flex mb-4\">\n                <div className=\"d-flex flex-grow-1 min-width-zero\">\n                  <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                    <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                      <span className=\"heading-number d-inline-block\">6</span>\n                      Warranty\n                    </div>\n                  </div>\n                  <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                    <Button\n                      outline\n                      color=\"theme-3\"\n                      className={`icon-button ml-1 rotate-icon-click ${\n                        collapse6 ? 'rotate' : ''\n                      }`}\n                      onClick={() => setCollapse6(!collapse6)}\n                    >\n                      <i className=\"simple-icon-arrow-down\" />\n                    </Button>\n                  </div>\n                </div>\n                <Collapse isOpen={collapse6}>\n                  <div className=\"card-body pt-0\">\n                    <div className=\"edit-mode\">\n                      <Form>\n                        <Row>\n                          <Colxx sm={12}>\n                            <FormGroup>\n                              <Label>\n                              MTBF\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"MTBF\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    </div>\n                  </div>\n                </Collapse>\n              </Card>\n              </li>\n              <li>\n              <Card className=\"question d-flex mb-4\">\n                <div className=\"d-flex flex-grow-1 min-width-zero\">\n                  <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                    <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                      <span className=\"heading-number d-inline-block\">7</span>\n                      Interface\n                    </div>\n                  </div>\n                  <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                    <Button\n                      outline\n                      color=\"theme-3\"\n                      className={`icon-button ml-1 rotate-icon-click ${\n                        collapse7 ? 'rotate' : ''\n                      }`}\n                      onClick={() => setCollapse7(!collapse7)}\n                    >\n                      <i className=\"simple-icon-arrow-down\" />\n                    </Button>\n                  </div>\n                </div>\n                <Collapse isOpen={collapse7}>\n                  <div className=\"card-body pt-0\">\n                    <div className=\"edit-mode\">\n                      <Form>\n                        <Row>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              User Authentication\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"User Authentication\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Display\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Display\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Communication\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Communication\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Indication\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Indication\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Interface mode\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Interface mode\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Identification\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Identification\"\n                              />\n                            </FormGroup>\n                          </Colxx>                  \n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              User Interface\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"User Interface\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Network Communication\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Network Communication\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Application Use\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Application Use\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    </div>\n                  </div>\n                </Collapse>\n              </Card>\n              </li>\n          </ul>\n        </Colxx>\n      </Row> */}","import React, { useState, useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,CardSubtitle,\n  Label,Input, Button, Collapse,Form,Alert\n } from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getOemAPI,getBulkChargerByIdAPI,updateBulkChargerAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateBulkCharger = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //collapse states\n  const [collapse1, setCollapse1] = useState(false);\n  const [collapse2, setCollapse2] = useState(false);\n  const [collapse3, setCollapse3] = useState(false);\n  const [collapse4, setCollapse4] = useState(false);\n  const [collapse5, setCollapse5] = useState(false);\n  const [collapse6, setCollapse6] = useState(false);\n  const [collapse7, setCollapse7] = useState(false);\n  //dropdown states\n  const [oem,setOem] = useState(\"\");\n  const [oemList,setOemList] = useState([]);\n  const [month,setMonth] = useState(null);\n  const [year,setYear] = useState(null);\n  //image states\n  const [imageSelected,setImageSelected] = useState();\n  const [imageFilePath,setImageFilePath] = useState();\n  const [imagePreview,setImagePreview] = useState();\n  const [imageErrorFLag,setImageErrorFlag] = useState(false);\n  const [imageKey,setImageKey] = useState(true); //boolean key to rerender input on removing image\n  //form default values states\n  const [modelName,setModelName] = useState(\"\");\n  const [batteryModules,setBatteryModules] = useState(\"\");\n  const [batteryType,setBatteryType] = useState(\"\");\n  const [batteryCapacity,setBatteryCapacity] = useState(\"\");\n  const [batterySlotDimension,setBatterySlotDimension] = useState(\"\");\n  const [noOfConnetor,setNoOfConnetor] = useState(\"\");\n  const [batterySlotIndicator,setBatterySlotIndicator] = useState(\"\");\n  const [chargingConnector,setChargingConnector] = useState(\"\");\n  const [gcRemark1,setGcRemark1] = useState(\"\");\n  const [gcRemark2,setGcRemark2] = useState(\"\");\n  const [voltage,setVoltage] = useState(\"\");\n  const [maxInputPower,setMaxInputPower] = useState(\"\");\n  const [frequency,setFrequency] = useState(\"\");\n  const [current,setCurrent] = useState(\"\");\n  const [thdPowerFactor,setThdPowerFactor] = useState(\"\");\n  const [protection,setProtection] = useState(\"\");\n  const [chargingVoltage,setChargingVoltage] = useState(\"\");\n  const [outputPower,setOutputPower] = useState(\"\");\n  const [maxChargingCurrent,setMaxChargingCurrent] = useState(\"\");\n  const [powerOfEachBatterySlot,setPowerOfEachBatterySlot] = useState(\"\");\n  const [fullLoadPowerOfEachSlot,setFullLoadPowerOfEachSlot] = useState(\"\");\n  const [inputImpedance,setInputImpedance] = useState(\"\");\n  const [staticVoltageRegulation,setStaticVoltageRegulation] = useState(\"\");\n  const [rippleAndNoise,setRippleAndNoise] = useState(\"\");\n  const [outputProtection,setOutputProtection] = useState(\"\");\n  const [efficiency,setEfficiency] = useState(\"\");\n  const [acousticNoise,setAcousticNoise] = useState(\"\");\n  const [operatingTemp,setOperatingTemp] = useState(\"\");\n  const [storageTemp,setStorageTemp] = useState(\"\");\n  const [humidity,setHumidity] = useState(\"\");\n  const [ambientPressure,setAmbientPressure] = useState(\"\");\n  const [accessories,setAccessories] = useState(\"\");\n  const [batteryDoorLocking,setBatteryDoorLocking] = useState(\"\");\n  const [dimension,setDimension] = useState(\"\");\n  const [thickness,setThickness] = useState(\"\");\n  const [colour,setColour] = useState(\"\");\n  const [cableEntry,setCableEntry] = useState(\"\");\n  const [alarms,setAlarms] = useState(\"\");\n  const [emergencyProtection,setEmergencyProtection] = useState(\"\");\n  const [cooling,setCooling] = useState(\"\");\n  const [ipRating,setIpRating] = useState(\"\");\n  const [mechanical,setMechanical] = useState(\"\");\n  const [surgeProtection,setSurgeProtection] = useState(\"\");\n  const [powerConnector,setPowerConnector] = useState(\"\");\n  const [fireSafety,setFireSafety] = useState(\"\");\n  const [smokeDetector,setSmokeDetector] = useState(\"\");\n  const [thermalDetector,setThermalDetector] = useState(\"\");\n  const [fireSuppresionSystem,setFireSuppresionSystem] = useState(\"\");\n  const [videoSurevillance,setVideoSurevillance] = useState(\"\");\n  const [waterLevelSensor,setWaterLevelSensor] = useState(\"\");\n  const [mtbf,setMtbf] = useState(\"\");\n  const [userAuthentication,setUserAuthentication] = useState(\"\");\n  const [display,setDisplay] = useState(\"\");\n  const [communication,setCommunication] = useState(\"\");\n  const [indication,setIndication] = useState(\"\");\n  const [interfaceMode,setInterfaceMode] = useState(\"\");\n  const [identification,setIdentification] = useState(\"\");\n  const [userInterface,setUserInterface] = useState(\"\");\n  const [networkCommunication,setNetworkCommunication] = useState(\"\");\n  const [applicationUse,setApplicationUse] = useState(\"\");\n  const [ecRemark1,setEcRemark1] = useState(\"\");\n  const [ecRemark2,setEcRemark2] = useState(\"\");   \n  const [tcRemark1,setTcRemark1] = useState(\"\");\n  const [tcRemark2,setTcRemark2] = useState(\"\");          \n  const [mcRemark1,setMcRemark1] = useState(\"\");\n  const [mcRemark2,setMcRemark2] = useState(\"\"); \n  const [pRemark1,setPRemark1] = useState(\"\");\n  const [pRemark2,setPRemark2] = useState(\"\"); \n  const [wRemark1,setWRemark1] = useState(\"\");\n  const [wRemark2,setWRemark2] = useState(\"\"); \n  const [iRemark1,setIRemark1] = useState(\"\");\n  const [iRemark2,setIRemark2] = useState(\"\");\n  \n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getOemAPICall();\n    getBulkChargerByIdAPICall();\n  },[])\n\n  // //API calls\n  const getOemAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:\"3\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let tempData = [];\n        if (responseData.status === 1) {          \n          responseData.data.map(item=>{\n            tempData.push({label: item.name, value: item.oem_id, id:item.oem_id});\n          })\n          setOemList(tempData);\n        }else{\n          // updateBulkChargerAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getBulkChargerByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getBulkChargerByIdAPI,\n        {\n            charger_master_id:location.state.bulkCharger_master_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            let allData = {};\n            if (responseData.status === 1) {\n                setImagePreview(responseData.data.file_img);\n                setImageFilePath(responseData.data.file_name_path);\n                setModelName(responseData.data.model);\n                setGcRemark1(responseData.data.remark_1);\n                setGcRemark2(responseData.data.remark_2);\n                setDimension(responseData.data.dimension);\n                allData = JSON.parse(responseData.data.all_data);\n                setOem({label:allData.oem_name,value:responseData.data.oem_id,id:responseData.data.oem_id});\n                setMonth(allData.make.month);\n                setYear(allData.make.year);\n                setBatteryModules(allData.battery_modules);\n                setBatteryType(allData.battery_type);\n                setBatteryCapacity(allData.battery_capacity);\n                setBatterySlotDimension(allData.battery_slot_dimension);\n                setNoOfConnetor(allData.no_of_connetor);\n                setBatterySlotIndicator(allData.series_cell);\n                setChargingConnector(allData.charging_connector);\n                setVoltage(allData.voltage);\n                setMaxInputPower(allData.max_input_power);\n                setFrequency(allData.frequency);\n                setCurrent(allData.current);\n                setThdPowerFactor(allData.thd_power_factor);\n                setProtection(allData.protection);\n                setChargingVoltage(allData.charging_voltage);\n                setOutputPower(allData.output_power);\n                setMaxChargingCurrent(allData.max_charging_current);\n                setPowerOfEachBatterySlot(allData.power_of_each_battery_slot);\n                setFullLoadPowerOfEachSlot(allData.full_load_power_of_each_slot);\n                setInputImpedance(allData.input_impedance);\n                setStaticVoltageRegulation(allData.static_voltage_regulation);\n                setRippleAndNoise(allData.ripple_and_noise);\n                setOutputProtection(allData.output_protection);\n                setEfficiency(allData.efficiency);\n                setAcousticNoise(allData.acoustic_noise);\n                setOperatingTemp(allData.operating_temp);\n                setStorageTemp(allData.storage_temp);\n                setHumidity(allData.humidity);\n                setAmbientPressure(allData.ambient_pressure);\n                setAccessories(allData.accessories);\n                setBatteryDoorLocking(allData.battery_door_locking);\n                setThickness(allData.thickness);\n                setColour(allData.colour);\n                setCableEntry(allData.cable_entry);\n                setAlarms(allData.alarms);\n                setEmergencyProtection(allData.emergency_protection);\n                setCooling(allData.cooling);\n                setIpRating(allData.ip_rating);\n                setMechanical(allData.mechanical);\n                setSurgeProtection(allData.surge_protection);\n                setPowerConnector(allData.power_connector);\n                setFireSafety(allData.fire_safety);\n                setSmokeDetector(allData.smoke_detector);\n                setThermalDetector(allData.thermal_detector);\n                setFireSuppresionSystem(allData.fire_suppresion_system);\n                setVideoSurevillance(allData.video_surevillance);\n                setWaterLevelSensor(allData.water_level_sensor);\n                setMtbf(allData.mtbf);\n                setUserAuthentication(allData.user_authentication);\n                setDisplay(allData.display);\n                setCommunication(allData.communication);\n                setIndication(allData.indication);\n                setInterfaceMode(allData.interface_mode);\n                setIdentification(allData.identification);\n                setUserInterface(allData.user_interface);\n                setNetworkCommunication(allData.network_communication);\n                setApplicationUse(allData.application_use);\n                setEcRemark1(allData.ec_remark_1);\n                setEcRemark2(allData.ec_remark_2);\n                setTcRemark1(allData.tc_remark_1);\n                setTcRemark2(allData.tc_remark_2);\n                setMcRemark1(allData.mc_remark_1);\n                setMcRemark2(allData.mc_remark_2);\n                setPRemark1(allData.p_remark_1);\n                setPRemark2(allData.p_remark_2);\n                setWRemark1(allData.w_remark_1);\n                setWRemark2(allData.w_remark_2);\n                setIRemark1(allData.i_remark_1);\n                setIRemark2(allData.i_remark_2);\n            }else{\n            updateBulkChargerAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n  const updateBulkChargerAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(updateBulkChargerAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/bulkcharger',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          updateBulkChargerAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const BulkChargerDetailsValidationSchema = yup.object().shape({\n    model:yup.string()\n        .required(\"Model name is required\"),\n    dimension:yup.string()\n        .required(\"Dimension is required\"),\n  });\n\n  //helper\n  const getYear = () => {\n    let yearList = [];\n    for (let index = 0; index <= 20; index++) {\n      const temp = {label:2010+index,value:index+1,id:index+1}\n      yearList.push(temp);\n    }\n    return yearList\n  };\n  //Alert helper methods\n  const updateBulkChargerAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //image selection methods\n  const handleImageSelect = (imageFile) =>{\n    const fileExtension = imageFile.name.split('.').pop();\n    if (fileExtension == \"jpg\" || fileExtension == \"jpeg\" || fileExtension == \"png\") {\n      setImageErrorFlag(false);\n      setImageSelected(imageFile);\n      setImageFilePath(\"\");\n      setImagePreview(URL.createObjectURL(imageFile));\n    } else {\n      setImageErrorFlag(true);\n    }\n  }\n  const handleDeleteImage = () =>{\n    setImageKey(!imageKey);\n    setImagePreview();\n    setImageFilePath(\"\");\n  }\n\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            model:modelName,\n            battery_modules:batteryModules,\n            battery_type:batteryType,\n            battery_capacity:batteryCapacity,\n            battery_slot_dimension:batterySlotDimension,\n            no_of_connetor:noOfConnetor,\n            battery_slot_indicator:batterySlotIndicator,\n            charging_connector:chargingConnector,\n            gc_remark_1:gcRemark1,\n            gc_remark_2:gcRemark2,\n            voltage:voltage,\n            max_input_power:maxInputPower,\n            frequency:frequency,\n            current:current,\n            thd_power_factor:thdPowerFactor,\n            protection:protection,\n            charging_voltage:chargingVoltage,\n            output_power:outputPower,\n            max_charging_current:maxChargingCurrent,\n            power_of_each_battery_slot:powerOfEachBatterySlot,\n            full_load_power_of_each_slot:fullLoadPowerOfEachSlot,\n            input_impedance:inputImpedance,\n            static_voltage_regulation:staticVoltageRegulation,\n            ripple_and_noise:rippleAndNoise,\n            output_protection:outputProtection,\n            efficiency:efficiency,\n            acoustic_noise:acousticNoise,\n            operating_temp:operatingTemp,\n            storage_temp:storageTemp,\n            humidity:humidity,\n            ambient_pressure:ambientPressure,\n            accessories:accessories,\n            battery_door_locking:batteryDoorLocking,\n            dimension:dimension,\n            thickness:thickness,\n            colour:colour,\n            cable_entry:cableEntry,\n            alarms:alarms,\n            emergency_protection:emergencyProtection,\n            cooling:cooling,\n            ip_rating:ipRating,\n            mechanical:mechanical,\n            surge_protection:surgeProtection,\n            power_connector:powerConnector,\n            fire_safety:fireSafety,\n            smoke_detector:smokeDetector,\n            thermal_detector:thermalDetector,\n            fire_suppresion_system:fireSuppresionSystem,\n            video_surevillance:videoSurevillance,\n            water_level_sensor:waterLevelSensor,\n            mtbf:mtbf,\n            user_authentication:userAuthentication,\n            display:display,\n            communication:communication,\n            indication:indication,\n            interface_mode:interfaceMode,\n            identification:identification,\n            user_interface:userInterface,\n            network_communication:networkCommunication,\n            application_use:applicationUse,\n            ec_remark_1:ecRemark1,\n            ec_remark_2:ecRemark2,\n            tc_remark_1:tcRemark1,\n            tc_remark_2:tcRemark2,\n            mc_remark_1:mcRemark1,\n            mc_remark_2:mcRemark2,\n            p_remark_1:pRemark1,\n            p_remark_2:pRemark2,\n            w_remark_1:wRemark1,\n            w_remark_2:wRemark2,\n            i_remark_1:iRemark1,\n            i_remark_2:iRemark2,\n        }}\n        validationSchema={BulkChargerDetailsValidationSchema} \n        onSubmit={(values)=>{\n          if (month == null || year == null) {\n            updateBulkChargerAlert(\"Make Year is required\");\n            return;\n          }\n          let formData  = new FormData();\n          const tempData={\n              oem_name:oem.label,\n              make:{month:month,year:year},\n              battery_modules:values.battery_modules,\n              battery_type:values.battery_type,\n              battery_capacity:values.battery_capacity,\n              no_of_connetor:values.no_of_connetor,\n              battery_slot_dimension:values.battery_slot_dimension,\n              battery_slot_indicator:values.battery_slot_indicator,\n              charging_connector:values.charging_connector,\n              voltage:values.voltage,\n              max_input_power:values.max_input_power,\n              frequency:values.frequency,\n              current:values.current,\n              thd_power_factor:values.thd_power_factor,\n              protection:values.protection,\n              charging_voltage:values.charging_voltage,\n              output_power:values.output_power,\n              max_charging_current:values.max_charging_current,\n              power_of_each_battery_slot:values.power_of_each_battery_slot,\n              full_load_power_of_each_slot:values.full_load_power_of_each_slot,\n              input_impedance:values.input_impedance,\n              static_voltage_regulation:values.static_voltage_regulation,\n              ripple_and_noise:values.ripple_and_noise,\n              output_protection:values.output_protection,\n              efficiency:values.efficiency,\n              acoustic_noise:values.acoustic_noise,\n              operating_temp:values.operating_temp,\n              storage_temp:values.storage_temp,\n              humidity:values.humidity,\n              ambient_pressure:values.ambient_pressure,\n              accessories:values.accessories,\n              accessories:values.accessories,\n              battery_door_locking:values.battery_door_locking,\n              thickness:values.thickness,\n              colour:values.colour,\n              cable_entry:values.cable_entry,\n              alarms:values.alarms,\n              emergency_protection:values.emergency_protection,\n              cooling:values.cooling,\n              ip_rating:values.ip_rating,\n              mechanical:values.mechanical,\n              surge_protection:values.surge_protection,\n              power_connector:values.power_connector,\n              fire_safety:values.fire_safety,\n              smoke_detector:values.smoke_detector,\n              thermal_detector:values.thermal_detector,\n              fire_suppresion_system:values.fire_suppresion_system,\n              video_surevillance:values.video_surevillance,\n              water_level_sensor:values.water_level_sensor,\n              mtbf:values.mtbf,\n              user_authentication:values.user_authentication,\n              display:values.display,\n              communication:values.communication,\n              indication:values.indication,\n              interface_mode:values.interface_mode,\n              identification:values.identification,\n              user_interface:values.user_interface,\n              network_communication:values.network_communication,\n              application_use:values.application_use,\n              ec_remark_1:values.ec_remark_1,\n              ec_remark_2:values.ec_remark_2,\n              tc_remark_1:values.tc_remark_1,\n              tc_remark_2:values.tc_remark_2,\n              mc_remark_1:values.mc_remark_1,\n              mc_remark_2:values.mc_remark_2,\n              p_remark_1:values.p_remark_1,\n              p_remark_2:values.p_remark_2,\n              w_remark_1:values.w_remark_1,\n              w_remark_2:values.w_remark_2,\n              i_remark_1:values.i_remark_1,\n              i_remark_2:values.i_remark_2,\n          }\n          formData.append('charger_master_id',location.state.bulkCharger_master_id);\n          formData.append('oem_id',oem.value);\n          formData.append('model',values.model,);\n          formData.append('dimension',values.dimension);\n          formData.append('make',month.label+\"-\"+year.label);\n          formData.append('remark_1',values.gc_remark_1);\n          formData.append('remark_2',values.gc_remark_2);\n          formData.append('all_data',JSON.stringify(tempData));\n          formData.append('file_name_path',imageFilePath);\n          if (imageSelected!=null) {\n            formData.append('img_file',imageSelected);\n          }\n          updateBulkChargerAPICall(formData);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors,isValid})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\">\n                    <span className=\"page_title\">Update Bulk Charger</span>\n                      <Button color=\"light\" className=\"default float-right\" onClick={()=>history.goBack()}>\n                          <b>Cancel</b>\n                      </Button>\n                      <Button color=\"primary\" className=\"default mr-2 float-right\" onClick={handleSubmit} disabled={buttonDisabled}>\n                        <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Update</b>\n                      </Button>              \n                  <Separator className=\"mb-5\" />\n                </Colxx>\n              </Row>\n              <Row>\n                <Colxx xxs=\"12\" lg=\"12\">\n                  <ul className=\"list-unstyled mb-4\">\n                    <li>\n                      <CardSubtitle className=\"mb-3\">\n                        <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                          {alertMsg}\n                        </Alert>\n                      </CardSubtitle>\n                    </li>\n                    <li>\n                      <Card className={isValid?\"question d-flex mb-4\":\"question d-flex mb-4 cardBorderError\"}>\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">1</span>\n                              General Characteristics\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse1 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse1(!collapse1)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse1}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                                <Row>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                        OEM\n                                      </Label>\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Select OEM\"\n                                        value={oem}\n                                        onChange={(e) => setOem(e)}\n                                        options={oemList}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Model Name\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Model Name\"\n                                        name=\"model\"\n                                        value={values.model}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        className={errors.model && touched.model ? \"input-error\":null}\n                                      />\n                                      {errors.model && touched.model &&(\n                                        <span className=\"error\">{errors.model}</span>\n                                      )}\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Make Year\n                                      </Label>\n                                      <Row>\n                                      <Colxx md=\"6\">\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Month\"\n                                        value={month}\n                                        onChange={(e) => setMonth(e)}\n                                        options={[\n                                          { label: 'January', value: '1', id: 1 },\n                                          { label: 'February', value: '2', id: 2 },\n                                          { label: 'March', value: '3', id: 3 },\n                                          { label: 'April', value: '4', id: 4 },\n                                          { label: 'May', value: '5', id: 6 },\n                                          { label: 'June', value: '6', id: 7 },\n                                          { label: 'July', value: '7', id: 8 },\n                                          { label: 'August', value: '8', id: 9 },\n                                          { label: 'September', value: '9', id: 10 },\n                                          { label: 'October', value: '10', id: 11 },\n                                          { label: 'November', value: '11', id: 12 },\n                                          { label: 'December', value: '12', id: 13 },\n                                        ]}\n                                      />\n                                      </Colxx>\n                                      <Colxx md=\"6\">\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Year\"\n                                        value={year}\n                                        onChange={(e) => setYear(e)}\n                                        options={getYear()}\n                                      />\n                                      </Colxx>\n                                      </Row>\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx md={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery modules \n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery modules \"\n                                        name=\"battery_modules\"\n                                        value={values.battery_modules}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx md={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery Type (AH)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery Type (AH)\"\n                                        name=\"battery_type\"\n                                        value={values.battery_type}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery Capacity (AH)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery Capacity (AH)\"\n                                        name=\"battery_capacity\"\n                                        value={values.battery_capacity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery slot dimension\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery slot dimension\"\n                                        name=\"battery_slot_dimension\"\n                                        value={values.battery_slot_dimension}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      no. of connetor\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"no. of connetor\"\n                                        name=\"no_of_connetor\"\n                                        value={values.no_of_connetor}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery slot indicator\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery slot indicator\"\n                                        name=\"battery_slot_indicator\"\n                                        value={values.battery_slot_indicator}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Charging Connector\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Charging Connector\"\n                                        name=\"charging_connector\"\n                                        value={values.charging_connector}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                        Image\n                                      </Label>\n                                      <Input\n                                        key={imageKey}\n                                        type=\"file\"\n                                        name=\"upload_image\"\n                                        accept=\".png,.jpg,.jpeg\"\n                                        onChange={e=>handleImageSelect(e.target.files[0])}\n                                      />\n                                      {imageErrorFLag && \n                                        <span className=\"error\">Image must be either png,jpg or jpeg format</span>\n                                      }\n                                    </FormGroup>\n                                  </Colxx>\n                                  {(imagePreview!=null  && imagePreview!=\"\") &&\n                                    <Colxx sm={3}>\n                                      <div>\n                                        <Button className=\"custom-badge default tbl_action_btn\" onClick={()=>handleDeleteImage()}><i className=\"glyph-icon simple-icon-trash image-remove-icon\"></i></Button>\n                                        <img src={imagePreview} height=\"100px\" width=\"150px\" alt=\"Image Preview\"/>\n                                      </div>\n                                    </Colxx>\n                                  } \n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"gc_remark_1\"\n                                        value={values.gc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"gc_remark_2\"\n                                        value={values.gc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                    </li>\n                    <li>\n                      <Card className=\"question d-flex mb-4\">\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">2</span>\n                              Electrical Characteristics\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse2 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse2(!collapse2)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse2}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Voltage\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Voltage\"\n                                        name=\"voltage\"\n                                        value={values.voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Max input power\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Max input power\"\n                                        name=\"max_input_power\"\n                                        value={values.max_input_power}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Frequency\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Frequency\"\n                                        name=\"frequency\"\n                                        value={values.frequency}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Current \n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Current\"\n                                        name=\"current\"\n                                        value={values.current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      THD/Power Factor\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"THD/Power Factor\"\n                                        name=\"thd_power_factor\"\n                                        value={values.thd_power_factor}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Protection\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Protection\"\n                                        name=\"protection\"\n                                        value={values.protection}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Charging Voltage\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Charging Voltage\"\n                                        name=\"charging_voltage\"\n                                        value={values.charging_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Output power\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Output power\"\n                                        name=\"output_power\"\n                                        value={values.output_power}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Max charging current\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Max charging current\"\n                                        name=\"max_charging_current\"\n                                        value={values.max_charging_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Power of each battery slot\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Power of each battery slot\"\n                                        name=\"power_of_each_battery_slot\"\n                                        value={values.power_of_each_battery_slot}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Full load power of each slot\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Full load power of each slot\"\n                                        name=\"full_load_power_of_each_slot\"\n                                        value={values.full_load_power_of_each_slot}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Input impedance\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Input impedance\"\n                                        name=\"input_impedance\"\n                                        value={values.input_impedance}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Static voltage regulation\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Static voltage regulation\"\n                                        name=\"static_voltage_regulation\"\n                                        value={values.static_voltage_regulation}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Ripple and noise\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Ripple and noise\"\n                                        name=\"ripple_and_noise\"\n                                        value={values.ripple_and_noise}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Output protection\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Output protection\"\n                                        name=\"output_protection\"\n                                        value={values.output_protection}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Efficiency\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Efficiency\"\n                                        name=\"efficiency\"\n                                        value={values.efficiency}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Acoustic Noise\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Acoustic Noise\"\n                                        name=\"acoustic_noise\"\n                                        value={values.acoustic_noise}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"ec_remark_1\"\n                                        value={values.ec_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"ec_remark_2\"\n                                        value={values.ec_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">3</span>\n                                Temprature Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse3 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse3(!collapse3)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse3}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                  <Row>                        \n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Operating temp\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Operating temp\"\n                                          name=\"operating_temp\"\n                                          value={values.operating_temp}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Storage Temp.\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Storage Temp.\"\n                                          name=\"storage_temp\"\n                                          value={values.storage_temp}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Humidity\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Humidity\"\n                                          name=\"humidity\"\n                                          value={values.humidity}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Temp. sensor\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Temp. sensor\"\n                                          name=\"temperature_sensor\"\n                                          value={values.temperature_sensor}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"tc_remark_1\"\n                                        value={values.tc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"tc_remark_2\"\n                                        value={values.tc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>                        \n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className={isValid?\"question d-flex mb-4\":\"question d-flex mb-4 cardBorderError\"}>\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">4</span>\n                                Mechanical Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse4 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse4(!collapse4)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse4}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Ambient pressure\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Ambient pressure\"\n                                          name=\"ambient_pressure\"\n                                          value={values.ambient_pressure}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Accessories\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Accessories\"\n                                          name=\"accessories\"\n                                          value={values.accessories}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Battery door locking\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Battery door locking\"\n                                          name=\"battery_door_locking\"\n                                          value={values.battery_door_locking}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Dimension\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Dimension\"\n                                          name=\"dimension\"\n                                          value={values.dimension}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                         {errors.dimension && touched.dimension &&(\n                                            <span className=\"error\">{errors.dimension}</span>\n                                            )}\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Thickness\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Thickness\"\n                                          name=\"thickness\"\n                                          value={values.thickness}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Colour\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Colour\"\n                                          name=\"colour\"\n                                          value={values.colour}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Cable entry\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Cable entry\"\n                                          name=\"cable_entry\"\n                                          value={values.cable_entry}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"mc_remark_1\"\n                                        value={values.mc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"mc_remark_2\"\n                                        value={values.mc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx> \n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                      <Card className=\"question d-flex mb-4\">\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">5</span>\n                              Protections\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse5 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse5(!collapse5)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse5}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Alarms\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Alarms\"\n                                        name=\"alarms\"\n                                        value={values.alarms}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Emergency protection\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Emergency protection\"\n                                        name=\"emergency_protection\"\n                                        value={values.emergency_protection}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cooling\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cooling\"\n                                        name=\"cooling\"\n                                        value={values.cooling}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      IP Rating\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"IP Rating\"\n                                        name=\"ip_rating\"\n                                        value={values.ip_rating}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Mechanical\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Mechanical\"\n                                        name=\"mechanical\"\n                                        value={values.mechanical}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Surge protection\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Surge protection\"\n                                        name=\"surge_protection\"\n                                        value={values.surge_protection}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Power Connector\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Power Connector\"\n                                          name=\"power_connector\"\n                                          value={values.power_connector}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Fire safety\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Fire safety\"\n                                          name=\"fire_safety\"\n                                          value={values.fire_safety}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Smoke Detector\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Smoke Detector\"\n                                          name=\"smoke_detector\"\n                                          value={values.smoke_detector}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Thermal Detector\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Thermal Detector\"\n                                          name=\"thermal_detector\"\n                                          value={values.thermal_detector}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Fire suppresion system\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Fire suppresion system\"\n                                          name=\"fire_suppresion_system\"\n                                          value={values.fire_suppresion_system}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Video Surevillance\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Video Surevillance\"\n                                          name=\"video_surevillance\"\n                                          value={values.video_surevillance}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Water level sensor\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Water level sensor\"\n                                          name=\"water_level_sensor\"\n                                          value={values.water_level_sensor}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"p_remark_1\"\n                                        value={values.p_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"p_remark_2\"\n                                        value={values.p_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx> \n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">6</span>\n                                Warranty\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse6 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse6(!collapse6)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse6}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        MTBF\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"MTBF\"\n                                          name=\"mtbf\"\n                                          value={values.mtbf}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"w_remark_1\"\n                                        value={values.w_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"w_remark_2\"\n                                        value={values.w_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">7</span>\n                                Interface\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse7 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse7(!collapse7)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse7}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        User Authentication\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"User Authentication\"\n                                          name=\"user_authentication\"\n                                          value={values.user_authentication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Display\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Display\"\n                                          name=\"display\"\n                                          value={values.display}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Communication \n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Communication \"\n                                          name=\"communication\"\n                                          value={values.communication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Indication\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Indication\"\n                                          name=\"indication\"\n                                          value={values.indication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Interface mode\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Interface mode\"\n                                          name=\"interface_mode\"\n                                          value={values.interface_mode}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Identification\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Identification\"\n                                          name=\"identification\"\n                                          value={values.identification}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        User interface\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"User interface\"\n                                          name=\"user_interface\"\n                                          value={values.user_interface}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Netwrok Communication\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Netwrok Communication\"\n                                          name=\"network_communication\"\n                                          value={values.network_communication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Application use\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Application use\"\n                                          name=\"application_use\"\n                                          value={values.application_use}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"i_remark_1\"\n                                        value={values.i_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"i_remark_2\"\n                                        value={values.i_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                  </ul>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default UpdateBulkCharger;","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  Input,InputGroup \n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getFleetOperatorListAPI,deleteFleetOperatorAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\nconst FleetMaster = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //station list\n  const [fleetOperatorList,setFleetOperatorList] = useState([]);\n  const [fleetOperatorID,setFleetOperatorID] = useState(\"\");\n  const [fleetOperatorToDeleteId,setFleetOperatorToDeleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getFleetOperatorListAPICall();\n    fleetOperatorAlert();\n  },[fleetOperatorID,pageCount])\n\n  //API calls\n  const getFleetOperatorListAPICall = async() => {\n    setFleetOperatorList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setFleetOperatorList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteFleetOperatorAPICall = async(fleetOperatorId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteFleetOperatorAPI,\n      {fleet_operator_id:fleetOperatorId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setFleetOperatorID(fleetOperatorId);\n          fleetOperatorDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          console.log(responseData.msg);\n          fleetOperatorDeletedAlert(responseData.status,responseData.msg)\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updateFleetOperator = (fleetOperatorId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updatefleetoperator',\n      state:{fleet_operator_id:fleetOperatorId}\n    });\n  }\n\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const fleetOperatorDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n\n  const fleetOperatorAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (fleetOperatorId) => {\n    setFleetOperatorToDeleteId(fleetOperatorId)\n    setModalVisible(!modalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getFleetOperatorListAPICall();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Fleet Operator</span>\n            <a href=\"addfleetoperator\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                    <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                      {alertMsg}\n                    </Alert>\n                </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>Users</th>\n                    <th>Address</th>                    \n                    <th>Contact Person</th>\n                    <th>Contact Number</th>\n                    <th>Contact Email</th>\n                    <th>Remark1</th>\n                    <th>Remark2</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"11\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    fleetOperatorList.length > 0 ?\n                      fleetOperatorList.map((item,index)=>\n                            <tr key={index}>\n                            <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                            <td>{item.name}</td>\n                            <td>{item.users_name}</td>\n                            <td>{item.address}</td>\n                            <td>{item.contact_person}</td>\n                            <td>{item.contact_number}</td>\n                            <td>{item.contact_email}</td>\n                            <td>{item.remark_1}</td>\n                            <td>{item.remark_2}</td>\n                            <td>\n                              <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateFleetOperator(item.fleet_operator_id)}}>\n                                  <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                              </a>\n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.fleet_operator_id)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>\n                            </td>\n                          </tr>\n                      ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"11\">Data  Not  Found</td>\n                        </tr>\n                      }   \n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  <Row>\n                    <Colxx md=\"12\">\n                    Are you sure you would like to delete this Fleet Operator?\n                    </Colxx>\n                    <Colxx md=\"12\">\n                      <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteFleetOperatorAPICall(fleetOperatorToDeleteId)}>\n                      Delete Fleet Operator \n                      </Button>{' '}\n                      <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                        Cancel\n                      </Button>\n                    </Colxx>\n                  </Row>\n                  \n                  \n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default FleetMaster;\n","import React, { useState,useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {addFleetOperatorAPI,getUsersByRolesAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst AddFleet = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //multiSelect state\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  //fleet users list \n  const [fleetOperatorUsers, setFleetOperatorUsers] = useState([]);\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    getFleetOperatorUsersAPICall();\n  },[])\n\n  //API calls\n  const getFleetOperatorUsersAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getUsersByRolesAPI,\n      {user_role:\"fleet operator\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let users=[];\n        if (responseData.status === 1) {\n          responseData.data.map(item=>{\n           users.push({label:item.name,value:item.id,key:item.id})\n         })\n         setFleetOperatorUsers(users);\n        }else{\n          fleetAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addFleetOperatorAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addFleetOperatorAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/fleetoperator',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          fleetAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const fleetAddedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const FleetOperatorDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name is required\"),\n    address:yup.string()\n        .required(\"Address is required\"),\n    contact_person:yup.string()\n        .required(\"Contact Person is required\"),\n    contact_email:yup.string()\n        .email(\"Invalid Email format\")\n        .required(\"Contact email is required\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n        .required(\"Contact number is required\"),\n  });\n\n  const initialValues = {\n    name:\"\",\n    contact_person:\"\",\n    contact_email:\"\",\n    contact_number:\"\",\n    address:\"\",\n    remark_1:\"\",\n    remark_2:\"\"\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Fleet Operator</span>\n            <a href=\"fleetoperator\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Fleet Operator List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={FleetOperatorDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const usersSelected = [];\n          selectedOptions.map(item=>{\n            usersSelected.push(item.value)\n          })\n          const params = {\n            name:values.name,\n            users:usersSelected,\n            contact_person:values.contact_person,\n            contact_email:values.contact_email,\n            contact_number:values.contact_number,\n            address:values.address,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2\n          }\n          addFleetOperatorAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Users\n                                </Label>\n                                  <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={selectedOptions}\n                                    onChange={setSelectedOptions}\n                                    options={fleetOperatorUsers}\n                                  />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Person\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Person\"\n                                  name=\"contact_person\"\n                                  value={values.contact_person}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_person && touched.contact_person ? \"input-error\":null}\n                                />\n                                {errors.contact_person && touched.contact_person &&(\n                                  <span className=\"error\">{errors.contact_person}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Email\"\n                                  name=\"contact_email\"\n                                  value={values.contact_email}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_email && touched.contact_email ? \"input-error\":null}\n                                />\n                                {errors.contact_email && touched.contact_email &&(\n                                  <span className=\"error\">{errors.contact_email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Address\"\n                                  name=\"address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik> \n    </>\n  );\n};\n\nexport default AddFleet;","import React, { useState,useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getFleetOperatorByIdAPI,updateFleetOperatorAPI,getUsersByRolesAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateFleet = () => {\n  //multiSelect state\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  //fleet users list \n  const [fleetOperatorUsers, setFleetOperatorUsers] = useState([]);\n  //Fleet Operator details state\n  const [name,setName] = useState(\"\");\n  const [contactPerson,setContactPerson] = useState([]);\n  const [contactEmail,setContactEmail] = useState(\"\");\n  const [contactNumber,setContactNumber] = useState(\"\");\n  const [address,setAddress] = useState(\"\");\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getFleetOperatorUsersAPICall();\n    getFleetOperatorByIdAPICall();\n  },[])\n\n  //API calls\n  const getFleetOperatorUsersAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getUsersByRolesAPI,\n      {user_role:\"fleet operator\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let users=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           users.push({label:item.name,value:item.id,key:index})\n         })\n         setFleetOperatorUsers(users);\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getFleetOperatorByIdAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getFleetOperatorByIdAPI,\n    {\n        fleet_operator_id:location.state.fleet_operator_id\n    },\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        let tempData = [];\n        if (responseData.status === 1) {\n        setName(responseData.data.name);\n        setContactPerson(responseData.data.contact_person);\n        setContactEmail(responseData.data.contact_email);\n        setContactNumber(responseData.data.contact_number);\n        setAddress(responseData.data.address);\n        setRemark1(responseData.data.remark_1);\n        setRemark2(responseData.data.remark_2);\n        responseData.data.users.map((item,index)=>{\n            tempData.push({label:item.name,value:item.id,key:index})\n        })\n        setSelectedOptions(tempData);\n        }else{\n          fleetUpdatedAlert(responseData.msg);\n        }\n    }).catch(error=>{\n        console.log(error);\n    })\n}\n\nconst updateFleetOperatorAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(updateFleetOperatorAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/fleetoperator',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          fleetUpdatedAlert(responseData.msg);\n        }\n    }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n    })\n}\n\n  //helper methods\n  //Alert helper methods\n  const fleetUpdatedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const FleetOperatorDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name is required\"),\n    address:yup.string()\n        .required(\"Address is required\"),\n    contact_person:yup.string()\n        .required(\"Contact Person is required\"),\n    contact_email:yup.string()\n        .email(\"Invalid Email format\")\n        .required(\"Contact email is required\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n        .required(\"Contact number is required\"),\n  });\n\n  const initialValues = {\n    name:name,\n    contact_person:contactPerson,\n    contact_email:contactEmail,\n    contact_number:contactNumber,\n    address:address,\n    remark_1:remark1,\n    remark_2:remark2\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Fleet Operator</span>\n            <a href=\"fleetoperator\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Fleet Operator List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialValues}\n        validationSchema={FleetOperatorDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const usersSelected = [];\n          selectedOptions.map(item=>{\n            usersSelected.push(item.value)\n          })\n          const params = {\n            fleet_operator_id:location.state.fleet_operator_id,\n            name:values.name,\n            users:usersSelected,\n            contact_person:values.contact_person,\n            contact_email:values.contact_email,\n            contact_number:values.contact_number,\n            address:values.address,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2\n          }\n          updateFleetOperatorAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Users\n                                </Label>\n                                  <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={selectedOptions}\n                                    onChange={setSelectedOptions}\n                                    options={fleetOperatorUsers}\n                                  />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Person\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Person\"\n                                  name=\"contact_person\"\n                                  value={values.contact_person}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_person && touched.contact_person ? \"input-error\":null}\n                                />\n                                {errors.contact_person && touched.contact_person &&(\n                                  <span className=\"error\">{errors.contact_person}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Email\"\n                                  name=\"contact_email\"\n                                  value={values.contact_email}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_email && touched.contact_email ? \"input-error\":null}\n                                />\n                                {errors.contact_email && touched.contact_email &&(\n                                  <span className=\"error\">{errors.contact_email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Address\"\n                                  name=\"address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik> \n    </>\n  );\n};\n\nexport default UpdateFleet;","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  Input,InputGroup\n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot, getOwnerListAPI,deleteOwnerAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\n\nconst OwnerMaster = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //user states\n  const [ownerList,setOwnerList] = useState([]);\n  const [ownerID,setOwnerID] = useState(\"\");\n  const [ownerToDeleleteId,setOwnerToDeleleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getOwnerListAPICall();\n    ownerAlert();\n  },[pageCount,ownerID])\n\n  //API CALLS\n  const getOwnerListAPICall = async() => {\n    setOwnerList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getOwnerListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setOwnerList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const deleteOwnerAPICall = async(ownerId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteOwnerAPI,\n      {owner_master_id:ownerId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setOwnerID(ownerId);\n          ownerDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  const updateOwner = (ownerId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updateowner',\n      state:{owner_master_id:ownerId}\n    });\n  }\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //ALert helper methods\n  const ownerDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const ownerAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (userId) => {\n    setOwnerToDeleleteId(userId)\n    setModalVisible(!modalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getOwnerListAPICall();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Owner</span>\n            <a href=\"addowner\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n            <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n            </CardSubtitle> \n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Owner Name</th>\n                    <th>Contact Number</th>\n                    <th>Contact Email</th>\n                    <th>Address</th>                    \n                    <th>Remark</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"7\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    ownerList.length > 0 ?\n                    ownerList.map((item,index)=>\n                      <tr key={index}>\n                        <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index+1}</th>\n                        <td>{item.name}</td>\n                        <td>{JSON.parse(item.all_data)!=null?JSON.parse(item.all_data).contact_number:\"\"}</td>\n                        <td>{JSON.parse(item.all_data)!=null?JSON.parse(item.all_data).contact_email:\"\"}</td>\n                        <td>{JSON.parse(item.all_data)!=null?JSON.parse(item.all_data).address:\"\"}</td>\n                        <td>{item.remark}</td>\n                        <td>\n                            <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateOwner(item.owner_master_id)}}>\n                                <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                            </a>\n                            <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.owner_master_id)}}>\n                                <i className=\"glyph-icon simple-icon-trash\"></i>\n                            </Button>\n                        </td>\n                      </tr>\n                    ):<tr>\n                        <td className=\"text-center text-danger\" colSpan=\"7\">Data  Not  Found</td>\n                    </tr>\n                }\n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  Are you sure you would like to delete this owner?\n                  <Button color=\"success\" className=\"mt-4\" onClick={()=>{deleteOwnerAPICall(ownerToDeleleteId)}}>\n                    Delete Owner\n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                    Cancel\n                  </Button>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default OwnerMaster;\n","import React,{useState} from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot, addOwnerAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst AddOwner = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n\n  const history = useHistory();\n\n  //API calls\n  const addOwnerAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addOwnerAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/owner',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          ownerAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const ownerAddedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const OwnerDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Owner name is required\"),\n    contact_email:yup.string()\n        .email(\"Invalid Email format\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n  });\n\n  const initialValues = {\n    name:\"\",\n    contact_email:\"\",\n    contact_number:\"\",\n    address:\"\",\n    remark:\"\",\n  };\n  \n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Owner</span>\n            <a href=\"owner\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Owner List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={OwnerDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const tempAllData = {\n            contact_email:values.contact_email,\n            contact_number:values.contact_number,\n            address:values.address,\n          }\n          const params = {\n            name: values.name,\n            all_data:JSON.stringify(tempAllData),\n            remark:values.remark\n          }\n          addOwnerAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                        <Row>\n                          <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Full Name \"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Email\"\n                                  name=\"contact_email\"\n                                  value={values.contact_email}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_email && touched.contact_email ? \"input-error\":null}\n                                />\n                                {errors.contact_email && touched.contact_email &&(\n                                  <span className=\"error\">{errors.contact_email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Address\"\n                                  name=\"address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Remark \"\n                                  name=\"remark\"\n                                  value={values.remark}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default AddOwner;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row, FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {updateOwnerAPI,getOwnerByIdAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst UpdateOwner = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  //states\n  const [ownerName,setOwnerName] = useState(\"\");\n  const [contactEmail,setContactEmail] = useState(\"\");\n  const [contactNumber,setContactNumber] = useState(\"\");\n  const [address,setAddress] = useState(\"\");\n  const [remark,setRemark] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n\n  useEffect(()=>{\n      getOwnerByIdAPICall();\n  },[])\n\n  //API calls\n    const getOwnerByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getOwnerByIdAPI,\n        {\n            owner_master_id:location.state.owner_master_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n            setOwnerName(responseData.data.name);\n            setContactEmail(JSON.parse(responseData.data.all_data).contact_email);\n            setContactNumber(JSON.parse(responseData.data.all_data).contact_number);\n            setAddress(JSON.parse(responseData.data.all_data).address);\n            setRemark(responseData.data.remark);\n            }else{\n              ownerUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n\n    const updateOwnerAPICall = async(params) => {\n        setButtonDisabled(true);\n        const currentUser = getCurrentUser();\n        await axios.post(updateOwnerAPI,\n        params,\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n              history.push({\n                pathname:adminRoot+'/pages/owner',\n                state:{\n                  responseStatus:responseData.status,\n                  responseMsg:responseData.msg\n                }\n              })\n            }else{\n              setButtonDisabled(false);\n              ownerUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            setButtonDisabled(false);\n            console.log(error);\n        })\n    }\n\n  //helper methods\n  //Alert helper methods\n  const ownerUpdatedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const OwnerDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Owner Name is required\"),\n    contact_email:yup.string()\n        .email(\"Invalid Email format\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Owner</span>\n            <a href=\"owner\" className=\"btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Owner List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n      enableReinitialize ={true}\n        initialValues={{\n            name:ownerName,\n            contact_email:contactEmail,\n            contact_number:contactNumber,\n            address:address,\n            remark:remark\n        }}\n        validationSchema={OwnerDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const tempAllData = {\n            contact_email:values.contact_email,\n            contact_number:values.contact_number,\n            address:values.address,\n          }\n          const params = {\n              owner_master_id:location.state.owner_master_id,\n              name:values.name,\n              all_data:JSON.stringify(tempAllData),\n              remark:values.remark\n          }\n          updateOwnerAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                    Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Email\"\n                                  name=\"contact_email\"\n                                  value={values.contact_email}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_email && touched.contact_email ? \"input-error\":null}\n                                />\n                                {errors.contact_email && touched.contact_email &&(\n                                  <span className=\"error\">{errors.contact_email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Address\"\n                                  name=\"address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark\"\n                                  placeholder=\"Remark\"\n                                  value={values.remark}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default UpdateOwner;","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  Input,InputGroup \n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getOemListAPI,deleteOemAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\nconst OEMMaster = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //station list\n  const [oemList,setOemList] = useState([]);\n  const [oemID,setOemID] = useState(\"\");\n  const [oemToDeleteId,setOemToDeleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getOemListAPICall();\n    oemAlert();\n  },[oemID,pageCount])\n\n  //API calls\n  const getOemListAPICall = async() => {\n    setOemList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getOemListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setOemList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteOemAPICall = async(oemId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteOemAPI,\n      {oem_id:oemId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setOemID(oemId);\n          oemDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          console.log(responseData.msg);\n          oemDeletedAlert(responseData.status,responseData.msg)\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updateOem = (oemId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updateoem',\n      state:{oem_id:oemId}\n    });\n  }\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const oemDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const oemAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (oemId) => {\n    setOemToDeleteId(oemId)\n    setModalVisible(!modalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getOemListAPICall();\n  }\n\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Original Equipment Manufacturer</span>\n            <a href=\"addoem\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                  <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                    {alertMsg}\n                  </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>Type</th>\n                    <th>Address</th>\n                    <th>Contact Person</th>\n                    <th>Contact Number</th>\n                    <th>Contact Email</th>\n                    <th>Users</th>\n                    <th>Remark1</th>\n                    <th>Remark2</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"11\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                  oemList.length > 0 ?\n                    oemList.map((item,index)=>\n                      <tr key={index}>\n                        <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                        <td>{item.name}</td>\n                        <td>{item.type===1?\"Battery\":item.type ===2?\"EV\":\"Charger\"}</td>\n                        <td>{item.address}</td>\n                        <td>{item.contact_person}</td>\n                        <td>{item.contact_number}</td>\n                        <td>{item.contact_email}</td>\n                        <td>{item.users_name}</td>\n                        <td>{item.remark_1}</td>\n                        <td>{item.remark_2}</td>\n                        <td>\n                          <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateOem(item.oem_id)}}>\n                              <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                          </a>\n                          <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.oem_id)}}>\n                              <i className=\"glyph-icon simple-icon-trash\"></i>\n                          </Button>\n                        </td>\n                      </tr>\n                      ):<tr>\n                        <td className=\"text-center text-danger\" colSpan=\"11\">Data  Not  Found</td>\n                      </tr>\n                }\n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  Are you sure you would like to delete this OEM?\n                  <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteOemAPICall(oemToDeleteId)}>\n                    Delete OEM \n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                    Cancel\n                  </Button>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default OEMMaster;\n","import React, { useEffect, useState } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {addOemAPI,getUsersByRolesAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst AddOEM = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //multiselect state\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  //oem users list\n  const [oemUsers, setOemUsers] = useState([]);\n  const [type, setType] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    getOemUsersAPICall();\n  },[])\n\n  //API calls\n  const getOemUsersAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getUsersByRolesAPI,\n      {user_role:\"OEM\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let users=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           users.push({label:item.name,value:item.id,key:index})\n         })\n         setOemUsers(users);\n        }else{\n          oemAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addOemAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addOemAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/oem',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          oemAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const oemAddedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const OemDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name is required\"),\n    address:yup.string()\n        .required(\"Address is required\"),\n    contact_person:yup.string()\n        .required(\"Contact Person is required\"),\n    contact_email:yup.string()\n        .email(\"Invalid Email format\")\n        .required(\"Contact email is required\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n        .required(\"Contact number is required\"),\n  });\n\n  const initialValues = {\n    name:\"\",\n    address:\"\",\n    contact_person:\"\",\n    contact_email:\"\",\n    contact_number:\"\",\n    remark_1:\"\",\n    remark_2:\"\"\n  };\n\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add OEM</span>\n            <a href=\"oem\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> OEM List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={OemDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const usersSelected = [];\n          selectedOptions.map(item=>{\n            usersSelected.push(item.value)\n          })\n          const params = {\n            name:values.name,\n            address:values.address,\n            contact_person:values.contact_person,\n            contact_email:values.contact_email,\n            contact_number:values.contact_number,\n            users:usersSelected,\n            type:type,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2\n          }\n          console.log(params);\n          addOemAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                        <Row>\n                          <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Address\"\n                                  name=\"address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={4}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Person\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Person\"\n                                  name=\"contact_person\"\n                                  value={values.contact_person}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_person && touched.contact_person ? \"input-error\":null}\n                                />\n                                {errors.contact_person && touched.contact_person &&(\n                                  <span className=\"error\">{errors.contact_person}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={4}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Email\"\n                                  name=\"contact_email\"\n                                  value={values.contact_email}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_email && touched.contact_email ? \"input-error\":null}\n                                />\n                                {errors.contact_email && touched.contact_email &&(\n                                  <span className=\"error\">{errors.contact_email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={4}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  Users\n                                </Label>\n                                  <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={selectedOptions}\n                                    onChange={setSelectedOptions}\n                                    options={oemUsers}\n                                  />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  Type\n                                </Label>\n                                <Input type=\"select\" onChange={(e)=>setType(e.target.value)}>\n                                    <option key={0} >Select</option>\n                                    <option key={1} value={1}>Battery</option>\n                                    <option key={2} value={2}>EV</option>\n                                    <option key={3} value={3}>Charger</option>\n                                </Input>\n                                </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default AddOEM;\n","import React, { useEffect, useState } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {updateOemAPI,getOemUsersAPI,getOemByIdAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst UpdateOEM = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //multiselect state\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [oemUsers, setOemUsers] = useState([]);\n  //type state\n  const [type, setType] = useState(\"\");\n  //oem details state\n  const [name,setName] = useState(\"\");\n  const [address,setAddress] = useState(\"\");\n  const [contactPerson,setContactPerson] = useState([]);\n  const [contactEmail,setContactEmail] = useState(\"\");\n  const [contactNumber,setContactNumber] = useState(\"\");\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n   \n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getOemUsersAPICall();\n    getOemByIdAPICall();\n  },[])\n\n  //API calls\n  const getOemUsersAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getOemUsersAPI,\n      {user_role:\"OEM\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let users=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           users.push({label:item.name,value:item.id,key:index})\n         })\n         setOemUsers(users);\n        }else{\n          oemUpdatedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n    }\n    const getOemByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getOemByIdAPI,\n        {\n            oem_id:location.state.oem_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            let tempData = [];\n            if (responseData.status === 1) {\n            setName(responseData.data.name);\n            setAddress(responseData.data.address);\n            setContactPerson(responseData.data.contact_person);\n            setContactEmail(responseData.data.contact_email);\n            setContactNumber(responseData.data.contact_number);\n            setType(responseData.data.type);\n            setRemark1(responseData.data.remark_1);\n            setRemark2(responseData.data.remark_2);\n            responseData.data.users.map((item,index)=>{\n                tempData.push({label:item.name,value:item.id,key:index})\n            })\n            setSelectedOptions(tempData);\n            }else{\n              oemUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n\n    const updateOemAPICall = async(params) => {\n        setButtonDisabled(true);\n        const currentUser = getCurrentUser();\n        await axios.post(updateOemAPI,\n        params,\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n              history.push({\n                pathname:adminRoot+'/pages/oem',\n                state:{\n                  responseStatus:responseData.status,\n                  responseMsg:responseData.msg\n                }\n              })\n            }else{\n              setButtonDisabled(false);\n              oemUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            setButtonDisabled(false);\n            console.log(error);\n        })\n    }\n\n  //helper methods\n  //Alert helper methods\n  const oemUpdatedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const OemDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name is required\"),\n    address:yup.string()\n        .required(\"Address is required\"),\n    contact_person:yup.string()\n        .required(\"Contact Person is required\"),\n    contact_email:yup.string()\n        .email(\"Invalid Email format\")\n        .required(\"Contact email is required\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n        .required(\"Contact number is required\"),\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update OEM</span>\n            <a href=\"oem\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> OEM List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            name:name,\n            address:address,\n            contact_person:contactPerson,\n            contact_email:contactEmail,\n            contact_number:contactNumber,\n            remark_1:remark1,\n            remark_2:remark2\n        }}\n        validationSchema={OemDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const usersSelected = [];\n          selectedOptions.map(item=>{\n            usersSelected.push(item.value)\n          })\n          const params = {\n            oem_id:location.state.oem_id,\n            name:values.name,\n            address:values.address,\n            contact_person:values.contact_person,\n            contact_email:values.contact_email,\n            contact_number:values.contact_number,\n            users:usersSelected,\n            type:type,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2\n          }\n          updateOemAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Address\"\n                                  name=\"address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={4}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Person\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Person\"\n                                  name=\"contact_person\"\n                                  value={values.contact_person}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_person && touched.contact_person ? \"input-error\":null}\n                                />\n                                {errors.contact_person && touched.contact_person &&(\n                                  <span className=\"error\">{errors.contact_person}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={4}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Email\"\n                                  name=\"contact_email\"\n                                  value={values.contact_email}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_email && touched.contact_email ? \"input-error\":null}\n                                />\n                                {errors.contact_email && touched.contact_email &&(\n                                  <span className=\"error\">{errors.contact_email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={4}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  Users\n                                </Label>\n                                  <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={selectedOptions}\n                                    onChange={setSelectedOptions}\n                                    options={oemUsers}\n                                  />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  Battery\n                                </Label>\n                                <Input type=\"select\" onChange={(e)=>setType(e.target.value)} value={type}>\n                                    <option key={0} >Select</option>\n                                    <option key={1} value={1}>Battery</option>\n                                    <option key={2} value={2}>EV</option>\n                                    <option key={3} value={3}>Charger</option>\n                                </Input>\n                                </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default UpdateOEM;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  Input,InputGroup \n} from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getSwappingStationAPI,deleteSwappingStationAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\nconst SwappingStationMaster = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //station list\n  const [stationList,setStationList] = useState([]);\n  const [stationID,setStationID] = useState(\"\");\n  const [stationToDeleteId,setStationToDeleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getSwappingStationListAPI();\n    stationAlert();\n  },[stationID,pageCount])\n\n  //API calls\n  const getSwappingStationListAPI = async() => {\n    setStationList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getSwappingStationAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setStationList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteSwappingStationAPICall = async(stationId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteSwappingStationAPI,\n      {hub_master_id:stationId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setStationID(stationId);\n          stationDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          stationDeletedAlert(responseData.status,responseData.msg)\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updateSwappingStation = (stationId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updateswapping_station',\n      state:{station_id:stationId}\n    });\n  }\n\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const stationDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n\n  const stationAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (stationId) => {\n    setStationToDeleteId(stationId)\n    setModalVisible(!modalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getSwappingStationListAPI();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Swapping Station</span>\n            <a href=\"addswapping_station\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n            <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n            </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>EV Capacity</th>\n                    <th>Address</th>\n                    <th>City</th>\n                    <th>State</th>\n                    <th>Country</th>\n                    <th>Remark1</th>\n                    <th>Remark2</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {isLoading ?\n                    <tr>\n                        <td className=\"text-center\" colSpan=\"10\"><div className=\"custom-list-loading\" /></td>\n                    </tr> : \n                    stationList.length > 0 ?\n                      stationList.map((item,index)=>\n                        <tr key={item.hub_master_id}>\n                        <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                        <td>{item.name}</td>\n                        <td>{item.ev_capacity}</td>\n                        <td>{item.address}</td>\n                        <td>{item.city_name}</td>\n                        <td>{item.state_name}</td>\n                        <td>{item.country_name}</td>\n                        <td>{item.remark_1}</td>\n                        <td>{item.remark_2}</td>\n                        <td>\n                          <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateSwappingStation(item.hub_master_id)}}>\n                              <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                          </a>\n                          <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.hub_master_id)}}>\n                              <i className=\"glyph-icon simple-icon-trash\"></i>\n                          </Button>\n                        </td>\n                      </tr>\n                      ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"10\">Data  Not  Found</td>\n                      </tr>\n                  }\n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  Are you sure you would like to delete this station?\n                  <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteSwappingStationAPICall(stationToDeleteId)}>\n                    Delete Station \n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                    Cancel\n                  </Button>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default SwappingStationMaster;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,\n  Alert,\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {addSwappingStationAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst AddSwappingStation = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n  },[])\n\n  //API calls\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addSwappingStationAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addSwappingStationAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/swapping_station',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          stationAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n  //helper methods\n  //Alert helper methods\n  const stationAddedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    console.log(state);\n    getCityNamesAPICall(state);\n  }\n  //handle city select\n  const handleCitySelect = (city) => {\n    setCityId(city);\n  }\n  //Form Validation Schema\n  const StationDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Station name is required\"),\n    ev_capacity:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"EV capacity is required\"),\n    address:yup.string()\n        .required(\"Address is required\")\n  });\n\n  const initialValues = {\n    name:\"\",\n    ev_capacity:\"\",\n    latitude:\"\",\n    longitude:\"\",\n    address:\"\",\n    remark_1:\"\",\n    remark_2:\"\"\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Swapping Station</span>\n            <a href=\"swapping_station\" className=\"btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Swapping Station List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={StationDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n            name:values.name,\n            ev_capacity:values.ev_capacity,\n            latitude:values.latitude,\n            longitude:values.longitude,\n            address:values.address,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2,\n            country_id:countryId,\n            state_id:stateId,\n            city_id:cityId\n          }\n          addSwappingStationAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                EV Capacity\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"EV Capacity\"\n                                  value={values.ev_capacity}\n                                  name=\"ev_capacity\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.ev_capacity && touched.ev_capacity ? \"input-error\":null}\n                                />\n                                {errors.ev_capacity && touched.ev_capacity &&(\n                                  <span className=\"error\">{errors.ev_capacity}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  Country\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"country_id\"\n                                value={countryId}\n                                onChange={e=>handleCountrySelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select Country</option>\n                                  {countryList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.country_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  State\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"state_id\"\n                                value={stateId}\n                                onChange={e=>handleStateSelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select State</option>\n                                  {stateList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.state_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  City\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"city_id\"\n                                value={cityId}\n                                onChange={e=>handleCitySelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select City</option>\n                                  {cityList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.city_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Longitude\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  name=\"longitude\"\n                                  placeholder=\"Longitude\"\n                                  value={values.longitude}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Latitude\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  name=\"latitude\"\n                                  placeholder=\"Latitude\"\n                                  value={values.latitude}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"address\"\n                                  placeholder=\"Address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default AddSwappingStation;\n","import React,{useEffect, useState} from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,\n  Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {updateSwappingStationAPI,getStationByIdAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateSwappingStation = () => {\n  const history = useHistory();\n  const location = useLocation();\n  //states\n  const [stationName,setStationName] = useState(\"\");\n  const [evCapacity,setEvCapacity] = useState(\"\");\n  const [longitude,setLongitude] = useState(\"\");\n  const [latitude,setLatitude] = useState(\"\");\n  const [stationAddress,setStationAddress] = useState(\"\");\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n\n  useEffect(()=>{\n      getStationByIdAPICall();\n      getCountryNamesAPICall();\n  },[])\n\n  //API calls\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStationByIdAPICall = async() => {\n      const currentUser = getCurrentUser();\n      await axios.post(getStationByIdAPI,\n      {\n          hub_master_id:location.state.station_id\n      },\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n          const responseData = response.data;\n          if (responseData.status === 1) {\n          getStateNamesAPICall(responseData.data.country_id);\n          getCityNamesAPICall(responseData.data.state_id);\n          setStationName(responseData.data.name);\n          setStationAddress(responseData.data.address);\n          setEvCapacity(responseData.data.ev_capacity);\n          setLongitude(responseData.data.longitude);\n          setLatitude(responseData.data.latitude);\n          setRemark1(responseData.data.remark_1);\n          setRemark2(responseData.data.remark_2);\n          setCountryId(responseData.data.country_id);\n          setStateId(responseData.data.state_id);\n          setCityId(responseData.data.city_id);\n          }else{\n            stationUpdatedAlert(responseData.msg);\n          }\n      }).catch(error=>{\n          console.log(error);\n      })\n  }\n\n  const updateSwappingStationAPICall = async(params) => {\n      setButtonDisabled(true);\n      const currentUser = getCurrentUser();\n      await axios.post(updateSwappingStationAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n          const responseData = response.data;\n          if (responseData.status === 1) {\n            history.push({\n              pathname:adminRoot+'/pages/swapping_station',\n              state:{\n                responseStatus:responseData.status,\n                responseMsg:responseData.msg\n              }\n            })\n          }else{\n            setButtonDisabled(false);\n            stationUpdatedAlert(responseData.msg);\n          }\n      }).catch(error=>{\n          setButtonDisabled(false);\n          console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const stationUpdatedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    console.log(state);\n    getCityNamesAPICall(state);\n  }\n  //handle city select\n  const handleCitySelect = (city) => {\n    setCityId(city);\n  }\n  //Form Validation Schema\n  const StationDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Station name is required\"),\n    ev_capacity:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"EV capacity is required\"),\n    address:yup.string()\n        .nullable()\n        .required(\"Address is required\")\n  });\n\n  \n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Swapping Station</span>\n            <a href=\"swapping_station\" className=\"btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Swapping Station List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true} \n        initialValues={{\n          name:stationName,\n          ev_capacity:evCapacity,\n          latitude:latitude,\n          longitude:longitude,\n          address:stationAddress,\n          remark_1:remark1,\n          remark_2:remark2\n        }}\n        validationSchema={StationDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n            hub_master_id: location.state.station_id,\n            name:values.name,\n            address:values.address,\n            ev_capacity:values.ev_capacity,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2,\n            latitude:values.latitude,\n            longitude:values.longitude,\n            country_id:countryId,\n            state_id:stateId,\n            city_id:cityId\n          }\n          updateSwappingStationAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                          <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                EV Capacity\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"EV Capacity\"\n                                  value={values.ev_capacity}\n                                  name=\"ev_capacity\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.ev_capacity && touched.ev_capacity ? \"input-error\":null}\n                                />\n                                {errors.ev_capacity && touched.ev_capacity &&(\n                                  <span className=\"error\">{errors.ev_capacity}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  Country\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"country_id\"\n                                value={countryId}\n                                onChange={e=>handleCountrySelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select Country</option>\n                                  {countryList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.country_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  State\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"state_id\"\n                                value={stateId}\n                                onChange={e=>handleStateSelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select State</option>\n                                  {stateList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.state_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  City\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"city_id\"\n                                value={cityId}\n                                onChange={e=>handleCitySelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select City</option>\n                                  {cityList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.city_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Longitude\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  name=\"longitude\"\n                                  placeholder=\"Longitude\"\n                                  value={values.longitude}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Latitude\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  name=\"latitude\"\n                                  placeholder=\"Latitude\"\n                                  value={values.latitude}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"address\"\n                                  placeholder=\"Address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default UpdateSwappingStation;\n","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  Input,InputGroup\n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot, getFaultListAPI,deleteFaultAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\n\nconst FaultMaster = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //user states\n  const [faultList,setFaultList] = useState([]);\n  const [faultID,setFaultID] = useState(\"\");\n  const [faultToDeleleteId,setFaultToDeleleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getFaultListAPICall();\n    faultAlert();\n  },[pageCount,faultID])\n\n  //API CALLS\n  const getFaultListAPICall = async() => {\n    setFaultList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getFaultListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setFaultList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteFaultAPICall = async(faultId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteFaultAPI,\n      {fault_master_id:faultId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setFaultID(faultId);\n          faultDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  const updateFault = (faultId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updatefault',\n      state:{fault_master_id:faultId}\n    });\n  }\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //ALert helper methods\n  const faultDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const faultAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (faultId) => {\n    setFaultToDeleleteId(faultId)\n    setModalVisible(!modalVisible);\n  }\n    //handle search input\n    const handleSearch = () => {\n        setPageCount(1);\n        getFaultListAPICall();\n    }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Fault</span>\n            <a href=\"addfault\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                  <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                    {alertMsg}\n                  </Alert>\n              </CardSubtitle> \n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Type</th>\n                    <th>OEM</th>\n                    <th>Position</th>\n                    <th>Fault title</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"6\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                  faultList.length > 0 ?\n                    faultList.map((item,index)=>\n                      <tr key={index}>\n                        <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index+1}</th>\n                        <td>{item.type===1?\"Battery\":item.type ===2?\"EV\":item.type ===3?\"Charger\":\"Connector\"}</td>\n                        <td>{item.oem_name}</td>\n                        <td>{item.bit_position}</td>\n                        <td>{item.title}</td>\n                        <td>\n                            <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateFault(item.id)}}>\n                                <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                            </a>\n                            <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                                <i className=\"glyph-icon simple-icon-trash\"></i>\n                            </Button>\n                        </td>\n                      </tr>\n                    ):<tr>\n                        <td className=\"text-center text-danger\" colSpan=\"6\">Data  Not  Found</td>\n                    </tr>\n                }   \n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  Are you sure you would like to delete this fault?\n                  <Button color=\"success\" className=\"mt-4\" onClick={()=>{deleteFaultAPICall(faultToDeleleteId)}}>\n                    Delete Fault\n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                    Cancel\n                  </Button>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default FaultMaster;\n","import React, { useState,useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot,getOemAPI,addFaultAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from \"react-router-dom\";\n\nconst AddFault = () => {\n  const history = useHistory();\n  //dropdown state\n  const [oemList,setOemList] = useState([]);\n  const [oemId,setOemId] = useState(\"\");\n  const [type,setType] = useState(\"\");\n  //error flags\n  const [errorTypeFlag,setErrorTypeFlag] = useState(false);\n  const [errorOemFlag,setErrorOemFlag] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n\n  //API calls\n  const getOemAPICall = async(typeId) => {\n    setAlertVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:typeId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {          \n          setOemList(responseData.data);\n        }else{\n          setOemList([]);\n          faultAddedAlert(\"OEM data for selectd type not found\");\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addFaultAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addFaultAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/fault',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          faultAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const faultAddedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //type select method\n  const handleTypeSelect = (typeValue) => {\n    setOemId(\"\");\n    setType(typeValue);\n    if (typeValue == 4) {\n      getOemAPICall(3);\n    } else {\n      getOemAPICall(typeValue); \n    }\n  }\n  //type blur\n  const handleTypeBlur = (typeValue) => {\n    setErrorTypeFlag(false);\n    if (typeValue == 0) {\n      setErrorTypeFlag(true);\n    }\n  }\n  //OEM select method\n  const handleOemSelect = (oemValue) => {\n    if (oemValue == 0) {\n      setOemId(\" \");\n    } else {\n      setOemId(oemValue); \n    }\n  }\n  //oem blur\n  const handleOemBlur = (oemValue) => {\n    setErrorOemFlag(false);\n    if (oemValue == 0) {\n      setErrorOemFlag(true);\n    }\n  }\n  //Form Validation Schema\n  const FaultDetailsValidationSchema = yup.object().shape({\n    title:yup.string()\n        .required(\"Fault title is required\"),\n    bit_position:yup.string()\n        .required(\"Position is required\"),\n  });\n\n  const initialValues = {\n    title:\"\",\n    bit_position:\"\",\n  };\n\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Fault</span>\n            <a href=\"fault\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Fault List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={FaultDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n            type:type,\n            title:values.title,\n            bit_position:values.bit_position,\n            oem_id:oemId\n          }\n          addFaultAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                        <Row>\n                          <Colxx md=\"12\">\n                            <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                              {alertMsg}\n                            </Alert>\n                          </Colxx>\n                          <Colxx sm={6}>\n                            <FormGroup>\n                              <Label>\n                                Type\n                              </Label>\n                              <Input \n                              type=\"select\" \n                              name=\"type\"\n                              value={type}\n                              onChange={(e)=>handleTypeSelect(e.target.value)}\n                              onBlur={(e)=>handleTypeBlur(e.target.value)}>\n                                  <option key={0} value={0}>Select</option>\n                                  <option key={1} value={1}>Battery</option>\n                                  <option key={2} value={2}>EV</option>\n                                  <option key={3} value={3}>Charger</option>\n                                  <option key={4} value={4}>Connector</option>\n                              </Input>\n                              {errorTypeFlag &&(\n                                  <span className=\"error\">Type is required</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  OEM\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"oem_id\"\n                                value={oemId}\n                                onChange={(e)=>handleOemSelect(e.target.value)}\n                                onBlur={(e)=>handleOemBlur(e.target.value)}>\n                                    <option key={0} value={0}>Select</option>\n                                    {oemList.map(item=>\n                                      <option key={item.oem_id} value={item.oem_id}>{item.name}</option>\n                                    )}\n                                </Input>\n                                {errorOemFlag &&(\n                                    <span className=\"error\">OEM is required</span>\n                                  )}   \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Fault Title\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Fault title \"\n                                  name=\"title\"\n                                  value={values.title}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.title && touched.title ? \"input-error\":null}\n                                />\n                                {errors.title && touched.title &&(\n                                  <span className=\"error\">{errors.title}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Position\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  placeholder=\"Position \"\n                                  name=\"bit_position\"\n                                  value={values.bit_position}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.bit_position && touched.bit_position ? \"input-error\":null}\n                                />\n                                {errors.bit_position && touched.bit_position &&(\n                                  <span className=\"error\">{errors.bit_position}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default AddFault;\n","import React, { useState,useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot,getOemAPI,updateFaultAPI,getFaultByIdAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport { useHistory,useLocation } from \"react-router-dom\";\n\nconst UpdateFault = () => {\n  const history = useHistory();\n  const location = useLocation();\n  //state\n  const [oemId,setOemId] = useState(\"\");\n  const [oemList,setOemList] = useState([]);\n  const [type,setType] = useState(0);\n  const [faultTitle,setFaultTitle] = useState(\"\");\n  const [position,setPosition] = useState(\"\");\n  //error flags\n  const [errorTypeFlag,setErrorTypeFlag] = useState(false);\n  const [errorOemFlag,setErrorOemFlag] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n\n  useEffect(()=>{\n      getFaultByIdAPICall();\n    },[])\n\n\n  //API calls\n  const getOemAPICall = async(typeId) => {\n    setAlertVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:typeId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {          \n          setOemList(responseData.data);\n        }else{\n          setOemList([]);\n          faultUpdatedAlert(\"OEM data for selectd type not found\");\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getFaultByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getFaultByIdAPI,\n        {\n            fault_master_id:location.state.fault_master_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n                setType(responseData.data.type);\n                responseData.data.type==4?getOemAPICall(3):getOemAPICall(responseData.data.type);\n                setOemId(responseData.data.oem_id);\n                setFaultTitle(responseData.data.title);\n                setPosition(responseData.data.bit_position);\n            }else{                \n              faultUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n\n    const updateFaultAPICall = async(params) => {\n        setButtonDisabled(true);\n        const currentUser = getCurrentUser();\n        await axios.post(updateFaultAPI,\n        params,\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n              history.push({\n                pathname:adminRoot+'/pages/fault',\n                state:{\n                  responseStatus:responseData.status,\n                  responseMsg:responseData.msg\n                }\n              })\n            }else{\n              setButtonDisabled(false);\n              faultUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            setButtonDisabled(false);\n            console.log(error);\n        })\n    }\n\n  //helper methods\n  //Alert helper methods\n  const faultUpdatedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //type select method\n  const handleTypeSelect = (typeValue) => {\n    setOemId(\"\");\n    setType(typeValue);\n    if (typeValue == 4) {\n      getOemAPICall(3);\n    } else {\n      getOemAPICall(typeValue); \n    }\n  }\n  //type blur\n  const handleTypeBlur = (typeValue) => {\n    setErrorTypeFlag(false);\n    if (typeValue == 0) {\n      setErrorTypeFlag(true);\n    }\n  }\n  //OEM select method\n  const handleOemSelect = (oemValue) => {\n    if (oemValue == 0) {\n      setOemId(\" \");\n    } else {\n      setOemId(oemValue); \n    }\n  }\n  //oem blur\n  const handleOemBlur = (oemValue) => {\n    setErrorOemFlag(false);\n    if (oemValue == 0) {\n      setErrorOemFlag(true);\n    }\n  }\n  //Form Validation Schema\n  const FaultDetailsValidationSchema = yup.object().shape({\n    title:yup.string()\n        .required(\"Fault title is required\"),\n    bit_position:yup.string()\n        .required(\"Position is required\"),\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Fault</span>\n            <a href=\"fault\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Fault List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            title:faultTitle,\n            bit_position:position,\n        }}\n        validationSchema={FaultDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n              fault_master_id:location.state.fault_master_id,\n              type:type,\n              title:values.title,\n              oem_id:oemId,\n              bit_position:values.bit_position\n            }\n          updateFaultAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                        <Row>\n                          <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                                Type\n                              </Label>\n                              <Input type=\"select\" \n                              name=\"type\"\n                              value={type}\n                              onChange={(e)=>handleTypeSelect(e.target.value)}\n                              onBlur={(e)=>handleTypeBlur(e.target.value)}>\n                                  <option key={0} value={0}>Select</option>\n                                  <option key={1} value={1}>Battery</option>\n                                  <option key={2} value={2}>EV</option>\n                                  <option key={3} value={3}>Charger</option>\n                                  <option key={4} value={4}>Connector</option>\n                              </Input>\n                              {errorTypeFlag &&(\n                                  <span className=\"error\">Type is required</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  OEM\n                                </Label>\n                                <Input type=\"select\" \n                                name=\"oem_id\"\n                                value={oemId}\n                                onChange={(e)=>handleOemSelect(e.target.value)}\n                                onBlur={(e)=>handleOemBlur(e.target.value)}>\n                                    <option key={0} value={0}>Select</option>\n                                    {oemList.map((item,index)=>\n                                      <option key={index} value={item.oem_id}>{item.name}</option>\n                                    )}\n                                </Input>\n                                {errorOemFlag &&(\n                                    <span className=\"error\">OEM is required</span>\n                                  )}   \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Fault Title\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Fault title \"\n                                  name=\"title\"\n                                  value={values.title}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.title && touched.title ? \"input-error\":null}\n                                />\n                                {errors.title && touched.title &&(\n                                  <span className=\"error\">{errors.title}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Position\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  placeholder=\"Position \"\n                                  name=\"bit_position\"\n                                  value={values.bit_position}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.bit_position && touched.bit_position ? \"input-error\":null}\n                                />\n                                {errors.bit_position && touched.bit_position &&(\n                                  <span className=\"error\">{errors.bit_position}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default UpdateFault;\n","import React, { useEffect, useState } from 'react';\nimport {\n    Row, FormGroup,Label,\n    Card, CardBody,CardSubtitle,\n    Modal, ModalHeader, ModalBody, ModalFooter, \n    Table, Button, \n    DropdownItem,DropdownMenu,DropdownToggle,Alert,UncontrolledDropdown,\n    Input,InputGroup \n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getCountryListAPI,getCountryByIdAPI,addCountryAPI,updateCountryAPI,deleteCountryAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst CountryMaster = ({ match }) => {\n    //alert states\n    const [alertVisible,setAlertVisible] = useState(false);\n    const [alertMsg,setAlertMsg] = useState(\"\");\n    const [alertColor,setAlertColor] = useState(\"\");\n    //search state\n    const [searchBy,setSearchBy] = useState(\"\");\n    //Pagination states\n    const [pageCount,setPageCount] = useState(\"1\");\n    const [lastPageCount,setLastPageCount] = useState(\"1\");\n    //flag to check whether data in list or not\n    const [listFlag,setListFlag] = useState(false);\n    //toggle to re-render page on add,updates,delete\n    const [toggleChange,setToggleChange] = useState(false);\n    //Modal States\n    const [modalVisible,setModalVisible] = useState(false);\n    const [modalUpdateVisible,setModalUpdateVisible] = useState(false);\n    //button state ... state 0 for add and 1 for update\n    const [buttonState,setButtonState] = useState();\n    //loader states\n    const [isLoading,setIsLoading] = useState(true);\n    //country list state\n    const [countryList,setCountryList] = useState([]);\n    const [countryId,setCountryId] = useState(\"\");\n    const [countryName,setCountryName] = useState(\"\");         \n\n    useEffect(()=>{\n        getCountryListAPICall();\n    },[pageCount,toggleChange])\n\n  //API CALLS\n  const getCountryListAPICall = async() => {\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getCountryListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setListFlag(true);\n            setLastPageCount(responseData.data.last_page);\n            setCountryList(responseData.data.data);\n        }else{\n            setListFlag(false);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n          setListFlag(false);\n        console.log(error);\n      })\n  }\n  const getCountryByIdAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(getCountryByIdAPI,\n    {country_master_id:params},\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n        setCountryId(responseData.data.id);\n        setCountryName(responseData.data.country_name);\n    }else{\n        countryAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const addCountryAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(addCountryAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n        countryAlert(responseData.status,responseData.msg);\n        setToggleChange(!toggleChange);\n    }else{\n        countryAlert(responseData.status,responseData.msg);\n        setToggleChange(!toggleChange);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const updateCountryAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(updateCountryAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n        countryAlert(responseData.status,responseData.msg);\n        setToggleChange(!toggleChange);\n    }else{\n        countryAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const deleteCountryAPICall = async(params) => {\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteCountryAPI,\n    {country_master_id:params},\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n        countryAlert(responseData.status,responseData.msg);\n        setToggleChange(!toggleChange);\n    }else{\n        countryAlert(responseData.status,responseData.msg);\n        setToggleChange(!toggleChange);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n\n  //helper methods\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const countryAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }              \n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Modal helper methods\n  const toggleModal = (countryId) => {\n      setCountryId(countryId);    \n      setModalVisible(!modalVisible);\n  }\n  const toggleUpdateModal = (status,country) => {\n      setButtonState(status);\n      if (status == 0) {\n          setCountryName(\"\");\n          setModalUpdateVisible(!modalUpdateVisible);   \n      } else {\n          getCountryByIdAPICall(country);\n          setModalUpdateVisible(!modalUpdateVisible);\n      }\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getCountryListAPICall();\n  }\n  //Form Validation Schema\n  const CountryDetailsValidationSchema = yup.object().shape({\n    country_name:yup.string()\n        .required(\"Country is required\"),\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Country</span>\n            <Button color=\"primary\" className=\"mt-2 default btn-sm float-right\" onClick={()=>toggleUpdateModal(0)}>\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </Button>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n          <div className=\"text-right mr-5 mb-2\">\n              <span className=\"ml-5\">Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}              \n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Country</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"3\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    listFlag?\n                        countryList.map((item,index)=>\n                          <tr key={index}>\n                            <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                            <td>{item.country_name}</td>\n                            <td>\n                              <Button color=\"info\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>toggleUpdateModal(1,item.id)}>\n                                  <i className=\"glyph-icon simple-icon-pencil\"></i>\n                              </Button>\n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>  \n                            </td>\n                          </tr>\n                        ):<tr>\n                            <td className=\"text-center text-danger\" colSpan=\"7\">Data  Not  Found</td>\n                        </tr>\n                }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Modal\n        isOpen={modalVisible}\n        toggle={toggleModal} >\n        <ModalHeader className=\"text-center\">\n          <Row>\n            <Colxx md=\"12\">\n              Are you sure you would like to delete this ?\n            </Colxx>\n            <Colxx md=\"12\">\n              <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteCountryAPICall(countryId)}>\n                Delete \n              </Button>{' '}\n              <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                Cancel\n              </Button>\n            </Colxx>\n          </Row>\n        </ModalHeader>\n      </Modal>\n      <Modal\n        isOpen={modalUpdateVisible}\n        toggle={toggleUpdateModal} >\n            <Formik\n                enableReinitialize={true}\n                initialValues={{\n                    country_name:countryName,\n                }}\n                validationSchema={CountryDetailsValidationSchema} \n                onSubmit={(values)=>{\n                    if (buttonState==0) {\n                        addCountryAPICall(values);\n                    } else {\n                        const params={country_master_id:countryId,country_name:values.country_name};\n                        updateCountryAPICall(params);\n                    }\n                }} >\n                {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n                    <>\n                    <ModalHeader>\n                        {buttonState==0?\"Add Country\":\"Update Country\"}\n                    </ModalHeader>  \n                    <ModalBody>\n                        <Row>\n                            <Colxx md=\"12\">\n                                <FormGroup>\n                                    <Label>\n                                     Country\n                                    </Label>\n                                    <Input\n                                    type=\"text\"\n                                    placeholder=\"Country\"\n                                    name=\"country_name\"\n                                    value={values.country_name}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    />\n                                    {errors.country_name && touched.country_name &&(\n                                        <span className=\"error\">{errors.country_name}</span>\n                                    )}\n                                </FormGroup>    \n                            </Colxx>\n                        </Row>\n                    </ModalBody>\n                    <ModalFooter>\n                    <Button color=\"success\" className=\"mt-4\" onClick={handleSubmit}>\n                        {buttonState==0?\"Add\":\"Update\"}\n                    </Button>{' '}\n                    <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={()=>toggleUpdateModal(0)}>\n                        Cancel\n                    </Button>\n                    </ModalFooter>\n                    </>\n                )}\n            </Formik>\n      </Modal>\n    </>\n  );\n};\nexport default CountryMaster;","import React, { useEffect, useState } from 'react';\nimport { \n  Row, FormGroup,Label,\n  Card, CardBody,CardSubtitle,\n  Modal, ModalHeader, ModalBody, ModalFooter, \n  Table, Button, \n  DropdownItem,DropdownMenu,DropdownToggle,Alert,UncontrolledDropdown,\n  Input,InputGroup \n} from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getStateListAPI,getCountriesAPI,getStateByIdAPI,addStateAPI,updateStateAPI,deleteStateAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst StateMaster = ({ match }) => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //flag to check whether data in list or not\n  const [listFlag,setListFlag] = useState(false);\n  //toggle to re-render page on add,updates,delete\n  const [toggleChange,setToggleChange] = useState(false);\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [modalUpdateVisible,setModalUpdateVisible] = useState(false);\n  //button state ... state 0 for add and 1 for update\n  const [buttonState,setButtonState] = useState();\n  //loader states\n  const [isLoading,setIsLoading] = useState(true);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  //default values state\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [stateName,setStateName] = useState(\"\");\n\n  useEffect(()=>{\n    getStateListAPICall();\n    getCountryNamesAPICall();\n  },[pageCount,toggleChange])\n\n  //API CALLS\n  const getStateListAPICall = async() => {\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getStateListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setListFlag(true);\n            setLastPageCount(responseData.data.last_page);\n            setStateList(responseData.data.data);\n        }else{\n            setListFlag(false);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n          setListFlag(false);\n        console.log(error);\n      })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n          stateAlert(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateByIdAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(getStateByIdAPI,\n    {state_master_id:params},\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n        setCountryId(responseData.data.country_id);\n        setStateId(responseData.data.id);\n        setStateName(responseData.data.state_name);\n    }else{\n        stateAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const addStateAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(addStateAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      setToggleChange(!toggleChange);\n      stateAlert(responseData.status,responseData.msg);\n    }else{\n      stateAlert(responseData.status,responseData.msg);\n        setToggleChange(!toggleChange);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const updateStateAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(updateStateAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      setToggleChange(!toggleChange);\n      stateAlert(responseData.status,responseData.msg);\n    }else{\n      stateAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const deleteStateAPICall = async(params) => {\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteStateAPI,\n    {state_master_id:params},\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      setToggleChange(!toggleChange);\n      stateAlert(responseData.status,responseData.msg);\n    }else{\n      stateAlert(responseData.status,responseData.msg);\n        setToggleChange(!toggleChange);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n\n  //helper methods\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const stateAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }            \n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }  \nconst toggleModal = (state) => {\n  setStateId(state);    \n  setModalVisible(!modalVisible);\n}\nconst toggleUpdateModal = (status,state) => {\n  setButtonState(status);\n  if (status == 0) {\n      setCountryId(\"\");\n      setStateName(\"\");\n      setModalUpdateVisible(!modalUpdateVisible);   \n  } else {\n      getStateByIdAPICall(state);\n      setModalUpdateVisible(!modalUpdateVisible);\n  }\n}\n//handle search input\nconst handleSearch = () => {\n  setPageCount(1);\n  getStateListAPICall();\n}\n  //Form Validation Schema\n  const StateDetailsValidationSchema = yup.object().shape({\n    country_id:yup.string()\n        .required(\"Country is required\"),\n    state_name:yup.string()\n        .required(\"State is required\"),\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">State</span>\n            <Button color=\"primary\" className=\"mt-2 default btn-sm float-right\" onClick={()=>toggleUpdateModal(0)}>\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </Button>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n          <div className=\"text-right mr-5 mb-2\">\n              <span className=\"ml-5\">Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}              \n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Country</th>\n                    <th>State</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"4\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    listFlag?\n                        stateList.map((item,index)=>\n                          <tr key={index}>\n                            <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                            <td>{item.country_name}</td>\n                            <td>{item.state_name}</td>\n                            <td>\n                              <Button color=\"info\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>toggleUpdateModal(1,item.id)}>\n                                  <i className=\"glyph-icon simple-icon-pencil\"></i>\n                              </Button>\n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>  \n                            </td>\n                          </tr>\n                        ):<tr>\n                            <td className=\"text-center text-danger\" colSpan=\"4\">Data  Not  Found</td>\n                        </tr>\n                           \n                      }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Modal\n        isOpen={modalVisible}\n        toggle={toggleModal} >\n        <ModalHeader className=\"text-center\">\n          <Row>\n            <Colxx md=\"12\">\n              Are you sure you would like to delete this ?\n            </Colxx>\n            <Colxx md=\"12\">\n              <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteStateAPICall(stateId)}>\n                Delete \n              </Button>{' '}\n              <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                Cancel\n              </Button>\n            </Colxx>\n          </Row>\n        </ModalHeader>\n      </Modal>\n      <Modal\n        isOpen={modalUpdateVisible}\n        toggle={toggleUpdateModal} >\n          <Formik\n              enableReinitialize={true}\n              initialValues={{\n                country_id:countryId,\n                state_name:stateName,\n              }}\n              validationSchema={StateDetailsValidationSchema} \n              onSubmit={(values)=>{\n                if (buttonState==0) {\n                  addStateAPICall(values);\n                } else {\n                  const params={state_master_id:stateId,country_id:values.country_id,state_name:values.state_name};\n                  updateStateAPICall(params);\n                }\n              }} >\n              {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n                  <>\n                  <ModalHeader>\n                  {buttonState==0?\"Add State\":\"Update State\"}\n                  </ModalHeader>  \n                  <ModalBody>\n                    <Row>\n                        <Colxx md=\"12\">\n                          <FormGroup>\n                            <Label>\n                              Country\n                            </Label>\n                            <Input\n                            type=\"select\"\n                            name=\"country_id\"\n                            value={values.country_id}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            >\n                              <option key={0}>Select Country</option>\n                              {countryList.map((item,index)=>\n                                <option key={index} value={item.id}>{item.country_name}</option>\n                              )}\n                            </Input>\n                            {errors.country_id && touched.country_id &&(\n                                <span className=\"error\">{errors.country_id}</span>\n                            )}\n                          </FormGroup>    \n                        </Colxx>\n                        <Colxx md=\"12\">\n                          <FormGroup>\n                              <Label>\n                                State\n                              </Label>\n                              <Input\n                              type=\"text\"\n                              placeholder=\"State\"\n                              name=\"state_name\"\n                              value={values.state_name}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              />\n                              {errors.state_name && touched.state_name &&(\n                                  <span className=\"error\">{errors.state_name}</span>\n                              )}\n                        </FormGroup>    \n                      </Colxx>\n                    </Row>\n                  </ModalBody>\n                  <ModalFooter>\n                  <Button color=\"success\" className=\"mt-4\" onClick={handleSubmit}>\n                    {buttonState==0?\"Add\":\"Update\"}\n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={()=>toggleUpdateModal(0)}>\n                    Cancel\n                  </Button>\n                  </ModalFooter>\n                  </>\n              )}\n          </Formik>\n      </Modal>\n    </>\n  );\n};\nexport default StateMaster;\n","import React, { useEffect, useState } from 'react';\nimport { \n  Row, FormGroup,Label,\n  Card, CardBody,CardSubtitle,\n  Modal, ModalHeader, ModalBody, ModalFooter, \n  Table, Button, \n  DropdownItem,DropdownMenu,DropdownToggle,Alert,UncontrolledDropdown,\n  Input,InputGroup\n} from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getCountriesAPI,getStatesByCountryAPI,getCityListAPI,getCityByIdAPI,addCityAPI,updateCityAPI,deleteCityAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst CityMaster = ({ match }) => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //flag to check whether data in list or not\n  const [listFlag,setListFlag] = useState(false);\n  //toggle to re-render page on add,updates,delete\n  const [toggleChange,setToggleChange] = useState(false);\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [modalUpdateVisible,setModalUpdateVisible] = useState(false);\n  //button state ... state 0 for add and 1 for update\n  const [buttonState,setButtonState] = useState();\n  //loader states\n  const [isLoading,setIsLoading] = useState(true);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  //default values state\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityName,setCityName] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n\n\n  useEffect(()=>{\n    getCityListAPICall();\n    getCountryNamesAPICall();\n  },[pageCount,toggleChange])\n\n  //API CALLS\n  const getCityListAPICall = async() => {\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getCityListAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setListFlag(true);\n          setLastPageCount(responseData.data.last_page);\n          setCityList(responseData.data.data);\n        }else{\n          setListFlag(false)\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        setListFlag(false)\n      })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            cityAlert(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n            cityAlert(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityByIdAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(getCityByIdAPI,\n    {city_master_id:params},\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      console.log(responseData.data);\n      getStateNamesAPICall(responseData.data.country_id);\n      setStateId(responseData.data.state_id);\n      setCountryId(responseData.data.country_id);\n      setCityName(responseData.data.city_name);\n      setCityId(responseData.data.id);\n    }else{\n        cityAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const addCityAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(addCityAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      setToggleChange(!toggleChange);\n      cityAlert(responseData.status,responseData.msg);\n    }else{\n      setToggleChange(!toggleChange);\n      cityAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const updateCityAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(updateCityAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      setToggleChange(!toggleChange);\n      cityAlert(responseData.status,responseData.msg);\n    }else{\n      cityAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const deleteCityAPICall = async(params) => {\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteCityAPI,\n    {city_master_id:params},\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      setToggleChange(!toggleChange);\n      cityAlert(responseData.status,responseData.msg);\n    }else{\n      setToggleChange(!toggleChange);\n      cityAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n\n  //helper methods\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const cityAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }              \n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Modal helper methods\n  const toggleModal = (city) => {\n    setCityId(city);    \n    setModalVisible(!modalVisible);\n  }\n  const toggleUpdateModal = (status,city) => {\n    setButtonState(status);\n    if (status == 0) {\n        setCountryId(\"\");\n        setStateId(\"\");\n        setCityName(\"\");\n        setStateList([]);\n        setModalUpdateVisible(!modalUpdateVisible);   \n    } else {\n      getCityByIdAPICall(city);\n      setModalUpdateVisible(!modalUpdateVisible);\n    }\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n    //   getChargerMappingAPICall();\n  }\n  //handle Country Select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    getStateNamesAPICall(country)\n  }\n  //Form Validation Schema\n  const CityDetailsValidationSchema = yup.object().shape({\n    state_id:yup.string()\n        .required(\"State is required\"),\n    city_name:yup.string()\n        .required(\"City is required\"),\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">City</span>\n            <Button color=\"primary\" className=\"mt-2 default btn-sm float-right\" onClick={()=>toggleUpdateModal(0)}>\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </Button>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n          <div className=\"text-right mr-5 mb-2\">\n              <span className=\"ml-5\">Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}              \n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Country</th>\n                    <th>State</th>\n                    <th>City</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"5\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    listFlag?\n                        cityList.map((item,index)=>\n                          <tr key={index}>\n                            <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                            <td>{item.country_name}</td>\n                            <td>{item.state_name}</td>\n                            <td>{item.city_name}</td>\n                            <td>\n                              <Button color=\"info\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>toggleUpdateModal(1,item.id)}>\n                                  <i className=\"glyph-icon simple-icon-pencil\"></i>\n                              </Button>\n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>  \n                            </td>\n                          </tr>\n                        ):<tr>\n                            <td className=\"text-center text-danger\" colSpan=\"5\">Data  Not  Found</td>\n                        </tr>\n                           \n                      }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Modal\n        isOpen={modalVisible}\n        toggle={toggleModal} >\n        <ModalHeader className=\"text-center\">\n          <Row>\n            <Colxx md=\"12\">\n              Are you sure you would like to delete this ?\n            </Colxx>\n            <Colxx md=\"12\">\n              <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteCityAPICall(cityId)}>\n                Delete \n              </Button>{' '}\n              <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                Cancel\n              </Button>\n            </Colxx>\n          </Row>\n        </ModalHeader>\n      </Modal>\n      <Modal\n        isOpen={modalUpdateVisible}\n        toggle={toggleUpdateModal} >\n          <Formik\n              enableReinitialize={true}\n              initialValues={{\n                state_id:stateId,\n                city_name:cityName,\n              }}\n              validationSchema={CityDetailsValidationSchema} \n              onSubmit={(values)=>{\n              console.log(values);\n              if (buttonState==0) {\n                addCityAPICall(values);\n              } else {\n                const params={city_master_id:cityId,state_id:values.state_id,city_name:values.city_name};\n                updateCityAPICall(params);\n              }\n              }} >\n              {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n                  <>\n                  <ModalHeader>\n                  {buttonState==0?\"Add City\":\"Update City\"}\n                  </ModalHeader>  \n                  <ModalBody>\n                    <Row>\n                        <Colxx md=\"12\">\n                          <FormGroup>\n                            <Label>\n                              Country\n                            </Label>\n                            <Input\n                            type=\"select\"\n                            name=\"country_id\"\n                            value={countryId}\n                            onChange={e=>handleCountrySelect(e.target.value)}\n                            onBlur={handleBlur}\n                            >\n                              <option key={0}>Select Country</option>\n                              {countryList.map((item,index)=>\n                                <option key={index} value={item.id}>{item.country_name}</option>\n                              )}\n                            </Input>\n                            {errors.country_id && touched.country_id &&(\n                                <span className=\"error\">{errors.country_id}</span>\n                            )}\n                          </FormGroup>    \n                        </Colxx>\n                        <Colxx md=\"12\">\n                          <FormGroup>\n                            <Label>\n                              State\n                            </Label>\n                            <Input\n                            type=\"select\"\n                            name=\"state_id\"\n                            value={values.state_id}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            >\n                              <option key={0}>Select State</option>\n                              {stateList.map((item,index)=>\n                                <option key={index} value={item.id}>{item.state_name}</option>\n                              )}\n                            </Input>\n                            {errors.state_id && touched.state_id &&(\n                                <span className=\"error\">{errors.state_id}</span>\n                            )}\n                          </FormGroup>    \n                        </Colxx>\n                        <Colxx md=\"12\">\n                          <FormGroup>\n                            <Label>\n                              City\n                            </Label>\n                            <Input\n                            type=\"text\"\n                            placeholder=\"City\"\n                            name=\"city_name\"\n                            value={values.city_name}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            />\n                            {errors.city_name && touched.city_name &&(\n                                <span className=\"error\">{errors.city_name}</span>\n                            )}\n                        </FormGroup>    \n                      </Colxx>\n                    </Row>\n                  </ModalBody>\n                  <ModalFooter>\n                  <Button color=\"success\" className=\"mt-4\" onClick={handleSubmit}>\n                  {buttonState==0?\"Add\":\"Update\"}\n                      </Button>{' '}\n                      <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={()=>toggleUpdateModal(0)}>\n                      Cancel\n                      </Button>\n                  </ModalFooter>\n                  </>\n              )}\n          </Formik>\n      </Modal>\n    </>\n  );\n};\nexport default CityMaster;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledButtonDropdown,\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\n\nimport {getStationsAPI,getDashboardDataAPI} from '../../../constants/defaultValues'\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport axios from 'axios';\nimport { ThemeColors } from '../../../helpers/ThemeColors';\nimport {ChargerDoughnut, setChargerChartData} from './operator/ChargerDoughnut';\nimport {ConnectorDoughnut,setConnectorChartData} from './operator/ConnectorDoughnut';\nimport {BatteryStatusChart,setBatteryChartData} from './operator/BatteryStatusChart';\nimport { IconCardsCarousel, setBatteriesCount, setChargerCount, setConnectorCount, setEVCount,setStationCount } from './manager/cardCarousel';\nimport {SwapChartCard,setSwapChartData,setshowSwapChart} from './manager/SwapChart';\nimport {EnergyChartCard,setEnergyChartData, setshowEnergyChart} from './manager/EnergyChart';\nimport {KPICards,setKPIChartData} from './manager/KPICards';\nimport { StationDoughnut,setStationChartData } from './manager/StationDoughnut';\nconst colors = ThemeColors();\n\nconst Admin_dashboard = () => {\n  //All station names\n  const [stationNameData,setStationNameData] = useState([]);\n  \n  //Swapping useStates\n  \n  const [swappingChartData,setSwappingChartData] = useState({}); //swapping chart data\n  const [swappingDropHeader,setSwappingDropHeader] = useState(\"All Stations\"); //swapping dropdown header\n  const [swappingStation,setSwappingStation] = useState('0'); //swapping chart dropdown\n  //Batteries useStates\n  \n  //Chargers useStates\n  const [chargerData,setChargerData] = useState({}); //charger card and chart data\n  \n  const [chargerStation,setChargerStation] = useState('0'); //chargers chart dropdown\n  //Slots useState\n  \n  const [slotStation,setSlotStation] = useState('0'); //slots chart dropdown\n\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n  },[])\n  useEffect(()=>{\n    GetDashboardDataAPICall();\n  },[swappingStation,chargerStation,slotStation])\n\n  //API call\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        //stationNamesData = responseData.data;\n        setStationNameData(responseData.data)\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const GetDashboardDataAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getDashboardDataAPI,\n    {\n     station_id:swappingStation\n    },\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n\n        setshowEnergyChart(true);\n        setshowSwapChart(true);\n        setStationCount(responseData.data.station.total);\n        setBatteriesCount(responseData.data.batteries.total)\n       \n        setChargerCount(responseData.data.chargers.total);\n       \n        setEVCount(responseData.data.ev.total);\n        setConnectorCount(responseData.data.slots.total);\n\n        setBatteryChartData(0,responseData.data.batteries.total,responseData.data.batteries.in_charging);\n        setBatteryChartData(1,responseData.data.batteries.total,responseData.data.batteries.charged);\n        setBatteryChartData(2,responseData.data.batteries.total,responseData.data.batteries.discharged);\n        setBatteryChartData(3,responseData.data.batteries.total,responseData.data.batteries.faulty);\n        setBatteryChartData(4,responseData.data.batteries.total,responseData.data.batteries.out);\n        \n        setChargerChartData(responseData.data.chargers.operational,responseData.data.chargers.faulty);\n        setConnectorChartData( responseData.data.slots.inuse,responseData.data.slots.available,responseData.data.slots.faulty);\n        setStationChartData(responseData.data.station.operational,responseData.data.station.faulty);\n        setChargerData(responseData.data.chargers);\n        setEnergyChartData(responseData);\n        setSwapChartData(responseData);\n       \n        setKPIChartData(0,abbreviateNumber(responseData.data.energy_sold.cumulative),abbreviateNumber(responseData.data.misc.unit_30)+\" in last 30 days\");\n        setKPIChartData(1,abbreviateNumber(responseData.data.energy_sold.avg_unit_per_ev_per_day),\"\");\n        setKPIChartData(2,responseData.data.swapping.daily,abbreviateNumber(responseData.data.misc.swap_30)+\" in last 30 days\");\n\n        setSwappingChartData({\n          labels: responseData.data.swapping.date,\n          datasets: [\n            {\n              label: 'Complete',\n              data: responseData.data.swapping.complete_swap_data,\n              borderColor: colors.themeColor1,\n              pointBackgroundColor: colors.foregroundColor,\n              pointBorderColor: colors.themeColor1,\n              pointHoverBackgroundColor: colors.themeColor1,\n              pointHoverBorderColor: colors.foregroundColor,\n              pointRadius: 6,\n              pointBorderWidth: 2,\n              pointHoverRadius: 8,\n              fill: false,\n            },\n            {\n              label: 'Incomplete',\n              data: responseData.data.swapping.incomplete_swap_data,\n              borderColor: colors.themeColor2,\n              pointBackgroundColor: colors.foregroundColor,\n              pointBorderColor: colors.themeColor2,\n              pointHoverBackgroundColor: colors.themeColor2,\n              pointHoverBorderColor: colors.foregroundColor,\n              pointRadius: 6,\n              pointBorderWidth: 2,\n              pointHoverRadius: 8,\n              fill: false,\n            },\n        ],\n        });\n               \n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const abbreviateNumber =(num)=>{\n   let fixed=0;\n    if (num === null) { return null; } // terminate early\n  if (num === 0) { return '0'; } // terminate early\n  fixed = (!fixed || fixed < 0) ? 0 : fixed; // number of decimal places to show\n  var b = (num).toPrecision(2).split(\"e\"), // get power\n      k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3), // floor at decimals, ceiling at trillions\n      c = k < 1 ? num.toFixed(0 + fixed) : (num / Math.pow(10, k * 3) ).toFixed(1 + fixed), // divide by power\n      d = c < 0 ? c : Math.abs(c), // enforce -0 is 0\n      e = d + ['', 'K', 'M', 'B', 'T'][k]; // append power\n  return e;\n  }\n  //dropdown handle methods\n \n  //swapping dropdown\n  const handleSwappingStationSelect =(e)=>{\n    setSwappingDropHeader(e.currentTarget.textContent);\n    setSwappingStation(e.target.value);\n  }\n \n  return (\n    <>\n     <Row>\n        <Colxx xxs=\"12\">\n         <span className=\"page_title\">Admin Dashboard</span>\n         <div className=\"btn-group float-right float-none-xs\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                caret\n                color='primary'>\n                {swappingDropHeader}\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem header>Stations</DropdownItem>\n                <DropdownItem key={0} value={0} onClick={e=>handleSwappingStationSelect(e)}>All Stations</DropdownItem>\n                {stationNameData.map((item,i) =>\n                  <DropdownItem key={i} value={item.hub_master_id} onClick={e=>handleSwappingStationSelect(e)}>{item.name}</DropdownItem>\n                )}\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n         <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>     \n      <Row>\n        <Colxx lg=\"12\" xl=\"12\" md=\"12\">\n          <IconCardsCarousel />         \n        </Colxx>       \n      </Row>\n      <Row>\n        <Colxx lg=\"5\" xxs=\"12\" className=\"mb-5\">\n          <SwapChartCard />\n        </Colxx>\n        <Colxx lg=\"2\" xxs=\"12\" className=\"mb-2\">\n         <KPICards />\n        </Colxx>\n        <Colxx lg=\"5\" xxs=\"12\" className=\"mb-5\">\n          <EnergyChartCard />\n        </Colxx>\n      </Row>\n      <Row className=\"mb-12\">\n      <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n          <StationDoughnut />\n        </Colxx>\n        <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n          <ChargerDoughnut />\n        </Colxx>\n        <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n          <BatteryStatusChart cardClass=\"dashboard-progress\"  />\n        </Colxx>    \n        <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n          <ConnectorDoughnut />\n        </Colxx>       \n    </Row>\n    </>\n  );\n};\n\nexport default Admin_dashboard;","import React,{useState,useEffect} from 'react';\nimport { \n  Row,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledButtonDropdown,\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\n\nimport {getStationsAPI,getDashboardDataAPI} from '../../../constants/defaultValues'\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport axios from 'axios';\nimport { ThemeColors } from '../../../helpers/ThemeColors';\nimport {ChargerDoughnut, setChargerChartData} from './operator/ChargerDoughnut';\nimport {ConnectorDoughnut,setConnectorChartData} from './operator/ConnectorDoughnut';\nimport {BatteryStatusChart,setBatteryChartData} from './operator/BatteryStatusChart';\nimport { IconCardsCarousel, setBatteriesCount, setChargerCount, setConnectorCount, setEVCount,setStationCount } from './manager/cardCarousel';\nimport {SwapChartCard,setSwapChartData,setshowSwapChart} from './manager/SwapChart';\nimport {EnergyChartCard,setEnergyChartData, setshowEnergyChart} from './manager/EnergyChart';\nimport {KPICards,setKPIChartData} from './manager/KPICards';\nimport { StationDoughnut,setStationChartData } from './manager/StationDoughnut';\nconst colors = ThemeColors();\n\nconst Mgr_dashboard = () => {\n  //All station names\n  const [stationNameData,setStationNameData] = useState([]);\n  \n  //Swapping useStates\n  \n  const [swappingChartData,setSwappingChartData] = useState({}); //swapping chart data\n  const [swappingDropHeader,setSwappingDropHeader] = useState(\"All Stations\"); //swapping dropdown header\n  const [swappingStation,setSwappingStation] = useState('0'); //swapping chart dropdown\n  //Batteries useStates\n  \n  //Chargers useStates\n  const [chargerData,setChargerData] = useState({}); //charger card and chart data\n  \n  const [chargerStation,setChargerStation] = useState('0'); //chargers chart dropdown\n  //Slots useState\n  \n  const [slotStation,setSlotStation] = useState('0'); //slots chart dropdown\n\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n  },[])\n  useEffect(()=>{\n    GetDashboardDataAPICall();\n  },[swappingStation,chargerStation,slotStation])\n\n  //API call\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        //stationNamesData = responseData.data;\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const GetDashboardDataAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getDashboardDataAPI,\n    {\n     station_id:swappingStation\n    },\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n\n        setshowEnergyChart(true);\n        setshowSwapChart(true);\n        setStationCount(responseData.data.station.total);\n        setBatteriesCount(responseData.data.batteries.total)\n       \n        setChargerCount(responseData.data.chargers.total);\n       \n        setEVCount(responseData.data.ev.total);\n        setConnectorCount(responseData.data.slots.total);\n\n        setBatteryChartData(0,responseData.data.batteries.total,responseData.data.batteries.in_charging);\n        setBatteryChartData(1,responseData.data.batteries.total,responseData.data.batteries.charged);\n        setBatteryChartData(2,responseData.data.batteries.total,responseData.data.batteries.discharged);\n        setBatteryChartData(3,responseData.data.batteries.total,responseData.data.batteries.faulty);\n        setBatteryChartData(4,responseData.data.batteries.total,responseData.data.batteries.out);\n        \n        setChargerChartData(responseData.data.chargers.operational,responseData.data.chargers.faulty);\n        setConnectorChartData( responseData.data.slots.inuse,responseData.data.slots.available,responseData.data.slots.faulty);\n        setStationChartData(responseData.data.station.operational,responseData.data.station.faulty);\n        setChargerData(responseData.data.chargers);\n        setEnergyChartData(responseData);\n        setSwapChartData(responseData);\n       \n        setKPIChartData(0,abbreviateNumber(responseData.data.energy_sold.cumulative),abbreviateNumber(responseData.data.misc.unit_30)+\" in last 30 days\");\n        setKPIChartData(1,abbreviateNumber(responseData.data.energy_sold.avg_unit_per_ev_per_day),\"\");\n        setKPIChartData(2,responseData.data.swapping.daily,abbreviateNumber(responseData.data.misc.swap_30)+\" in last 30 days\");\n\n        setSwappingChartData({\n          labels: responseData.data.swapping.date,\n          datasets: [\n            {\n              label: 'Complete',\n              data: responseData.data.swapping.complete_swap_data,\n              borderColor: colors.themeColor1,\n              pointBackgroundColor: colors.foregroundColor,\n              pointBorderColor: colors.themeColor1,\n              pointHoverBackgroundColor: colors.themeColor1,\n              pointHoverBorderColor: colors.foregroundColor,\n              pointRadius: 6,\n              pointBorderWidth: 2,\n              pointHoverRadius: 8,\n              fill: false,\n            },\n            {\n              label: 'Incomplete',\n              data: responseData.data.swapping.incomplete_swap_data,\n              borderColor: colors.themeColor2,\n              pointBackgroundColor: colors.foregroundColor,\n              pointBorderColor: colors.themeColor2,\n              pointHoverBackgroundColor: colors.themeColor2,\n              pointHoverBorderColor: colors.foregroundColor,\n              pointRadius: 6,\n              pointBorderWidth: 2,\n              pointHoverRadius: 8,\n              fill: false,\n            },\n        ],\n        });\n               \n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const abbreviateNumber =(num)=>{\n   let fixed=0;\n    if (num === null) { return null; } // terminate early\n  if (num === 0) { return '0'; } // terminate early\n  fixed = (!fixed || fixed < 0) ? 0 : fixed; // number of decimal places to show\n  var b = (num).toPrecision(2).split(\"e\"), // get power\n      k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3), // floor at decimals, ceiling at trillions\n      c = k < 1 ? num.toFixed(0 + fixed) : (num / Math.pow(10, k * 3) ).toFixed(1 + fixed), // divide by power\n      d = c < 0 ? c : Math.abs(c), // enforce -0 is 0\n      e = d + ['', 'K', 'M', 'B', 'T'][k]; // append power\n  return e;\n  }\n  //dropdown handle methods\n \n  //swapping dropdown\n  const handleSwappingStationSelect =(e)=>{\n    setSwappingDropHeader(e.currentTarget.textContent);\n    setSwappingStation(e.target.value);\n  }\n \n  return (\n    <>\n     <Row>\n        <Colxx xxs=\"12\">\n         <span className=\"page_title\">Manager Dashboard</span>\n         <div className=\"btn-group float-right float-none-xs \">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                caret\n                color='primary'>\n                {swappingDropHeader}\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem header>Stations</DropdownItem>\n                <DropdownItem key={0} value={0} onClick={e=>handleSwappingStationSelect(e)}>All Stations</DropdownItem>\n                {stationNameData.map((item,i) =>\n                  <DropdownItem key={i} value={item.hub_master_id} onClick={e=>handleSwappingStationSelect(e)}>{item.name}</DropdownItem>\n                )}\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n         <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>     \n      <Row>\n        <Colxx lg=\"12\" xl=\"12\" md=\"12\">\n          <IconCardsCarousel />         \n        </Colxx>       \n      </Row>\n      <Row>\n        <Colxx lg=\"5\" xxs=\"12\" className=\"mb-5\">\n          <SwapChartCard />\n        </Colxx>\n        <Colxx lg=\"2\" xxs=\"12\" className=\"mb-2\">\n         <KPICards />\n        </Colxx>\n        <Colxx lg=\"5\" xxs=\"12\" className=\"mb-5\">\n          <EnergyChartCard />\n        </Colxx>\n      </Row>\n      <Row className=\"mb-12\">\n      <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n        <StationDoughnut />\n      </Colxx>\n      <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n        <ChargerDoughnut />\n      </Colxx>\n      <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n        <BatteryStatusChart cardClass=\"dashboard-progress\"  />\n      </Colxx>    \n      <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n        <ConnectorDoughnut />\n      </Colxx>       \n    </Row>\n    </>\n  );\n};\n\nexport default Mgr_dashboard;","import React, { useEffect, useState } from 'react';\nimport { Row, Card, CardBody,\n  Modal,ModalHeader, ModalBody, ModalFooter,\n  Table, Button, \n  DropdownItem,DropdownMenu,DropdownToggle,\n  Alert,\n  UncontrolledDropdown,\n  FormGroup,\n  Label,\n  Input,InputGroup \n} from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getStationsAPI,getEvInventoryByIdAPI,getEvMappingAPI,mapEvAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\n\nconst Evmapping = () => {\n  //default values in modal\n  const [evData,setEvData] = useState([]);\n  const [stationNameData,setStationNameData] = useState([]);\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n  const [selectedHub, setSelectedHub] = useState([]);\n  const [updateEvMappingId,setUpdateEvMappingId] = useState(false);\n  // list state\n  const [evList,setEvList] = useState([]);\n  const [evType,setEvType] = useState(\"All Ev\");\n  const [deleteEvMappingId,setDeleteEvMappingId] = useState(0);\n  const [isUpdate,setIsUpdate] = useState(0);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [modalUpdateVisible,setModalUpdateVisible] = useState(false);\n  const [isLoading,setIsLoading] = useState(true);\n  //alert states for update modal\n  const [alertModalVisible,setAlertModalVisible] = useState(false);\n  const [alertModalMsg,setAlertModalMsg] = useState(\"\");\n  const [alertModalColor,setAlertModalColor] = useState(\"\");\n\n  useEffect(()=>{\n    getEvMappingAPICall();\n  },[isUpdate,pageCount,evType]);\n\n  //API CALLS\n  const getEvMappingAPICall = async() => {\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getEvMappingAPI+pageCount+\"&ev_type=\"+evType+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setEvList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n          setEvList([]);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getEvInventoryByIdAPICall = async(evInventoryId) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getEvInventoryByIdAPI,\n      {ev_inventory_id:evInventoryId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setEvData(responseData.data);\n          setSelectedHub(responseData.data.hub_id);\n          setRemark1(responseData.data.remark_1);\n          setRemark2(responseData.data.remark_2)\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      });   \n  }\n  const mapEvAPICall = async(evMappingId,hubId,remark1,remark2) =>{\n    setModalVisible(false);\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(mapEvAPI,\n      {ev_inventory_id:evMappingId,hub_id:hubId,remark_1:remark1,remark_2:remark2},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n          const responseData = response.data;\n          if (responseData.status === 1) {\n            setIsUpdate(!isUpdate);\n            if (hubId==0) {\n              evMappingDeletedAlert(responseData.status,\"EV Unmapped Successfully\") \n            } else {\n              evMappingDeletedAlert(responseData.status,responseData.msg) \n            }\n          } else {\n            evMappingDeletedAlert(responseData.status,responseData.msg)\n          }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n\n  //helper methods\n  //Alert helper methods\n  const evMappingDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }              \n  }\n  const evModalAlert = (status,msg)=>{\n    setAlertModalVisible(true);\n    setAlertModalMsg(msg);\n    if (status === 1) {\n      setAlertModalColor(\"success\");\n    } else {\n      setAlertModalColor(\"danger\");\n    }              \n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Modal helper methods\n  const toggleModal = (item) => {\n    setRemark1(item.remark_1);\n    setRemark2(item.remark_2);\n    setDeleteEvMappingId(item.ev_inventory_id);\n    setModalVisible(!modalVisible);\n  }\n  const toggleUpdateModal = (item) => {\n    GetStationNamesAPICall();\n    getEvInventoryByIdAPICall(item.ev_inventory_id);\n    setUpdateEvMappingId(item.ev_inventory_id);\n    setModalUpdateVisible(!modalUpdateVisible);\n  }\n  // value input handle method\n  const updateEvMappingDetails = () =>{\n    if (selectedHub !=0) {\n      console.log(\"mapped\");\n      mapEvAPICall(updateEvMappingId,selectedHub,remark1,remark2)\n    } else {\n      evModalAlert(0,\"Station is required\");\n      return;  \n    } \n  }\n   //handle search input\n   const handleSearch = () => {\n      setPageCount(1);\n      getEvMappingAPICall();\n  }\n  \n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">EV Mapping</span>\n            <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n          <div className=\"text-right mr-5 mb-2\">\n              <span>EV Type : </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {evType}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                    <DropdownItem onClick={() => {setEvType('All Ev');setPageCount(1)}}>All</DropdownItem>\n                    <DropdownItem onClick={() => {setEvType('Mapped EV');setPageCount(1)}}>Mapped EV</DropdownItem>\n                    <DropdownItem onClick={() => {setEvType('Unmapped EV');setPageCount(1)}}>Unmapped EV</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span className=\"ml-5\">Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}              \n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert} className=\"mb-3\">\n            {alertMsg}\n          </Alert>\n          <Card className=\"mb-4\">\n            <CardBody>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>EV Id</th>\n                    <th>Swapping Station</th>\n                    <th>Remark1</th>\n                    <th>Remark2</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"6\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                  (evList.length > 0)?\n                    evList.map((item,index)=>\n                      <tr key={item.ev_inventory_id}>\n                        <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index+1}</th>\n                        <td>\n                            <p className=\"mb-0\"><b>QR Code: </b>{item.e_qr_code}</p>\n                            <p className=\"mb-0\"><b>Vehicle Model: </b>{item.vehicle_model}</p>\n                            <p className=\"mb-0\"><b>Vehicle Make: </b>{item.vehicle_make}</p>\n                            <p className=\"mb-0\"><b>Vehicle Type: </b>{item.vehicle_type}</p> \n                        </td>\n                        <td>{item.station_name}</td>\n                        <td>{item.remark_1}</td>\n                        <td>{item.remark_2}</td>\n                        <td>\n                          <Button color=\"info\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>toggleUpdateModal(item)}>\n                              <i className=\"glyph-icon simple-icon-pencil\"></i>\n                          </Button>\n                          {(item.hub_id > 0) && \n                          <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item)}}>\n                              <i className=\"glyph-icon simple-icon-trash\"></i>\n                          </Button>}\n                          \n                        </td>\n                      </tr>\n                    ):<tr>\n                        <td className=\"text-center text-danger\" colSpan=\"6\">Data  Not  Found</td>\n                    </tr>\n                  }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Modal\n        isOpen={modalVisible}\n        toggle={toggleModal} >\n        <ModalHeader className=\"text-center\">\n          Are you sure you would like to unmap this ev?\n          <Button color=\"success\" className=\"mt-4\" onClick={()=>mapEvAPICall(deleteEvMappingId,0,remark1,remark2)}>\n            Unmap\n          </Button>{' '}\n          <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n            Cancel\n          </Button>\n        </ModalHeader>\n      </Modal>\n      <Modal\n        isOpen={modalUpdateVisible}\n        toggle={toggleUpdateModal} >\n          <ModalHeader>\n            <Row>\n              <Colxx md=\"12\" className=\"mt-2 text-center\">\n              Update details\n              </Colxx>\n            </Row>\n          </ModalHeader>  \n          <ModalBody>\n            <Row>\n              <Colxx md=\"12\">\n                <Alert color={alertModalColor} isOpen={alertModalVisible} toggle={()=>setAlertModalVisible(false)}>\n                  {alertModalMsg}\n                </Alert>\n              </Colxx>\n              <Colxx sm={12}>\n                <FormGroup>\n                  <h5>\n                  EV details\n                  </h5>\n                  <Row>\n                    <Colxx md={12}>\n                      <b>Vehicle Vin : </b>{evData.vehicle_vin}\n                    </Colxx>\n                    <Colxx md={12}>\n                      <b>QR Code : </b>{evData.e_qr_code}\n                    </Colxx>\n                  </Row>  \n                </FormGroup>\n              </Colxx>\n              <Colxx md={12}>\n                <FormGroup>\n                  <Label>\n                  Swapping Station\n                  </Label>\n                  <Input \n                  type=\"select\" \n                  name=\"hub_id\" \n                  placeholder=\"Station\"\n                  value={selectedHub} onChange={(e)=>{setSelectedHub(e.target.value)}}>\n                    <option value=\"0\">Select Station</option>\n                    {stationNameData.map((item)=>\n                      <option value={item.hub_master_id} key={item.hub_master_id}>{item.name}</option>\n                    )}\n                  </Input>\n                </FormGroup>\n              </Colxx>\n              <Colxx md={12} sm={12}>\n                <FormGroup>\n                  <Label>\n                  Remark1\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Remark1\"\n                    value={remark1}\n                    onChange={(e)=>{setRemark1(e.target.value)}}\n                  />\n                </FormGroup>\n              </Colxx>\n              <Colxx md={12} sm={12}>\n                <FormGroup>\n                  <Label>\n                    Remark2\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Remark2\"\n                    value={remark2}\n                    onChange={(e)=>{setRemark2(e.target.value)}}\n                  />\n                </FormGroup>\n              </Colxx>\n            </Row>\n          </ModalBody>\n          <ModalFooter>\n          <Button color=\"success\" className=\"mt-4\" onClick={()=>updateEvMappingDetails()}>\n              Map\n            </Button>{' '}\n            <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleUpdateModal}>\n              Cancel\n            </Button>\n          </ModalFooter>\n      </Modal>\n    </>\n  );\n};\nexport default Evmapping;\n","import React, { useEffect, useState } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {adminRoot,getStationsAPI,getEvInventoryByIdAPI,mapEvAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\n\nconst AddEvmapping = () => {\n  const [evData,setEvData] = useState([]);\n  const [stationNameData,setStationNameData] = useState([]);\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n  const [selectedHub, setSelectedHub] = useState([]);\n\n  const location = useLocation();\n  const history = useHistory();\n  \n  let evInventoryId = 0;\n  if (location.state !== null && location.state !== undefined && location.state.ev_inventory_id !== null && location.state.ev_inventory_id !== undefined) {\n      evInventoryId = location.state.ev_inventory_id;\n  }else{\n      history.goBack();\n  }\n  useEffect(()=>{\n    getEvInventoryByIdAPICall();\n  },[]);\n\n  //API CALLS\n  const getEvInventoryByIdAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getEvInventoryByIdAPI,{ev_inventory_id:evInventoryId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setEvData(responseData.data);\n          setSelectedHub(responseData.data.hub_id);\n          setRemark1(responseData.data.remark_1);\n          setRemark2(responseData.data.remark_2)\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      });   \n    await axios.get(getStationsAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setStationNameData(responseData.data)\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })   \n  }\n  //\n  const submitEvData = () => {\n    const currentUser = getCurrentUser();\n    const postdata = {ev_inventory_id:evInventoryId,hub_id:selectedHub,remark_1:remark1,remark_2:remark2};\n    axios.post(mapEvAPI,postdata,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/mapping/evmapping',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          alert(responseData.msg);\n        }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add EV Mapping</span>\n            <a href=\"evmapping\" className=\"mt-2 btn-primary default btn-sm tbl_action_btn float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> EV Mapping List</b>\n            </a>\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card className=\"mb-4\">\n              <CardBody> \n                  <Row>\n                    <Colxx sm={12}>\n                      <FormGroup>\n                        <h5>\n                        EV details\n                        </h5>\n                        <Row>\n                          <Colxx sm={4}>\n                            <b>Vehicle Vin : </b>{evData.vehicle_vin}\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <b>QR Code : </b>{evData.e_qr_code}\n                          </Colxx>\n                        </Row>  \n                        <Separator className=\"mb-3\" />                      \n                      </FormGroup>\n                    </Colxx>\n                    <Colxx md={4} sm={12}>\n                      <FormGroup>\n                        <Label>\n                        Swapping Station\n                        </Label>\n                        <Input type=\"select\" name=\"hub_id\" placeholder=\"Station\"\n                            value={selectedHub} onChange={(e)=>{setSelectedHub(e.target.value)}}>\n                            <option value=\"0\">Select Station</option>\n                            {stationNameData.map((item)=>\n                              <option value={item.hub_master_id} key={item.hub_master_id}>{item.name}</option>\n                            )}\n                          </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx md={4} sm={12}>\n                      <FormGroup>\n                        <Label>\n                        Remark1\n                        </Label>\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Remark1\"\n                          value={remark1}\n                          onChange={(e)=>{setRemark1(e.target.value)}}\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx md={4} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          Remark2\n                        </Label>\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Remark2\"\n                          value={remark2}\n                          onChange={(e)=>{setRemark2(e.target.value)}}\n                        />\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx sm=\"12\" className=\"text-center\">\n                      <Button color=\"primary\" className=\"default mr-2\" onClick={submitEvData}>\n                          <b>Add</b>\n                      </Button>\n                      <Button color=\"light\" className=\"default\">\n                          <b>Cancel</b>\n                      </Button>\n                    </Colxx>\n                  </Row>\n              </CardBody>\n              </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default AddEvmapping;\n","import React, { useEffect, useState } from 'react';\nimport { Row, FormGroup,Label,Input,\n  Card, CardBody,CardSubtitle,\n  Modal, ModalHeader, ModalBody, ModalFooter, \n  Table, Button, DropdownItem,\n  DropdownMenu,\n  DropdownToggle,Alert,\n  UncontrolledDropdown,\n  InputGroup\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getStationsAPI,getEvInventoryByStationAPI,getBatteryMappingAPI,mapBatteryAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\n\nconst Batterymapping = () => {\n  //states\n  const [batteryMappingList,setBatteryMappingList] = useState([]);\n  const [batteryType,setBatteryType] = useState(\"All Battery\");\n  const [deleteBatteryId,setDeleteBatteryId] = useState(\"\");\n  const [updateBatteryId,setUpdateBatteryId] = useState(\"\");\n  const [isUpdate,setIsUpdate] = useState(false);\n  const [remark,setRemark] = useState(\"\");\n  //dropdown states\n  const [stationNameData,setStationNameData] = useState([]);\n  const [stationId,setStationId] = useState(\"\");\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  const [alertModalVisible,setAlertModalVisible] = useState(false);\n  const [alertModalMsg,setAlertModalMsg] = useState(\"\");\n  const [alertModalColor,setAlertModalColor] = useState(\"\");\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [modalUpdateVisible,setModalUpdateVisible] = useState(false);\n  const [isLoading,setIsLoading] = useState(true);\n\n  useEffect(()=>{\n    getBatteryMappingAPICall();\n  },[isUpdate,pageCount,batteryType]);\n\n  //API CALLS\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getBatteryMappingAPICall = async() => {\n    setBatteryMappingList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getBatteryMappingAPI+pageCount+\"&battery_type=\"+batteryType+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setBatteryMappingList(responseData.data.data);\n        }else{\n          setLastPageCount(pageCount);\n          setBatteryMappingList([]);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const mapBatteryAPICall = async(batteryId,hubId,remark) =>{\n    setModalVisible(false);\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(mapBatteryAPI,\n      {battery_inventory_id:batteryId,ev_inventory_id:0,hub_id:hubId,remark:remark},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n          const responseData = response.data;\n          if (responseData.status === 1) {\n            setIsUpdate(!isUpdate);\n            if (hubId==0) {\n              batteryDeletedAlert(responseData.status,\"Battery Unmapped Successfully\") \n            } else {\n              batteryDeletedAlert(responseData.status,responseData.msg) \n            }\n          }else{\n            batteryDeletedAlert(responseData.status,responseData.msg)\n          }\n          \n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  //helper methods\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const batteryDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }              \n  }\n  const batteryModalAlert = (status,msg)=>{\n    setAlertModalVisible(true);\n    setAlertModalMsg(msg);\n    if (status === 1) {\n      setAlertModalColor(\"success\");\n    } else {\n      setAlertModalColor(\"danger\");\n    }              \n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Modal helper methods\n  const toggleModal = (item) => {\n    setRemark(item.remark)\n    setDeleteBatteryId(item.battery_inventory_id);\n    setModalVisible(!modalVisible);\n  }\n  const toggleUpdateModal = (item) => {\n    GetStationNamesAPICall();\n    setStationId(item.hub_id);\n    setRemark(item.remark); \n    setUpdateBatteryId(item.battery_inventory_id);\n    setModalUpdateVisible(!modalUpdateVisible);\n  }\n  // value imput handle method\n  //station\n  const handleStationChange = (e) => {\n      setStationId(e.target.value);\n  }\n  const updateBatteryMappingDetails = () =>{\n    if (stationId !=0) {\n      mapBatteryAPICall(updateBatteryId,stationId,remark)\n    } else {\n      batteryModalAlert(0,\"Station is required\");\n      return;  \n    } \n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getBatteryMappingAPICall();\n  }\n  \n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Battery Mapping</span>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n          <div className=\"text-right mr-5 mb-2\">\n              <span>Battery Type : </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {batteryType}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                    <DropdownItem onClick={() => {setBatteryType('All Battery');setPageCount(1)}}>All</DropdownItem>\n                    <DropdownItem onClick={() => {setBatteryType('Mapped Battery');setPageCount(1)}}>Mapped Battery</DropdownItem>\n                    <DropdownItem onClick={() => {setBatteryType('Unmapped Battery');setPageCount(1)}}>Unmapped Battery</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span className=\"ml-5\">Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}              \n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Battery Name</th>\n                    <th>EV Id</th>\n                    <th>Swapping Station</th>\n                    <th>Remark</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"6\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    (batteryMappingList.length > 0)?\n                        batteryMappingList.map((item,index)=>\n                          <tr key={item.battery_inventory_id}>\n                            <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                            <td>\n                                <p className=\"mb-0\"><b>QR Code: </b>{item.b_qr_code}</p>\n                                <p className=\"mb-0\"><b>Serial No: </b>{item.serial_number}</p>\n                                <p className=\"mb-0\"><b>BIN: </b>{item.bin}</p>\n                                <p className=\"mb-0\"><b>SOC: </b>{item.soc}</p> \n                            </td>\n                            <td>{item.ev_inventory_id}</td>\n                            <td>{item.station_name}</td>\n                            <td>{item.remark}</td>\n                            <td>\n                              <Button color=\"info\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>toggleUpdateModal(item)}>\n                                  <i className=\"glyph-icon simple-icon-pencil\"></i>\n                              </Button>\n                              {(item.hub_id > 0) && \n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>}\n                              \n                            </td>\n                          </tr>\n                        ):<tr>\n                            <td className=\"text-center text-danger\" colSpan=\"6\">Data  Not  Found</td>\n                        </tr>\n                      }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Modal\n        isOpen={modalVisible}\n        toggle={toggleModal} >\n        <ModalHeader className=\"text-center\">\n          <Row>\n            <Colxx md=\"12\">\n              Are you sure you would like to delete this?\n            </Colxx>\n            <Colxx md=\"12\">\n              <Button color=\"success\" className=\"mt-4\" onClick={()=>mapBatteryAPICall(deleteBatteryId,0,remark)}>\n                Unmap \n              </Button>{' '}\n              <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                Cancel\n              </Button>\n            </Colxx>\n          </Row>\n        </ModalHeader>\n      </Modal>\n      <Modal\n        isOpen={modalUpdateVisible}\n        toggle={toggleUpdateModal} >\n          <ModalHeader>\n            Update\n          </ModalHeader>  \n          <ModalBody>\n            <Row>\n              <Colxx md=\"12\">\n                <Alert color={alertModalColor} isOpen={alertModalVisible} toggle={()=>setAlertModalVisible(false)}>\n                  {alertModalMsg}\n                </Alert>\n              </Colxx>\n              <Colxx md=\"12\">\n                <FormGroup>\n                  <Label>\n                    Swapping Station\n                  </Label>\n                  <Input\n                  type=\"select\"\n                  placeholder=\"Select\"\n                  name=\"hub_id\"\n                  value={stationId}\n                  onChange={e=>handleStationChange(e)}\n                  >\n                    <option value={0} key={0}>Select Station</option>\n                    {stationNameData.map((item)=>\n                      <option value={item.hub_master_id} key={item.hub_master_id}>{item.name}</option>\n                    )}\n                  </Input>\n                </FormGroup>\n              </Colxx>\n              <Colxx md=\"12\">\n                  <FormGroup>\n                    <Label>\n                      Remark\n                    </Label>\n                    <Input\n                    type=\"text\"\n                    placeholder=\"Remark\"\n                    name=\"remark\"\n                    value={remark}\n                    onChange={e=>setRemark(e.target.value)}\n                    />\n                  </FormGroup>\n                </Colxx>\n            </Row>\n          </ModalBody>\n          <ModalFooter>\n          <Button color=\"success\" className=\"mt-4\" onClick={()=>updateBatteryMappingDetails()}>\n              Update\n            </Button>{' '}\n            <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleUpdateModal}>\n              Cancel\n            </Button>\n          </ModalFooter>\n      </Modal>\n    </>\n  );\n};\nexport default Batterymapping;\n","import React from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\n\nconst AddBatterymapping = () => {\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Battery Mapping</span>\n            <a href=\"batterymapping\" className=\"mt-2 btn-primary default btn-sm tbl_action_btn float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Battery Mapping List</b>\n            </a>\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card>\n            <CardBody>\n                <Row>\n                  <Colxx sm={12}>\n                    <FormGroup>\n                      <Label>\n                      Swapping Station\n                      </Label>\n                      <Input type=\"select\">\n                        <option>Select</option>\n                        <option>station1</option>\n                        <option>station2</option>\n                        <option>station3</option>\n                      </Input>\n                    </FormGroup>\n                  </Colxx>\n                  <Colxx sm={6}>\n                      <FormGroup>\n                        <Label>\n                        Remark1\n                        </Label>\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Remark1\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx sm={6}>\n                      <FormGroup>\n                        <Label>\n                          Remark2\n                        </Label>\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Remark2\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                </Row>\n                <Row>\n                    <Colxx sm=\"12\" className=\"text-center\">\n                      <Button color=\"primary\" className=\"default mr-2\">\n                          <b>Add</b>\n                      </Button>\n                      <Button color=\"light\" className=\"default\">\n                          <b>Cancel</b>\n                      </Button>\n                    </Colxx>\n                  </Row>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default AddBatterymapping;\n","import React, { useEffect, useState } from 'react';\nimport { Row, FormGroup,Label,Input,\n  Card, CardBody,CardSubtitle,\n  Modal, ModalHeader, ModalBody, ModalFooter, \n  Table, Button, DropdownItem,\n  DropdownMenu,\n  DropdownToggle,Alert,\n  UncontrolledDropdown,\n  InputGroup \n} from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getStationsAPI,getChargerMappingAPI,mapChargerAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\n\nconst Chargermapping = () => {\n  //states\n  const [chargerMappingList,setChargerMappingList] = useState([]);\n  const [chargerType,setChargerType] = useState(\"All Charger\");\n  const [deleteChargerId,setDeleteChargerId] = useState(\"\");\n  const [updateChargerId,setUpdateChargerId] = useState(false);\n  const [isUpdate,setIsUpdate] = useState(0);\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n  //dropdown states\n  const [stationNameData,setStationNameData] = useState([]);\n  const [stationId,setStationId] = useState(\"\");\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //alert states for update modal\n  const [alertModalVisible,setAlertModalVisible] = useState(false);\n  const [alertModalMsg,setAlertModalMsg] = useState(\"\");\n  const [alertModalColor,setAlertModalColor] = useState(\"\");\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [modalUpdateVisible,setModalUpdateVisible] = useState(false);\n  const [isLoading,setIsLoading] = useState(true);\n\n  useEffect(()=>{\n    getChargerMappingAPICall();\n  },[isUpdate,pageCount,chargerType]);\n\n  //API CALLS\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getChargerMappingAPICall = async() => {\n    setChargerMappingList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getChargerMappingAPI+pageCount+\"&charger_type=\"+chargerType+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setChargerMappingList(responseData.data.data);\n        }else{\n          setLastPageCount(pageCount);\n          setChargerMappingList([]);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const mapChargerAPICall = async(chargerId,hubId,remark1,remark2) =>{\n    setModalVisible(false);\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(mapChargerAPI,\n      {charger_inventory_id:chargerId,hub_id:hubId,remark_1:remark1,remark_2:remark2},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n          const responseData = response.data;\n          if (responseData.status === 1) {\n            setIsUpdate(!isUpdate);\n            if (hubId==0) {\n              chargerDeletedAlert(responseData.status,\"Charger Unmapped Successfully\") \n            } else {\n              chargerDeletedAlert(responseData.status,responseData.msg) \n            }\n          }else{\n            chargerDeletedAlert(responseData.status,responseData.msg)\n          }\n          \n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  //helper methods\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const chargerDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }              \n  }\n  const chargerModalAlert = (status,msg)=>{\n    setAlertModalVisible(true);\n    setAlertModalMsg(msg);\n    if (status === 1) {\n      setAlertModalColor(\"success\");\n    } else {\n      setAlertModalColor(\"danger\");\n    }              \n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Modal helper methods\n  const toggleModal = (item) => {\n    setRemark1(item.remark_1);\n    setRemark2(item.remark_2);\n    setDeleteChargerId(item.id);\n    setModalVisible(!modalVisible);\n  }\n  const toggleUpdateModal = (item) => {\n    GetStationNamesAPICall();\n    setStationId(item.hub_id);\n    setRemark1(item.remark_1);\n    setRemark2(item.remark_2);\n    setUpdateChargerId(item.id);\n    setModalUpdateVisible(!modalUpdateVisible);\n  }\n  // value input handle method\n  const updateChargerMappingDetails = () =>{\n    if (stationId !=0) {\n      mapChargerAPICall(updateChargerId,stationId,remark1,remark2)\n    } else {\n      chargerModalAlert(0,\"Station is required\");\n      return;  \n    } \n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getChargerMappingAPICall();\n  }\n  \n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Charger Mapping</span>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n          <div className=\"text-right mr-5 mb-2\">\n              <span>Charger Type : </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {chargerType}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                    <DropdownItem onClick={() => {setChargerType('All Charger');setPageCount(1)}}>All</DropdownItem>\n                    <DropdownItem onClick={() => {setChargerType('Mapped Charger');setPageCount(1)}}>Mapped Charger</DropdownItem>\n                    <DropdownItem onClick={() => {setChargerType('Unmapped Charger');setPageCount(1)}}>Unmapped Charger</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span className=\"ml-5\">Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}              \n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Charger Name</th>\n                    <th>Charger Id </th>\n                    <th>Swapping Station</th>\n                    <th>Remark 1</th>\n                    <th>Remark 2</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"7\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    (chargerMappingList.length > 0)?\n                        chargerMappingList.map((item,index)=>\n                          <tr key={item.id}>\n                            <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                            <td>\n                                <p className=\"mb-0\"><b>QR Code: </b>{item.qr_code}</p>\n                                <p className=\"mb-0\"><b>No of Slot: </b>{item.no_of_slot}</p> \n                                <p className=\"mb-0\"><b>Make: </b>{item.make}</p>\n                                <p className=\"mb-0\"><b>Model: </b>{item.model}</p>\n                                <p className=\"mb-0\"><b>Dimension: </b>{item.dimension}</p>\n                                <p className=\"mb-0\"><b>Owner Name: </b>{item.owner_name}</p>  \n                            </td>\n                            <td>{item.charger_id}</td>\n                            <td>{item.station_name}</td>\n                            <td>{item.remark_1}</td>\n                            <td>{item.remark_2}</td>\n                            <td>\n                              <Button color=\"info\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>toggleUpdateModal(item)}>\n                                  <i className=\"glyph-icon simple-icon-pencil\"></i>\n                              </Button>\n                              {(item.hub_id > 0) && \n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>}  \n                            </td>\n                          </tr>\n                        ):<tr>\n                            <td className=\"text-center text-danger\" colSpan=\"7\">Data  Not  Found</td>\n                        </tr>\n                      }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Modal\n        isOpen={modalVisible}\n        toggle={toggleModal} >\n        <ModalHeader className=\"text-center\">\n          <Row>\n            <Colxx md=\"12\">\n              Are you sure you would like to unmap this?\n            </Colxx>\n            <Colxx md=\"12\">\n              <Button color=\"success\" className=\"mt-4\" onClick={()=>mapChargerAPICall(deleteChargerId,0,remark1,remark2)}>\n                Unmap \n              </Button>{' '}\n              <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                Cancel\n              </Button>\n            </Colxx>\n          </Row>\n        </ModalHeader>\n      </Modal>\n      <Modal\n        isOpen={modalUpdateVisible}\n        toggle={toggleUpdateModal} >\n          <ModalHeader>\n            Update\n          </ModalHeader>  \n          <ModalBody>\n            <Row>\n              <Colxx md=\"12\">\n                <Alert color={alertModalColor} isOpen={alertModalVisible} toggle={()=>setAlertModalVisible(false)}>\n                  {alertModalMsg}\n                </Alert>\n              </Colxx>\n              <Colxx md=\"12\">\n                <FormGroup>\n                  <Label>\n                    Swapping Station\n                  </Label>\n                  <Input\n                  type=\"select\"\n                  placeholder=\"Select\"\n                  name=\"hub_id\"\n                  value={stationId}\n                  onChange={e=>setStationId(e.target.value)}\n                  >\n                    <option value={0} key={0}>Select Station</option>\n                    {stationNameData.map((item)=>\n                      <option value={item.hub_master_id} key={item.hub_master_id}>{item.name}</option>\n                    )}\n                  </Input>\n                </FormGroup>\n              </Colxx>\n              <Colxx md=\"12\">\n                <FormGroup>\n                  <Label>\n                    Remark 1\n                  </Label>\n                  <Input\n                  type=\"text\"\n                  placeholder=\"Remark 1\"\n                  name=\"remark_1\"\n                  value={remark1}\n                  onChange={e=>setRemark1(e.target.value)}\n                  />\n                </FormGroup>\n              </Colxx>\n              <Colxx md=\"12\">\n                <FormGroup>\n                  <Label>\n                    Remark 2\n                  </Label>\n                  <Input\n                  type=\"text\"\n                  placeholder=\"Remark 2\"\n                  name=\"remark_2\"\n                  value={remark2}\n                  onChange={e=>setRemark2(e.target.value)}\n                  />\n                </FormGroup>\n              </Colxx>\n            </Row>\n          </ModalBody>\n          <ModalFooter>\n          <Button color=\"success\" className=\"mt-4\" onClick={()=>updateChargerMappingDetails()}>\n              Update\n            </Button>{' '}\n            <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleUpdateModal}>\n              Cancel\n            </Button>\n          </ModalFooter>\n      </Modal>\n    </>\n  );\n};\nexport default Chargermapping;\n","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Table, Button,\n  Input,InputGroup \n} from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getSwappingStationAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\n\nconst Stationmapping = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //station list\n  const [stationList,setStationList] = useState([]);\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  useEffect(()=>{\n    getSwappingStationListAPI();\n  },[pageCount])\n\n  //API calls\n  const getSwappingStationListAPI = async() => {\n    setStationList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getSwappingStationAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setStationList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n   //Helper methods\n   const mapStation = (hubId) => {\n    history.push({\n      pathname:adminRoot+'/mapping/stationmapping',\n      state:{hub_id:hubId}\n    });\n  }\n\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const stationAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getSwappingStationListAPI();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Station</span>\n            <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                  <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                    {alertMsg}\n                  </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>EV Capacity</th>\n                    <th>Address</th>\n                    <th>Remark1</th>\n                    <th>Remark2</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"8\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                  (stationList.length>0)?\n                      stationList.map((item,index)=>\n                      <tr key={item.hub_master_id}>\n                      <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                      <td>{item.name}</td>\n                      <td>{item.ev_capacity}</td>\n                      <td>{item.address}</td>\n                      <td>{item.remark_1}</td>\n                      <td>{item.remark_2}</td>\n                      <td>\n                      <Button color=\"primary\" className=\"btn-primary default mr-1 btn-sm tbl_action_a\" onClick={()=>mapStation(item.hub_master_id)}>\n                            <b><i className=\"glyph-icon iconsminds-repeat-2\"></i> Map</b>\n                      </Button>\n                      </td>\n                    </tr>\n                    )\n                    :<tr>\n                        <td className=\"text-center text-danger\" colSpan=\"8\">Data  Not  Found</td>\n                    </tr>\n                  }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default Stationmapping;\n","import React, { useEffect, useState } from 'react';\nimport { \n  Card, CardBody, \n  CardHeader, CardTitle,\n  FormGroup,\n  Alert,\n  Row, Button, Input,Table,\n  Modal,ModalHeader\n} from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getFleetOperatorMappingListAPI,getUserMappingListByRoleAPI,mapFleetOperatorAPI,mapByRoleAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useLocation} from 'react-router-dom';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst StationDetail = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  const [unmapAlertVisible,setUnmapAlertVisible] = useState(false);\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //flag to dislpay list\n  const [listFlag,setListFlag] = useState(0);\n  //button selected\n  const [fleetOutline,setFleetOutline] = useState(false); //if outline false then button selected\n  const [operatorOutline,setOperatorOutline] = useState(true);\n  const [managerOutline,setManagerOutline] = useState(true);\n  //user role\n  const [userRole,setUserRole] = useState(\"Fleet Operator\");\n  //fleet/operator/manager id to map\n  const [mappingId,setMappingId] = useState(\"0\");\n  //fleet/operator/manager id to Unmap\n  const [unmapId,setUnmapId] = useState(\"\");\n   //map-unmap list\n   const [mappedList,setMappedList] = useState([]);\n   const [unmappedList,setUnmappedList] = useState([]);\n   //set id for unmap\n   const [isUpdate,setIsUpdate] = useState(false);\n\n   const location = useLocation();\n\n   useEffect(()=>{\n    getMappingListByRoleAPICall();\n  },[isUpdate,userRole])\n\n  //API calls\n  const getMappingListByRoleAPICall = async() => {\n    setMappedList([]);\n    setUnmappedList([]);\n    switch (userRole) {\n      case \"Fleet Operator\":\n        getFleetOperatorMappingListAPICall();\n        break;\n      case \"Operator\":\n        getOperatorMappingListAPICall();\n        break;\n      case \"Manager\":\n      getManagerMappingListAPICall();\n      break;\n      default:\n        getFleetOperatorMappingListAPICall();\n        break;\n    }\n  }\n  const getFleetOperatorMappingListAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getFleetOperatorMappingListAPI,\n      {hub_id:location.state.hub_id},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setMappedList(responseData.data.mapped_fleet_operator);\n          setUnmappedList(responseData.data.other_fleet_operator);\n          if (responseData.data.mapped_fleet_operator.length>0) {\n            setListFlag(responseData.status);\n          }else{\n            setListFlag(0);\n          }\n        }else{\n          setListFlag(responseData.status);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getOperatorMappingListAPICall = async() => {\n    setMappedList([]);\n    const currentUser = getCurrentUser();\n    await axios.post(getUserMappingListByRoleAPI,\n      {user_role:\"Operator\",hub_id:location.state.hub_id},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setMappedList(responseData.data.mapped_user);\n          setUnmappedList(responseData.data.other_user);\n          if (responseData.data.mapped_user.length>0) {\n            setListFlag(responseData.status);\n          }else{\n            setListFlag(0);\n          }\n        }else{\n          setListFlag(responseData.status);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getManagerMappingListAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getUserMappingListByRoleAPI,\n      {user_role:\"Manager\",hub_id:location.state.hub_id},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setMappedList(responseData.data.mapped_user);\n          setUnmappedList(responseData.data.other_user);\n          if (responseData.data.mapped_user.length>0) {\n            setListFlag(responseData.status);\n          }else{\n            setListFlag(0);\n          }\n        }else{\n          setListFlag(responseData.status);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const MapByRoleAPICall = async(stationId,idToMap,mapstate) => {\n    switch (userRole) {\n      case \"Fleet Operator\":\n        MapStationWithFleetAPICall(stationId,idToMap,mapstate);\n        break;\n      case \"Operator\":\n        MapStationWithOperatorAPICall(stationId,idToMap,mapstate);\n        break;\n      case \"Manager\":\n      MapStationWithManagerAPICall(stationId,idToMap,mapstate);\n      break;\n    }\n  }\n  const MapStationWithFleetAPICall = async(stationId,fleetId,mapstate) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(mapFleetOperatorAPI,\n      {hub_id:stationId,fleet_operator_id:fleetId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setIsUpdate(!isUpdate);\n          if (mapstate==1) {\n            mapAlert(responseData.status,responseData.msg);\n          }else{\n            unMapAlert(responseData.status,\"Station Unmapped Successfully\");\n          }\n        }else{\n          mapAlert(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const MapStationWithOperatorAPICall = async(stationId,userId,mapstate) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(mapByRoleAPI,\n      {hub_id:stationId,user_id:userId,user_role:\"Operator\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setIsUpdate(!isUpdate);\n          if (mapstate==1) {\n            mapAlert(responseData.status,responseData.msg);\n          }else{\n            unMapAlert(responseData.status,\"Unmapped Successfully\");\n          }\n        }else{\n          mapAlert(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const MapStationWithManagerAPICall = async(stationId,userId,mapstate) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(mapByRoleAPI,\n      {hub_id:stationId,user_id:userId,user_role:\"Manager\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setIsUpdate(!isUpdate);\n          if (mapstate==1) {\n            mapAlert(responseData.status,responseData.msg);\n          }else{\n            unMapAlert(responseData.status,\" Unmapped Successfully\");\n          }\n        }else{\n          mapAlert(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const mapAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const unMapAlert = (status,msg)=>{\n    setUnmapAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Modal helper methods\n  const toggleModal = (unMapID) => {\n    setUnmapId(unMapID);\n    setModalVisible(!modalVisible);\n  }\n  //display details method\n  const sortDetail = (hubName,name) => {\n    if (hubName == null || hubName == \"\") {\n      return name;\n    } else {\n      return name+\" - \"+hubName;\n    }\n  }\n  //map method\n  const handleMap = (id) => {\n    if (id == 0) {\n      mapAlert(0,\"Please select \"+userRole)\n      return;\n    } else {\n      MapByRoleAPICall(location.state.hub_id,id,1);\n    }\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Station Mapping</span>\n            <a href=\"station\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon iconsminds-arrow-back-3\"></i> Go Back</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs={12} className=\"mb-2\">\n          <Card>\n            <CardBody>\n              <Row>\n                <Colxx md=\"6\">\n                  <Button \n                    outline={fleetOutline} \n                    color=\"primary\" \n                    className=\"default\" \n                    onClick={()=>{\n                      setFleetOutline(false);\n                      setOperatorOutline(true);\n                      setManagerOutline(true);\n                      setUserRole(\"Fleet Operator\")\n                      }}>\n                      <b>Fleet Operator</b>\n                  </Button>\n                  <Button \n                    outline={operatorOutline} \n                    color=\"primary\" \n                    className=\"default\" \n                    onClick={()=>{\n                      setFleetOutline(true);\n                      setOperatorOutline(false);\n                      setManagerOutline(true);\n                      setUserRole(\"Operator\")}}>\n                    <b>Operator</b>\n                  </Button>\n                  <Button \n                    outline={managerOutline} \n                    color=\"primary\" \n                    className=\"default\" \n                    onClick={()=>{\n                      setFleetOutline(true);\n                      setOperatorOutline(true);\n                      setManagerOutline(false);\n                      setUserRole(\"Manager\")}}>\n                    <b>Manager</b>\n                  </Button>\n                </Colxx>\n              </Row>\n              <Row>\n                <Colxx md=\"6 mt-5 \">\n                    <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                      {alertMsg}\n                    </Alert>\n                  </Colxx>                  \n                  <Colxx md=\"12\">\n                    <h4 className=\"mb-3\">Select {userRole}</h4>\n                  </Colxx>   \n              </Row>\n              <Row className=\"mb-4\">\n                <Colxx md={6}>\n                  <FormGroup>\n                  <Input \n                    type=\"select\" \n                    name=\"id\"\n                    onChange={(e)=>setMappingId(e.target.value)}\n                  >\n                    <option key={0} value={0}>Select</option>\n                    {\n                      userRole==\"Operator\"|| userRole===\"Manager\"?\n                      unmappedList.map((item,i)=>\n                        <option key={i} value={item.id}>{sortDetail(item.station_name,item.name)}</option>\n                      ):\n                      unmappedList.map((item,i)=>\n                        <option key={i} value={item.fleet_operator_id}>{sortDetail(item.hub_name,item.name)}</option>\n                      )\n                    }\n                  </Input>\n                  </FormGroup>\n                </Colxx>\n                <Colxx md=\"6\">\n                  <Button \n                  color=\"primary\" \n                  className=\"default\"\n                  onClick={()=>handleMap(mappingId)}>\n                      <b>Save</b>\n                  </Button>\n                </Colxx>\n              </Row> \n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs={12}>\n          <Card>\n            <CardBody>\n              <CardHeader className=\"mb-3\">\n                <Alert color={alertColor} isOpen={unmapAlertVisible} toggle={()=>setUnmapAlertVisible(false)}>\n                  {alertMsg}\n                </Alert>\n              </CardHeader>\n              <h4>Mapping Details</h4>\n                  {\n                    //check role\n                    userRole==\"Operator\"|| userRole==\"Manager\"?\n                      <Table responsive bordered striped>\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Contact Number</th>\n                            <th>Action</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {listFlag>0?\n                            mappedList.map((item,index)=>\n                            <tr key={index}>\n                            <th scope=\"row\">{index +1}</th>\n                            <td>{item.name}</td>\n                            <td>{item.email}</td>\n                            <td>{item.contact_number}</td>\n                            <td>\n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>\n                            </td>\n                          </tr>\n                          ):\n                          <tr>\n                            <td className=\"text-center text-danger\" colSpan=\"5\">Data  Not  Found</td>\n                          </tr>}\n                        </tbody>\n                      </Table>:\n                      <Table responsive bordered striped>\n                      <thead>\n                        <tr>\n                          <th>#</th>\n                          <th>Name</th>\n                          <th>Fleet Id</th>\n                          <th>Address</th>\n                          <th>Contact Person</th>\n                          <th>Contact Email</th>\n                          <th>Contact Number</th>\n                          <th>Remark 2</th>\n                          <th>Remark 2</th>\n                          <th>Action</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {listFlag>0?\n                          mappedList.map((item,index)=>\n                          <tr key={index}>\n                          <th scope=\"row\">{index +1}</th>\n                          <td>{item.name}</td>\n                          <td>{item.fleet_id}</td>\n                          <td>{item.address}</td>\n                          <td>{item.contact_person}</td>\n                          <td>{item.contact_email}</td>\n                          <td>{item.contact_number}</td>\n                          <td>{item.remark_1}</td>\n                          <td>{item.remark_2}</td>\n                          <td>\n                            <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.fleet_operator_id)}}>\n                                <i className=\"glyph-icon simple-icon-trash\"></i>\n                            </Button>\n                          </td>\n                        </tr>\n                        ):\n                        <tr>\n                          <td className=\"text-center text-danger\" colSpan=\"10\">Data  Not  Found</td>\n                        </tr>}\n                      </tbody>\n                    </Table>\n                  }\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  <Row>\n                    <Colxx md=\"12\">\n                      Are you sure you would like to unmap this ?\n                    </Colxx>\n                    <Colxx md=\"12\">\n                      <Button color=\"success\" className=\"mt-4\" onClick={()=>MapByRoleAPICall(0,unmapId,0)}>\n                        Unmap \n                      </Button>{' '}\n                      <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                        Cancel\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default StationDetail; ","import React, { useEffect, useState } from 'react';\nimport { \n  CardSubtitle,CardBody, \n  Row, Table, Card,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Input,InputGroup,Button,\n  Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getTransactionAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\n\nconst Transaction = () => {\n  const [transactionList,setTransactionList] = useState([]);\n  const [isLoading,setIsLoading] = useState(true);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");  \n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  const status_val = ['-','Scan EV','Scan DB1','Scan DB2','Scan OTP','Scan EV','Scan CB1','Scan CB2']\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n\n  useEffect(()=>{\n    getTransactionAPICall();\n  },[pageCount])\n\n  //API CALLS\n  const getTransactionAPICall = async() => {\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getTransactionAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setTransactionList(responseData.data.data);          \n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  //helper methods\n  //Alert helper methods\n  const transactionAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getTransactionAPICall();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Transactions</span>\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card>\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                  <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                    {alertMsg}\n                  </Alert>\n              </CardSubtitle>\n              <Table responsive striped bordered>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Status</th>\n                      <th>Station</th>\n                      <th>Operator</th>\n                      <th>EV</th>\n                      <th>DB1</th>\n                      <th>CB1</th>\n                      <th>DB2</th>\n                      <th>CB2</th>\n                      <th>OTP</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"10\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                         transactionList.length > 0 ?\n                            transactionList.map((item,index)=>\n                              <tr key={item.transaction_log_id}>\n                                <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                                <td>{status_val[item.status]}</td>\n                                <td>{item.station_name}</td>\n                                <td>{item.operator}</td>\n                                <td><b>Vehicle VIN : </b>{item.vehicle_vin}</td>\n                                <td>\n                                    <p className=\"mb-0\"><b>BIN:</b>{item.discharged_battery_bin_1}</p>\n                                    <p className=\"mb-0\"><b>SOC:</b>{item.discharged_battery_soc_1}</p>\n                                    <p className=\"mb-0\"><b>BV:</b>{item.discharged_battery_bv_1}</p>\n                                    <p className=\"mb-0\"><b>REC:</b>{item.discharged_battery_rec_1}</p>                           \n                                </td>\n                                <td>\n                                    <p className=\"mb-0\"><b>BIN:</b>{item.charged_battery_bin_1}</p>\n                                    <p className=\"mb-0\"><b>SOC:</b>{item.charged_battery_soc_1}</p>\n                                    <p className=\"mb-0\"><b>BV:</b>{item.charged_battery_bv_1}</p>\n                                    <p className=\"mb-0\"><b>REC:</b>{item.charged_battery_rec_1}</p>\n                                </td> \n                                <td>\n                                    <p className=\"mb-0\"><b>BIN:</b>{item.discharged_battery_bin_2}</p>\n                                    <p className=\"mb-0\"><b>SOC:</b>{item.discharged_battery_soc_2}</p>\n                                    <p className=\"mb-0\"><b>BV:</b>{item.discharged_battery_bv_2}</p>\n                                    <p className=\"mb-0\"><b>REC:</b>{item.discharged_battery_rec_2}</p> \n                                </td>\n                                <td>\n                                    <p className=\"mb-0\"><b>BIN:</b>{item.charged_battery_bin_2}</p>\n                                    <p className=\"mb-0\"><b>SOC:</b>{item.charged_battery_soc_2}</p>\n                                    <p className=\"mb-0\"><b>BV:</b>{item.charged_battery_bv_2}</p>\n                                    <p className=\"mb-0\"><b>REC:</b>{item.charged_battery_rec_2}</p>\n                                </td>\n                                <td>{item.end_otp}</td>\n                              </tr>\n                            ):<tr>\n                                  <td className=\"text-center text-danger\" colSpan=\"10\">Data  Not  Found</td>\n                              </tr>\n                    }                                       \n                  </tbody>\n                </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default Transaction;\n","import React, { useEffect, useState } from 'react';\nimport { \n  CardSubtitle,CardBody, \n  Row, Table, Card, DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Button,Input,InputGroup,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getQueueLogAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\n\nconst Queue = () => {\n  const [transactionList,setTransactionList] = useState([]);\n  const [isLoading,setIsLoading] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n\n  useEffect(()=>{\n    getQueueLogAPICall();\n  },[pageCount])\n\n  //API CALLS\n  const getQueueLogAPICall = async() => {\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getQueueLogAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setTransactionList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  //helper methods\n  //Alert helper methods\n  const queueAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getQueueLogAPICall();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Queue</span>\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card>\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                  <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                    {alertMsg}\n                  </Alert>\n              </CardSubtitle>\n              <Table responsive striped bordered>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Station</th>\n                      <th>Operator</th>\n                      <th>EV</th>\n                      <th>DB1</th>\n                      <th>CB1</th>\n                      <th>DB2</th>\n                      <th>CB2</th>\n                      <th>OTP</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"9\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                         transactionList.length > 0 ?\n                            transactionList.map((item,index)=>\n                              <tr key={item.queue_master_id}>\n                                <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                                <td>{item.station_name}</td>\n                                <td>{item.operator}</td>\n                                <td>\n                                  <p className=\"mb-0\"><b>VehicleVIN:</b>{item.vehicle_vin}</p>\n                                  <p className=\"mb-0\"><b>Regi.No.:</b>{item.registration_no}</p>\n                                </td>\n                                <td>\n                                    <p className=\"mb-0\"><b>QR Code: </b>{item.discharged_b1_qr_code}</p>                          \n                                </td>\n                                <td>\n                                    <p className=\"mb-0\"><b>QR Code: </b>{item.charged_b1_qr_code}</p>\n                                </td> \n                                <td>\n                                    <p className=\"mb-0\"><b>QR Code: </b>{item.discharged_b2_qr_code}</p> \n                                </td>\n                                <td>\n                                    <p className=\"mb-0\"><b>QR Code: </b>{item.charged_b2_qr_code}</p>\n                                </td>\n                                <td>{item.end_otp}</td>\n                              </tr>\n                            ):<tr>\n                                  <td className=\"text-center text-danger\" colSpan=\"9\">Data  Not  Found</td>\n                              </tr>\n                    }                            \n                  </tbody>\n                </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default Queue;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row, Card, CardBody,CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,ModalHeader,ModalBody,\n  Input,InputGroup, \n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getBatteryInventoryListAPI,deleteBatteryInventoryAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\n\nconst Battery = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [faultModalVisible,setFaultModalVisible] = useState(false);\n  const [faultList,setFaultList] = useState([]);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //battery list\n  const [batteryInventoryList,setBatteryInventoryList] = useState([]);\n  const [batteryInventoryID,setBatteryInventoryID] = useState(\"\");\n  const [batteryInventoryToDeleteId,setBatteryInventoryToDeleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getBatteryInventoryListAPICall();\n    batteryInventoryAlert();\n  },[batteryInventoryID,pageCount])\n\n  //API calls\n  const getBatteryInventoryListAPICall = async() => {\n    setBatteryInventoryList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getBatteryInventoryListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setBatteryInventoryList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteBatteryInventoryAPICall = async(batteryInventoryId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteBatteryInventoryAPI,\n      {battery_inventory_id:batteryInventoryId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setBatteryInventoryID(batteryInventoryId);\n          batteryInventoryDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          batteryInventoryDeletedAlert(responseData.status,responseData.msg)\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updateBatteryInventory = (batteryInventoryId) => {\n    history.push({\n      pathname:adminRoot+'/inventory/updatebattery_inventory',\n      state:{battery_inventory_id:batteryInventoryId}\n    });\n  }\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const batteryInventoryDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const batteryInventoryAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (batteryInventoryId) => {\n    setBatteryInventoryToDeleteId(batteryInventoryId)\n    setModalVisible(!modalVisible);\n  }\n  const toggleFaultModal = (faults) => {\n    setFaultList(faults)\n    setFaultModalVisible(!faultModalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getBatteryInventoryListAPICall();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Battery Inventory</span>\n        <a href=\"addbattery\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card className=\"mb-4\">\n              <CardBody>\n                <CardSubtitle className=\"mb-3\">\n                    <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                      {alertMsg}\n                    </Alert>\n                </CardSubtitle> \n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>BIN</th>\n                      <th>QR Code</th>\n                      <th>OEM</th>\n                      <th>Model Name</th>\n                      <th>Make Year</th>\n                      <th>Owned By</th>\n                      <th>Serial Number</th>\n                      <th>IMEI</th>\n                      <th>SOC</th>\n                      <th>BV</th>\n                      <th>Rec</th>\n                      <th>Latitude</th>\n                      <th>Longitude</th>\n                      <th>Faults</th>\n                      <th>Remark</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"17\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                         batteryInventoryList.length > 0 ?\n                          batteryInventoryList.map((item,index)=>\n                            <tr key={index}>\n                                <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                                <td>{item.bin}</td>\n                                <td>{item.b_qr_code}</td>\n                                <td>{item.oem_name}</td>\n                                <td>{item.model_name}</td>\n                                <td>{item.make_year}</td>\n                                <td>{item.owner_name}</td>\n                                <td>{item.serial_number}</td>\n                                <td>{item.imei}</td>\n                                <td>{item.soc}</td>\n                                <td>{item.bv}</td>\n                                <td>{item.rec}</td>\n                                <td>{item.lat}</td>\n                                <td>{item.lon}</td>\n                                <td>{item.total_alarm>0?\n                                    <Button color=\"info\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>{toggleFaultModal(item.alarm_list)}}>\n                                      <i className=\"glyph-icon simple-icon-eye\"></i>\n                                    </Button>:\"None\"}</td>\n                                <td>{item.remark}</td>\n                                <td>\n                                  <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateBatteryInventory(item.battery_inventory_id)}}>\n                                      <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                                  </a>\n                                  <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.battery_inventory_id)}}>\n                                      <i className=\"glyph-icon simple-icon-trash\"></i>\n                                  </Button>                        \n                                </td>\n                            </tr>\n                      ):<tr>\n                            <td className=\"text-center text-danger\" colSpan=\"17\">Data  Not  Found</td>\n                        </tr>\n                      }          \n                  </tbody>\n                </Table>\n                <Modal\n                  isOpen={modalVisible}\n                  toggle={toggleModal} >\n                  <ModalHeader className=\"text-center\">\n                    Are you sure you would like to delete this inventory?\n                    <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteBatteryInventoryAPICall(batteryInventoryToDeleteId)}>\n                      Delete Inventory \n                    </Button>{' '}\n                    <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                      Cancel\n                    </Button>\n                  </ModalHeader>\n                </Modal>\n                <Modal\n                  isOpen={faultModalVisible}\n                  toggle={toggleFaultModal} >\n                  <ModalBody>\n                    <h2 className=\"text-center\">Faults</h2>\n                    \n                    {faultList.length>0 &&\n                      faultList.map((item,index)=>\n                      <Row>\n                        <Colxx md=\"12\">\n                          {index+\". \"+item.title}\n                        </Colxx>\n                      </Row>)\n                    }\n                    <Row className=\"text-center\">\n                      <Colxx>\n                        <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={()=>setFaultModalVisible(false)}>\n                          Cancel\n                        </Button>\n                      </Colxx>\n                    </Row> \n                  </ModalBody>\n                </Modal>\n              </CardBody>\n            </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default Battery;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row,Card, CardBody,CardSubtitle,Alert, FormGroup, Label,\n  Input, Button\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getBatteryDataAPI,getOwnersAPI,getStationsAPI,addBatteryInventoryAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst AddBattery = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //dropdown states\n  const [stationNameData,setStationNameData] = useState([]);\n  const [ownerNameData,setOwnerNameData] = useState([]);\n  const [batteryData,setBatteryData] = useState([]);\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n    GetOwnerNamesAPICall();\n    GetBatteryDataAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetOwnerNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getOwnersAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setOwnerNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetBatteryDataAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getBatteryDataAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setBatteryData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const addBatteryInventoryAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addBatteryInventoryAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/inventory/battery',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          addBatteryInventoryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const BatteryInventoryDetailsValidationSchema = yup.object().shape({\n    bin:yup.string()\n        .required(\"BIN is required\"),\n    serial_number:yup.string()\n        .required(\"Serial Number capacity is required\"),\n    b_qr_code:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"Battery QR Code capacity is required\"),\n    own_by:yup.string()\n        .required(\"Owned By is required\"),\n    battery_master_id:yup.string()\n        .required(\"Battery is required\"),\n    imei:yup.string()\n        .required(\"IMEI is required\"),\n    // soc:yup.string()\n    //     .required(\"EV capacity is required\"),\n    // bv:yup.string()\n    //     .required(\"BV is required\"),\n    // rec:yup.string()\n    //     .required(\"Rec is required\"),\n    // lat:yup.string()\n    //     .required(\"Latitude is required\"),\n    // lon:yup.string()\n    //     .required(\"Longitude is required\"),\n  });\n\n  const initialValues = {\n    bin:\"\",\n    serial_number:\"\",\n    b_qr_code:\"\",\n    hub_id:\"\",\n    own_by:\"\",\n    battery_master_id:\"\",\n    imei:\"\",\n    soc:\"\",\n    bv:\"\",\n    rec:\"\",\n    lat:\"\",\n    lon:\"\",\n    remark:\"\",\n  };\n\n  //helper\n  //Alert helper methods\n  const addBatteryInventoryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Battery Inventory</span>\n            <a href=\"battery\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Battery Inventory List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={BatteryInventoryDetailsValidationSchema} \n        onSubmit={(values)=>{\n          addBatteryInventoryAPICall(values);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody>\n                        <CardSubtitle className=\"mb-3\">\n                          <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                            {alertMsg}\n                          </Alert>\n                        </CardSubtitle> \n                          <Row>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                BIN\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"BIN\"\n                                  name=\"bin\"\n                                  value={values.bin}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.bin && touched.bin ? \"input-error\":null}\n                                />\n                                {errors.bin && touched.bin &&(\n                                  <span className=\"error\">{errors.bin}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Serial Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Serial Number\"\n                                  value={values.serial_number}\n                                  name=\"serial_number\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.serial_number && touched.serial_number ? \"input-error\":null}\n                                />\n                                {errors.serial_number && touched.serial_number &&(\n                                  <span className=\"error\">{errors.serial_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Station\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"hub_id\"\n                                  placeholder=\"Station\"\n                                  value={values.hub_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Station</option>\n                                  {stationNameData.map((item,index)=>\n                                    <option value={item.hub_master_id} key={index}>{item.name}</option>\n                                  )}\n                                </Input>\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Owned By\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"own_by\"\n                                  value={values.own_by}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Owned By</option>\n                                  {ownerNameData.map((item,index)=>\n                                    <option value={item.owner_master_id} key={index}>{item.name}</option>\n                                    )}\n                                </Input>\n                                {errors.own_by && touched.own_by &&(\n                                  <span className=\"error\">{errors.own_by}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Battery\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"battery_master_id\"\n                                  value={values.battery_master_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Battery</option>\n                                  {batteryData.map((item,index)=>\n                                    <option value={item.battery_master_id} key={index}>{item.model_name+\"-\"+item.make_year+\"-\"+item.type_of_connector}</option>\n                                    )}\n                                </Input>\n                                {errors.battery_master_id && touched.battery_master_id &&(\n                                  <span className=\"error\">{errors.battery_master_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Battery QR Code\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"b_qr_code\"\n                                  placeholder=\"Battery QR Code\"\n                                  value={values.b_qr_code}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.b_qr_code && touched.b_qr_code &&(\n                                  <span className=\"error\">{errors.b_qr_code}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                BV\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"bv\"\n                                  placeholder=\"BV\"\n                                  value={values.bv}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.bv && touched.bv &&(\n                                  <span className=\"error\">{errors.bv}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                SOC\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"soc\"\n                                  placeholder=\"SOC\"\n                                  value={values.soc}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.soc && touched.soc &&(\n                                  <span className=\"error\">{errors.soc}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                IMEI\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"imei\"\n                                  placeholder=\"IMEI\"\n                                  value={values.imei}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.imei && touched.imei &&(\n                                  <span className=\"error\">{errors.imei}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Rec\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"rec\"\n                                  placeholder=\"Rec\"\n                                  value={values.rec}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.rec && touched.rec &&(\n                                  <span className=\"error\">{errors.rec}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Latitude\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"lat\"\n                                  placeholder=\"Latitude\"\n                                  value={values.lat}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.lat && touched.lat &&(\n                                  <span className=\"error\">{errors.lat}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Longitude\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"lon\"\n                                  placeholder=\"Longitude\"\n                                  value={values.lon}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.lon && touched.lon &&(\n                                  <span className=\"error\">{errors.lon}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark\"\n                                  placeholder=\"Remark\"\n                                  value={values.remark}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AddBattery;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row,Card, CardBody,CardSubtitle,Alert, FormGroup, Label,\n  Input, Button\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getBatteryDataAPI,getOwnersAPI,getStationsAPI,updateBatteryInventoryAPI,getBatteryInventoryByIdAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateBatteryInventory = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //dropdown states\n  const [stationNameData,setStationNameData] = useState([]);\n  const [ownerNameData,setOwnerNameData] = useState([]);\n  const [batteryData,setBatteryData] = useState([]);\n  //states\n  const [bin,setBin] = useState(\"\");\n  const [serialNumber,setSerialNumber] = useState(\"\");\n  const [bQrCode,setBQrCode] = useState(\"\");\n  const [hubId,setHubId] = useState(\"\");\n  const [ownBy,setOwnBy] = useState(\"\");\n  const [batteryMasterId,setBatteryMasterId] = useState(\"\");\n  const [imei,setImei] = useState(\"\");\n  const [soc,setSoc] = useState(\"\");\n  const [bv,setBv] = useState(\"\");\n  const [rec,setRec] = useState(\"\");\n  const [lat,setLat] = useState(\"\");\n  const [lon,setLon] = useState(\"\");\n  const [remark,setRemark] = useState(\"\");\n\n  const history = useHistory();\n  const location = useLocation();\n\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n    GetOwnerNamesAPICall();\n    GetBatteryDataAPICall();\n    getBatteryInventoryByIdAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetOwnerNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getOwnersAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setOwnerNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetBatteryDataAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getBatteryDataAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setBatteryData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getBatteryInventoryByIdAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getBatteryInventoryByIdAPI,\n    {\n        battery_inventory_id:location.state.battery_inventory_id\n    },\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n        setBin(responseData.data.bin);\n        setSerialNumber(responseData.data.serial_number);\n        setBQrCode(responseData.data.b_qr_code);\n        setHubId(responseData.data.hub_id);\n        setOwnBy(responseData.data.own_by);\n        setBatteryMasterId(responseData.data.battery_master_id);\n        setImei(responseData.data.imei);\n        setSoc(responseData.data.soc);\n        setBv(responseData.data.bv);\n        setRec(responseData.data.rec);\n        setLat(responseData.data.lat);\n        setLon(responseData.data.lon);\n        setRemark(responseData.data.remark);\n        }else{\n        console.log(responseData.msg);\n        }\n    }).catch(error=>{\n        console.log(error);\n    })\n}\n  const updateBatteryInventoryAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(updateBatteryInventoryAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/inventory/battery',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          UpdateBatteryInventoryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const BatteryInventoryDetailsValidationSchema = yup.object().shape({\n    bin:yup.string()\n        .required(\"BIN is required\"),\n    serial_number:yup.string()\n        .required(\"Serial Number capacity is required\"),\n    b_qr_code:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"Battery QR Code capacity is required\"),\n    own_by:yup.string()\n        .required(\"Owned By is required\"),\n    battery_master_id:yup.string()\n        .required(\"Battery is required\"),\n    imei:yup.string()\n        .required(\"IMEI is required\"),\n    // soc:yup.string()\n    //     .required(\"EV capacity is required\"),\n    // bv:yup.string()\n    //     .required(\"BV is required\"),\n    // rec:yup.string()\n    //     .required(\"Rec is required\"),\n    // lat:yup.string()\n    //     .required(\"Latitude is required\"),\n    // lon:yup.string()\n    //     .required(\"Longitude is required\"),\n  });\n\n  //helper\n  //Alert helper methods\n  const UpdateBatteryInventoryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Battery Inventory</span>\n            <a href=\"battery\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Battery Inventory List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            bin:bin,\n            serial_number:serialNumber,\n            b_qr_code:bQrCode,\n            hub_id:hubId,\n            own_by:ownBy,\n            battery_master_id:batteryMasterId,\n            imei:imei,\n            soc:soc,\n            bv:bv,\n            rec:rec,\n            lat:lat,\n            lon:lon,\n            remark:remark,\n        }}\n        validationSchema={BatteryInventoryDetailsValidationSchema} \n        onSubmit={(values)=>{\n            const params = {\n                battery_inventory_id:location.state.battery_inventory_id,\n                bin:values.bin,\n                serial_number:values.serial_number,\n                b_qr_code:values.b_qr_code,\n                hub_id:values.hub_id,\n                own_by:values.own_by,\n                battery_master_id:values.battery_master_id,\n                imei:values.imei,\n                soc:values.soc,\n                bv:values.bv,\n                rec:values.rec,\n                lat:values.lat,\n                lon:values.lon,\n                remark:values.remark,\n            }\n          updateBatteryInventoryAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody>\n                        <CardSubtitle className=\"mb-3\">\n                          <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                            {alertMsg}\n                          </Alert>\n                        </CardSubtitle> \n                          <Row>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                BIN\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"BIN\"\n                                  name=\"bin\"\n                                  value={values.bin}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.bin && touched.bin ? \"input-error\":null}\n                                />\n                                {errors.bin && touched.bin &&(\n                                  <span className=\"error\">{errors.bin}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Serial Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Serial Number\"\n                                  value={values.serial_number}\n                                  name=\"serial_number\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.serial_number && touched.serial_number ? \"input-error\":null}\n                                />\n                                {errors.serial_number && touched.serial_number &&(\n                                  <span className=\"error\">{errors.serial_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Station\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"hub_id\"\n                                  placeholder=\"Station\"\n                                  value={values.hub_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Station</option>\n                                  {stationNameData.map((item)=>\n                                    <option value={item.hub_master_id} key={item.hub_master_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Owned By\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"own_by\"\n                                  value={values.own_by}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Owned By</option>\n                                  {ownerNameData.map(item=>\n                                    <option value={item.owner_master_id} key={item.owner_master_id}>{item.name}</option>\n                                    )}\n                                </Input>\n                                {errors.own_by && touched.own_by &&(\n                                  <span className=\"error\">{errors.own_by}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Battery\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"battery_master_id\"\n                                  value={values.battery_master_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Battery</option>\n                                  {batteryData.map(item=>\n                                    <option value={item.battery_master_id} key={item.battery_master_id}>{item.model_name+\"-\"+item.make_year+\"-\"+item.type_of_connector}</option>\n                                    )}\n                                </Input>\n                                {errors.battery_master_id && touched.battery_master_id &&(\n                                  <span className=\"error\">{errors.battery_master_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Battery QR Code\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"b_qr_code\"\n                                  placeholder=\"Battery QR Code\"\n                                  value={values.b_qr_code}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.b_qr_code && touched.b_qr_code &&(\n                                  <span className=\"error\">{errors.b_qr_code}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                BV\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"bv\"\n                                  placeholder=\"BV\"\n                                  value={values.bv}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.bv && touched.bv &&(\n                                  <span className=\"error\">{errors.bv}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                SOC\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"soc\"\n                                  placeholder=\"SOC\"\n                                  value={values.soc}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.soc && touched.soc &&(\n                                  <span className=\"error\">{errors.soc}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                IMEI\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"imei\"\n                                  placeholder=\"IMEI\"\n                                  value={values.imei}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.imei && touched.imei &&(\n                                  <span className=\"error\">{errors.imei}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Rec\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"rec\"\n                                  placeholder=\"Rec\"\n                                  value={values.rec}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.rec && touched.rec &&(\n                                  <span className=\"error\">{errors.rec}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Latitude\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"lat\"\n                                  placeholder=\"Latitude\"\n                                  value={values.lat}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.lat && touched.lat &&(\n                                  <span className=\"error\">{errors.lat}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Longitude\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"lon\"\n                                  placeholder=\"Longitude\"\n                                  value={values.lon}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.lon && touched.lon &&(\n                                  <span className=\"error\">{errors.lon}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark\"\n                                  placeholder=\"Remark\"\n                                  value={values.remark}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default UpdateBatteryInventory;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row, Card, CardBody,CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  Input,InputGroup\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getChargerInventoryListAPI,deleteChargerInventoryAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\n\nconst Charger = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //battery list\n  const [chargerInventoryList,setChargerInventoryList] = useState([]);\n  const [chargerInventoryID,setChargerInventoryID] = useState(\"\");\n  const [chargerInventoryToDeleteId,setChargerInventoryToDeleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getChargerInventoryListAPICall();\n    chargerInventoryAlert();\n  },[chargerInventoryID,pageCount])\n\n  //API calls\n  const getChargerInventoryListAPICall = async() => {\n    setChargerInventoryList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getChargerInventoryListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setChargerInventoryList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteChargerInventoryAPICall = async(chargerInventoryId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteChargerInventoryAPI,\n      {charger_inventory_id:chargerInventoryId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setChargerInventoryID(chargerInventoryId);\n          chargerInventoryDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          chargerInventoryDeletedAlert(responseData.status,responseData.msg)\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updateChargerInventory = (chargerInventoryId) => {\n    history.push({\n      pathname:adminRoot+'/inventory/updatecharger_inventory',\n      state:{charger_inventory_id:chargerInventoryId}\n    });\n  }\n  //pagination methods\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const chargerInventoryDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const chargerInventoryAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (chargerInventoryId) => {\n    setChargerInventoryToDeleteId(chargerInventoryId)\n    setModalVisible(!modalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getChargerInventoryListAPICall();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Charger Inventory</span>\n          <a href=\"addcharger\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                    <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                      {alertMsg}\n                    </Alert>\n                </CardSubtitle>  \n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>CID</th>\n                      <th>QR Code</th>\n                      <th>Owned By</th>\n                      <th>Make</th>\n                      <th>Model Name</th>\n                      <th>Hub</th>\n                      <th>No. of slots</th>\n                      <th>Dimensions</th>\n                      <th>Remark 1</th>\n                      <th>Remark 2</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"12\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                        chargerInventoryList.length > 0 ?\n                        chargerInventoryList.map((item,index)=>\n                        <tr key={item.id}>\n                          <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                          <td>{item.charger_id}</td>\n                          <td>{item.qr_code}</td>\n                          <td>{item.owner_name}</td>\n                          <td>{item.make}</td>\n                          <td>{item.model}</td>\n                          <td>{item.station_name}</td>\n                          <td>{item.no_of_slot}</td>\n                          <td>{item.dimension}</td>\n                          <td>{item.remark_1}</td>\n                          <td>{item.remark_2}</td>\n                          <td>\n                            <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateChargerInventory(item.id)}}>\n                                <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                            </a>\n                            <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                                <i className=\"glyph-icon simple-icon-trash\"></i>\n                            </Button>                        \n                          </td>\n                        </tr>\n                      ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"12\">Data  Not  Found</td>\n                        </tr>\n                    }          \n                  </tbody>\n                </Table>\n                <Modal\n                  isOpen={modalVisible}\n                  toggle={toggleModal} >\n                  <ModalHeader className=\"text-center\">\n                    Are you sure you would like to delete this inventory?\n                    <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteChargerInventoryAPICall(chargerInventoryToDeleteId)}>\n                      Delete Inventory \n                    </Button>{' '}\n                    <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                      Cancel\n                    </Button>\n                  </ModalHeader>\n                </Modal>\n              </CardBody>\n            </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default Charger;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row,FormGroup, Card,CardSubtitle, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getOwnersAPI,getChargerAPI,getStationsAPI,addChargerInventoryAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, Field, FieldArray, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nconst AddCharger = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //dropdown states\n  const [stationNameData,setStationNameData] = useState([]);\n  const [ownerNameData,setOwnerNameData] = useState([]);\n  const [chargerMasterData,setChargerMasterData] = useState([]);\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n    GetOwnerNamesAPICall();\n    GetChargerMasterAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetOwnerNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getOwnersAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setOwnerNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetChargerMasterAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getChargerAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setChargerMasterData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const addChargerInventoryAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addChargerInventoryAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/inventory/charger',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          addChargerInventoryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const ChargerInventoryDetailsValidationSchema = yup.object().shape({\n    charger_id:yup.string()\n        .required(\"Charger ID is required\"),\n    hub_id:yup.string()\n        .required(\"Station is required\"),\n    qr_code:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"QR Code capacity is required\"),\n    own_by:yup.string()\n        .required(\"Owned By is required\"),\n    charger_master_id:yup.string()\n        .required(\"Charger is required\"),\n    numberOfSlots: yup.string()\n            .required('Number of slots is required'),\n    slots: yup.array().of(\n      yup.object().shape({\n            // charger_id: yup.string()\n            //     .required('Charger Id is required'),\n            slot_id: yup.string()\n                .required('Slot Id is required')\n        })\n    )\n  });\n\n  const initialValues = {\n    charger_id:\"\",\n    hub_id:\"\",\n    qr_code:\"\",\n    charger_master_id:\"\",\n    own_by:\"\",\n    remark_1:\"\",\n    remark_2:\"\",\n    numberOfSlots: '',\n    slots: []\n  };\n\n  function onChangeSlots(e, field, values, setValues) {\n    // update dynamic form\n    const slots = [...values.slots];\n    const numberOfSlots = e.target.value || 0;\n    const previousNumber = parseInt(field.value || '0');\n    if (previousNumber < numberOfSlots) {\n        for (let i = previousNumber; i < numberOfSlots; i++) {\n            slots.push({ charger_id: '', slot_id: '' });\n        }\n    } else {\n        for (let i = previousNumber; i >= numberOfSlots; i--) {\n            slots.splice(i, 1);\n        }\n    }\n    setValues({ ...values, slots });\n\n    // call formik onChange method\n    field.onChange(e);\n  }\n\n  //helper\n  //Alert helper methods\n  const addChargerInventoryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  function onSubmit(fields) {\n      // display form field values on success\n      const params = {\n        charger_id:fields.charger_id,\n        qr_code:fields.qr_code,\n        hub_id:fields.hub_id,\n        own_by:fields.own_by,\n        charger_master_id:fields.charger_master_id,\n        no_of_slot:fields.numberOfSlots,\n        slots_data:fields.slots,\n        remark_1:fields.remark_1,\n        remark_2:fields.remark_2,\n      }\n      addChargerInventoryAPICall(params);\n  }\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Charger Inventory</span>\n            <a href=\"charger\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Charger Inventory List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={ChargerInventoryDetailsValidationSchema} \n        onSubmit={onSubmit}>\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors,setValues})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody>\n                        <CardSubtitle className=\"mb-3\">\n                          <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                            {alertMsg}\n                          </Alert>\n                        </CardSubtitle> \n                          <Row>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Charger Id\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Charger Id\"\n                                  name=\"charger_id\"\n                                  value={values.charger_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.charger_id && touched.charger_id ? \"input-error\":null}\n                                />\n                                {errors.charger_id && touched.charger_id &&(\n                                  <span className=\"error\">{errors.charger_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                QR Code\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"QR Code \"\n                                  value={values.qr_code}\n                                  name=\"qr_code\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.qr_code && touched.qr_code ? \"input-error\":null}\n                                />\n                                {errors.qr_code && touched.qr_code &&(\n                                  <span className=\"error\">{errors.qr_code}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Station\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"hub_id\"\n                                  placeholder=\"Station\"\n                                  value={values.hub_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Station</option>\n                                  {stationNameData.map((item,index)=>\n                                    <option value={item.hub_master_id} key={index}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.hub_id && touched.hub_id &&(\n                                  <span className=\"error\">{errors.hub_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Owned By\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"own_by\"\n                                  value={values.own_by}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Owned By</option>\n                                  {ownerNameData.map((item,index)=>\n                                    <option value={item.owner_master_id} key={index}>{item.name}</option>\n                                    )}\n                                </Input>\n                                {errors.own_by && touched.own_by &&(\n                                  <span className=\"error\">{errors.own_by}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Charger\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"charger_master_id\"\n                                  value={values.charger_master_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Charger</option>\n                                  {chargerMasterData.map((item,index)=>\n                                    <option value={item.id} key={index}>{item.make+\"-\"+item.model+\"-\"+item.dimension}</option>\n                                    )}\n                                </Input>\n                                {errors.charger_master_id && touched.charger_master_id &&(\n                                  <span className=\"error\">{errors.charger_master_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Number of Slots\n                                </Label>\n                                <Field name=\"numberOfSlots\">\n                                    {({ field }) => (\n                                        <input type=\"number\" {...field} className={'form-control' + (errors.numberOfSlots && touched.numberOfSlots ? ' is-invalid' : '')} onChange={e => onChangeSlots(e, field, values, setValues)} />\n                                    )}\n                                    </Field>\n                                {errors.numberOfSlots && touched.numberOfSlots &&(\n                                  <span className=\"error\">{errors.numberOfSlots}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={12}>\n                            <FieldArray name=\"slots\">\n                              {() => (values.slots.map((ticket, i) => {\n                                  const ticketErrors = errors.slots?.length && errors.slots[i] || {};\n                                  const ticketTouched = touched.slots?.length && touched.slots[i] || {};\n                                  return (\n                                      <div key={i} className=\"list-group list-group-flush\">\n                                          <div className=\"list-group-item p-0\">\n                                              <div className=\"form-row\">\n                                                  <div className=\"form-group col-1 mt-3\">\n                                                    <h5 className=\"card-title\">Slot#{i + 1}</h5>\n                                                  </div>\n                                                  {/* <div className=\"form-group col-5\">\n                                                      <label>Charger ID</label>\n                                                      <Field name={`slots.${i}.charger_id`} type=\"text\" className={'form-control' + (ticketErrors.charger_id && ticketTouched.charger_id ? ' is-invalid' : '' )} />\n                                                      <ErrorMessage name={`slots.${i}.charger_id`} component=\"div\" className=\"invalid-feedback\" />\n                                                  </div> */}\n                                                  <div className=\"form-group col-6\">\n                                                      <label>Slot ID</label>\n                                                      <Field name={`slots.${i}.slot_id`} type=\"text\" className={'form-control' + (ticketErrors.slot_id && ticketTouched.slot_id ? ' is-invalid' : '' )} />\n                                                      <ErrorMessage name={`slots.${i}.slot_id`} component=\"div\" className=\"invalid-feedback\" />\n                                                  </div>\n                                              </div>\n                                          </div>\n                                      </div>\n                                  );\n                              }))}\n                          </FieldArray>\n                            </Colxx>\n                           \n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark 1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark 1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark 2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark 2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AddCharger;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row,FormGroup, Card,CardSubtitle, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getOwnersAPI,getChargerAPI,getStationsAPI,getChargerInventoryByIdAPI,updateChargerInventoryAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport { Formik, Field, FieldArray, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateChargerInventory = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //dropdown states\n  const [stationNameData,setStationNameData] = useState([]);\n  const [ownerNameData,setOwnerNameData] = useState([]);\n  const [chargerMasterData,setChargerMasterData] = useState([]);\n  //charger data default states\n  const [chargerId,setChargerId] = useState(\"\");\n  const [hubId,setHubId] = useState(\"\");\n  const [qrCode,setQrCode] = useState(\"\");\n  const [chargerMasterId,setChargerMasterId] = useState(\"\");\n  const [noOfSlot,setNoOfSlot] = useState(\"\");\n  const [slotData,setSlotData] = useState([]);\n  const [ownBy,setOwnBy] = useState(\"\");\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n    GetOwnerNamesAPICall();\n    GetChargerMasterAPICall();\n    getChargerInventoryByIdAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetOwnerNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getOwnersAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setOwnerNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetChargerMasterAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getChargerAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setChargerMasterData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n    const getChargerInventoryByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getChargerInventoryByIdAPI,\n        {\n            charger_inventory_id:location.state.charger_inventory_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n            setChargerId(responseData.data.charger_id);\n            setQrCode(responseData.data.qr_code);\n            setHubId(responseData.data.hub_id);\n            setOwnBy(responseData.data.own_by);\n            setChargerMasterId(responseData.data.charger_master_id);\n            setNoOfSlot(responseData.data.no_of_slot);\n            setSlotData(responseData.data.slots);\n            setRemark1(responseData.data.remark_1);\n            setRemark2(responseData.data.remark_2);\n            }else{\n            console.log(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n  const updateChargerInventoryAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(updateChargerInventoryAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/inventory/charger',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          updateChargerInventoryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const ChargerInventoryDetailsValidationSchema = yup.object().shape({\n    charger_id:yup.string()\n        .required(\"Charger ID is required\"),\n    hub_id:yup.string()\n        .required(\"Station is required\"),\n    qr_code:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"QR Code capacity is required\"),\n    own_by:yup.string()\n        .required(\"Owned By is required\"),\n    charger_master_id:yup.string()\n        .required(\"Owned By is required\"),\n    numberOfSlots: yup.string()\n        .required('Number of slots is required'),\n    slots: yup.array().of(\n      yup.object().shape({\n            // charger_id: yup.string()\n            //     .required('Charger Id is required'),\n            slot_id: yup.string()\n                .required('Slot Id is required')\n        })\n    )\n  });\n\n  //helper\n  //Alert helper methods\n  const updateChargerInventoryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  function onChangeSlots(e, field, values, setValues) {\n    // update dynamic form\n    const slots = [...values.slots];\n    const numberOfSlots = e.target.value || 0;\n    const previousNumber = parseInt(field.value || '0');\n    if (previousNumber < numberOfSlots) {\n        for (let i = previousNumber; i < numberOfSlots; i++) {\n            slots.push({ charger_id: '', slot_id: '' });\n        }\n    } else {\n        for (let i = previousNumber; i >= numberOfSlots; i--) {\n            slots.splice(i, 1);\n        }\n    }\n    setValues({ ...values, slots });\n\n    // call formik onChange method\n    field.onChange(e);\n  }\n  function onSubmit(fields) {\n      // display form field values on success\n      const params = {\n        charger_inventory_id:location.state.charger_inventory_id,\n        charger_id:fields.charger_id,\n        qr_code:fields.qr_code,\n        hub_id:fields.hub_id,\n        own_by:fields.own_by,\n        charger_master_id:fields.charger_master_id,\n        no_of_slot:fields.numberOfSlots,\n        slots_data:fields.slots,\n        remark_1:fields.remark_1,\n        remark_2:fields.remark_2,\n      }\n      updateChargerInventoryAPICall(params);\n  }\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Charger Inventory</span>\n            <a href=\"charger\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Charger Inventory List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            charger_id:chargerId,\n            hub_id:hubId,\n            qr_code:qrCode,\n            charger_master_id:chargerMasterId,\n            own_by:ownBy,\n            remark_1:remark1,\n            remark_2:remark2,\n            numberOfSlots: noOfSlot,\n            slots: slotData\n        }}\n        validationSchema={ChargerInventoryDetailsValidationSchema} \n        onSubmit={onSubmit} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors,setValues})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody>\n                        <CardSubtitle className=\"mb-3\">\n                          <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                            {alertMsg}\n                          </Alert>\n                        </CardSubtitle> \n                          <Row>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Charger Id\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Charger Id\"\n                                  name=\"charger_id\"\n                                  value={values.charger_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.charger_id && touched.charger_id ? \"input-error\":null}\n                                />\n                                {errors.charger_id && touched.charger_id &&(\n                                  <span className=\"error\">{errors.charger_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                QR Code\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"QR Code \"\n                                  value={values.qr_code}\n                                  name=\"qr_code\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.qr_code && touched.qr_code ? \"input-error\":null}\n                                />\n                                {errors.qr_code && touched.qr_code &&(\n                                  <span className=\"error\">{errors.qr_code}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Station\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"hub_id\"\n                                  placeholder=\"Station\"\n                                  value={values.hub_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Station</option>\n                                  {stationNameData.map((item)=>\n                                    <option value={item.hub_master_id} key={item.hub_master_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.hub_id && touched.hub_id &&(\n                                  <span className=\"error\">{errors.hub_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Owned By\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"own_by\"\n                                  value={values.own_by}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Owned By</option>\n                                  {ownerNameData.map(item=>\n                                    <option value={item.owner_master_id} key={item.owner_master_id}>{item.name}</option>\n                                    )}\n                                </Input>\n                                {errors.own_by && touched.own_by &&(\n                                  <span className=\"error\">{errors.own_by}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Charger\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"charger_master_id\"\n                                  value={values.charger_master_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Charger</option>\n                                  {chargerMasterData.map(item=>\n                                    <option value={item.id} key={item.id}>{item.make+\"-\"+item.model+\"-\"+item.dimension}</option>\n                                    )}\n                                </Input>\n                                {errors.charger_master_id && touched.charger_master_id &&(\n                                  <span className=\"error\">{errors.charger_master_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Number of Slots\n                                </Label>\n                                <Field name=\"numberOfSlots\">\n                                    {({ field }) => (\n                                        <input type=\"number\" {...field} className={'form-control' + (errors.numberOfSlots && touched.numberOfSlots ? ' is-invalid' : '')} onChange={e => onChangeSlots(e, field, values, setValues)} />                                            \n                                    )}\n                                    </Field>\n                                {errors.numberOfSlots && touched.numberOfSlots &&(\n                                  <span className=\"error\">{errors.numberOfSlots}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={12}>\n                            <FieldArray name=\"slots\">\n                              {() => (values.slots.map((ticket, i) => {\n                                  const ticketErrors = errors.slots?.length && errors.slots[i] || {};\n                                  const ticketTouched = touched.slots?.length && touched.slots[i] || {};\n                                  return (\n                                      <div key={i} className=\"list-group list-group-flush\">\n                                          <div className=\"list-group-item p-0\">\n                                              <div className=\"form-row\">\n                                                  <div className=\"form-group col-1 mt-3\">\n                                                    <h5 className=\"card-title\">Slot#{i + 1}</h5>\n                                                  </div>\n                                                  {/* <div className=\"form-group col-5\">\n                                                      <label>Charger ID</label>\n                                                      <Field name={`slots.${i}.charger_id`} type=\"text\" className={'form-control' + (ticketErrors.charger_id && ticketTouched.charger_id ? ' is-invalid' : '' )} />\n                                                      <ErrorMessage name={`slots.${i}.charger_id`} component=\"div\" className=\"invalid-feedback\" />\n                                                  </div> */}\n                                                  <div className=\"form-group col-6\">\n                                                      <label>Slot ID</label>\n                                                      <Field name={`slots.${i}.slot_id`} type=\"text\" className={'form-control' + (ticketErrors.slot_id && ticketTouched.slot_id ? ' is-invalid' : '' )} />\n                                                      <ErrorMessage name={`slots.${i}.slot_id`} component=\"div\" className=\"invalid-feedback\" />\n                                                  </div>\n                                              </div>\n                                          </div>\n                                      </div>\n                                  );\n                              }))}\n                          </FieldArray>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark 1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark 1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark 2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark 2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default UpdateChargerInventory;\n","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader, \n  Input,InputGroup\n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getEvInventoryListAPI,deleteEvInventoryAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\nconst EvInventoryMaster = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //EV list\n  const [evInventoryList,setEvInventoryList] = useState([]);\n  const [evInventoryID,setEvInventoryID] = useState(\"\");\n  const [evInventoryToDeleteId,setEvInventoryToDeleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getEvInventoryListAPICall();\n    evInventoryAlert();\n  },[evInventoryID,pageCount])\n\n  // //API calls\n  const getEvInventoryListAPICall = async() => {\n    setEvInventoryList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getEvInventoryListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setEvInventoryList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteEvInventoryAPICall = async(evInventoryId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteEvInventoryAPI,\n      {ev_inventory_id:evInventoryId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setEvInventoryID(evInventoryId);\n          evInventoryDeletedAlert(responseData.status,responseData.msg);\n        }else{\n          evInventoryDeletedAlert(responseData.status,responseData.msg);        \n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updateEvInventory = (evInventoryId) => {\n    history.push({\n      pathname:adminRoot+'/inventory/updateEv_inventory',\n      state:{ev_inventory_id:evInventoryId}\n    });\n  }\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const evInventoryDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const evInventoryAlert = () =>{\n    if (location.state === null || location.state===undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (evInventoryId) => {\n    setEvInventoryToDeleteId(evInventoryId)\n    setModalVisible(!modalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getEvInventoryListAPICall();\n  }\n\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Electrical Vehicle</span>\n            <a href=\"addEv_inventory\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                  <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                    {alertMsg}\n                  </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>QR Code</th>\n                    <th>Capacity</th>\n                    <th>Model No</th>\n                    <th>Fleet Operator</th>\n                    <th>Swapping Station</th>\n                    <th>EV Type</th>\n                    <th>Vehicle Id</th>\n                    <th>Vehicle Vin</th>\n                    <th>Reg no</th>\n                    <th>Remark1</th>\n                    <th>Remark2</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"13\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                      evInventoryList.length > 0 ?\n                      evInventoryList.map((item,index)=>\n                            <tr key={item.ev_inventory_id}>\n                            <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                            <td>{item.e_qr_code}</td>\n                            <td>{item.battery_capacity}</td>\n                            <td>{item.vehicle_model}</td>\n                            <td>{item.fleet_operator_name}</td>\n                            <td>{item.station_name}</td>\n                            <td>{item.vehicle_type}</td>\n                            <td>{item.vechicle_id}</td>\n                            <td>{item.vehicle_vin}</td>\n                            <td>{item.registration_no}</td>\n                            <td>{item.remark_1}</td>\n                            <td>{item.remark_2}</td>\n                            <td>\n                              <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateEvInventory(item.ev_inventory_id)}}>\n                                  <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                              </a>\n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.ev_inventory_id)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>                        \n                            </td>\n                          </tr>\n                    ):<tr>\n                        <td className=\"text-center text-danger\" colSpan=\"13\">Data  Not  Found</td>\n                    </tr>\n                  }       \n                </tbody>\n              </Table>\n              <Modal\n                  isOpen={modalVisible}\n                  toggle={toggleModal} >\n                  <ModalHeader className=\"text-center\">\n                    Are you sure you would like to delete this inventory?\n                    <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteEvInventoryAPICall(evInventoryToDeleteId)}>\n                      Delete Inventory \n                    </Button>{' '}\n                    <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                      Cancel\n                    </Button>\n                  </ModalHeader>\n                </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default EvInventoryMaster;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row, FormGroup, Card, CardBody,CardSubtitle,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getStationsAPI,getEvAPI,addEvInventoryAPI,adminRoot,getFleetOperatorAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst AddEvInventory = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //dropdown states\n  const [fleetOpNames,setFleetOpNames] = useState([]); \n  const [stationNameData,setStationNameData] = useState([]);\n  const [evData,setEvData] = useState([]);\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n    GetFleetOperatorAPICall();\n    GetEvDataAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetFleetOperatorAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n        if (responseData.status === 1) {\n         setFleetOpNames(responseData.data);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetEvDataAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getEvAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setEvData(responseData.data);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const addEvInventoryAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addEvInventoryAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/inventory/evInventory',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          addEvInventoryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const EvInventoryDetailsValidationSchema = yup.object().shape({\n    e_qr_code:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"QR Code is required\"),\n    fleet_owner_id:yup.string()\n        .required(\"Fleet Owner is required\"),\n    hub_id:yup.string()\n        .required(\"Station is required\"),\n    ev_master_id:yup.string()\n        .required(\"EV details is required\"),\n    registration_no:yup.string()\n        .required(\"Registration No is required\"),\n    vechicle_id:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"Vehicle Id is required\"),\n    vehicle_vin:yup.string()\n        .required(\"Vehicle Vin is required\"),    \n  });\n\n  const initialValues = {\n    e_qr_code:\"\",\n    fleet_owner_id:\"\",\n    hub_id:\"\",\n    ev_master_id:\"\",\n    registration_no:\"\",\n    vechicle_id:\"\",\n    vehicle_vin:\"\",\n    remark_1:\"\",\n    remark_2:\"\",\n  };\n\n  //helper\n  //Alert helper methods\n  const addEvInventoryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add EV</span>\n            <a href=\"evInventory\" className=\"btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> EV List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={EvInventoryDetailsValidationSchema} \n        onSubmit={(values)=>{\n          addEvInventoryAPICall(values);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody>\n                        <CardSubtitle className=\"mb-3\">\n                          <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                            {alertMsg}\n                          </Alert>\n                        </CardSubtitle> \n                        <Row>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                                QR Code\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"QR Code\"\n                                name=\"e_qr_code\"\n                                value={values.e_qr_code}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                className={errors.e_qr_code && touched.e_qr_code ? \"input-error\":null}\n                              />\n                              {errors.e_qr_code && touched.e_qr_code &&(\n                                <span className=\"error\">{errors.e_qr_code}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                              Fleet Owner\n                              </Label>\n                              <Input \n                                type=\"select\"\n                                name=\"fleet_owner_id\"\n                                value={values.fleet_owner_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              >\n                                <option key=\"\" value=\"\">All Fleet</option>\n                                {fleetOpNames.map((item,i)=>\n                                  <option key={i} value={item.fleet_operator_id}>{item.name}</option>\n                                )}\n                              </Input>\n                              {errors.fleet_owner_id && touched.fleet_owner_id &&(\n                                <span className=\"error\">{errors.fleet_owner_id}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={4}>\n                            <FormGroup>\n                              <Label>\n                              Vehicle Id\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Vehicle Id\"\n                                name=\"vechicle_id\"\n                                value={values.vechicle_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.vechicle_id && touched.vechicle_id &&(\n                                <span className=\"error\">{errors.vechicle_id}</span>\n                              )}                        \n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={4}>\n                            <FormGroup>\n                              <Label>\n                              Vehicle Vin\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Vehicle Vin\"\n                                name=\"vehicle_vin\"\n                                value={values.vehicle_vin}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.vehicle_vin && touched.vehicle_vin &&(\n                                <span className=\"error\">{errors.vehicle_vin}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={4}>\n                            <FormGroup>\n                              <Label>\n                                Registration no\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Registration no\"\n                                name=\"registration_no\"\n                                value={values.registration_no}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.registration_no && touched.registration_no &&(\n                                <span className=\"error\">{errors.registration_no}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                              Swapping Station\n                              </Label>\n                              <Input\n                                type=\"select\"\n                                name=\"hub_id\"\n                                value={values.hub_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              >\n                                <option>Select Swapping Station</option>\n                                {stationNameData.map((item,i)=>\n                                  <option value={item.hub_master_id} key={i}>{item.name}</option>\n                                )}\n                              </Input>\n                              {errors.hub_id && touched.hub_id &&(\n                                <span className=\"error\">{errors.hub_id}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                              EV\n                              </Label>\n                              <Input\n                                type=\"select\"\n                                name=\"ev_master_id\"\n                                value={values.ev_master_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              >\n                                <option>Select EV details</option>\n                                {evData.map((item,i)=>\n                                  <option value={item.ev_master_id} key={i}>{item.vehicle_model+\"-\"+item.vehicle_type+\"-\"+item.battery_capacity}</option>\n                                )}\n                              </Input>\n                              {errors.ev_master_id && touched.ev_master_id &&(\n                                <span className=\"error\">{errors.ev_master_id}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                              Remark 1\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Remark 1\"\n                                name=\"remark_1\"\n                                value={values.remark_1}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.remark_1 && touched.remark_1 &&(\n                                <span className=\"error\">{errors.remark_1}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                                Remark 2\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Remark 2\"\n                                name=\"remark_2\"\n                                value={values.remark_2}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.remark_2 && touched.remark_2 &&(\n                                <span className=\"error\">{errors.remark_2}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                        </Row>\n                        <Row>\n                          <Colxx md=\"12\" className=\"text-center\">\n                            <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                <b>Add</b>\n                            </Button>\n                            <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                <b>Cancel</b>\n                            </Button>\n                          </Colxx>\n                        </Row>\n                    </CardBody>\n                  </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AddEvInventory;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row, FormGroup, Card, CardBody,CardSubtitle,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getStationsAPI,getEvAPI,getEvInventoryByIdAPI,updateEvInventoryAPI,adminRoot,getFleetOperatorAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateEvInventory = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //dropdown states\n  const [fleetOpNames,setFleetOpNames] = useState([]); \n  const [stationNameData,setStationNameData] = useState([]);\n  const [evData,setEvData] = useState([]);\n  //EV data default states\n  const [eQrCode,setEQrCode] = useState(\"\");\n  const [fleetOwner,setFleetOwner] = useState(\"\");\n  const [hubId,setHubId] = useState(\"\");\n  const [evMasterId,setEvMasterId] = useState(\"\");\n  const [registrationNo,setRegistrationNo] = useState(\"\");\n  const [vechicleId,setVechicleId] = useState(\"\");\n  const [vechicleVin,setVechicleVin] = useState(\"\");\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    GetFleetOperatorAPICall();\n    GetStationNamesAPICall();\n    GetEvDataAPICall();\n    getEvInventoryByIdAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetFleetOperatorAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n        if (responseData.status === 1) {\n         setFleetOpNames(responseData.data);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetEvDataAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getEvAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setEvData(responseData.data);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getEvInventoryByIdAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getEvInventoryByIdAPI,\n    {\n        ev_inventory_id:location.state.ev_inventory_id\n    },\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n        setEQrCode(responseData.data.e_qr_code);\n        setFleetOwner(responseData.data.fleet_owner_id);\n        setHubId(responseData.data.hub_id);\n        setEvMasterId(responseData.data.ev_master_id);\n        setVechicleId(responseData.data.vechicle_id);\n        setVechicleVin(responseData.data.vehicle_vin);\n        setRegistrationNo(responseData.data.registration_no);\n        setRemark1(responseData.data.remark_1);\n        setRemark2(responseData.data.remark_2);\n        }else{\n        console.log(responseData.msg);\n        }\n    }).catch(error=>{\n        console.log(error);\n    })\n}\n  const updateEvInventoryAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(updateEvInventoryAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/inventory/evInventory',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n            setButtonDisabled(false);\n            updateEvInventoryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const EvInventoryDetailsValidationSchema = yup.object().shape({\n    e_qr_code:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"QR Code is required\"),\n    fleet_owner_id:yup.string()\n        .required(\"Fleet Owner is required\"),\n    hub_id:yup.string()\n        .required(\"Station is required\"),\n    ev_master_id:yup.string()\n        .required(\"EV details is required\"),\n    registration_no:yup.string()\n        .required(\"Registration No is required\"),\n    vechicle_id:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"Vehicle Id is required\"),\n    vehicle_vin:yup.string()\n        .required(\"Vehicle Vin is required\"),    \n  });\n\n  //helper\n  //Alert helper methods\n  const updateEvInventoryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update EV</span>\n            <a href=\"evInventory\" className=\"btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> EV List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            e_qr_code:eQrCode,\n            fleet_owner_id:fleetOwner,\n            hub_id:hubId,\n            ev_master_id:evMasterId,\n            registration_no:registrationNo,\n            vechicle_id:vechicleId,\n            vehicle_vin:vechicleVin,\n            remark_1:remark1,\n            remark_2:remark2,\n        }}\n        validationSchema={EvInventoryDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params={\n                ev_inventory_id:location.state.ev_inventory_id,\n                e_qr_code:values.e_qr_code,\n                fleet_owner_id:values.fleet_owner_id,\n                hub_id:values.hub_id,\n                ev_master_id:values.ev_master_id,\n                registration_no:values.registration_no,\n                vechicle_id:values.vechicle_id,\n                vehicle_vin:values.vehicle_vin,\n                remark_1:values.remark_1,\n                remark_2:values.remark_2,\n            }\n          updateEvInventoryAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody>\n                        <CardSubtitle className=\"mb-3\">\n                          <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                            {alertMsg}\n                          </Alert>\n                        </CardSubtitle> \n                        <Row>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                                QR Code\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"QR Code\"\n                                name=\"e_qr_code\"\n                                value={values.e_qr_code}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                className={errors.e_qr_code && touched.e_qr_code ? \"input-error\":null}\n                              />\n                              {errors.e_qr_code && touched.e_qr_code &&(\n                                <span className=\"error\">{errors.e_qr_code}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                              Fleet Owner\n                              </Label>\n                              <Input \n                                type=\"select\"\n                                name=\"fleet_owner_id\"\n                                value={values.fleet_owner_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              >\n                                <option key=\"\" value=\"\">All Fleet</option>\n                                {fleetOpNames.map(item=>\n                                  <option key={item.fleet_operator_id} value={item.fleet_operator_id}>{item.name}</option>\n                                )}\n                              </Input>\n                              {errors.fleet_owner_id && touched.fleet_owner_id &&(\n                                <span className=\"error\">{errors.fleet_owner_id}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={4}>\n                            <FormGroup>\n                              <Label>\n                              Vehicle Id\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Vehicle Id\"\n                                name=\"vechicle_id\"\n                                value={values.vechicle_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.vechicle_id && touched.vechicle_id &&(\n                                <span className=\"error\">{errors.vechicle_id}</span>\n                              )}                        \n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={4}>\n                            <FormGroup>\n                              <Label>\n                              Vehicle Vin\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Vehicle Vin\"\n                                name=\"vehicle_vin\"\n                                value={values.vehicle_vin}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.vehicle_vin && touched.vehicle_vin &&(\n                                <span className=\"error\">{errors.vehicle_vin}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={4}>\n                            <FormGroup>\n                              <Label>\n                                Registration no\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Registration no\"\n                                name=\"registration_no\"\n                                value={values.registration_no}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.registration_no && touched.registration_no &&(\n                                <span className=\"error\">{errors.registration_no}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                              Swapping Station\n                              </Label>\n                              <Input\n                                type=\"select\"\n                                name=\"hub_id\"\n                                value={values.hub_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              >\n                                <option>Select Swapping Station</option>\n                                {stationNameData.map((item)=>\n                                  <option value={item.hub_master_id} key={item.hub_master_id}>{item.name}</option>\n                                )}\n                              </Input>\n                              {errors.hub_id && touched.hub_id &&(\n                                <span className=\"error\">{errors.hub_id}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                              EV\n                              </Label>\n                              <Input\n                                type=\"select\"\n                                name=\"ev_master_id\"\n                                value={values.ev_master_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              >\n                                <option>Select EV details</option>\n                                {evData.map((item)=>\n                                  <option value={item.ev_master_id} key={item.ev_master_id}>{item.vehicle_model+\"-\"+item.vehicle_type+\"-\"+item.battery_capacity}</option>\n                                )}\n                              </Input>\n                              {errors.ev_master_id && touched.ev_master_id &&(\n                                <span className=\"error\">{errors.ev_master_id}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                              Remark 1\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Remark 1\"\n                                name=\"remark_1\"\n                                value={values.remark_1}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.remark_1 && touched.remark_1 &&(\n                                <span className=\"error\">{errors.remark_1}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                                Remark 2\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Remark 2\"\n                                name=\"remark_2\"\n                                value={values.remark_2}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.remark_2 && touched.remark_2 &&(\n                                <span className=\"error\">{errors.remark_2}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                        </Row>\n                        <Row>\n                          <Colxx md=\"12\" className=\"text-center\">\n                            <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                <b>Update</b>\n                            </Button>\n                            <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                <b>Cancel</b>\n                            </Button>\n                          </Colxx>\n                        </Row>\n                    </CardBody>\n                  </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default UpdateEvInventory;\n","import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody,  \n  FormGroup, Label,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Input, Table,Button\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,getStationsByCityAPI,bsnReportAPI,downloadBsnReportAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\n\nconst BatterySwappingNetworkReport = ({}) => {\n  //date states\n  const [fromDate,setFromDate] = useState(null);\n  const [toDate,setToDate] = useState(null);\n  //station List\n  const [stationNames,setStationNames] = useState([]);\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(false);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [report,setReport] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n  const [stationId,setStationId] = useState(\"\");\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n  },[]);\n\n  useEffect(()=>{\n    GetStationNamesAPICall(countryId,stateId,cityId);\n  },[countryId,stateId,cityId])\n\n  //API calls\n  const GetStationNamesAPICall = async(country,state,city) => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsByCityAPI+\"country_id=\"+country+\"&state_id=\"+state+\"&city_id=\"+city,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNames(responseData.data)\n      }else{\n        setStationNames([]);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(\"coutries\",responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          setStateList([]);\n          setCityList([]);\n          setStationNames([]);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          setCityList([]);\n          setStationNames([]);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getBSNReportAPICall = async() => {\n    setButtonDisabled(true);\n    setReport([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    // let tempFromDate,tempToDate;\n    // if (fromDate == null | fromDate ==\"\") {\n    //   tempFromDate = fromDate;\n    // }else{\n    //   tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear();\n    // }\n    // if (toDate == null) {\n    //   tempToDate = toDate;\n    // }else{\n    //   tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear();\n    // }\n    const params = {\n      country_id:countryId,\n      state_id:stateId,\n      city_id:cityId,\n      hub_id:stationId,\n      // from_date:tempFromDate,\n      // to_date:tempToDate,\n      page:pageCount\n    }\n    \n    await axios.post(bsnReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page);\n          setReport(responseData.data.data);\n        }else{\n            console.log(responseData.msg);\n        }\n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n  const downloadBSNReportAPICall = async() => {\n    setButtonDisabled(true);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    const params = {\n      country_id:countryId,\n      state_id:stateId,\n      city_id:cityId,\n      hub_id:stationId,\n    }\n    \n    await axios.post(downloadBsnReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          const link = document.createElement('a');\n          link.href = responseData.data.file;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }else{\n          alert(responseData.msg);\n        }    \n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    setStateId(\"\");\n    setCityId(\"\");\n    setStationId(\"\");\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    setCityId(\"\");\n    setStationId(\"\");\n    getCityNamesAPICall(state);\n  }\n  //handle city select\n  const handleCitySelect = (city) => {\n    setCityId(city);\n    setStationId(\"\");\n  }\n  //pagination method\n  const handlePageChange = (index) =>{\n    setPageCount(index+1)\n    getBSNReportAPICall();\n  }\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={()=>handlePageChange(i)}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Battery Swapping Network Report</span>\n        <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n          <Colxx xxs=\"12\" className=\"mb-4\">\n              <Card>\n                  <CardBody>\n                    <Row>\n                      <Colxx lg={2} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            Country\n                          </Label>\n                          <Input \n                          type=\"select\"\n                          name=\"country_id\"\n                          value={countryId}\n                          onChange={e=>handleCountrySelect(e.target.value)}\n                          >\n                            <option key=\"\" value=\"\">All Countries</option>\n                            {countryList.map((item,index)=>\n                              <option key={index} value={item.id}>{item.country_name}</option>\n                            )}\n                          </Input>\n                        </FormGroup>\n                      </Colxx>\n                      <Colxx lg={2} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            State\n                          </Label>\n                          <Input \n                          type=\"select\"\n                          name=\"state_id\"\n                          value={stateId}\n                          onChange={e=>handleStateSelect(e.target.value)}\n                          >\n                            <option key=\"\" value=\"\">All States</option>\n                            {stateList.map((item,index)=>\n                              <option key={index} value={item.id}>{item.state_name}</option>\n                            )}\n                          </Input>\n                        </FormGroup>\n                      </Colxx>\n                      <Colxx lg={2} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            City\n                          </Label>\n                          <Input \n                          type=\"select\"\n                          name=\"city_id\"\n                          value={cityId}\n                          onChange={e=>handleCitySelect(e.target.value)}\n                          >\n                            <option key=\"\" value=\"\">All Cities</option>\n                            {cityList.map((item,index)=>\n                              <option key={index} value={item.id}>{item.city_name}</option>\n                            )}\n                          </Input>\n                        </FormGroup>\n                      </Colxx>\n                      <Colxx lg={2} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            Station\n                          </Label>\n                          <Input \n                          type=\"select\"\n                          name=\"station\"\n                          value={stationId}\n                          onChange={e=> setStationId(e.target.value)}>\n                            <option key=\"\" value=\"\">All Station</option>\n                            {stationNames.map((item,index)=>\n                              <option key={index} value={item.hub_master_id}>{item.name}</option>\n                            )}\n                          </Input>\n                        </FormGroup>\n                      </Colxx>\n                      {/* <Colxx lg={3} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            From Date\n                          </Label>\n                          <DatePicker\n                          placeholderText=\"From Date\"\n                          selected={fromDate}\n                          onChange={date=>setFromDate(date)}\n                          dateFormat=\"dd/MM/yyyy\"\n                          />\n                        </FormGroup>\n                      </Colxx>\n                      <Colxx lg={3} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            To Date\n                          </Label>\n                          <DatePicker\n                          placeholderText=\"To Date\"\n                          selected={toDate}\n                          onChange={date=>setToDate(date)}\n                          dateFormat=\"dd/MM/yyyy\"\n                          />\n                        </FormGroup>\n                      </Colxx> */}\n                      <Colxx  lg={2} sm={12}>\n                        <Button color=\"primary\" className=\"default mt-4 custom_btn\" onClick={() =>{setPageCount(1);getBSNReportAPICall();}} disabled={buttonDisabled}>\n                          <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Generate Report</b>\n                        </Button>\n                      </Colxx>\n                      <Colxx  lg={2} sm={12}>\n                        <Button color=\"success\" className=\"default mt-4 custom_btn\" onClick={() =>{downloadBSNReportAPICall();}} disabled={buttonDisabled}>\n                          <i className=\"glyph-icon simple-icon-download font-weight-bold\"></i> <b>Download Report</b>\n                        </Button>\n                      </Colxx>\n                    </Row>\n                  </CardBody>\n              </Card>\n          </Colxx>\n        </Row>\n      <Row>\n          <Colxx sm={12} lg={12}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Colxx md=\"6\">\n                    <h3>Battery Swapping Network Report Detail</h3>\n                  </Colxx>\n                  {report.length>0 &&\n                    <Colxx md=\"6\">\n                      <div className=\"text-right mr-2 \">\n                        <span>Page </span>\n                        <UncontrolledDropdown className=\"d-inline-block\">\n                          <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                            {pageCount}\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdownMenu\">\n                            {renderPageList()}\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <span> of </span>\n                        {lastPageCount}\n                      </div>\n                    </Colxx>\n                  }\n                </Row>\n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Country</th>\n                      <th>State</th>\n                      <th>City</th>\n                      <th>Station</th>\n                      <th>Total No. of EV</th>\n                      <th>Total No. of Charger</th>\n                      <th>Total No. of Connectors</th>\t\t\t\t\t\t\t\t\t\n                      <th>Total No. of Batteries</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"9\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                      report.length > 0 ?\n                          report.map((item,index)=>\n                            <tr key={index}>\n                              <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                              <td>{item.country_name}</td>\n                              <td>{item.state_name}</td>\n                              <td>{item.city_name}</td>\n                              <td>{item.hub_name}</td>\n                              <td>{item.total_ev}</td>\n                              <td>{item.total_charger}</td>\n                              <td>{item.total_connector}</td>\n                              <td>{item.total_batteries}</td>\n                            </tr>\n                          ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"9\">Data  Not  Found</td>\n                      </tr>\n                  }\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default BatterySwappingNetworkReport;\n","import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody, FormGroup, Label,\n  Input, Button,Alert\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {historyReportAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\n\nconst BatteryHistoricalData = ({}) => {\n  //date states\n  const [fromDate,setFromDate] = useState();\n  const [toDate,setToDate] = useState();\n  const [bin,setBin] = useState();\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(false);\n\n  //helper methods\n  //Alert helper methods\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const downloadExcelReport = async() => {\n    setAlertVisible(false);\n    \n    const currentUser = getCurrentUser();\n    let tempFromDate=null,tempToDate=null;\n    if (fromDate != null && fromDate !=\"\") {\n      tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear()+\" \"+fromDate.getHours()+\":\"+fromDate.getMinutes()+\":\"+fromDate.getSeconds();\n    }\n    if (toDate != null && toDate !=\"\") {\n      tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear()+\" \"+toDate.getHours()+\":\"+toDate.getMinutes()+\":\"+toDate.getSeconds();\n    }\n    if (tempToDate == null || tempFromDate ==null) {\n      setAlertVisible(true);\n      setAlertMsg(\"Please Select From and To date.\");\n      setAlertColor(\"danger\");\n      return; \n    }\n    setButtonDisabled(true);\n    setIsLoading(true);\n    \n    const params = {\n      bin:bin,\n      from_date:tempFromDate,\n      to_date:tempToDate\n    }\n    \n    await axios.post(historyReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          const link = document.createElement('a');\n          link.href = responseData.data.file;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }else{\n          setAlertVisible(true);\n          setAlertMsg(responseData.msg);\n          setAlertColor(\"danger\");\n        }        \n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n  //Form Validation Schema\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Battery Historical Data</span>\n        <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n            <Card>\n                <CardBody>\n                  <h3>Select Option</h3>\n                  <hr/>\n                  <Row>\n                    <Colxx md=\"12\">\n                      <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                        {alertMsg}\n                      </Alert>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          BIN\n                        </Label>\n                        <Input \n                          type=\"text\"\n                          placeholder=\"BIN\"\n                          name=\"bin\"\n                          value={bin}\n                          onChange={e=>setBin(e.target.value)}\n                        ></Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          From Date\n                        </Label>\n                        <DatePicker\n                        showTimeInput\n                        placeholderText=\"From Date\"\n                        selected={fromDate}\n                        onChange={date=>setFromDate(date)}\n                        dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          To Date\n                        </Label>\n                        <DatePicker\n                        showTimeInput\n                        placeholderText=\"From Date\"\n                        selected={toDate}\n                        onChange={date=>setToDate(date)}\n                        dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx md=\"3\">\n                      <Button color=\"primary\" className=\"default mt-4\" onClick={() => downloadExcelReport()} disabled={buttonDisabled}>\n                        <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>{isLoading ?\n<span>Please Wait</span> : <span>Download Excel Report</span>}</b>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </CardBody>\n            </Card>\n        </Colxx>\n      </Row>    \n    </>\n  );\n};\n\nexport default BatteryHistoricalData;\n","import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody, FormGroup, Label,\n  Input, Table,Button,Alert\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getStationsAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,getFleetOperatorAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst ChargingSummary = ({}) => {\n  //date states\n  const [fromDate,setFromDate] = useState();\n  const [toDate,setToDate] = useState();\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(true);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [stationNames,setStationNames] = useState([]);\n  const [fleetOpNames,setFleetOpNames] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n  //multiselect state\n  const [fleetSelectedOptions, setFleetSelectedOptions] = useState([]);\n  const [stationSelectedOptions, setStationSelectedOptions] = useState([]);\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n    GetStationNamesAPICall();\n    GetFleetOperatorAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      let stations=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           stations.push({label:item.name,value:item.hub_master_id,key:index})\n         })\n         setStationNames(stations);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetFleetOperatorAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      let fleet=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           fleet.push({label:item.name,value:item.fleet_operator_id,key:index})\n         })\n         setFleetOpNames(fleet);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const chargingSummaryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    getCityNamesAPICall(state);\n  }\n  //handle city select\n  const handleCitySelect = (city) => {\n    setCityId(city);\n  }\n  //Form Validation Schema\n  const ChargingSummaryDetailsValidationSchema = yup.object().shape({\n    charger_id:yup.string()\n        .required(\"Charger is required\"),\n    connector_id:yup.string()\n        .required(\"Connector is required\"),\n  });\n\n  const initialValues = {\n    charger_id:\"\",\n    connector_id:\"\",\n  };\n  \n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Charging Summary</span>\n        <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={ChargingSummaryDetailsValidationSchema} \n        onSubmit={(values)=>{\n            const fleetSelected = [];\n            fleetSelectedOptions.map(item=>{\n                fleetSelected.push(item.value)\n            })\n            const stationSelected = [];\n            stationSelectedOptions.map(item=>{\n                stationSelected.push(item.value)\n            })\n          const params = {\n            country_id:countryId,\n            state_id:stateId,\n            city_id:cityId,\n            fleet_operator_id:fleetSelected,\n            hub_id:stationSelectedOptions,\n            charger_id:values.charger_id,\n            connector_id:values.connector_id,\n            from_date:fromDate,\n            to_date:toDate\n          }\n          console.log(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                    <Card>\n                        <CardBody>\n                          <Row>\n                          <Colxx md=\"6\">\n                            <h3>Select Option</h3>\n                            </Colxx>\n                            <Colxx md=\"6\">\n                            <Button color=\"primary\" className=\"default mr-2 float-right\" onClick={handleSubmit} >\n                              <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Generate Report</b>\n                            </Button>\n                            </Colxx>\n                          </Row>\n                          <hr/>\n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                          <Colxx lg={4} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Country\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"country_id\"\n                                value={countryId}\n                                onChange={e=>handleCountrySelect(e.target.value)}\n                                >\n                                  <option>Select Country</option>\n                                  {countryList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.country_name}</option>\n                                  )}\n                                </Input>\n                                {/* {errors.country_id && touched.country_id &&(\n                                  <span className=\"error\">{errors.country_id}</span>\n                                )} */}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={4} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  State\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"state_id\"\n                                value={stateId}\n                                onChange={e=>handleStateSelect(e.target.value)}\n                                >\n                                  <option>Select State</option>\n                                  {stateList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.state_name}</option>\n                                  )}\n                                </Input>\n                                {/* {errors.state && touched.state &&(\n                                  <span className=\"error\">{errors.state}</span>\n                                )} */}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={4} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  City\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"city_id\"\n                                value={cityId}\n                                onChange={e=>handleCitySelect(e.target.value)}\n                                >\n                                  <option>Select City</option>\n                                  {cityList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.city_name}</option>\n                                  )}\n                                </Input>\n                                {/* {errors.city && touched.city &&(\n                                  <span className=\"error\">{errors.city}</span>\n                                )} */}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={6} sm={12}>\n                                <FormGroup>\n                                    <Label>\n                                    Fleet Operator\n                                    </Label>\n                                    <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={fleetSelectedOptions}\n                                    onChange={setFleetSelectedOptions}\n                                    options={fleetOpNames}\n                                    />\n                                </FormGroup>\n                            </Colxx>\n                            <Colxx lg={6} sm={12}>\n                                <FormGroup>\n                                    <Label>\n                                    Station\n                                    </Label>\n                                    <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={stationSelectedOptions}\n                                    onChange={setStationSelectedOptions}\n                                    options={stationNames}\n                                    />\n                                </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Charger\n                                </Label>\n                                <Input \n                                type=\"text\"\n                                placeholder=\"Charger Id\"\n                                name=\"charger_id\"\n                                value={values.charger_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                </Input>\n                                {errors.charger_id && touched.charger_id &&(\n                                  <span className=\"error\">{errors.charger_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Connector\n                                </Label>\n                                <Input \n                                type=\"text\"\n                                placeholder=\"Connector Id\"\n                                name=\"connector_id\"\n                                value={values.connector_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                </Input>\n                                {errors.connector_id && touched.connector_id &&(\n                                  <span className=\"error\">{errors.connector_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  From Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"From Date\"\n                                selected={fromDate}\n                                onChange={date=>setFromDate(date)}\n                                dateFormat=\"dd/MM/yyyy\"\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  To Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"To Date\"\n                                selected={toDate}\n                                onChange={date=>setToDate(date)}\n                                dateFormat=\"dd/MM/yyyy\"\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                        </CardBody>\n                    </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n      <Row>\n          <Colxx sm={12} lg={12}>\n            <Card>\n              <CardBody>\n                <h3>Charging Summary</h3>\n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Date</th>\n                      <th>Charger Id</th>\n                      <th>Connector ID</th>\n                      <th>BIN</th>\n                      <th>Start SoC</th>\n                      <th>Start Battery Voltage</th>\n                      <th>Start Whr</th>\t\t\n                      <th>Start Time</th>\n                      <th>Stop SoC</th>\n                      <th>Stop Battery Voltage</th>\n                      <th>Stop Whr</th>\n                      <th>Stop Time</th>\n                      <th>Charging Duration</th>\n                      <th>Check cell balancing happened</th>\n                      <th>Energy exchanged (DC)</th>\n                      <th>Unit/SoC</th>\n                      <th>Session ID</th>\n                      <th>Energy Meter Reading</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {/* {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"7\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                      userList.length > 0 ?\n                          userList.map((item,index)=>\n                            <tr key={item.id}>\n                              <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index+1}</th>\n                              <td>{item.username}</td>\n                              <td>{item.name}</td>\n                              <td>{item.contact_number}</td>\n                              <td>{item.email}</td>\n                              <td>{item.role_name}</td>\n                            </tr>\n                          ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"7\">Data  Not  Found</td>\n                      </tr>\n                  } */}\n                    <tr>\n                      <th scope=\"row\">1</th>\n                      <td>Country 1</td>\n                      <td>State 1</td>\n                      <td>City 1</td>\n                      <td>Station 1</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default ChargingSummary;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Row, Card, CardBody, FormGroup, Label,\n  Input, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport { getStationsByCityAPI, getCountriesAPI, getStatesByCountryAPI, getCitiesByStateAPI, getFleetOperatorAPI, swappingTransactionReportAPI, downloadSwappingReportAPI } from '../../../constants/defaultValues'\nimport axios from 'axios';\n\nconst SwappingTransaction = ({ }) => {\n  //date states\n  const [fromDate, setFromDate] = useState(null);\n  const [toDate, setToDate] = useState(null);\n  //time state\n  // const [startTime,setStartTime] = useState();\n  // const [endTime,setEndTime] = useState();\n  //station List\n  const [stationNames, setStationNames] = useState([]);\n  //Pagination states\n  const [pageCount, setPageCount] = useState(\"1\");\n  const [lastPageCount, setLastPageCount] = useState(\"1\");\n  //state to disable button on click\n  const [buttonDisabled, setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading, setIsLoading] = useState(false);\n  // list state\n  const [countryList, setCountryList] = useState([]);\n  const [stateList, setStateList] = useState([]);\n  const [cityList, setCityList] = useState([]);\n  const [fleetOpNames, setFleetOpNames] = useState([]);\n  const [countryId, setCountryId] = useState(\"\");\n  const [stateId, setStateId] = useState(\"\");\n  const [cityId, setCityId] = useState(\"\");\n  const [stationId, setStationId] = useState(\"\");\n  const [fleetOperatorId, setFleetOperatorId] = useState(\"\");\n  const [evQrCode, setEvQrCode] = useState(\"\");\n  const [report, setReport] = useState([]);\n\n  useEffect(() => {\n    getCountryNamesAPICall();\n    GetFleetOperatorAPICall();\n  }, []);\n\n  useEffect(() => {\n    GetStationNamesAPICall(countryId, stateId, cityId);\n  }, [countryId, stateId, cityId]);\n\n  //API calls\n  const GetStationNamesAPICall = async (country, state, city) => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsByCityAPI + \"country_id=\" + country + \"&state_id=\" + state + \"&city_id=\" + city,\n      { headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then(response => {\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setStationNames(responseData.data)\n        } else {\n          setStationNames([]);\n        }\n      }).catch(error => {\n        console.log(error);\n      })\n  }\n  const GetFleetOperatorAPICall = async () => {\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorAPI,\n      { headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then(response => {\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setFleetOpNames(responseData.data);\n        } else {\n          setFleetOpNames([]);\n        }\n      }).catch(error => {\n        console.log(error);\n      })\n  }\n  const getCountryNamesAPICall = async () => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      { headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then(response => {\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setCountryList(responseData.data);\n        } else {\n          console.log(responseData.status, responseData.msg);\n        }\n      }).catch(error => {\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async (country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      { country_id: country },\n      { headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then(response => {\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setStateList(responseData.data);\n        } else {\n          setStateList([]);\n          setCityList([]);\n        }\n      }).catch(error => {\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async (state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      { state_id: state },\n      { headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then(response => {\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setCityList(responseData.data);\n        } else {\n          setCityList([]);\n        }\n      }).catch(error => {\n        console.log(error);\n      })\n  }\n  const getSwappingTransactionReportAPICall = async () => {\n    setButtonDisabled(true);\n    setReport([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    let tempFromDate, tempToDate;\n    if (fromDate == null | fromDate == \"\") {\n      tempFromDate = fromDate;\n    } else {\n      tempFromDate = fromDate.getDate() + \"-\" + (fromDate.getMonth() + 1) + \"-\" + fromDate.getFullYear() + \" \" + fromDate.getHours() + \":\" + fromDate.getMinutes() + \":\" + fromDate.getSeconds();\n    }\n    if (toDate == null) {\n      tempToDate = toDate;\n    } else {\n      tempToDate = toDate.getDate() + \"-\" + (toDate.getMonth() + 1) + \"-\" + toDate.getFullYear() + \" \" + toDate.getHours() + \":\" + toDate.getMinutes() + \":\" + toDate.getSeconds();\n    }\n    const params = {\n      country_id: countryId,\n      state_id: stateId,\n      city_id: cityId,\n      hub_id: stationId,\n      operator_id: fleetOperatorId,\n      ev_qr_code: evQrCode,\n      from_date: tempFromDate,\n      to_date: tempToDate,\n      page: pageCount\n    }\n    await axios.post(swappingTransactionReportAPI,\n      params,\n      { headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then(response => {\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setReport(responseData.data.data);\n        } else {\n          console.log(responseData.msg);\n        }\n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error => {\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  const downloadSwappingReportAPICall = async () => {\n    setButtonDisabled(true);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    let tempFromDate, tempToDate;\n    if (fromDate == null | fromDate == \"\") {\n      tempFromDate = fromDate;\n    } else {\n      tempFromDate = fromDate.getDate() + \"-\" + (fromDate.getMonth() + 1) + \"-\" + fromDate.getFullYear() + \" \" + fromDate.getHours() + \":\" + fromDate.getMinutes() + \":\" + fromDate.getSeconds();\n    }\n    if (toDate == null) {\n      tempToDate = toDate;\n    } else {\n      tempToDate = toDate.getDate() + \"-\" + (toDate.getMonth() + 1) + \"-\" + toDate.getFullYear() + \" \" + toDate.getHours() + \":\" + toDate.getMinutes() + \":\" + toDate.getSeconds();\n    }\n    const params = {\n      country_id: countryId,\n      state_id: stateId,\n      city_id: cityId,\n      hub_id: stationId,\n      operator_id: fleetOperatorId,\n      ev_qr_code: evQrCode,\n      from_date: tempFromDate,\n      to_date: tempToDate,\n      page: pageCount\n    }\n    await axios.post(downloadSwappingReportAPI,\n      params,\n      { headers: { Authorization: `Bearer ${currentUser.token}` } })\n      .then(response => {\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          const link = document.createElement('a');\n          link.href = responseData.data.file;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        } else {\n          alert(responseData.msg);\n        }\n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error => {\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    setStateId(\"\");\n    setCityId(\"\");\n    setStationId(\"\");\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    setCityId(\"\");\n    setStationId(\"\");\n    getCityNamesAPICall(state);\n  }\n  //pagination method\n  const handlePageChange = (index) => {\n    setPageCount(index + 1)\n    getSwappingTransactionReportAPICall();\n  }\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i < lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => handlePageChange(i)}>\n          {i + 1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  // const ExampleCustomTimeInput = () => (\n  //   <input\n  //     value={startTime}\n  //     onChange={e => setStartTime(e.target.value)}\n  //     style={{ border: \"solid 1px pink\" }}\n  //   />\n  // );\n\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <span className=\"page_title\">Swapping Transaction</span>\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card>\n            <CardBody>\n              <Row>\n                <Colxx lg={3} sm={12}>\n                  <FormGroup>\n                    <Label>\n                      Country\n                    </Label>\n                    <Input\n                      type=\"select\"\n                      name=\"country_id\"\n                      value={countryId}\n                      onChange={e => handleCountrySelect(e.target.value)}\n                    >\n                      <option key=\"\" value=\"\">All Countries</option>\n                      {countryList.map((item, index) =>\n                        <option key={index} value={item.id}>{item.country_name}</option>\n                      )}\n                    </Input>\n                  </FormGroup>\n                </Colxx>\n                <Colxx lg={3} sm={12}>\n                  <FormGroup>\n                    <Label>\n                      State\n                    </Label>\n                    <Input\n                      type=\"select\"\n                      name=\"state_id\"\n                      value={stateId}\n                      onChange={e => handleStateSelect(e.target.value)}\n                    >\n                      <option key=\"\" value=\"\">All States</option>\n                      {stateList.map((item, index) =>\n                        <option key={index} value={item.id}>{item.state_name}</option>\n                      )}\n                    </Input>\n                  </FormGroup>\n                </Colxx>\n                <Colxx lg={3} sm={12}>\n                  <FormGroup>\n                    <Label>\n                      City\n                    </Label>\n                    <Input\n                      type=\"select\"\n                      name=\"city_id\"\n                      value={cityId}\n                      onChange={e => { setCityId(e.target.value); setStationId(\"\"); }}\n                    >\n                      <option key=\"\" value=\"\">All Cities</option>\n                      {cityList.map((item, i) =>\n                        <option key={i} value={item.id}>{item.city_name}</option>\n                      )}\n                    </Input>\n                  </FormGroup>\n                </Colxx>\n                <Colxx lg={3} sm={12}>\n                  <FormGroup>\n                    <Label>\n                      Station\n                    </Label>\n                    <Input\n                      type=\"select\"\n                      name=\"station\"\n                      value={stationId}\n                      onChange={e => setStationId(e.target.value)}>\n                      <option key=\"\" value=\"\">All Stations</option>\n                      {stationNames.map((item, i) =>\n                        <option key={i} value={item.hub_master_id}>{item.name}</option>\n                      )}\n                    </Input>\n                  </FormGroup>\n                </Colxx>\n                <Colxx lg={3} sm={12}>\n                  <FormGroup>\n                    <Label>\n                      Fleet Operator\n                    </Label>\n                    <Input\n                      type=\"select\"\n                      name=\"fleet_operator_id\"\n                      value={fleetOperatorId}\n                      onChange={e => setFleetOperatorId(e.target.value)}\n                    >\n                      <option>All Fleet Operator</option>\n                      {fleetOpNames.map((item, i) =>\n                        <option key={i} value={item.fleet_operator_id}>{item.name}</option>\n                      )}\n                    </Input>\n                  </FormGroup>\n                </Colxx>\n                <Colxx lg={3} sm={12}>\n                  <FormGroup>\n                    <Label>\n                      EV QR Code\n                    </Label>\n                    <Input\n                      type=\"number\"\n                      placeholder=\"EV QR Code\"\n                      name=\"ev_qr_code\"\n                      value={evQrCode}\n                      onChange={e => setEvQrCode(e.target.value)}\n                    >\n                    </Input>\n                  </FormGroup>\n                </Colxx>\n                <Colxx lg={3} sm={12}>\n                  <FormGroup>\n                    <Label>\n                      From Date\n                    </Label>\n                    <DatePicker\n                      placeholderText=\"From Date\"\n                      showTimeInput\n                      selected={fromDate}\n                      onChange={date => setFromDate(date)}\n                      dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                    // customTimeInput={<ExampleCustomTimeInput />}\n                    />\n                  </FormGroup>\n                </Colxx>\n                <Colxx lg={3} sm={12}>\n                  <FormGroup>\n                    <Label>\n                      To Date\n                    </Label>\n                    <DatePicker\n                      placeholderText=\"To Date\"\n                      showTimeInput\n                      selected={toDate}\n                      onChange={date => setToDate(date)}\n                      dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                    />\n                  </FormGroup>\n                </Colxx>\n                {/* <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          Start Time\n                        </Label>\n                        <DatePicker\n                        showTimeSelect\n                        placeholderText=\"Start Time\"\n                        selected={startTime}\n                        onChange={date=>setStartTime(date)}\n                        />\n                      </FormGroup>\n                    </Colxx> */}\n                {/* <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          End Time\n                        </Label>\n                        <DatePicker\n                        showTimeSelect\n                        placeholderText=\"End Time\"\n                        selected={endTime}\n                        onChange={date=>setEndTime(date)}\n                        />\n                      </FormGroup>\n                    </Colxx> */}\n                <Colxx lg={6} sm={12}>\n                  <Button color=\"primary\" className=\"default mr-2\" onClick={() => { setPageCount(1); getSwappingTransactionReportAPICall(); }} disabled={buttonDisabled}>\n                    <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Generate Report</b>\n                  </Button>\n                  <Button color=\"success\" className=\"default\" onClick={() => { downloadSwappingReportAPICall(); }} disabled={buttonDisabled}>\n                    <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Download Report</b>\n                  </Button>\n                </Colxx>\n              </Row>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx sm={12} lg={12}>\n          <Card>\n            <CardBody>\n              <Row>\n                <Colxx md=\"6\">\n                  <h3>Swapping Transaction Report</h3>\n                </Colxx>\n                {report.length > 0 &&\n                  <Colxx md=\"6\">\n                    <div className=\"text-right mr-2 \">\n                      <span>Page </span>\n                      <UncontrolledDropdown className=\"d-inline-block\">\n                        <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                          {pageCount}\n                        </DropdownToggle>\n                        <DropdownMenu className=\"dropdownMenu\">\n                          {renderPageList()}\n                        </DropdownMenu>\n                      </UncontrolledDropdown>\n                      <span> of </span>\n                      {lastPageCount}\n                    </div>\n                  </Colxx>\n                }\n              </Row>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Station</th>\n                    <th>Operator</th>\n                    <th>Fleet Operator</th>\n                    <th>EV QR Code</th>\n                    <th>In Time Stamp</th>\n                    <th>Battery IN</th>\n                    <th>Soc</th>\n                    <th>BV</th>\n                    <th>Ahr</th>\n                    <th>Kwh</th>\n                    <th>Out Time Stamp</th>\n                    <th>Battery Out</th>\n                    <th>Soc</th>\n                    <th>BV</th>\n                    <th>Ahr</th>\n                    <th>Kwh</th>\n                    <th>Time Stamp Diff (Minutes)</th>\n                    <th>Energy Sold</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {isLoading ?\n                    <tr>\n                      <td className=\"text-center\" colSpan=\"17\"><div className=\"custom-list-loading\" /></td>\n                    </tr> :\n                    report.length > 0 ?\n                      report.map((item, index) =>\n                        <>\n                          <tr key={index}>\n                            <th scope=\"row\" rowSpan=\"2\">{pageCount == 1 ? index + 1 : (pageCount - 1) * 10 + index + 1}</th>\n                            <td rowSpan=\"2\">{item.station_name}</td>\n                            <td rowSpan=\"2\">{item.operator}</td>\n                            <td rowSpan=\"2\">{item.fleet_operator_name}</td>\n                            <td rowSpan=\"2\">{item.e_qr_code}</td>\n                            <td rowSpan=\"2\">{item.start_time}</td>\n                            <td>{item.discharged_battery_bin_1}</td>\n                            <td>{item.discharged_battery_soc_1}</td>\n                            <td>{item.discharged_battery_bv_1}</td>\n                            <td>{item.discharged_battery_rec_1}</td>\n                            <td>{(item.discharge1_kwh).toFixed(2)}</td>\n                            <td rowSpan=\"2\">{item.end_time}</td>\n                            <td>{item.charged_battery_bin_1}</td>\n                            <td>{item.charged_battery_soc_1}</td>\n                            <td>{item.charged_battery_bv_1}</td>\n                            <td>{item.charged_battery_rec_1}</td>\n                            <td>{(item.charge1_kwh).toFixed(2)}</td>\n                            <td rowSpan=\"2\">{item.diff_time}</td>\n                            <td>{(item.diffcharge1).toFixed(2)}</td>\n                          </tr>\n                          <tr>\n                            <td>{item.discharged_battery_bin_2}</td>\n                            <td>{item.discharged_battery_soc_2}</td>\n                            <td>{item.discharged_battery_bv_2}</td>\n                            <td>{item.discharged_battery_rec_2}</td>\n                            <td>{(item.discharge2_kwh).toFixed(2)}</td>\n                            <td>{item.charged_battery_bin_2}</td>\n                            <td>{item.charged_battery_soc_2}</td>\n                            <td>{item.charged_battery_bv_2}</td>\n                            <td>{item.charged_battery_rec_2}</td>\n                            <td>{(item.charge2_kwh).toFixed(2)}</td>\n                            <td>{(item.diffcharge2).toFixed(2)}</td>\n                          </tr>\n                        </>\n                      ) : <>\n                        <tr>\n                          <td className=\"text-center text-danger\" colSpan=\"17\">Data  Not  Found</td>\n                        </tr>\n                      </>\n                  }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default SwappingTransaction;","import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody, FormGroup, Label,\n  Input, Table,Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getStationsByCityAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,getFleetOperatorAPI,swapReportAPI,downloadSwapReportAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst SwapReport = ({}) => {\n  //date states\n  const [fromDate,setFromDate] = useState(null);\n  const [toDate,setToDate] = useState(null);\n  //time state\n  // const [startTime,setStartTime] = useState();\n  // const [endTime,setEndTime] = useState();\n  //station List\n  const [stationNames,setStationNames] = useState([]);\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(false);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [fleetOpNames,setFleetOpNames] = useState([]); \n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n  const [stationId,setStationId] = useState(\"\");\n  const [fleetOperatorId,setFleetOperatorId] = useState(\"\");\n  const [evQrCode,setEvQrCode] = useState(\"\");\n  const [report,setReport] = useState([]);\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n    GetFleetOperatorAPICall();\n  },[]);\n\n  useEffect(()=>{\n    GetStationNamesAPICall(countryId,stateId,cityId);\n  },[countryId,stateId,cityId]);\n\n  //API calls\n  const GetStationNamesAPICall = async(country,state,city) => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsByCityAPI+\"country_id=\"+country+\"&state_id=\"+state+\"&city_id=\"+city,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNames(responseData.data)\n      }else{\n        setStationNames([]);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetFleetOperatorAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n        if (responseData.status === 1) {\n         setFleetOpNames(responseData.data);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          setStateList([]);\n          setCityList([]);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          setCityList([]);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getSwapReportAPICall = async() => {\n    setButtonDisabled(true);\n    setReport([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    let tempFromDate,tempToDate;\n    if (fromDate == null | fromDate ==\"\") {\n      tempFromDate = fromDate;\n    }else{\n      tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear()+\" \"+fromDate.getHours()+\":\"+fromDate.getMinutes()+\":\"+fromDate.getSeconds();\n    }\n    if (toDate == null) {\n      tempToDate = toDate;\n    }else{\n      tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear()+\" \"+toDate.getHours()+\":\"+toDate.getMinutes()+\":\"+toDate.getSeconds();\n    }\n    const params = {\n      country_id:countryId,\n      state_id:stateId,\n      city_id:cityId,\n      hub_id:stationId,\n      operator_id:fleetOperatorId,\n      ev_qr_code:evQrCode,\n      from_date:tempFromDate,\n      to_date:tempToDate,\n      page:pageCount\n    }\n    await axios.post(swapReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setReport(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n  const downloadSwapReportAPICall = async() => {\n    setButtonDisabled(true);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    let tempFromDate,tempToDate;\n    if (fromDate == null | fromDate ==\"\") {\n      tempFromDate = fromDate;\n    }else{\n      tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear()+\" \"+fromDate.getHours()+\":\"+fromDate.getMinutes()+\":\"+fromDate.getSeconds();\n    }\n    if (toDate == null) {\n      tempToDate = toDate;\n    }else{\n      tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear()+\" \"+toDate.getHours()+\":\"+toDate.getMinutes()+\":\"+toDate.getSeconds();\n    }\n    const params = {\n      country_id:countryId,\n      state_id:stateId,\n      city_id:cityId,\n      hub_id:stationId,\n      operator_id:fleetOperatorId,\n      ev_qr_code:evQrCode,\n      from_date:tempFromDate,\n      to_date:tempToDate,\n      page:pageCount\n    }\n    await axios.post(downloadSwapReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          const link = document.createElement('a');\n          link.href = responseData.data.file;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }else{\n          alert(responseData.msg);\n        }  \n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    setStateId(\"\");\n    setCityId(\"\");\n    setStationId(\"\");\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    setCityId(\"\");\n    setStationId(\"\");\n    getCityNamesAPICall(state);\n  }\n  //pagination method\n  const handlePageChange = (index) =>{\n    setPageCount(index+1)\n    getSwapReportAPICall();\n  }\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={()=>handlePageChange(i)}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  \n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Swap Report</span>\n        <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n            <Card>\n                <CardBody>\n                  <Row>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          Country\n                        </Label>\n                        <Input \n                        type=\"select\"\n                        name=\"country_id\"\n                        value={countryId}\n                        onChange={e=>handleCountrySelect(e.target.value)}\n                        >\n                          <option key=\"\" value=\"\">All Countries</option>\n                          {countryList.map((item,index)=>\n                            <option key={index} value={item.id}>{item.country_name}</option>\n                          )}\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          State\n                        </Label>\n                        <Input \n                        type=\"select\"\n                        name=\"state_id\"\n                        value={stateId}\n                        onChange={e=>handleStateSelect(e.target.value)}\n                        >\n                          <option key=\"\" value=\"\">All States</option>\n                          {stateList.map((item,index)=>\n                            <option key={index} value={item.id}>{item.state_name}</option>\n                          )}\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          City\n                        </Label>\n                        <Input \n                        type=\"select\"\n                        name=\"city_id\"\n                        value={cityId}\n                        onChange={e=>{setCityId(e.target.value);setStationId(\"\");}}\n                        >\n                          <option key=\"\" value=\"\">All Cities</option>\n                          {cityList.map((item,index)=>\n                            <option key={index} value={item.id}>{item.city_name}</option>\n                          )}\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          Station\n                        </Label>\n                        <Input \n                          type=\"select\"\n                          name=\"station\"\n                          value={stationId}\n                          onChange={e=>setStationId(e.target.value)}\n                        >\n                          <option key=\"\" value=\"\">All Stations</option>\n                          {stationNames.map((item,index)=>\n                            <option key={index} value={item.hub_master_id}>{item.name}</option>\n                          )}\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          Fleet Operator\n                        </Label>\n                        <Input \n                          type=\"select\"\n                          name=\"fleet_operator_id\"\n                          value={fleetOperatorId}\n                          onChange={e=>setFleetOperatorId(e.target.value)}\n                        >\n                          <option key=\"\" value=\"\">All Fleet</option>\n                          {fleetOpNames.map((item,index)=>\n                            <option key={index} value={item.fleet_operator_id}>{item.name}</option>\n                          )}\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          EV QR Code\n                        </Label>\n                        <Input \n                          type=\"number\"\n                          placeholder=\"EV QR Code\"\n                          name=\"ev_qr_code\"\n                          value={evQrCode}\n                          onChange={e=>setEvQrCode(e.target.value)}\n                        >\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          From Date\n                        </Label>\n                        <DatePicker\n                        placeholderText=\"From Date\"\n                        showTimeInput\n                        selected={fromDate}\n                        onChange={date=>setFromDate(date)}\n                        dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          To Date\n                        </Label>\n                        <DatePicker\n                        placeholderText=\"To Date\"\n                        showTimeInput\n                        selected={toDate}\n                        onChange={date=>setToDate(date)}\n                        dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    {/* <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          Start Time\n                        </Label>\n                        <DatePicker\n                        showTimeSelect\n                        placeholderText=\"Start Time\"\n                        selected={startTime}\n                        onChange={date=>setStartTime(date)}\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          End Time\n                        </Label>\n                        <DatePicker\n                        showTimeSelect\n                        placeholderText=\"End Time\"\n                        selected={endTime}\n                        onChange={date=>setEndTime(date)}\n                        />\n                      </FormGroup>\n                    </Colxx> */}\n                    <Colxx lg={6} sm={12}>\n                      <Button color=\"primary\" className=\"default mr-2\" onClick={() =>{setPageCount(1);getSwapReportAPICall();}} disabled={buttonDisabled}>\n                        <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Generate Report</b>\n                      </Button>\n                      <Button color=\"success\" className=\"default\" onClick={() =>{downloadSwapReportAPICall();}} disabled={buttonDisabled}>\n                        <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Download Report</b>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </CardBody>\n            </Card>\n        </Colxx>\n      </Row>\n      <Row>\n          <Colxx sm={12} lg={12}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Colxx md=\"6\">\n                    <h3>Swap Report</h3>\n                  </Colxx>\n                  {report.length>0 &&\n                    <Colxx md=\"6\">\n                      <div className=\"text-right mr-2 \">\n                        <span>Page </span>\n                        <UncontrolledDropdown className=\"d-inline-block\">\n                          <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                            {pageCount}\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdownMenu\">\n                            {renderPageList()}\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <span> of </span>\n                        {lastPageCount}\n                      </div>\n                    </Colxx>\n                  }\n                </Row>\n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Station</th>\n                      <th>Operator</th>\n                      <th>EV QR Code</th>\n                      <th>No. Of Swap</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"5\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                      report.length > 0 ?\n                          report.map((item,index)=>\n                            <tr key={index}>\n                              <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                              <td>{item.station_name}</td>\n                              <td>{item.operator}</td>\n                              <td>{item.e_qr_code}</td>\n                              <td>{item.total}</td>\n                            </tr>\n                          ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"5\">Data  Not  Found</td>\n                      </tr>\n                  }\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default SwapReport;","import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody, FormGroup, Label,\n  Input, Table,Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getStationsAPI,weeklyBillRefReportAPI,downloadWeeklyBillRefReportAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\n\nconst WeeklyBillingRef = ({}) => {\n  const [buttonType,setButtonType] = useState(1);\n  //date states\n  const [fromDate,setFromDate] = useState();\n  const [toDate,setToDate] = useState();\n  //DTAE ERRORFLAGS\n  const [fromDateError,setFromDateError] = useState(false);\n  const [toDateError,setToDateError] = useState(false);\n  //time state\n  // const [startTime,setStartTime] = useState();\n  // const [endTime,setEndTime] = useState();\n  //station List\n  const [stationNames,setStationNames] = useState([]);\n  //report\n  const [report,setReport] = useState([]);\n  const [dates,setDates] = useState([]);\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(false);\n  //params\n  const [reportParams,setReportParams] = useState(null);\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNames(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getWeeklyBillRefReportAPICall = async(params) => {\n    setButtonDisabled(true);\n    setReport([]);\n    setDates([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.post(weeklyBillRefReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page);\n          setReport(responseData.data.data.energy_data);\n          setDates(responseData.data.data.selected_week_dates);\n        }else{\n            console.log(responseData.msg);\n        }\n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n  const downloadWeeklyBillRefReportAPICall = async(params) => {\n    setButtonDisabled(true);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.post(downloadWeeklyBillRefReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          const link = document.createElement('a');\n          link.href = responseData.data.file;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }else{\n          alert(responseData.msg);\n        }  \n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n  //helper methods\n  //pagination method\n  const handlePageChange = (index) =>{\n    setPageCount(index+1)\n    getWeeklyBillRefReportAPICall(reportParams);\n  }\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={()=>handlePageChange(i)}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Forms\n  const initialValues = {\n    station:\"\",\n  };\n  \n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <span className=\"page_title\">Weekly Billing Report</span>\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues} \n        onSubmit={(values)=>{\n          let tempFromDate,tempToDate;\n          if (fromDate == null || fromDate ==\"\" && toDate == null || toDate ==\"\") {\n            setFromDateError(true);\n            setToDateError(true);\n            return ;\n          }else if(fromDate == null || fromDate ==\"\" || toDate == null || toDate ==\"\"){\n            if (fromDate == null | fromDate ==\"\") {\n              setToDateError(false);\n              setFromDateError(true);\n              return;\n            }else if(toDate == null | toDate ==\"\"){\n              setFromDateError(false);\n              setToDateError(true);\n              return ;\n            }\n          }else{\n            setFromDateError(false);\n            setToDateError(false);\n            tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear();\n            tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear();\n          }\n          const params = {\n            hub_id:values.station,\n            from_date:tempFromDate,\n            to_date:tempToDate,\n            page:pageCount\n          }\n          setReportParams(params)\n          if(buttonType==1){\n            getWeeklyBillRefReportAPICall(params);\n          }else{\n            downloadWeeklyBillRefReportAPICall(params);\n          }\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                    <Card>\n                        <CardBody>\n                          <Row>\n                            <Colxx lg={2} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Station\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"station\"\n                                value={values.station}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                  <option key={0} value={0}>All Station</option>\n                                  {stationNames.map((item,i)=>\n                                    <option key={i} value={item.hub_master_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.station && touched.station &&(\n                                  <span className=\"error\">{errors.station}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  From Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"From Date\"\n                                showTimeInput\n                                selected={fromDate}\n                                onChange={date=>setFromDate(date)}\n                                dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                                />\n                                {fromDateError &&\n                                  <span className=\"error\">{\"From date is required\"}</span>\n                                }\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  To Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"To Date\"\n                                showTimeInput\n                                selected={toDate}\n                                onChange={date=>setToDate(date)}\n                                dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                                />\n                                {toDateError &&\n                                  <span className=\"error\">{\"To date is required\"}</span>\n                                }\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={4} sm={12}>\n                                <Button color=\"primary\" className=\"default mt-4 mr-2\"  onClick={() =>{setButtonType(1);setPageCount(1);handleSubmit();}} disabled={buttonDisabled} >\n                                  <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Generate Report</b>\n                                </Button>\n                                <Button color=\"success\" className=\"default mt-4\"  onClick={() =>{setButtonType(2);handleSubmit();}} disabled={buttonDisabled} >\n                                  <b>Download Report</b>\n                                </Button>\n                            </Colxx>\n                          </Row>\n                        </CardBody>\n                    </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n      <Row>\n          <Colxx sm={12} lg={12}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Colxx md=\"6\">\n                  <h3>Weekly Billing Report</h3>\n                  </Colxx>\n                  {report.length>0 &&\n                    <Colxx md=\"6\">\n                      <div className=\"text-right mr-2 \">\n                        <span>Page </span>\n                        <UncontrolledDropdown className=\"d-inline-block\">\n                          <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                            {pageCount}\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdownMenu\">\n                            {renderPageList()}\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <span> of </span>\n                        {lastPageCount}\n                      </div>\n                    </Colxx>\n                  }\n                </Row>\n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Station</th>\n                      <th>EV Qr Code</th>\n                      {dates.length>0?\n                        <>\n                          <th>{dates[0]}</th>\n                          <th>{dates[1]}</th>\n                          <th>{dates[2]}</th>\n                          <th>{dates[3]}</th>\n                          <th>{dates[4]}</th>\n                          <th>{dates[5]}</th>\n                          <th>{dates[6]}</th>\n                        </>:\n                        <>\n                          <th>Date of Day1</th>\n                          <th>Date of Day2</th>\n                          <th>Date of Day3</th>\n                          <th>Date of Day4</th>\n                          <th>Date of Day5</th>\n                          <th>Date of Day6</th>\n                          <th>Date of Day7</th>\n                        </>\n                      }\n                      <th>Total Energy Supplied</th>\n                      <th>Total Amount  Billed</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"12\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                      report.length > 0 ?\n                          report.map((item,index)=>\n                            <tr key={index}>\n                              <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                              <td>{item.station_name}</td>\n                              <td>{item.e_qr_code}</td>\n                              <td>{item.Day_1}</td>\n                              <td>{item.Day_2}</td>\n                              <td>{item.Day_3}</td>\n                              <td>{item.Day_4}</td>\n                              <td>{item.Day_5}</td>\n                              <td>{item.Day_6}</td>\n                              <td>{item.Day_7}</td>\n                              <td>{item.total_energy_supp}</td>\n                              <td>{item.total_bill_amount}</td>\n                            </tr>\n                          ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"12\">Data  Not  Found</td>\n                      </tr>\n                  }\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default WeeklyBillingRef;","import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody, FormGroup, Label,\n  Input, Table,Button,DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {faultReportAPI,downloadfaultReportAPI,getStationsByCityAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,getOemAPI,getOwnersAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\n\nconst FaultsAndAlerts = ({}) => {\n  const [buttonType,setButtonType] = useState(1);\n  //date states\n  const [fromDate,setFromDate] = useState();\n  const [toDate,setToDate] = useState();\n  //station List\n  const [stationNames,setStationNames] = useState([]);\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(false);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [oemList,setOemList] = useState([]);\n  const [ownerList,setOwnerList] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n  const [stationId,setStationId] = useState(\"\");\n  //params\n  const [reportParams,setReportParams] = useState(null);\n  const [report,setReport] = useState([]);\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n    getOemAPICall();\n    GetOwnerNamesAPICall();\n  },[]);\n\n  useEffect(()=>{\n    GetStationNamesAPICall(countryId,stateId,cityId);\n  },[countryId,stateId,cityId]);\n\n  //API calls\n  const GetStationNamesAPICall = async(country,state,city) => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsByCityAPI+\"country_id=\"+country+\"&state_id=\"+state+\"&city_id=\"+city,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNames(responseData.data)\n      }else{\n        setStationNames([]);\n      }\n    }).catch(error=>{\n      console.log(error);\n    });\n  }\n\n  const getOemAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:1},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {          \n          setOemList(responseData.data);\n        }else{\n          setOemList([])\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const GetOwnerNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getOwnersAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setOwnerList(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    setStateId(\"\");\n    setCityId(\"\");\n    setStationId(\"\");\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    setCityId(\"\");\n    setStationId(\"\");\n    getCityNamesAPICall(state);\n  }\n  //pagination method\n  const handlePageChange = (index) =>{\n    setPageCount(index+1)\n    getFaultReportAPICall(reportParams);\n  }\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={()=>handlePageChange(i)}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  const getFaultReportAPICall = async(params) => {\n    setButtonDisabled(true);\n    setReport([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.post(faultReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page);\n          setReport(responseData.data.data);\n        }else{\n            console.log(responseData.msg);\n        }\n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n      })\n  }\n  const downloadFaultReportAPICall = async(params) => {\n    setButtonDisabled(true);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.post(downloadfaultReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          const link = document.createElement('a');\n          link.href = responseData.data.file;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }else{\n          alert(responseData.msg);\n        }  \n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n      })\n  }\n\n  const initialValues = {\n    bin:\"\",\n    oem_id:\"\",\n    owner_id:\"\",\n    charger_id:\"\",\n    connector_id:\"\",\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Faults and Alerts</span>\n        <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(values)=>{\n          let tempFromDate=null,tempToDate=null;\n          if (fromDate != null && fromDate !=\"\") {\n            tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear()+\" \"+fromDate.getHours()+\":\"+fromDate.getMinutes()+\":\"+fromDate.getSeconds();\n          }\n          if (toDate != null && toDate !=\"\") {\n            tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear()+\" \"+toDate.getHours()+\":\"+toDate.getMinutes()+\":\"+toDate.getSeconds();\n          }\n          const params = {\n            country_id:countryId,\n            state_id:stateId,\n            city_id:cityId,\n            hub_id:stationId,\n            bin:values.bin,\n            oem_id:values.oem_id,\n            owner_id:values.owner_id,\n            charger_id:values.charger_id,\n            connector_id:values.connector_id,\n            from_date:tempFromDate,\n            to_date:tempToDate,\n            page:pageCount\n          }\n          setReportParams(params);\n          if(buttonType==1){\n            getFaultReportAPICall(params);\n          }else{\n            downloadFaultReportAPICall(params);\n          }          \n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                    <Card>\n                        <CardBody>\n                          <Row>\n                          <Colxx md=\"6\">\n                            <h3>Select Option</h3>\n                          </Colxx>                            \n                          </Row>\n                          <hr/>\n                          <Row>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Country\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"country_id\"\n                                value={countryId}\n                                onChange={e=>handleCountrySelect(e.target.value)}\n                                >\n                                  <option>Select Country</option>\n                                  {countryList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.country_name}</option>\n                                  )}\n                                </Input>\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  State\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"state_id\"\n                                value={stateId}\n                                onChange={e=>handleStateSelect(e.target.value)}\n                                >\n                                  <option>Select State</option>\n                                  {stateList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.state_name}</option>\n                                  )}\n                                </Input>\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  City\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"city_id\"\n                                value={cityId}\n                                onChange={e=>{setCityId(e.target.value);setStationId(\"\");}}\n                                >\n                                  <option>Select City</option>\n                                  {cityList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.city_name}</option>\n                                  )}\n                                </Input>\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Station\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"station\"\n                                value={stationId}\n                                onChange={e=> setStationId(e.target.value)}>\n                                  <option>Select Station</option>\n                                  {stationNames.map((item,index)=>\n                                    <option key={index} value={item.hub_master_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  OEM\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"oem_id\"\n                                value={values.oem_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                  <option>Select OEM</option>\n                                  {oemList.map((item,index)=>\n                                    <option key={index} value={item.oem_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.oem_id && touched.oem_id &&(\n                                  <span className=\"error\">{errors.oem_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Owner\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"owner_id\"\n                                value={values.owner_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                  <option>Select Owner</option>\n                                  {ownerList.map((item,index)=>\n                                    <option key={index} value={item.owner_master_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.owner_id && touched.owner_id &&(\n                                  <span className=\"error\">{errors.owner_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Charger\n                                </Label>\n                                <Input \n                                type=\"text\"\n                                placeholder=\"Charger Id\"\n                                name=\"charger_id\"\n                                value={values.charger_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                </Input>\n                                {errors.charger_id && touched.charger_id &&(\n                                  <span className=\"error\">{errors.charger_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Connector\n                                </Label>\n                                <Input \n                                type=\"text\"\n                                placeholder=\"Connector Id\"\n                                name=\"connector_id\"\n                                value={values.connector_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                </Input>\n                                {errors.connector_id && touched.connector_id &&(\n                                  <span className=\"error\">{errors.connector_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  From Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"From Date\"\n                                showTimeInput\n                                selected={fromDate}\n                                onChange={date=>setFromDate(date)}\n                                dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  To Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"To Date\"\n                                showTimeInput\n                                selected={toDate}\n                                onChange={date=>setToDate(date)}\n                                dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={6} sm={12}>\n                              <Button color=\"primary\" className=\"default mt-4 mr-2\" disabled={buttonDisabled} onClick={() =>{setButtonType(1);setPageCount(1);handleSubmit();}} >\n                                <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Generate Report</b>\n                              </Button>\n                              <Button color=\"success\" className=\"default mt-4\" disabled={buttonDisabled} onClick={() =>{setButtonType(2);handleSubmit();}}  >\n                                <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Download Report</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                        </CardBody>\n                    </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n      <Row>\n          <Colxx sm={12} lg={12}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Colxx md=\"6\">\n                    <h3>Faults and Alerts Report</h3>\n                  </Colxx>\n                  {report.length>0 &&\n                    <Colxx md=\"6\">\n                      <div className=\"text-right mr-2 \">\n                        <span>Page </span>\n                        <UncontrolledDropdown className=\"d-inline-block\">\n                          <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                            {pageCount}\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdownMenu\">\n                            {renderPageList()}\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <span> of </span>\n                        {lastPageCount}\n                      </div>\n                    </Colxx>\n                  }\n                </Row>\n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Station</th>\n                      <th>Charger ID</th>\n                      <th>Connnector ID</th>\n                      <th>Date of occurrence</th>\n                      <th>Time of occurrence</th>\n                      <th>Alarm Detail</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {isLoading ?\n                        <tr>\n                            <td className=\"text-center\" colSpan=\"7\"><div className=\"custom-list-loading\" /></td>\n                        </tr> : \n                        report.length > 0 ?\n                            report.map((item,index)=>\n                            <tr key={index}>\n                              <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                              <td>{item.station_name}</td>\n                              <td>{item.charger_id}</td>\n                              <td>{item.connector_id}</td>\n                              <td>{item.occur_date}</td>\n                              <td>{item.occur_time}</td>\n                              <td>{item.alarms}</td>\n                            </tr>\n                            ):\n                            <tr>\n                            <td className=\"text-center text-danger\" colSpan=\"7\">Data  Not  Found</td>\n                            </tr>                            \n                    }                    \n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default FaultsAndAlerts;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport IconCard from '../../../../components/cards/IconCard';\nimport GlideComponent from \"../../../../components/carousel/GlideComponent\";\nconst IconCardsCarousel = ({ className = 'icon-cards-row' }) => {\n   \n\n  return (\n    <div className={className}> \n      {/* <GlideComponent\n        settings={{\n          gap: 2,\n          perView: 5,\n          type: 'carousel',\n          breakpoints: {\n            320: { perView: 1 },\n            520: { perView: 2 },\n            620: { perView: 3 },\n            720: { perView: 4 },\n            \n          },\n          hideNav: true,\n        }}\n      >\n        {mgr_carousel_data.map((item, index) => {\n          return (\n            <div key={`icon_card_${index}`}>\n              <IconCard {...item} className=\"mb-3\" />\n            </div>\n          );\n        })}\n      </GlideComponent>  */}\n      <div className=\"dashboard-top-row\">\n        {mgr_carousel_data.map((item, index) => {\n            return (\n              <div key={`icon_card_${index}`} className=\"dashboard-top-cards\">\n                <IconCard {...item} className=\"mb-3\" />\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\nlet mgr_carousel_data = [\n    {title: 'dashboard.active-charger',icon: 'iconsminds-flash-2',value: 0,},\n    {title: 'dashboard.connector',icon: 'iconsminds-plug-in',value: 0,},\n    { title: 'dashboard.batteries', icon: 'iconsminds-battery-100', value: 0 },\n    {title: 'dashboard.ev',icon: 'iconsminds-car',value: 0, },\n    { title: 'dashboard.otp', icon: 'simple-icon-envelope', value: 0 },\n  ];  \n  const setChargerCount = (value) => {mgr_carousel_data[0].value=value;};\n  const setConnectorCount = (value) => {mgr_carousel_data[1].value=value;};\n  const setBatteriesCount = (value) => {mgr_carousel_data[2].value=value;};\n  const setEVCount = (value) => {mgr_carousel_data[3].value=value;};\n  const setOTP = (value) => {mgr_carousel_data[4].value=value;};\n\n\n\nexport  {IconCardsCarousel,setChargerCount,setConnectorCount,setBatteriesCount,setEVCount,setOTP};\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row,\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport {getDashboardDataAPI} from '../../../constants/defaultValues'\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport axios from 'axios';\nimport { ThemeColors } from '../../../helpers/ThemeColors';\nimport {IconCardsCarousel,setChargerCount,setConnectorCount,setBatteriesCount,setEVCount} from './operator/cardCarousel';\nimport {ChargerDoughnut, setChargerChartData} from './operator/ChargerDoughnut';\nimport {ConnectorDoughnut,setConnectorChartData} from './operator/ConnectorDoughnut';\nimport {BatteryStatusChart,setBatteryChartData} from './operator/BatteryStatusChart';\n\n\nconst colors = ThemeColors();\n\nconst Operator_dashboard = ({ match }) => {\n \n  const [batteryStatus,setBatteryStatus] = useState('0'); //batteries chart dropdown\n   //Slots useState\n  const [refresh,setRefresh]= useState({});\n  useEffect(()=>{\n  \n    GetDashboardDataAPICall();\n  },[batteryStatus])\n\n  //API call\n  const GetDashboardDataAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getDashboardDataAPI,\n    {battery_satus_id:batteryStatus},\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n     setBatteriesCount(responseData.data.batteries.total)\n       \n       setChargerCount(responseData.data.chargers.total);\n      \n        setEVCount(responseData.data.ev.total);\n        setConnectorCount(responseData.data.slots.total);\n\n       setBatteryChartData(0,responseData.data.batteries.total,responseData.data.batteries.in_charging);\n       setBatteryChartData(1,responseData.data.batteries.total,responseData.data.batteries.charged);\n       setBatteryChartData(2,responseData.data.batteries.total,responseData.data.batteries.discharged);\n       setBatteryChartData(3,responseData.data.batteries.total,responseData.data.batteries.faulty);\n       setBatteryChartData(4,responseData.data.batteries.total,responseData.data.batteries.faulty);\n       \n       setChargerChartData(responseData.data.chargers.operational,responseData.data.chargers.faulty);\n       setConnectorChartData( responseData.data.slots.inuse,responseData.data.slots.available,responseData.data.slots.faulty);\n       setRefresh(responseData);\n          \n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n \n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n         <span className=\"page_title\">Operator Dashboard</span>\n         <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx lg=\"12\" xl=\"12\" md=\"12\">\n          <IconCardsCarousel />         \n        </Colxx>       \n      </Row>\n      <Row className=\"mb-12\">\n        <Colxx sm=\"12\" md=\"4\" className=\"mb-4\">\n          <ChargerDoughnut />\n        </Colxx>\n        <Colxx sm=\"12\" md=\"4\" className=\"mb-4\">\n          <BatteryStatusChart cardClass=\"dashboard-progress\"  />\n        </Colxx>\n    \n        <Colxx sm=\"12\" md=\"4\" className=\"mb-4\">\n          <ConnectorDoughnut />\n        </Colxx>       \n    </Row>\n    </>\n  );\n};\n\nexport default Operator_dashboard;"],"sourceRoot":""}