{"version":3,"sources":["components/common/CustomSelectInput.js","helpers/ThemeColors.js","components/charts/config.js","components/charts/Doughnut.js","components/charts/Line.js","components/charts/Pie.js","views/app/dashboard/operator/ChargerDoughnut.js","components/charts/util.js","views/app/dashboard/operator/ConnectorDoughnut.js","views/app/dashboard/operator/BatteryStatusChart.js","components/cards/IconCard.js","components/carousel/GlideComponent.js","views/app/dashboard/manager/cardCarousel.js","views/app/dashboard/manager/SwapChart.js","views/app/dashboard/manager/EnergyChart.js","views/app/dashboard/manager/KPICards.js","views/app/dashboard/manager/StationDoughnut.js","views/app/gogo/start.js","containers/navs/Breadcrumb.js","components/wizard/BottomNavigation.js","components/wizard/TopNavigation.js","views/app/pages/UserMaster.js","views/app/pages/AddUser.js","views/app/pages/UpdateUser.js","views/app/pages/RoleMaster.js","views/app/pages/AddRole.js","views/app/pages/BatteryMaster.js","views/app/pages/AddBattery.js","views/app/pages/UpdateBattery.js","views/app/pages/EvMaster.js","views/app/pages/AddEV.js","views/app/pages/UpdateEv.js","views/app/pages/BulkChargerMaster.js","views/app/pages/AddBulkCharger.js","views/app/pages/UpdateBulkCharger.js","views/app/pages/FleetMaster.js","views/app/pages/AddFleet.js","views/app/pages/UpdateFleet.js","views/app/pages/OwnerMaster.js","views/app/pages/AddOwner.js","views/app/pages/UpdateOwner.js","views/app/pages/OEMMaster.js","views/app/pages/AddOEM.js","views/app/pages/UpdateOem.js","views/app/pages/SwappingStationMaster.js","views/app/pages/AddSwappingStation.js","views/app/pages/UpdateSwappingStation.js","views/app/pages/FaultMaster.js","views/app/pages/AddFault.js","views/app/pages/UpdateFault.js","views/app/pages/CountryMaster.js","views/app/pages/StateMaster.js","views/app/pages/CityMaster.js","views/app/dashboard/Admin_dashboard.js","views/app/dashboard/Mgr_dashboard.js","views/app/mapping/Evmapping.js","views/app/mapping/AddEvmapping.js","views/app/mapping/Batterymapping.js","views/app/mapping/AddBatterymapping.js","views/app/mapping/Chargermapping.js","views/app/mapping/Stationmapping.js","views/app/mapping/StationDetail.js","views/app/operations/Transaction.js","views/app/operations/Queue.js","views/app/inventory/Battery.js","views/app/inventory/AddBattery.js","views/app/inventory/UpdateBatteryInventory.js","views/app/inventory/Charger.js","views/app/inventory/AddCharger.js","views/app/inventory/UpdateChargerInventory.js","views/app/inventory/EvInventoryMaster.js","views/app/inventory/AddEvInventory.js","views/app/inventory/UpdateEvInventory.js","views/app/reports/batterySwappingNetworkReport.js","views/app/reports/batteryHistoricalData.js","views/app/reports/chargingSummary.js","views/app/reports/swappingTransaction.js","views/app/reports/swap.js","views/app/reports/weeklyBillingRef.js","views/app/reports/faultsAndAlerts.js","views/app/dashboard/operator/cardCarousel.js","views/app/dashboard/Operator_dashboard.js"],"names":["CustomSelectInput","props","customProps","autoCorrect","autoCapitalize","Input","ThemeColors","rootStyle","getComputedStyle","document","body","themeColor1","getPropertyValue","trim","themeColor2","themeColor3","themeColor4","themeColor5","themeColor6","themeColor1_10","themeColor2_10","themeColor3_10","themeColor4_10","themeColor5_10","themeColor6_10","primaryColor","foregroundColor","separatorColor","lineChartOptions","legend","display","position","responsive","maintainAspectRatio","tooltips","chartTooltip","plugins","datalabels","scales","yAxes","gridLines","lineWidth","color","drawBorder","ticks","beginAtZero","padding","xAxes","pieChartOptions","labels","usePointStyle","fontSize","title","layout","bottom","doughnutChartOptions","cutoutPercentage","Doughnut","data","shadow","chartContainer","useRef","current","Chart","defaults","doughnutWithShadow","doughnut","controllers","extend","draw","ease","prototype","call","this","ctx","chart","save","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","apply","arguments","restore","context","getContext","newChartInstance","destroy","type","options","centerTextPlugin","ref","Line","useState","setChartInstance","useEffect","lineWithShadow","line","stroke","Pie","pieWithShadow","pie","colors","ChargerDoughnut","controls","className","id","caret","outline","right","loading2","doughnutChartData1","blankMsg","doughnutChartData","datasets","label","borderColor","backgroundColor","borderWidth","setBlankMsg","value","setChargerChartData","oprntl","flty","titleFontColor","bodyFontColor","bodySpacing","xPadding","yPadding","cornerRadius","afterDatasetsUpdate","beforeDraw","width","chartArea","height","activeLabel","activeValue","dataset","meta","_meta","Object","keys","total","newtotal","reduce","a","b","activePercentage","parseFloat","toFixed","legendItems","hidden","pointAvailable","pointIndex","pointDataIndex","font","fillStyle","textBaseline","text","textX","Math","round","measureText","textY","fillText","text2","textX2","textY2","beforeEvent","event","firstPoint","getElementAtEvent","_index","_datasetIndex","ConnectorDoughnut","chartClass","loading4","polarAreaChartData1","polarAreaChartData","setConnectorChartData","in_use","available","faulty","setLoading4","BatteryStatusChart","cardClass","loading3","map","s","index","key","status","data1","setBatteryChartData","React","memo","icon","resizeTimeOut","mountTimeOut","GlideComponent","Component","constructor","super","onResize","bind","renderDots","componentDidMount","initGlide","componentDidUpdate","destroyGlide","componentWillUnmount","clearTimeout","setTimeout","glideCarousel","update","Glide","carousel","settings","direction","getDirection","mount","on","createEvent","initEvent","window","dispatchEvent","Children","count","children","dots","i","push","data-glide-dir","render","node","data-glide-el","hideNav","defaultProps","IconCardsCarousel","mgr_carousel_data","item","setStationCount","setChargerCount","setConnectorCount","setBatteriesCount","setEVCount","moment","require","today","add","format","dateLabel","Array","fill","subtract","total_last_7","SwapChartCard","showSwapChart","SwapChartData1","SwapChartData","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointBorderWidth","pointHoverRadius","setshowSwapChart","setSwapChartData","responseData","swapping","date","complete_swap_data","EnergyChartCard","abbreviateNumber","showEnergyChart","EnergyChartData1","EnergyChartData","false","setshowEnergyChart","setEnergyChartData","energy_sold","num","fixed","toPrecision","split","k","length","floor","min","slice","c","pow","abs","KPICards","last30","setKPIChartData","StationDoughnut","setStationChartData","Start","match","intl","forms","createRef","bottomNavHidden","setBottomNavHidden","bottomNavHidden1","setBottomNavHidden1","loading","setLoading","loading1","setLoading1","QR1","setQR1","QR2","setQR2","QR3","setQR3","QR4","setQR4","QR5","setQR5","QR6","setQR6","_otp","setOTPStart","qrscan_val1","setqrscan_val1","qrscan_val2","setqrscan_val2","qrscan_val3","setqrscan_val3","qrscan_otp","setqrscan_otp","qrscan_val4","setqrscan_val4","qrscan_val5","setqrscan_val5","qrscan_val6","setqrscan_val6","handleScanQR1","resp","handleScanQR2","replace","handleScanQR3","handleScanQR4","handleScanQR5","handleScanQR6","btnScanQR1","e","btnScanQR2","btnScanQR3","btnScanQR4","btnScanQR5","btnScanQR6","valid","name","val_id","fields","setFields","createNotification","NotificationManager","error","validateOTP","test","validateScanEV","validateScanEV1","validatedischarge_bt1","validatedischarge_bt2","validatecharge_bt1","validatecharge_bt2","asyncLoading","extraIndex","stopAsyncLoading","onClickNext","goToNext","steps","step","indexOf","formIndex","form","submitForm","then","newFields","values","errors","eval","validateScanEVAPICall","scanevVal","res","isDone","msg","catch","validateScanBatteryAPICall","batterytype","battery_sq","batteryqrval","validateStartOTPAPI","otp","validatePairEVAPICall","ev_qr_code","onClickPrev","goToPrev","currentUser","getCurrentUser","axios","post","validateOTPAPI","headers","token","loginRes","validateScanEVAPI","scanevres","validatePairEVAPI","validateScanBatteryAPI","scanbatteryres","messages","xxs","heading","disableNav","desc","innerRef","initialValues","scanev1","onSubmit","touched","onChange","target","validate","onClick","lg","md","sm","delay","onError","onScan","style","discharge_bt1","discharge_bt2","hideTopNav","hidebottomnav","previous","location","reload","prevLabel","nextLabel","actions","placeholder","scanev","charge_bt1","charge_bt2","injectIntl","getMenuTitle","sub","adminRoot","getUrl","path","BreadcrumbItems","substr","paths","filter","x","active","to","BreadcrumbContainer","BottomNavigation","next","TopNavigation","topNavClick","getClassName","stepItem","go","itemClick","UserMaster","alertVisible","setAlertVisible","alertMsg","setAlertMsg","alertColor","setAlertColor","modalVisible","setModalVisible","searchBy","setSearchBy","pageCount","setPageCount","lastPageCount","setLastPageCount","userList","setUserList","userID","setUserID","userToDeleleteId","setUserToDeleleteId","isLoading","setIsLoading","history","useHistory","useLocation","getUserListAPICall","userAlert","get","getUserListAPI","Authorization","response","last_page","console","log","deleteUserAPICall","userId","deleteUserAPI","user_id","userDeletedAlert","state","undefined","responseStatus","responseMsg","toggleModal","href","size","data-display","pageNumbers","renderPageList","isOpen","toggle","bordered","striped","colSpan","scope","username","contact_number","email","role_name","pathname","AddUser","selectedOptions","setSelectedOptions","userRolesList","setUserRolesList","buttonDisabled","setButtonDisabled","getUserRolesAPICall","getUserRolesAPI","userRoles","addUserAPICall","params","addUserAPI","addUserAlert","onDismissAlert","UserDetailsValidationSchema","yup","shape","required","matches","password","confirm_password","equals","validationSchema","roles","handleChange","handleBlur","handleSubmit","onBlur","components","classNamePrefix","disabled","goBack","UpdateUser","setName","setEmail","contactNumber","setContactNumber","setUsername","errorConfirmPassword","setErrorConfirmPassword","getUserByIdAPICall","getUserByIdAPI","tempData","updateUserAPICall","updateUserAPI","updateUserAlert","nullable","enableReinitialize","roleValue","isArray","RoleMaster","AddRole","BatteryMaster","collapse1","setCollapse1","collapse2","setCollapse2","collapse3","setCollapse3","collapse4","setCollapse4","collapse5","setCollapse5","collapse6","setCollapse6","collapse7","setCollapse7","infoModalVisible","setInfoModalVisible","batteryList","setBatteryList","batteryID","setBatteryID","batteryToDeleteId","setBatteryToDeleteId","batteryInfo","setBatteryInfo","batteryAllData","setBatteryAllData","makYear","setMakeYear","chemistry","setChemistry","getBatteryListAPICall","batteryAlert","getBatteryListAPI","deleteBatteryAPICall","batteryId","deleteBatterytAPI","battery_master_id","batteryDeletedAlert","toggleInfoModal","batteryItem","tempAllData","all_data","JSON","parse","make_year","month","year","oem_name","model_name","type_of_connector","minimum_delivered","nominal_capacity","minimum_capacity","series_cell","parallel_cell","cell_type","cell_make","total_cells","nominal_voltage","pack_configuration","bms_type","weight","dimension","remark_1","remark_2","operating_voltage_range","charging_mode","recommended_voltage","discharging_current","pulsed_discharge_current","standard_charging_current","cell_low_protection_level","cell_low_protection_recovery","cell_high_protection_level","cell_high_protection_recovery","battery_cells_efficiency","battery_cells_faliure","battery_pack_efficiency","battery_pack_faliure","bleeding_start_voltage","over_temp_pro_dis","over_temp_recovery_dis","over_temp_pro_charge","over_temp_recovery_charge","ec_remark_1","ec_remark_2","max_working_temp","storage_temp","temp_control_cell","temp_control_pack","temp_control_swapping","tc_remark_1","tc_remark_2","module_dimension","cabinet_design","degradation_sensors","power_connector","rs_can","casing","mc_remark_1","mc_remark_2","cell_over_voltage","cell_under_voltage","charging_over_current","discharging_over_current","output_short_circuit","cell_temp_protection_discharging","p_remark_1","p_remark_2","cycle_life","capacity_retention","depth_discharge","w_remark_1","w_remark_2","communication_prototcol","network_communication","i_remark_1","i_remark_2","AddBattery","oem","setOem","oemList","setOemList","setMonth","setYear","imageSelected","setImageSelected","imagePreview","setImagePreview","imageErrorFLag","setImageErrorFlag","imageKey","setImageKey","getOemAPICall","getOemAPI","oem_id","addBatteryAlert","addBatteryAPICall","addBatteryAPI","BatteryDetailsValidationSchema","getYear","yearList","temp","gc_remark_1","gc_remark_2","formData","FormData","append","stringify","isValid","accept","imageFile","fileExtension","pop","URL","createObjectURL","handleImageSelect","files","src","alt","UpdateBattery","imageFilePath","setImageFilePath","modelName","setModelName","connectorType","setConnectorType","gcRemark1","setGcRemark1","gcRemark2","setGcRemark2","nominalCapacity","setNominalCapacity","minimumCapacity","setMinimumCapacity","seriesCell","setSeriesCell","parallelCell","setParallelCell","cellType","setCellType","cellMake","setCellMake","totalCells","setTotalCells","nominalVoltage","setNominalVoltage","minimumDelivered","setMinimumDelivered","packConfiguration","setPackConfiguration","bmsType","setBmsType","setWeight","setDimension","operatingVoltageRange","setOperatingVoltageRange","chargingMode","setChargingMode","recommendedVoltage","setRecommendedVoltage","dischargingCurrent","setDischargingCurrent","pulsedDischargeCurrent","setPulsedDischargeCurrent","standardChargingCurrent","setStandardChargingCurrent","cellLowProtectionLevel","setCellLowProtectionLevel","cellLowProtectionRecovery","setCellLowProtectionRecovery","cellHighProtectionLevel","setCellHighProtectionLevel","cellHighProtectionRecovery","setCellHighProtectionRecovery","batteryCellsEfficiency","setBatteryCellsEfficiency","batteryCellsFaliure","setBatteryCellsFaliure","batteryPackEfficiency","setBatteryPackEfficiency","batteryPackFaliure","setBatteryPackFaliure","bleedingstartvoltage","setBleedingstartvoltage","overTempProDis","setOverTempProDis","overTempRecoveryDis","setOverTempRecoveryDis","overTempProCharge","setOverTempProCharge","overTempRecoveryCharge","setOverTempRecoveryCharge","maxWorkingTemp","setMaxWorkingTemp","storageTemp","setStorageTemp","tempControlCell","setTempControlCell","tempControlPack","setTempControlPack","tempControlSwapping","setTempControlSwapping","moduleDimension","setModuleDimension","cabinetDesign","setCabinetDesign","degradationSensors","setDegradationSensors","powerConnector","setPowerConnector","rsCan","setRsCan","setCasing","cellOverVoltage","setCellOverVoltage","cellUnderVoltage","setCellUnderVoltage","chargingOverCurrent","setChargingOverCurrent","dischargingOverCurrent","setDischargingOverCurrent","outputShortCircuit","setOutputShortCircuit","cellTempProtectionDischarging","setCellTempProtectionDischarging","cycleLife","setCycleLife","capacityRetention","setCapacityRetention","depthDischarge","setDepthDischarge","communicationPrototcol","setcommunicationPrototcol","networkCommunication","setNetworkCommunication","ecRemark1","setEcRemark1","ecRemark2","setEcRemark2","tcRemark1","setTcRemark1","tcRemark2","setTcRemark2","mcRemark1","setMcRemark1","mcRemark2","setMcRemark2","pRemark1","setPRemark1","pRemark2","setPRemark2","wRemark1","setWRemark1","wRemark2","setWRemark2","iRemark1","setIRemark1","iRemark2","setIRemark2","getBatteryByIdAPICall","updateBatteryAlert","getBatteryByIdAPI","allData","file_img","file_name_path","updateBatteryAPICall","updateBatteryAPI","EvMaster","evList","setEvList","evID","setEvID","evToDeleteId","setEvToDeleteId","getEvListAPICall","evAlert","getEvListAPI","deleteEvAPICall","evId","deleteEvAPI","ev_master_id","evDeletedAlert","vehicle_model","vehicle_make","vehicle_type","battery_capacity","fleet_operator_name","ev_driver","AddEV","fleetOpNames","setFleetOpNames","GetFleetOperatorAPICall","getFleetOperatorAPI","addEvAPICall","addEvAPI","evAddedAlert","EvDetailsValidationSchema","fleet_owner_id","fleet_operator_id","UpdateEv","vehicleModel","setVehicleModel","vehicleMake","setVehicleMake","vehicleType","setVehicleType","batteryCapacity","setBatteryCapacity","fleetOwner","setFleetOwner","evDriver","setEvDriver","remark1","setRemark1","remark2","setRemark2","getEvByIdAPICall","getEvByIdAPI","evUpdatedAlert","updateEvAPICall","updateEvAPI","BulkChargerMaster","bulkChargerList","setBulkChargerList","bulkChargerID","setBulkChargerID","bulkChargerToDeleteId","setBulkChargerToDeleteId","bulkChargerInfo","setBulkChargerInfo","bulkChargerAllData","setBulkChargerAllData","getBulkChargerListAPICall","bulkChargerAlert","getBulkChargerListAPI","deleteBulkChargerAPICall","bulkChargerId","deleteBulkChargerAPI","charger_master_id","bulkChargerDeletedAlert","bulkChargerItem","make","model","no_of_connetor","output_power","bulkCharger_master_id","battery_modules","battery_type","battery_slot_dimension","battery_slot_indicator","charging_connector","voltage","max_input_power","frequency","thd_power_factor","protection","charging_voltage","max_charging_current","power_of_each_battery_slot","full_load_power_of_each_slot","input_impedance","static_voltage_regulation","ripple_and_noise","output_protection","efficiency","acoustic_noise","operating_temp","humidity","ambient_pressure","temperature_sensor","accessories","battery_door_locking","thickness","colour","cable_entry","alarms","emergency_protection","cooling","ip_rating","mechanical","surge_protection","fire_safety","smoke_detector","thermal_detector","fire_suppresion_system","video_surevillance","water_level_sensor","mtbf","user_authentication","communication","indication","interface_mode","identification","user_interface","application_use","AddBulkCharger","addBulkChargerAlert","addBulkChargerAPICall","addBulkChargerAPI","BulkChargerDetailsValidationSchema","UpdateBulkCharger","batteryModules","setBatteryModules","batteryType","setBatteryType","batterySlotDimension","setBatterySlotDimension","noOfConnetor","setNoOfConnetor","batterySlotIndicator","setBatterySlotIndicator","chargingConnector","setChargingConnector","setVoltage","maxInputPower","setMaxInputPower","setFrequency","setCurrent","thdPowerFactor","setThdPowerFactor","setProtection","chargingVoltage","setChargingVoltage","outputPower","setOutputPower","maxChargingCurrent","setMaxChargingCurrent","powerOfEachBatterySlot","setPowerOfEachBatterySlot","fullLoadPowerOfEachSlot","setFullLoadPowerOfEachSlot","inputImpedance","setInputImpedance","staticVoltageRegulation","setStaticVoltageRegulation","rippleAndNoise","setRippleAndNoise","outputProtection","setOutputProtection","setEfficiency","acousticNoise","setAcousticNoise","operatingTemp","setOperatingTemp","setHumidity","ambientPressure","setAmbientPressure","setAccessories","batteryDoorLocking","setBatteryDoorLocking","setThickness","setColour","cableEntry","setCableEntry","setAlarms","emergencyProtection","setEmergencyProtection","setCooling","ipRating","setIpRating","setMechanical","surgeProtection","setSurgeProtection","fireSafety","setFireSafety","smokeDetector","setSmokeDetector","thermalDetector","setThermalDetector","fireSuppresionSystem","setFireSuppresionSystem","videoSurevillance","setVideoSurevillance","waterLevelSensor","setWaterLevelSensor","setMtbf","userAuthentication","setUserAuthentication","setDisplay","setCommunication","setIndication","interfaceMode","setInterfaceMode","setIdentification","userInterface","setUserInterface","applicationUse","setApplicationUse","getBulkChargerByIdAPICall","getBulkChargerByIdAPI","updateBulkChargerAlert","updateBulkChargerAPICall","updateBulkChargerAPI","FleetMaster","fleetOperatorList","setFleetOperatorList","fleetOperatorID","setFleetOperatorID","fleetOperatorToDeleteId","setFleetOperatorToDeleteId","getFleetOperatorListAPICall","fleetOperatorAlert","getFleetOperatorListAPI","deleteFleetOperatorAPICall","fleetOperatorId","deleteFleetOperatorAPI","fleetOperatorDeletedAlert","users_name","address","contact_person","contact_email","AddFleet","fleetOperatorUsers","setFleetOperatorUsers","getFleetOperatorUsersAPICall","getUsersByRolesAPI","user_role","users","fleetAddedAlert","addFleetOperatorAPICall","addFleetOperatorAPI","FleetOperatorDetailsValidationSchema","usersSelected","isMulti","UpdateFleet","contactPerson","setContactPerson","contactEmail","setContactEmail","setAddress","getFleetOperatorByIdAPICall","getFleetOperatorByIdAPI","fleetUpdatedAlert","updateFleetOperatorAPICall","updateFleetOperatorAPI","OwnerMaster","ownerList","setOwnerList","ownerID","setOwnerID","ownerToDeleleteId","setOwnerToDeleleteId","getOwnerListAPICall","ownerAlert","getOwnerListAPI","deleteOwnerAPICall","ownerId","deleteOwnerAPI","owner_master_id","ownerDeletedAlert","remark","AddOwner","addOwnerAPICall","addOwnerAPI","ownerAddedAlert","OwnerDetailsValidationSchema","UpdateOwner","ownerName","setOwnerName","setRemark","getOwnerByIdAPICall","getOwnerByIdAPI","ownerUpdatedAlert","updateOwnerAPICall","updateOwnerAPI","OEMMaster","oemID","setOemID","oemToDeleteId","setOemToDeleteId","getOemListAPICall","oemAlert","getOemListAPI","deleteOemAPICall","oemId","deleteOemAPI","oemDeletedAlert","AddOEM","oemUsers","setOemUsers","setType","getOemUsersAPICall","oemAddedAlert","addOemAPICall","addOemAPI","OemDetailsValidationSchema","UpdateOEM","getOemByIdAPICall","getOemUsersAPI","oemUpdatedAlert","getOemByIdAPI","updateOemAPICall","updateOemAPI","SwappingStationMaster","stationList","setStationList","stationID","setStationID","stationToDeleteId","setStationToDeleteId","getSwappingStationListAPI","stationAlert","getSwappingStationAPI","deleteSwappingStationAPICall","stationId","deleteSwappingStationAPI","hub_master_id","stationDeletedAlert","ev_capacity","city_name","state_name","country_name","station_id","AddSwappingStation","countryList","setCountryList","stateList","setStateList","cityList","setCityList","countryId","setCountryId","stateId","setStateId","cityId","setCityId","getCountryNamesAPICall","getCountriesAPI","getStateNamesAPICall","country","getStatesByCountryAPI","country_id","getCityNamesAPICall","getCitiesByStateAPI","state_id","addSwappingStationAPICall","addSwappingStationAPI","stationAddedAlert","StationDetailsValidationSchema","latitude","longitude","city_id","handleCountrySelect","handleStateSelect","handleCitySelect","city","UpdateSwappingStation","stationName","setStationName","evCapacity","setEvCapacity","setLongitude","setLatitude","stationAddress","setStationAddress","getStationByIdAPICall","getStationByIdAPI","stationUpdatedAlert","updateSwappingStationAPICall","updateSwappingStationAPI","FaultMaster","faultList","setFaultList","faultID","setFaultID","faultToDeleleteId","setFaultToDeleleteId","getFaultListAPICall","faultAlert","getFaultListAPI","deleteFaultAPICall","faultId","deleteFaultAPI","fault_master_id","faultDeletedAlert","bit_position","AddFault","setOemId","errorTypeFlag","setErrorTypeFlag","errorOemFlag","setErrorOemFlag","typeId","faultAddedAlert","addFaultAPICall","addFaultAPI","FaultDetailsValidationSchema","handleTypeSelect","typeValue","handleTypeBlur","handleOemSelect","oemValue","handleOemBlur","UpdateFault","faultTitle","setFaultTitle","setPosition","getFaultByIdAPICall","faultUpdatedAlert","getFaultByIdAPI","updateFaultAPICall","updateFaultAPI","CountryMaster","listFlag","setListFlag","toggleChange","setToggleChange","modalUpdateVisible","setModalUpdateVisible","buttonState","setButtonState","countryName","setCountryName","getCountryListAPICall","getCountryListAPI","getCountryByIdAPICall","getCountryByIdAPI","country_master_id","countryAlert","addCountryAPICall","addCountryAPI","updateCountryAPICall","updateCountryAPI","deleteCountryAPICall","deleteCountryAPI","toggleUpdateModal","CountryDetailsValidationSchema","StateMaster","stateName","setStateName","getStateListAPICall","getStateListAPI","stateAlert","getStateByIdAPICall","getStateByIdAPI","state_master_id","addStateAPICall","addStateAPI","updateStateAPICall","updateStateAPI","deleteStateAPICall","deleteStateAPI","StateDetailsValidationSchema","CityMaster","cityName","setCityName","getCityListAPICall","getCityListAPI","cityAlert","getCityByIdAPICall","getCityByIdAPI","city_master_id","addCityAPICall","addCityAPI","updateCityAPICall","updateCityAPI","deleteCityAPICall","deleteCityAPI","CityDetailsValidationSchema","Admin_dashboard","stationNameData","setStationNameData","setSwappingChartData","swappingDropHeader","setSwappingDropHeader","swappingStation","setSwappingStation","setChargerData","chargerStation","slotStation","GetStationNamesAPICall","GetDashboardDataAPICall","getStationsAPI","getDashboardDataAPI","station","batteries","chargers","ev","slots","in_charging","charged","discharged","out","operational","inuse","cumulative","misc","unit_30","avg_unit_per_ev_per_day","daily","swap_30","incomplete_swap_data","handleSwappingStationSelect","currentTarget","textContent","header","xl","Mgr_dashboard","Evmapping","evData","setEvData","selectedHub","setSelectedHub","updateEvMappingId","setUpdateEvMappingId","evType","setEvType","deleteEvMappingId","setDeleteEvMappingId","isUpdate","setIsUpdate","alertModalVisible","setAlertModalVisible","alertModalMsg","setAlertModalMsg","alertModalColor","setAlertModalColor","getEvMappingAPICall","getEvMappingAPI","getEvInventoryByIdAPICall","evInventoryId","getEvInventoryByIdAPI","ev_inventory_id","hub_id","mapEvAPICall","evMappingId","hubId","mapEvAPI","evMappingDeletedAlert","updateEvMappingDetails","e_qr_code","station_name","vehicle_vin","AddEvmapping","postdata","alert","Batterymapping","batteryMappingList","setBatteryMappingList","deleteBatteryId","setDeleteBatteryId","updateBatteryId","setUpdateBatteryId","setStationId","getBatteryMappingAPICall","getBatteryMappingAPI","mapBatteryAPICall","mapBatteryAPI","battery_inventory_id","updateBatteryMappingDetails","b_qr_code","serial_number","bin","soc","handleStationChange","AddBatterymapping","Chargermapping","chargerMappingList","setChargerMappingList","chargerType","setChargerType","deleteChargerId","setDeleteChargerId","updateChargerId","setUpdateChargerId","getChargerMappingAPICall","getChargerMappingAPI","mapChargerAPICall","chargerId","mapChargerAPI","charger_inventory_id","chargerDeletedAlert","updateChargerMappingDetails","qr_code","no_of_slot","owner_name","charger_id","Stationmapping","mapStation","StationDetail","unmapAlertVisible","setUnmapAlertVisible","fleetOutline","setFleetOutline","operatorOutline","setOperatorOutline","managerOutline","setManagerOutline","userRole","setUserRole","mappingId","setMappingId","unmapId","setUnmapId","mappedList","setMappedList","unmappedList","setUnmappedList","getMappingListByRoleAPICall","getFleetOperatorMappingListAPICall","getOperatorMappingListAPICall","getManagerMappingListAPICall","getFleetOperatorMappingListAPI","mapped_fleet_operator","other_fleet_operator","getUserMappingListByRoleAPI","mapped_user","other_user","MapByRoleAPICall","idToMap","mapstate","MapStationWithFleetAPICall","MapStationWithOperatorAPICall","MapStationWithManagerAPICall","fleetId","mapFleetOperatorAPI","mapAlert","unMapAlert","mapByRoleAPI","unMapID","sortDetail","hubName","hub_name","fleet_id","Transaction","transactionList","setTransactionList","status_val","getTransactionAPICall","getTransactionAPI","transaction_log_id","operator","discharged_battery_bin_1","discharged_battery_soc_1","discharged_battery_bv_1","discharged_battery_rec_1","charged_battery_bin_1","charged_battery_soc_1","charged_battery_bv_1","charged_battery_rec_1","discharged_battery_bin_2","discharged_battery_soc_2","discharged_battery_bv_2","discharged_battery_rec_2","charged_battery_bin_2","charged_battery_soc_2","charged_battery_bv_2","charged_battery_rec_2","end_otp","Queue","getQueueLogAPICall","getQueueLogAPI","queue_master_id","registration_no","discharged_b1_qr_code","charged_b1_qr_code","discharged_b2_qr_code","charged_b2_qr_code","Battery","faultModalVisible","setFaultModalVisible","batteryInventoryList","setBatteryInventoryList","batteryInventoryID","setBatteryInventoryID","batteryInventoryToDeleteId","setBatteryInventoryToDeleteId","getBatteryInventoryListAPICall","batteryInventoryAlert","getBatteryInventoryListAPI","deleteBatteryInventoryAPICall","batteryInventoryId","deleteBatteryInventoryAPI","batteryInventoryDeletedAlert","toggleFaultModal","faults","imei","bv","rec","lat","lon","total_alarm","alarm_list","ownerNameData","setOwnerNameData","batteryData","setBatteryData","GetOwnerNamesAPICall","GetBatteryDataAPICall","getOwnersAPI","getBatteryDataAPI","addBatteryInventoryAPICall","addBatteryInventoryAPI","addBatteryInventoryAlert","BatteryInventoryDetailsValidationSchema","own_by","UpdateBatteryInventory","setBin","serialNumber","setSerialNumber","bQrCode","setBQrCode","setHubId","ownBy","setOwnBy","batteryMasterId","setBatteryMasterId","setImei","setSoc","setBv","setRec","setLat","setLon","getBatteryInventoryByIdAPICall","getBatteryInventoryByIdAPI","updateBatteryInventoryAPICall","updateBatteryInventoryAPI","UpdateBatteryInventoryAlert","Charger","chargerInventoryList","setChargerInventoryList","chargerInventoryID","setChargerInventoryID","chargerInventoryToDeleteId","setChargerInventoryToDeleteId","getChargerInventoryListAPICall","chargerInventoryAlert","getChargerInventoryListAPI","deleteChargerInventoryAPICall","chargerInventoryId","deleteChargerInventoryAPI","chargerInventoryDeletedAlert","AddCharger","chargerMasterData","setChargerMasterData","GetChargerMasterAPICall","getChargerAPI","addChargerInventoryAPICall","addChargerInventoryAPI","addChargerInventoryAlert","ChargerInventoryDetailsValidationSchema","numberOfSlots","of","slot_id","slots_data","setValues","field","previousNumber","parseInt","splice","onChangeSlots","ticket","ticketErrors","ticketTouched","component","UpdateChargerInventory","setChargerId","qrCode","setQrCode","chargerMasterId","setChargerMasterId","noOfSlot","setNoOfSlot","slotData","setSlotData","getChargerInventoryByIdAPICall","getChargerInventoryByIdAPI","updateChargerInventoryAPICall","updateChargerInventoryAPI","updateChargerInventoryAlert","EvInventoryMaster","evInventoryList","setEvInventoryList","evInventoryID","setEvInventoryID","evInventoryToDeleteId","setEvInventoryToDeleteId","getEvInventoryListAPICall","evInventoryAlert","getEvInventoryListAPI","deleteEvInventoryAPICall","deleteEvInventoryAPI","evInventoryDeletedAlert","vechicle_id","AddEvInventory","GetEvDataAPICall","getEvAPI","addEvInventoryAPICall","addEvInventoryAPI","addEvInventoryAlert","EvInventoryDetailsValidationSchema","UpdateEvInventory","eQrCode","setEQrCode","evMasterId","setEvMasterId","registrationNo","setRegistrationNo","vechicleId","setVechicleId","vechicleVin","setVechicleVin","updateEvInventoryAPICall","updateEvInventoryAPI","updateEvInventoryAlert","BatterySwappingNetworkReport","stationNames","setStationNames","report","setReport","getStationsByCityAPI","getBSNReportAPICall","page","bsnReportAPI","downloadBSNReportAPICall","downloadBsnReportAPI","link","createElement","file","appendChild","click","removeChild","total_ev","total_charger","total_connector","total_batteries","BatteryHistoricalData","fromDate","setFromDate","toDate","setToDate","downloadExcelReport","tempFromDate","tempToDate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","from_date","to_date","historyReportAPI","showTimeInput","placeholderText","selected","dateFormat","ChargingSummary","fleetSelectedOptions","setFleetSelectedOptions","stationSelectedOptions","setStationSelectedOptions","stations","fleet","ChargingSummaryDetailsValidationSchema","connector_id","fleetSelected","stationSelected","SwappingTransaction","setFleetOperatorId","evQrCode","setEvQrCode","getSwappingTransactionReportAPICall","operator_id","swappingTransactionReportAPI","downloadSwappingReportAPICall","downloadSwappingReportAPI","rowSpan","start_time","end_time","SwapReport","getSwapReportAPICall","swapReportAPI","downloadSwapReportAPICall","downloadSwapReportAPI","WeeklyBillingRef","buttonType","setButtonType","fromDateError","setFromDateError","toDateError","setToDateError","dates","setDates","reportParams","setReportParams","getWeeklyBillRefReportAPICall","weeklyBillRefReportAPI","energy_data","selected_week_dates","downloadWeeklyBillRefReportAPICall","downloadWeeklyBillRefReportAPI","Day_1","Day_2","Day_3","Day_4","Day_5","Day_6","Day_7","total_energy_supp","total_bill_amount","FaultsAndAlerts","getFaultReportAPICall","faultReportAPI","downloadFaultReportAPICall","downloadfaultReportAPI","owner_id","occur_date","occur_time","IconCard","Operator_dashboard","batteryStatus","setRefresh","battery_satus_id","Row"],"mappings":"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","file":"static/js/start.82990889.chunk.js","sourcesContent":["import React from 'react';\nimport { components } from 'react-select';\n\nconst CustomSelectInput = (props) => {\n  const customProps = { ...props };\n  delete customProps.autoCorrect;\n  delete customProps.autoCapitalize;\n  return <components.Input {...customProps} />;\n};\n\nexport default CustomSelectInput;\n","export const ThemeColors = () => {\n  const rootStyle = getComputedStyle(document.body);\n  return {\n    themeColor1: rootStyle.getPropertyValue('--theme-color-1').trim(),\n    themeColor2: rootStyle.getPropertyValue('--theme-color-2').trim(),\n    themeColor3: rootStyle.getPropertyValue('--theme-color-3').trim(),\n    themeColor4: rootStyle.getPropertyValue('--theme-color-4').trim(),\n    themeColor5: rootStyle.getPropertyValue('--theme-color-5').trim(),\n    themeColor6: rootStyle.getPropertyValue('--theme-color-6').trim(),\n    themeColor1_10: rootStyle.getPropertyValue('--theme-color-1-10').trim(),\n    themeColor2_10: rootStyle.getPropertyValue('--theme-color-2-10').trim(),\n    themeColor3_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor4_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor5_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor6_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    primaryColor: rootStyle.getPropertyValue('--primary-color').trim(),\n    foregroundColor: rootStyle.getPropertyValue('--foreground-color').trim(),\n    separatorColor: rootStyle.getPropertyValue('--separator-color').trim(),\n  };\n};\n","import { chartTooltip } from './util';\n\nexport const lineChartOptions = {\n  legend: {\n    display: false,\n    position: 'bottom',\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  tooltips: chartTooltip,\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n           beginAtZero: true,\n          // stepSize: 10,\n          // min: 0,\n          // max: 100,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: true,\n        },\n      },\n    ],\n  },\n};\nexport const polarAreaChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scale: {\n    ticks: {\n      display: false,\n    },\n  },\n  plugins: {\n    datalabels: {\n      display: false,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const areaChartOptions = {\n  legend: {\n    display: false,\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  tooltips: chartTooltip,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 10,\n          min: 10,\n          max: 100,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n  },\n};\n\nexport const scatterChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 20,\n          min: -80,\n          max: 80,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n        },\n      },\n    ],\n  },\n  tooltips: chartTooltip,\n\n  // legend: {\n  //   position: 'bottom',\n  //   labels: {\n  //     padding: 30,\n  //     usePointStyle: true,\n  //     fontSize: 12,\n  //   },\n  // },\n  // responsive: true,\n  // maintainAspectRatio: false,\n  // scales: {\n  //   yAxes: [\n  //     {\n  //       gridLines: {\n  //         display: true,\n  //         lineWidth: 1,\n  //         color: 'rgba(0,0,0,0.1)',\n  //         drawBorder: false,\n  //       },\n  //       ticks: {\n  //         beginAtZero: true,\n  //         stepSize: 20,\n  //         min: -80,\n  //         max: 80,\n  //         padding: 20,\n  //       },\n  //     },\n  //   ],\n  //   xAxes: [\n  //     {\n  //       gridLines: {\n  //         display: true,\n  //         lineWidth: 1,\n  //         color: 'rgba(0,0,0,0.1)',\n  //       },\n  //     },\n  //   ],\n  // },\n};\n\nexport const barChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        gridLines: {\n          display: true,\n          lineWidth: 1,\n          color: 'rgba(0,0,0,0.1)',\n          drawBorder: false,\n        },\n        ticks: {\n          beginAtZero: true,\n          stepSize: 100,\n          min: 300,\n          max: 800,\n          padding: 20,\n        },\n      },\n    ],\n    xAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n      },\n    ],\n  },\n  tooltips: chartTooltip,\n};\n\nexport const radarChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  scale: {\n    ticks: {\n      display: false,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const pieChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  title: {\n    display: false,\n  },\n  layout: {\n    padding: {\n      bottom: 20,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const doughnutChartOptions = {\n  legend: {\n    position: 'bottom',\n    labels: {\n      padding: 30,\n      usePointStyle: true,\n      fontSize: 12,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  title: {\n    display: false,\n  },\n  cutoutPercentage: 80,\n  layout: {\n    padding: {\n      bottom: 20,\n    },\n  },\n  tooltips: chartTooltip,\n};\n\nexport const smallLineChartOptions = {\n  layout: {\n    padding: {\n      left: 5,\n      right: 5,\n      top: 10,\n      bottom: 10,\n    },\n  },\n  responsive: true,\n  maintainAspectRatio: false,\n  legend: {\n    display: false,\n  },\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n        display: false,\n      },\n    ],\n    xAxes: [\n      {\n        display: false,\n      },\n    ],\n  },\n};\n","/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { centerTextPlugin } from './util';\nimport { doughnutChartOptions } from './config';\n\nconst Doughnut = ({ data, shadow = false }) => {\n  const chartContainer = useRef(null);\n  // const [, setChartInstance] = useState(null);\n  if (chartContainer && chartContainer.current) {\n    if (shadow) {\n      Chart.defaults.doughnutWithShadow = Chart.defaults.doughnut;\n      Chart.controllers.doughnutWithShadow = Chart.controllers.doughnut.extend(\n        {\n          draw(ease) {\n            Chart.controllers.doughnut.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.15)';\n            ctx.shadowBlur = 10;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 10;\n            ctx.responsive = true;\n            Chart.controllers.doughnut.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        }\n      );\n    }\n    const context = chartContainer.current.getContext('2d');\n    let newChartInstance;\n    if(newChartInstance){newChartInstance.destroy()};\n    newChartInstance = new Chart(context, {\n      type: shadow ? 'doughnutWithShadow' : 'doughnut',\n      options: doughnutChartOptions,\n      plugins: [centerTextPlugin],\n      data,\n    });\n    // setChartInstance(newChartInstance);\n  }\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default Doughnut;\n","/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { lineChartOptions } from './config';\n\nconst Line = ({ data, shadow = false }) => {\n  \n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      if (shadow) {\n        Chart.controllers.lineWithShadow = Chart.controllers.line;\n        Chart.controllers.lineWithShadow = Chart.controllers.line.extend({\n          draw(ease) {\n            Chart.controllers.line.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.15)';\n            ctx.shadowBlur = 10;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 10;\n            ctx.responsive = true;\n            ctx.stroke();\n            Chart.controllers.line.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        });\n      }\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: shadow ? 'lineWithShadow' : 'line',\n        options: lineChartOptions,\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data, shadow]);\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default Line;\n","/* eslint-disable prefer-rest-params */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { pieChartOptions } from './config';\n\nconst Pie = ({ data, shadow = false }) => {\n  const chartContainer = useRef(null);\n  const [, setChartInstance] = useState(null);\n\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      if (shadow) {\n        Chart.defaults.pieWithShadow = Chart.defaults.pie;\n        Chart.controllers.pieWithShadow = Chart.controllers.pie.extend({\n          draw(ease) {\n            Chart.controllers.pie.prototype.draw.call(this, ease);\n            const {\n              chart: { ctx },\n            } = this;\n            ctx.save();\n            ctx.shadowColor = 'rgba(0,0,0,0.15)';\n            ctx.shadowBlur = 10;\n            ctx.shadowOffsetX = 0;\n            ctx.shadowOffsetY = 10;\n            ctx.responsive = true;\n            Chart.controllers.pie.prototype.draw.apply(this, arguments);\n            ctx.restore();\n          },\n        });\n      }\n      const context = chartContainer.current.getContext('2d');\n      const newChartInstance = new Chart(context, {\n        type: shadow ? 'pieWithShadow' : 'pie',\n        options: pieChartOptions,\n        data,\n      });\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer, data, shadow]);\n\n  return <canvas ref={chartContainer} />;\n};\n\nexport default Pie;\n","import React from 'react';\nimport { Card, CardBody, CardTitle, UncontrolledDropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu, Spinner} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { DoughnutChart } from '../../../../components/charts';\n\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\n\nconst colors = ThemeColors();\n\n\nconst ChargerDoughnut =  ({ controls = false })  => {\n  return (\n    <Card className=\"dashboard-my-card\">\n      <CardBody>\n         <CardTitle>\n          <IntlMessages id=\"dashboard.charger\" />\n          {controls && (\n          <div className=\"btn-group float-right float-none-xs \">\n            <UncontrolledDropdown>\n              <DropdownToggle caret color=\"primary\" className=\"btn-xs\" outline>\n                <IntlMessages id=\"dashboard.all\" />\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.operational\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.faulty\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        )}\n        </CardTitle>\n      {loading2 && (\n                  <div className=\"dashboard-donut-chart\">\n                  <DoughnutChart  data={doughnutChartData1} />\n                </div>\n              ) } { (!loading2 && !blankMsg) &&\n      <div className=\"dashboard-donut-chart\">\n        <DoughnutChart  data={doughnutChartData} />\n      </div>\n}\n{ blankMsg &&\n      <div className=\"dashboard-donut-chart text-center\">\n        Data Not Found\n      </div>\n}\n      </CardBody>\n    </Card>\n  );\n};\nconst doughnutChartData1 = {\n  labels: ['Operational', 'Faulty'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [ colors.themeColor2, colors.themeColor1],\n      backgroundColor: [\n        colors.themeColor3_10,\n        colors.themeColor2_10,\n      ],\n      borderWidth: 2,\n      data: [1, 0],\n    },\n  ],\n};\nconst doughnutChartData = {\n  labels: ['Operational', 'Faulty'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [ colors.themeColor2, colors.themeColor1],\n      backgroundColor: [\n        colors.themeColor3_10,\n        colors.themeColor2_10,\n      ],\n      borderWidth: 2,\n      data: [1, 0],\n    },\n  ],\n};\nlet loading2=true;\nlet blankMsg=false;\nconst  setLoading2 = (value) => {loading2=value};\nconst  setBlankMsg = (value) => {blankMsg=value};\n//const setChargerChartData = (index,value) => {doughnutChartData.datasets[0].data[index]=value;};\nconst setChargerChartData = (oprntl,flty) => {\n  doughnutChartData.datasets[0].data[0]=oprntl;\n  doughnutChartData.datasets[0].data[1]=flty;\n\n  if(oprntl==0 && flty==0)\n  {\n    setBlankMsg(true);\n    \n  }else\n  {\n   setBlankMsg(false);\n  }\n  setLoading2(false);\n  \n\n};\n\nexport  {ChargerDoughnut,setLoading2,setChargerChartData};\n","import { ThemeColors } from '../../helpers/ThemeColors';\n\nexport const chartTooltip = {\n  backgroundColor: ThemeColors().foregroundColor,\n  titleFontColor: ThemeColors().primaryColor,\n  borderColor: ThemeColors().separatorColor,\n  borderWidth: 0.5,\n  bodyFontColor: ThemeColors().primaryColor,\n  bodySpacing: 10,\n  xPadding: 15,\n  yPadding: 15,\n  cornerRadius: 0.15,\n};\n\nexport const centerTextPlugin = {\n  afterDatasetsUpdate(chart) {},\n  beforeDraw(chart) {\n    const width = chart.chartArea.right;\n    const height = chart.chartArea.bottom;\n    const { ctx } = chart.chart;\n    ctx.restore();\n\n    let activeLabel = chart.data.labels[0];\n    let activeValue = chart.data.datasets[0].data[0];\n    let dataset = chart.data.datasets[0];\n    let meta = dataset._meta[Object.keys(dataset._meta)[0]];\n    let { total } = meta;\n\n    let newtotal = (chart.data.datasets[0].data)?chart.data.datasets[0].data.reduce((a, b) => a+b):total;\n\n    let activePercentage = parseFloat(((activeValue / newtotal) * 100).toFixed(1));\n    activePercentage = chart.legend.legendItems[0].hidden\n      ? 0\n      : activePercentage;\n    if (chart.pointAvailable) {\n      activeLabel = chart.data.labels[chart.pointIndex];\n      activeValue =\n        chart.data.datasets[chart.pointDataIndex].data[chart.pointIndex];\n\n      dataset = chart.data.datasets[chart.pointDataIndex];\n      meta = dataset._meta[Object.keys(dataset._meta)[0]];\n      total = (chart.data.datasets[0].data)?chart.data.datasets[0].data.reduce((a, b) => a+b):meta.total;\n      activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1));\n      activePercentage = chart.legend.legendItems[chart.pointIndex].hidden\n        ? 0\n        : activePercentage;\n    }\n\n    ctx.font = '36px Nunito, sans-serif';\n    ctx.fillStyle = ThemeColors().primaryColor;\n    ctx.textBaseline = 'middle';\n\n    const text = `${activePercentage}%`;\n    const textX = Math.round((width - ctx.measureText(text).width) / 2);\n    const textY = height / 2;\n    ctx.fillText(text, textX, textY);\n\n    ctx.font = '14px Nunito, sans-serif';\n    ctx.textBaseline = 'middle';\n\n    const text2 = activeLabel;\n    const textX2 = Math.round((width - ctx.measureText(text2).width) / 2);\n    const textY2 = height / 2 - 30;\n    ctx.fillText(text2, textX2, textY2);\n\n    ctx.save();\n  },\n  beforeEvent(chart, event, options) {\n    const firstPoint = chart.getElementAtEvent(event)[0];\n\n    if (firstPoint) {\n      chart.pointIndex = firstPoint._index;\n      chart.pointDataIndex = firstPoint._datasetIndex;\n      chart.pointAvailable = true;\n    }\n  },\n};\n","import React from 'react';\nimport { Card, CardBody, CardTitle, UncontrolledDropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu, } from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { PolarAreaChart } from '../../../../components/charts';\nimport { DoughnutChart } from '../../../../components/charts';\nimport { PieChart } from '../../../../components/charts';\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\n\nconst colors = ThemeColors();\n\n\nconst ConnectorDoughnut =  ({ chartClass = 'dashboard-donut-chart', controls = false })  => {\n  return (\n    <Card className=\"dashboard-my-card\">\n      <CardBody>\n        <CardTitle>\n          <IntlMessages id=\"dashboard.connectors\" />\n          {controls && (\n          <div className=\"btn-group float-right float-none-xs \">\n            <UncontrolledDropdown>\n              <DropdownToggle caret color=\"primary\" className=\"btn-xs\" outline>\n                <IntlMessages id=\"dashboard.all\" />\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.in\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.out\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        )}\n        </CardTitle>\n      \n       \n        \n        {(loading4 ) && (\n                   <div className={chartClass}>\n                   <PieChart  data={polarAreaChartData1} />\n                 </div>\n                ) } { (!loading4 && !blankMsg) &&\n                  <div className={chartClass}>\n                  <PieChart  data={polarAreaChartData} />\n                </div>\n}\n{ blankMsg &&\n      <div className=\"dashboard-donut-chart text-center\">\n        Data Not Found\n      </div>\n}\n      </CardBody>\n    </Card>\n  );\n};\nconst polarAreaChartData1 = {\n  labels: ['In Use', 'Available', 'Faulty'],\n  datasets: [\n    {\n      data: [33, 33,34],\n      borderWidth: 2,\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\n      backgroundColor: [\n        colors.themeColor1_10,\n        colors.themeColor2_10,\n        colors.themeColor3_10,\n        \n      ],\n    },\n  ],\n};\nconst polarAreaChartData = {\n  labels: ['In Use', 'Available', 'Faulty'],\n  datasets: [\n    {\n      data: [33, 33,34],\n      borderWidth: 2,\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3, colors.themeColor4],\n      backgroundColor: [\n        colors.themeColor1_10,\n        colors.themeColor2_10,\n        colors.themeColor3_10,\n        colors.themeColor4_10,\n      ],\n    },\n  ],\n};\nconst  setBlankMsg = (value) => {blankMsg=value};\nlet blankMsg=false;\n\nconst setConnectorChartData = (in_use,available,faulty) => {\n\n if(in_use==0 && available==0 && faulty==0)\n {\n   setBlankMsg(true);\n   \n }else\n {\n  setBlankMsg(false);\n }\n\n  polarAreaChartData.datasets[0].data[0]=in_use;\n  polarAreaChartData.datasets[0].data[1]=available;\n  polarAreaChartData.datasets[0].data[2]=faulty;\n \n  // polarAreaChartData.labels[0]=\"In Use(\"+in_use+\")\";\n  // polarAreaChartData.labels[1]=\"Available(\"+available+\")\";\n  // polarAreaChartData.labels[2]=\"Faulty(\"+faulty+\")\";\n\n\n  setLoading4(false);\n  \n\n};\nlet loading4=true;\nconst  setLoading4 = (value) => {loading4=value};\n\nexport  {ConnectorDoughnut,setConnectorChartData};\n","import React from 'react';\nimport { Card, CardBody, CardTitle ,Progress,Spinner} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\n\n\nconst BatteryStatusChart =  ({ cardClass = 'dashboard-donut-chart' }) => {\n  return (\n    <Card className={cardClass}>\n      <CardBody>\n        <CardTitle>\n          <IntlMessages id=\"dashboard.batteries\" />\n        </CardTitle>\n        {loading3 && (\n                  <div className=\"text-center pt-3\">\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"dashboard.loading\" />\n                    </p>\n                  </div>\n                ) }\n        {(!loading3 && !blankMsg) && data.map((s, index) => {\n          return (\n            <div key={index} className=\"mb-4\">\n              <p className=\"mb-2\">\n                {s.title}\n                <span className=\"float-right text-muted\">\n                  {s.status}/{s.total}\n                </span>\n              </p>\n              <Progress value={(s.status / s.total) * 100} />\n            </div>\n          );\n        })}\n\n{(blankMsg) && data1.map((s, index) => {\n          return (\n            <div key={index} className=\"mb-4\">\n              <p className=\"mb-2\">\n                {s.title}\n                <span className=\"float-right text-muted\">\n                  {s.status}/{s.total}\n                </span>\n              </p>\n              <Progress value={(s.status / s.total) * 100} />\n            </div>\n          );\n        })}\n\n        \n        \n      </CardBody>\n    </Card>\n  );\n};\nconst  setBlankMsg = (value) => {blankMsg=value};\nlet blankMsg=false;\nconst data = [\n  {\n    title: 'In Charge',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Charged',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Discharged',\n    total: 0,\n    status: 0,\n    \n  },\n  {\n    title: 'Faulty',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Out',\n    total: 0,\n    status: 0,\n  },\n \n];\nconst data1 = [\n  {\n    title: 'In Charge',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Charged',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Discharged',\n    total: 0,\n    status: 0,\n    \n  },\n  {\n    title: 'Faulty',\n    total: 0,\n    status: 0,\n  },\n  {\n    title: 'Out',\n    total: 0,\n    status: 0,\n  },\n \n];\n\nconst setBatteryChartData = (index,total,status) => {data[index].status=status;data[index].total=total;\n\n  setBlankMsg(false);\n if(data[0].total==0 && data[1].total==0 && data[2].total==0 && data[3].total==0 && data[4].total==0)\n {\n   setBlankMsg(true);\n   \n }\n};\nlet loading3= false;\nconst  setLoading3 = (value) => {loading3=value};\n\nexport  {BatteryStatusChart,setBatteryChartData,setLoading3};\n","import React from 'react';\nimport { Card, CardBody } from 'reactstrap';\nimport IntlMessages from '../../helpers/IntlMessages';\n\nconst IconCard = ({ className = 'mb-4', icon, title, value }) => {\n  return (\n    <div className={`icon-row-item ${className}`}>\n      <Card>\n        <CardBody className=\"text-center\">\n          <i className={icon} />\n          <p className=\"card-text font-weight-semibold mb-0\">\n            <IntlMessages id={title} />\n          </p>\n          <p className=\"lead text-center\">{value}</p>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default React.memo(IconCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Glide from '@glidejs/glide';\nimport { getDirection } from '../../helpers/Utils';\nimport '@glidejs/glide/dist/css/glide.core.min.css';\n\nlet resizeTimeOut = -1;\nlet mountTimeOut = -1;\n\nclass GlideComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onResize = this.onResize.bind(this);\n    this.renderDots = this.renderDots.bind(this);\n  }\n\n  componentDidMount() {\n    this.initGlide();\n  }\n\n  componentDidUpdate() {\n    this.destroyGlide();\n    this.initGlide();\n  }\n\n  componentWillUnmount() {\n    this.destroyGlide();\n  }\n\n  onResize() {\n    clearTimeout(resizeTimeOut);\n    resizeTimeOut = setTimeout(() => {\n      this.glideCarousel.update();\n      resizeTimeOut = -1;\n    }, 500);\n  }\n\n  initGlide() {\n    this.glideCarousel = new Glide(this.carousel, {\n      ...this.props.settings,\n      direction: getDirection().direction,\n    });\n    this.glideCarousel.mount();\n    this.glideCarousel.on('resize', this.onResize);\n    mountTimeOut = setTimeout(() => {\n      const event = document.createEvent('HTMLEvents');\n      event.initEvent('resize', false, false);\n      window.dispatchEvent(event);\n    }, 500);\n  }\n\n  destroyGlide() {\n    clearTimeout(resizeTimeOut);\n    clearTimeout(mountTimeOut);\n    if (this.glideCarousel) {\n      this.glideCarousel.destroy();\n    }\n  }\n\n  renderDots() {\n    const total = React.Children.count(this.props.children);\n    const dots = [];\n    for (let i = 0; i < total; i++) {\n      dots.push(\n        <button\n          type=\"button\"\n          className=\"glide__bullet slider-dot\"\n          key={i}\n          data-glide-dir={`=${i}`}\n        />\n      );\n    }\n    return dots;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"glide\" ref={(node) => (this.carousel = node)}>\n          <div data-glide-el=\"track\" className=\"glide__track\">\n            <div className=\"glide__slides\">{this.props.children}</div>\n          </div>\n          {!this.props.settings.hideNav && (\n            <div className=\"glide__arrows slider-nav\" data-glide-el=\"controls\">\n              <button\n                type=\"button\"\n                className=\"glide__arrow glide__arrow--left left-arrow btn btn-link\"\n                data-glide-dir=\"<\"\n              >\n                <i className=\"simple-icon-arrow-left\" />\n              </button>\n\n              <div\n                className=\"glide__bullets slider-dot-container\"\n                data-glide-el=\"controls[nav]\"\n              >\n                {this.renderDots()}\n              </div>\n\n              <button\n                type=\"button\"\n                className=\"glide__arrow glide__arrow--right right-arrow btn btn-link\"\n                data-glide-dir=\">\"\n              >\n                <i className=\"simple-icon-arrow-right\" />\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nGlideComponent.defaultProps = {\n  settings: {},\n};\n\nGlideComponent.propTypes = {\n  settings: PropTypes.shape({\n    type: PropTypes.string,\n    startAt: PropTypes.number,\n    perView: PropTypes.number,\n    focusAt: PropTypes.oneOf([PropTypes.number, PropTypes.string]),\n    gap: PropTypes.number,\n    autoplay: PropTypes.bool,\n    hoverpause: PropTypes.bool,\n    keyboard: PropTypes.bool,\n    bound: PropTypes.bool,\n    swipeThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    dragThreshold: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    perTouch: PropTypes.oneOf([PropTypes.number, PropTypes.bool]),\n    touchRatio: PropTypes.number,\n    touchAngle: PropTypes.number,\n    animationDuration: PropTypes.number,\n    rewind: PropTypes.bool,\n    rewindDuration: PropTypes.number,\n    animationTimingFunc: PropTypes.string,\n    direction: PropTypes.string,\n    peek: PropTypes.object,\n    breakpoints: PropTypes.object,\n    classes: PropTypes.object,\n    throttle: PropTypes.number,\n  }),\n  // id: PropTypes.string,\n  // className: PropTypes.string,\n};\n\nexport default GlideComponent;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport IconCard from '../../../../components/cards/IconCard';\nimport GlideComponent from \"../../../../components/carousel/GlideComponent\";\n\nconst IconCardsCarousel = ({ className = 'icon-cards-row ' }) => {\n   \n\n  return (\n    <div className={className}>\n \n      {/* <GlideComponent\n        settings={{\n          gap: 2,\n          perView: 5,\n          type: 'carousel',\n          breakpoints: {\n            320: { perView: 1 },\n            520: { perView: 2 },\n            620: { perView: 3 },\n            720: { perView: 4 },\n            \n          },\n          hideNav: true,\n        }}\n      >\n        {mgr_carousel_data.map((item, index) => {\n          return (\n            <div key={`icon_card_${index}`}>\n              <IconCard {...item} className=\"mb-3\" />\n            </div>\n          );\n        })}\n      </GlideComponent>  */}\n      <div className=\"dashboard-top-row\">\n        {mgr_carousel_data.map((item, index) => {\n            return (              \n            <div key={`icon_card_${index}`} className=\"dashboard-top-cards\">\n              <IconCard {...item} className=\"mb-3\" />\n            </div>            \n            );\n          })}\n      </div>\n    </div>\n  );\n};\nlet mgr_carousel_data = [\n  { title: 'dashboard.active-station', icon: 'iconsminds-gas-pump', value: 0 },\n    {title: 'dashboard.active-charger',icon: 'iconsminds-flash-2',value: 0,},\n    {title: 'dashboard.connector',icon: 'iconsminds-plug-in',value: 0,},\n    { title: 'dashboard.batteries', icon: 'iconsminds-battery-100', value: 0 },\n    {title: 'dashboard.ev',icon: 'iconsminds-car',value: 0, },\n  ];  \n  const setStationCount = (value) => {mgr_carousel_data[0].value=value;};\n  const setChargerCount = (value) => {mgr_carousel_data[1].value=value;};\n  const setConnectorCount = (value) => {mgr_carousel_data[2].value=value;};\n  const setBatteriesCount = (value) => {mgr_carousel_data[3].value=value;};\n  const setEVCount = (value) => {mgr_carousel_data[4].value=value;};\n\n\n\nexport  {IconCardsCarousel,setChargerCount,setConnectorCount,setBatteriesCount,setEVCount,setStationCount};\n","import React from 'react';\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  \n} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { LineChart } from '../../../../components/charts';\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\nconst moment = require('moment');\n\nconst colors = ThemeColors();\n\nconst today = moment();\ntoday.add(1, 'd').format('DD-MMM')\nconst dateLabel = Array(7).fill().map(\n() => today.subtract(1, 'd').format('DD-MMM')\n);\nlet total_last_7=0;\nconst SwapChartCard = () => {\n  return (\n    <Card className=\"dashboard-my-card\">\n     \n      <CardBody>\n        <CardTitle>\n          <IntlMessages id=\"dashboard.swaps\" />({total_last_7})\n        </CardTitle>\n        {showSwapChart && (\n        <div className=\"dashboard-line-chart\">\n          <LineChart  data={SwapChartData1} />\n        </div>)}\n        {!showSwapChart && (\n        <div className=\"dashboard-line-chart\">\n          <LineChart  data={SwapChartData} />\n        </div>)}\n        \n      </CardBody>\n    </Card>\n  );\n};\nconst SwapChartData1 = {\n  labels:dateLabel,\n  datasets: [\n    {\n      label: 'Complete',\n      data: [0,0,0,0,0,0,0],\n      borderColor: colors.themeColor1,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 6,\n      pointBorderWidth: 2,\n      pointHoverRadius: 8,\n      fill: false,\n    },\n   \n  ]\n};\n\nconst SwapChartData = {\n    labels:dateLabel,\n    datasets: [\n      {\n        label: 'Complete',\n        data: [0,0,0,0,0,0,0],\n        borderColor: colors.themeColor1,\n        pointBackgroundColor: colors.foregroundColor,\n        pointBorderColor: colors.themeColor1,\n        pointHoverBackgroundColor: colors.themeColor1,\n        pointHoverBorderColor: colors.foregroundColor,\n        pointRadius: 6,\n        pointBorderWidth: 2,\n        pointHoverRadius: 8,\n        fill: false,\n      },\n      \n    ]\n  };\n  let showSwapChart=true;\n  const  setshowSwapChart = (value) => {showSwapChart=value};\n  const setSwapChartData = (responseData) => {\n\n    setshowSwapChart(true);\n     //lineChartOptions.scales.yAxes[0].ticks.max=500;\n    // lineChartOptions.scales.yAxes[0].ticks.min=1000;\n     //lineChartOptions.scales.yAxes[0].ticks.stepSize=100;\n    total_last_7=responseData.data.swapping.total_last_7;\n    SwapChartData.labels= responseData.data.swapping.date;\n    SwapChartData.datasets[0].data=responseData.data.swapping.complete_swap_data;\n    //SwapChartData.datasets[1].data=responseData.data.swapping.incomplete_swap_data;\n    setshowSwapChart(false);\n    \n\n  };\n\n\nexport  {SwapChartCard,setSwapChartData,setshowSwapChart};\n","import React from 'react';\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu,\n} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { LineChart } from '../../../../components/charts';\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\nimport { chartTooltip } from '../../../../components/charts/util';\n//import { lineChartOptions } from '../../../../components/charts/config';\n\nconst moment = require('moment');\n\nconst colors = ThemeColors();\n\nconst today = moment();\ntoday.add(1, 'd').format('DD-MMM')\nconst dateLabel = Array(7).fill().map(\n() => today.subtract(1, 'd').format('DD-MMM')\n);\nlet total_last_7=0;\n\nconst EnergyChartCard = () => {\n  return (\n    <Card className=\"dashboard-my-card\">     \n      <CardBody>\n        <CardTitle>\n          <IntlMessages id=\"dashboard.energy\" /> ({abbreviateNumber(total_last_7)})\n        </CardTitle>\n        {showEnergyChart && (\n        <div className=\"dashboard-line-chart\">\n          <LineChart  data={EnergyChartData1} />\n        </div>)}\n        {!showEnergyChart && (\n        <div className=\"dashboard-line-chart\">\n          <LineChart  data={EnergyChartData} false lineChartOptions />\n        </div>)}\n        \n      </CardBody>\n    </Card>\n  );\n};\nconst EnergyChartData1 = {\n  labels: dateLabel,\n  datasets: [\n    {\n      label: 'Complete',\n      data: [0,0,0,0,0,0,0],\n      borderColor: colors.themeColor1,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 6,\n      pointBorderWidth: 2,\n      pointHoverRadius: 8,\n      fill: false,\n    },\n  ]\n};\n\nconst EnergyChartData = {\n    labels: dateLabel,\n    datasets: [\n      {\n        label: 'Complete',\n        data: [0,0,0,0,0,0,0],\n        borderColor: colors.themeColor1,\n        pointBackgroundColor: colors.foregroundColor,\n        pointBorderColor: colors.themeColor1,\n        pointHoverBackgroundColor: colors.themeColor1,\n        pointHoverBorderColor: colors.foregroundColor,\n        pointRadius: 6,\n        pointBorderWidth: 2,\n        pointHoverRadius: 8,\n        fill: false,\n      },\n    ]\n  };\n  let showEnergyChart=true;\n  const  setshowEnergyChart = (value) => {showEnergyChart=value};\n  const setEnergyChartData = (responseData) => {\n    setshowEnergyChart(true);\n    // lineChartOptions.scales.yAxes[0].ticks.max=1000;\n    // lineChartOptions.scales.yAxes[0].ticks.min=1000;\n    // lineChartOptions.scales.yAxes[0].ticks.stepSize=1000;\n    total_last_7=responseData.data.energy_sold.total_last_7;\n\n    \n    EnergyChartData.labels= responseData.data.energy_sold.date;\n    EnergyChartData.datasets[0].data=responseData.data.energy_sold.data;\n    setshowEnergyChart(false);\n    \n\n  };\n  const abbreviateNumber =(num)=>{\n    let fixed=0;\n     if (num === null) { return null; } // terminate early\n   if (num === 0) { return '0'; } // terminate early\n   fixed = (!fixed || fixed < 0) ? 0 : fixed; // number of decimal places to show\n   var b = (num).toPrecision(2).split(\"e\"), // get power\n       k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3), // floor at decimals, ceiling at trillions\n       c = k < 1 ? num.toFixed(0 + fixed) : (num / Math.pow(10, k * 3) ).toFixed(1 + fixed), // divide by power\n       d = c < 0 ? c : Math.abs(c), // enforce -0 is 0\n       e = d + ['', 'K', 'M', 'B', 'T'][k]; // append power\n   return e;\n   }\n    \nexport  {EnergyChartCard,setEnergyChartData,setshowEnergyChart};\n","import React from 'react';\nimport { Card, CardBody, Col, Row,Spinner} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\n\n\nconst KPICards =  ({ cardClass = 'text-center mb-2' }) => {\n  return (\n    <div>\n        \n        {loading3 && (\n                  <div className=\"text-center pt-3\">\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"dashboard.loading\" />\n                    </p>\n                  </div>\n                ) }\n        {!loading3 && data.map((s, index) => {\n          return (\n            <Card className={cardClass} key={index}>\n            <CardBody>\n            <div  >\n                    <p className=\"lead color-theme-1 mb-1 value \">{s.total}</p>\n                    <p className=\"mb-0 label text-small font-weight-semibold mb-1\"> {s.title}</p>\n                    <p className=\"mb-0 label text-small\"> {s.last30} </p>\n                \n\n            </div>\n            </CardBody>\n            </Card>\n          );\n        })}\n        \n        </div>\n          );\n};\n\nconst data = [\n    {\n        title: 'Units Sold',\n        total: 0,\n        last30 : \"0 in last 30 days\"\n      },\n      {\n        title: 'Units/Day per EV',\n        total: 0,\n        last30 : \" \"\n      },\n    {\n        title: 'Swaps/Day',\n        total: 0,\n        last30 : \"0 in last 30 days\"\n      },\n   \n \n  \n \n];\n\nconst setKPIChartData = (index,total,last30) => {data[index].total=total;data[index].last30 =last30;};\nlet loading3= false;\nconst  setLoading3 = (value) => {loading3=value};\n\nexport  {KPICards,setKPIChartData,setLoading3};\n","import React from 'react';\nimport { Card, CardBody, CardTitle, UncontrolledDropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownMenu, Spinner} from 'reactstrap';\n\nimport IntlMessages from '../../../../helpers/IntlMessages';\nimport { DoughnutChart } from '../../../../components/charts';\n\nimport { ThemeColors } from '../../../../helpers/ThemeColors';\n\nconst colors = ThemeColors();\n\n\nconst StationDoughnut =  ({ controls = false })  => {\n  return (\n    <Card className=\"dashboard-my-card\">\n      <CardBody>\n         <CardTitle>\n          <IntlMessages id=\"dashboard.station\" />\n          {controls && (\n          <div className=\"btn-group float-right float-none-xs \">\n            <UncontrolledDropdown>\n              <DropdownToggle caret color=\"primary\" className=\"btn-xs\" outline>\n                <IntlMessages id=\"dashboard.all\" />\n              </DropdownToggle>\n              <DropdownMenu right>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.operational\" />\n                </DropdownItem>\n                <DropdownItem>\n                  <IntlMessages id=\"dashboard.faulty\" />\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown>\n          </div>\n        )}\n        </CardTitle>\n      {loading2 && (\n                  <div className=\"dashboard-donut-chart\">\n                  <DoughnutChart  data={doughnutChartData1} />\n                </div>\n              ) } { (!loading2  && !blankMsg)  &&\n      <div className=\"dashboard-donut-chart\">\n        <DoughnutChart  data={doughnutChartData} />\n      </div>\n}\n{ blankMsg &&\n      <div className=\"dashboard-donut-chart text-center\">\n        Data Not Found\n      </div>\n}\n      </CardBody>\n    </Card>\n  );\n};\nconst doughnutChartData1 = {\n  labels: ['Operational', 'Faulty'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [ colors.themeColor2, colors.themeColor1],\n      backgroundColor: [\n        colors.themeColor3_10,\n        colors.themeColor2_10,\n      ],\n      borderWidth: 2,\n      data: [1, 0],\n    },\n  ],\n};\nconst doughnutChartData = {\n  labels: ['Operational', 'Faulty'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [ colors.themeColor2, colors.themeColor1],\n      backgroundColor: [\n        colors.themeColor3_10,\n        colors.themeColor2_10,\n      ],\n      borderWidth: 2,\n      data: [1, 0],\n    },\n  ],\n};\nlet blankMsg=false;\nconst  setBlankMsg = (value) => {blankMsg=value};\n\nlet loading2=true;\nconst  setLoading2 = (value) => {loading2=value};\n//const setChargerChartData = (index,value) => {doughnutChartData.datasets[0].data[index]=value;};\nconst setStationChartData = (oprntl,flty) => {\n  doughnutChartData.datasets[0].data[0]=oprntl;\n  doughnutChartData.datasets[0].data[1]=flty;\n\n\n  if(oprntl==0 && flty==0)\n  {\n    setBlankMsg(true);\n    \n  }\n  else\n {\n  setBlankMsg(false);\n }\n  setLoading2(false);\n  \n\n};\n\nexport  {StationDoughnut,setLoading2,setStationChartData};\n","import React, { createRef, useState } from 'react';\nimport { Row, Button, Col, Card, CardBody, FormGroup, Label, Spinner, Alert } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport Breadcrumb from '../../../containers/navs/Breadcrumb';\nimport { Wizard, Steps, Step } from 'react-albus';\nimport { injectIntl } from 'react-intl';\nimport { Formik, Form, Field } from 'formik';\nimport IntlMessages from '../../../helpers/IntlMessages';\nimport BottomNavigation from '../../../components/wizard/BottomNavigation';\nimport TopNavigation from '../../../components/wizard/TopNavigation';\nimport { validateOTPAPI,validateScanEVAPI,validateScanBatteryAPI,validatePairEVAPI } from \"../../../constants/defaultValues\"\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport axios from 'axios';\nimport { NotificationManager } from '../../../components/common/react-notifications';\nimport QrReader from 'react-qr-reader'\nimport { adminRoot } from \"../../../constants/defaultValues\"\n\n\n\nconst Start = ({ match,intl }) => {\n  const forms = [createRef(null), createRef(null), createRef(null), createRef(null), createRef(null), createRef(null), createRef(null)];\n  const [bottomNavHidden, setBottomNavHidden] = useState(false);\n  const [bottomNavHidden1, setBottomNavHidden1] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loading1, setLoading1] = useState(false);\n  const [QR1, setQR1] = useState(false);\n  const [QR2, setQR2] = useState(false);\n  const [QR3, setQR3] = useState(false);\n  const [QR4, setQR4] = useState(false);\n  const [QR5, setQR5] = useState(false);\n  const [QR6, setQR6] = useState(false);\n  const [_otp, setOTPStart] = useState('');\n\n  const [qrscan_val1, setqrscan_val1] = useState('');\n  const [qrscan_val2, setqrscan_val2] = useState('');\n  const [qrscan_val3, setqrscan_val3] = useState('');\n  const [qrscan_otp, setqrscan_otp] = useState('');\n  const [qrscan_val4, setqrscan_val4] = useState('');\n  const [qrscan_val5, setqrscan_val5] = useState('');\n  const [qrscan_val6, setqrscan_val6] = useState('');\n\n  const handleScanQR1 =  (resp) => {  if(resp){ setqrscan_val1(resp);setQR1(false); }};\n  const handleScanQR2 =  (resp) => {  if(resp){ resp=resp.replace(/\\D/g,''); setqrscan_val2(resp); setQR2(false); }};\n  const handleScanQR3 =  (resp) => {  if(resp){ resp=resp.replace(/\\D/g,''); setqrscan_val3(resp); setQR3(false); }};\n  const handleScanQR4 =  (resp) => {  if(resp){  setqrscan_val4(resp); setQR4(false); }};\n  const handleScanQR5 =  (resp) => {  if(resp){ resp=resp.replace(/\\D/g,''); setqrscan_val5(resp); setQR5(false); }};\n  const handleScanQR6 =  (resp) => {  if(resp){ resp=resp.replace(/\\D/g,''); setqrscan_val6(resp); setQR6(false); }};\n\n  const btnScanQR1 =  (e) => {  setQR1(!QR1); };\n  const btnScanQR2 =  (e) => {  setQR2(!QR2); };\n  const btnScanQR3 =  (e) => {  setQR3(!QR3); };\n  const btnScanQR4 =  (e) => {  setQR4(!QR4); };\n  const btnScanQR5 =  (e) => {  setQR5(!QR5); };\n  const btnScanQR6 =  (e) => {  setQR6(!QR6); };\n\n  const [fields, setFields] = useState([\n    {\n      valid: false,\n      name: 'scanev1',\n      val_id: 'qrscan_val1',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'discharge_bt1',\n      val_id: 'qrscan_val2',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'discharge_bt2',\n      val_id: 'qrscan_val3',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'otp',\n      val_id: 'qrscan_otp',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'scanev',\n      val_id: 'qrscan_val4',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'charge_bt1',\n      val_id: 'qrscan_val5',\n      value: '',\n    },\n    {\n      valid: false,\n      name: 'charge_bt2',\n      val_id: 'qrscan_val6',\n      value: '',\n    },\n  ]);\n  \n  const createNotification = (text) => {\n    NotificationManager.error(\n      text,\n      'Error!',\n      5000,\n      () => {\n        // alert('callback');\n      },\n      null,\n      \"error filled\"\n    );\n  };\n  const validateOTP =  (value) => {  \n    let error;\n    if (!value) {\n      error = 'Please enter your start OTP';\n    } else if (!/^[0-9]{4}$/.test(value)){\n      error = 'Invalid OTP. Please Enter valid OTP';\n    }\n    setOTPStart(value);\n    return error;   \n  };\n  const validateScanEV = (value) => {\n    let error;\n    if (!qrscan_val4) {\n      error = 'Please enter your text';\n    }\n    return error;\n  };\n  const validateScanEV1 = (value) => {\n    let error;\n    if (!qrscan_val1) {\n      error = 'Please enter your text';\n    }\n    return error;\n  };\n  const validatedischarge_bt1 = (value) => {\n    let error;\n    if (!qrscan_val2) {\n      error = 'Please enter your text';\n    }\n    \n    return error;\n  };\n  \nconst validatedischarge_bt2 = (value) => {\n  let error;\n  if (!qrscan_val3) {\n    error = 'Please enter Discharged Battery ID';\n  }\n  return error;\n};\nconst validatecharge_bt1 = (value) => {\n  let error;\n  if (!qrscan_val5) {\n    error = 'Please enter your text';\n  }\n  return error;\n};\nconst validatecharge_bt2 = (value) => {\n  let error;\n  if (!qrscan_val6) {\n    error = 'Please enter your text';\n  }\n  return error;\n};\n\n  const asyncLoading = (extraIndex) => {\n\n    if(extraIndex==0){\n    setLoading(true);\n    setBottomNavHidden(true);  \n  }else{\n    setLoading1(true);\n    setBottomNavHidden1(true);  \n  }  \n  };\n\n   const stopAsyncLoading = (extraIndex) => {\n    if(extraIndex==0){\n      setLoading(false);\n      setBottomNavHidden(false);  \n    }else{\n      setLoading1(false);\n      setBottomNavHidden1(false);  \n    } \n  };\n\n\n  const onClickNext = async (goToNext, steps, step) =>  {\n    if (steps.length - 1 <= steps.indexOf(step)) {\n      return;\n    }\n    const extraIndex= (steps.length==5)? 3 : 0;\n    const formIndex = extraIndex + steps.indexOf(step);\n   \n\n    const form = forms[formIndex].current;\n    const { name,val_id } = fields[formIndex];\n    form.submitForm().then(() => {\n      const newFields = [...fields];\n\n      newFields[formIndex].value = form.values[name];\n      newFields[formIndex].valid = !form.errors[name];\n      setFields(newFields);\n      \n      // if (!form.errors[name] && form.touched[name] ) {\n      if(eval(val_id).trim()!=\"\"){\n        asyncLoading(extraIndex);\n\n        switch(step.id) {\n            case 'step1':\n              validateScanEVAPICall({ scanevVal: qrscan_val1 })\n              .then((res) => {\n                if(res.data.status===1){         \n                  goToNext();\n                  step.isDone = true;\n                }else\n                    createNotification(res.data.msg);\n                    stopAsyncLoading(extraIndex);\n                  \n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n\n              });\n            return ;\n            case 'step2':\n              validateScanBatteryAPICall({ batterytype : \"Discharged\", battery_sq : \"1\", batteryqrval:qrscan_val2, scanevVal: qrscan_val1 })\n              .then((res) => {\n                if(res.data.status===1){         \n                  goToNext();\n                  step.isDone = true;\n                }else\n                  createNotification(res.data.msg);\n                  stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n              });\n            return ;\n            case 'step3':\n            validateScanBatteryAPICall({ batterytype : \"Discharged\", battery_sq : \"2\", batteryqrval:qrscan_val3, scanevVal: qrscan_val1 })\n                .then((res) => {\n                  if(res.data.status===1){         \n                    goToNext();\n                    step.isDone = true;\n                  }else\n                    createNotification(res.data.msg);\n                    stopAsyncLoading(extraIndex);\n                }).catch(error => {\n                  createNotification(\"something went wrong\");\n                  stopAsyncLoading(extraIndex);\n                \n              });\n              return ;\n            case 'step4':\n              validateStartOTPAPI({ otp: form.values[name] })\n              .then((res) => {\n                if(res.data.status===1){         \n                  goToNext();\n                  step.isDone = true;\n                }else\n                createNotification(res.data.msg);\n                    stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n              });\n              return ;\n            case 'step5':\n              validatePairEVAPICall({otp:_otp,ev_qr_code: qrscan_val4 })\n              .then((res) => {\n                if(res.data.status===1){         \n                  goToNext();\n                  step.isDone = true;\n                }else\n                createNotification(res.data.msg);\n                    stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n                \n              });\n              return ;\n            case 'step6':\n            validateScanBatteryAPICall({ batterytype : \"Charged\", battery_sq : \"1\",batteryqrval:qrscan_val5, scanevVal: qrscan_val4 })\n                .then((res) => {\n                  if(res.data.status===1){         \n                    goToNext();\n                    step.isDone = true;\n                  }else\n                  createNotification(res.data.msg);\n                      stopAsyncLoading(extraIndex);\n                }).catch(error => {\n                  createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n                });\n              return ;\n            case 'step7':\n              validateScanBatteryAPICall({ batterytype : \"Charged\", battery_sq : \"2\",batteryqrval:qrscan_val6, scanevVal: qrscan_val4 })\n              .then((res) => {\n                if(res.data.status===1){         \n                  goToNext();\n                  step.isDone = true;\n                }else\n                createNotification(res.data.msg);\n                    stopAsyncLoading(extraIndex);\n              }).catch(error => {\n                createNotification(\"something went wrong\");\n                stopAsyncLoading(extraIndex);\n              });\n            return ;\n            case 'step8':\n              return ;\n          }      \n      }else{\n        createNotification(\"Please Fill up data correctly\");\n      }\n    });\n  };\n\n  const onClickPrev = (goToPrev, steps, step) => {\n    if (steps.indexOf(step) <= 0) {\n      return;\n    }\n    goToPrev();\n  };\n\n  //API call\n  const validateStartOTPAPI = async ({ otp }) => {\n    const currentUser = getCurrentUser();\n    const loginRes =await  axios.post(validateOTPAPI,  {\"otp_value\":otp},{ headers: {\n      'Authorization': `Bearer ${currentUser.token}`\n    }});\n    return loginRes;\n  };\n  const validateScanEVAPICall = async ({ scanevVal }) => {\n    const currentUser = getCurrentUser();\n    const scanevres =await  axios.post(validateScanEVAPI,  {\"ev_qr_code\":scanevVal},{ headers: {\n      'Authorization': `Bearer ${currentUser.token}`\n    }});\n    return scanevres;\n  };\n  const validatePairEVAPICall = async ({ otp,ev_qr_code }) => {\n    const currentUser = getCurrentUser();\n\n    const scanevres =await  axios.post(validatePairEVAPI,  {\"otp_value\":otp,\"ev_qr_code\":ev_qr_code},{ headers: {\n      'Authorization': `Bearer ${currentUser.token}`\n    }});\n    return scanevres;\n  };\n  const validateScanBatteryAPICall = async ({ batterytype, battery_sq, batteryqrval, scanevVal }) => {\n    const currentUser = getCurrentUser();\n    const scanbatteryres =await  axios.post(validateScanBatteryAPI,  {\"battery_type\": batterytype,\"battery_sequence\":battery_sq,\"battery_qr_code\":batteryqrval,\"ev_qr_code\":scanevVal},{ headers: {\n      'Authorization': `Bearer ${currentUser.token}`\n    }});\n    return scanbatteryres;\n  };\n  \n  const { messages } = intl;\n  return (\n  <>\n    <Row>\n      <Colxx xxs=\"12\">\n        <Breadcrumb heading=\"menu.start\" match={match} />\n        <Separator className=\"mb-5\" />\n      </Colxx>\n    </Row>\n    <Row>\n      <Colxx xxs=\"12\" className=\"mb-4\">\n      <Card>\n      <CardBody className=\"wizard wizard-default\">\n        <Wizard>\n        <div className=\"pt-3\">\n                    <h3>\n                    Unpair Batteries\n                    </h3>\n                  </div>\n          <TopNavigation className=\"justify-content-center\" disableNav />\n          <Steps>\n         \n            <Step\n              id=\"step1\"\n              name=\"Step 1\"\n              desc=\"Scan EV\"\n            >\n              <div className=\"wizard-basic-step\">\n               {loading ? (\n                  <div className=\"text-center pt-3\">\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"wizard.async\" />\n                    </p>\n                  </div>\n                ) : (\n                <Formik\n                  innerRef={forms[0]}\n                  initialValues={{\n                    scanev1: qrscan_val1,\n                  }}\n                  onSubmit={() => {}}\n                >\n                  {({ errors, touched }) => (\n                    <Form className=\"av-tooltip tooltip-label-right\">\n                      <FormGroup>\n                        <Label>Scan EV</Label>\n                        <div className=\"mb-3 input-group\">\n                          <Field\n                            className=\"form-control\"\n                            name=\"scanev1\"\n                            value={qrscan_val1}\n                            onChange={e =>setqrscan_val1(e.target.value)}\n                            validate={validateScanEV1}\n                          />\n                          <div className=\"input-group-append\">\n                            <span className=\"input-group-text scan_grp\">\n                              <Button type=\"button\" className=\"btn scan_btn btn-sm \"  onClick={btnScanQR1}>\n                              <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                            </span>\n                          </div>\n                        </div>\n                        {QR1 && \n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\n                        <div>\n                          <QrReader\n                            delay={300}\n                            onError={handleScanQR1}\n                            onScan={handleScanQR1}\n                            style={{ width: '100%' }}\n                          />\n                        </div>\n                        </Col>}\n                        {errors.scanev1 && touched.scanev1 && (\n                          <div className=\"invalid-feedback d-block\">\n                            {errors.scanev1}\n                          </div>\n                        )}\n                      </FormGroup>\n                    </Form>\n                  )}\n                </Formik>\n                )}\n              </div>\n            </Step>\n            <Step\n              id=\"step2\"\n              name=\"Step 2\"\n              desc=\"Scan DB 1\"\n            >\n              <div className=\"wizard-basic-step\">\n               {loading ? (\n                  <div className=\"text-center pt-3\">\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"wizard.async\" />\n                    </p>\n                  </div>\n                ) : (\n                <Formik\n                  innerRef={forms[1]}\n                  initialValues={{\n                    discharge_bt1: qrscan_val2,\n                  }}\n                  onSubmit={() => {}}\n                >\n                  {({ errors, touched }) => (\n                    <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                      <FormGroup>\n                        <Label>Scan Discharge Battery-1</Label>\n                        <div className=\"mb-3 input-group\">\n                          <Field\n                            className=\"form-control\"\n                            name=\"discharge_bt1\"\n                            type=\"text\"\n                            value={qrscan_val2}\n                            onChange={e =>setqrscan_val2(e.target.value)}\n                            validate={validatedischarge_bt1}\n                          />\n                          <div className=\"input-group-append\">\n                            <span className=\"input-group-text scan_grp\">\n                              <Button type=\"button\" className=\"btn scan_btn btn-sm\"   onClick={btnScanQR2}>\n                              <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                            </span>\n                          </div>\n                        </div>\n                        {QR2 && \n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\n                        <div>\n                          <QrReader\n                            delay={300}\n                            onError={handleScanQR2}\n                            onScan={handleScanQR2}\n                            style={{ width: '100%' }}\n                          />\n                        </div>\n                        </Col>}\n                        {errors.discharge_bt1 && touched.discharge_bt1 && (\n                          <div className=\"invalid-feedback d-block\">\n                            {errors.discharge_bt1}\n                          </div>\n                        )}\n                      </FormGroup>\n                    </Form>\n                  )}\n                </Formik>\n                )}\n              </div>\n            </Step>\n            <Step\n              id=\"step3\"\n              name=\"Step 3\"\n              desc=\"Scan DB 2\"\n            >\n              <div className=\"wizard-basic-step\">\n               {loading ? (\n                  <div className=\"text-center pt-3\">\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"wizard.async\" />\n                    </p>\n                  </div>\n                ) : (\n                <Formik\n                  innerRef={forms[2]}\n                  initialValues={{\n                    discharge_bt2: qrscan_val3,\n                  }}\n                  onSubmit={() => {}}\n                >\n                  {({ errors, touched }) => (\n                    <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                      <FormGroup>\n                        <Label>Scan Discharge Battery-2</Label>\n                        <div className=\"mb-3 input-group\">\n                          <Field\n                            className=\"form-control\"\n                            name=\"discharge_bt2\"\n                            type=\"text\"\n                            value={qrscan_val3}\n                            onChange={e =>setqrscan_val3(e.target.value)}\n                            validate={validatedischarge_bt2}\n                          />\n                          <div className=\"input-group-append\">\n                            <span className=\"input-group-text scan_grp\">\n                              <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR3}>\n                              <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                            </span>\n                          </div>\n                          </div>\n                          {QR3 && \n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\n                        <div>\n                          <QrReader\n                            delay={300}\n                            onError={handleScanQR3}\n                            onScan={handleScanQR3}\n                            style={{ width: '100%' }}\n                          />\n                        </div>\n                        </Col>}\n                        {errors.discharge_bt2  && (\n                          <div className=\"invalid-feedback d-block\">\n                            {errors.discharge_bt2}\n                          </div>\n                        )}\n                      </FormGroup>\n                    </Form>\n                  )}\n                </Formik>\n                )}\n              </div>\n            </Step>\n            <Step id=\"step8\" hideTopNav hidebottomnav  render={({ previous }) => (\n              <div className=\"wizard-basic-step text-center pt-3\">\n                {loading ? (\n                  <div>\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"wizard.async\" />\n                    </p>\n                  </div>\n                ) : (\n                  <div>\n                    <h2 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h2>\n                    <p>\n                      <IntlMessages id=\"wizard.registered\" />\n                    </p>\n                    \n                    <p>\n                    <Button onClick={() => window.location.reload(true)}>Restart</Button>\n                    <br/>\n                    </p>\n                  </div>\n                )}\n              </div>)}>\n            </Step>\n     \n          </Steps>\n          <BottomNavigation\n            onClickNext={onClickNext}\n            onClickPrev={onClickPrev}\n            className={`justify-content-center ${\n              bottomNavHidden && 'invisible'\n            }`}\n            prevLabel={messages['wizard.prev']}\n            nextLabel={messages['wizard.next']}\n          />\n        </Wizard>\n      </CardBody>\n    </Card>\n      </Colxx>\n    </Row>\n    <Row>\n      <Colxx xxs=\"12\" className=\"mb-4\">\n      <Card>\n      <CardBody className=\"wizard wizard-default\">\n        <Wizard>\n        <div className=\"pt-3\">\n                    <h3>\n                    Pair Batteries\n                    </h3>\n                  </div>\n          <TopNavigation className=\"justify-content-center\" disableNav />\n          <Steps>\n            <Step\n              id=\"step4\"\n              name=\"Step 1\"\n              desc=\"OTP\"\n            >\n              <div className=\"wizard-basic-step\">\n             \n               {loading1 ? (\n                  <div className=\"text-center pt-3\">\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"wizard.async\" />\n                    </p>\n                  </div>\n                ) : (\n\n\n\n                <Formik\n                  innerRef={forms[3]}\n                  initialValues={{\n                    otp: fields[3].value,\n                  }}\n                  //onSubmit={() => {}}\n\n                  onSubmit={(values, actions) => {\n                   \n            \n                  }}\n                >\n                  {({ errors, touched }) => (\n                    <Form className=\"av-tooltip tooltip-label-right\">\n                      <FormGroup>\n                        <Label>Enter OTP</Label>\n                        <div className=\"mb-3 input-group\">\n                          <Field\n                            className=\"form-control\"\n                            name=\"otp\"\n                            validate={validateOTP}\n                            onChange={e =>setqrscan_otp(e.target.value)}\n                            placeholder=\"Enter OTP\"\n                          />\n                          <div className=\"input-group-append\">\n                            <span className=\"input-group-text scan_grp\">\n                              <Button type=\"button\" className=\"btn scan_btn btn-sm\">\n                                <i className=\"glyph-icon simple-icon-pencil\"></i>\n                              </Button>\n                            </span>\n                          </div>\n                        </div>\n                        {errors.otp && touched.otp && (\n                          <div className=\"invalid-feedback d-block\">\n                            {errors.otp}\n                          </div>\n                        )}\n                      </FormGroup>\n                    </Form>\n                  )}\n                </Formik>\n\n                )}\n                \n              </div>\n            </Step>\n       \n            <Step\n              id=\"step5\"\n              name=\"Step 2\"\n              desc=\"Scan EV\"\n            >\n              <div className=\"wizard-basic-step\">\n               {loading1 ? (\n                  <div className=\"text-center pt-3\">\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"wizard.async\" />\n                    </p>\n                  </div>\n                ) : (\n                <Formik\n                  innerRef={forms[4]}\n                  initialValues={{\n                    scanev: qrscan_val5,\n                  }}\n                  onSubmit={() => {}}\n                >\n                  {({ errors, touched }) => (\n                    <Form className=\"av-tooltip tooltip-label-right\">\n                      <FormGroup>\n                        <Label>Scan EV</Label>\n                        <div className=\"mb-3 input-group\">\n                          <Field\n                            className=\"form-control\"\n                            name=\"scanev\"\n                            value={qrscan_val4}\n                            onChange={e =>setqrscan_val4(e.target.value)}\n                            validate={validateScanEV}\n                          />\n                          <div className=\"input-group-append\">\n                            <span className=\"input-group-text scan_grp\">\n                              <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR4}>\n                              <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                            </span>\n                          </div>\n                          </div>\n                          {QR4 && \n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\n                        <div>\n                          <QrReader\n                            delay={300}\n                            onError={handleScanQR4}\n                            onScan={handleScanQR4}\n                            style={{ width: '100%' }}\n                          />\n                        </div>\n                        </Col>}\n                        \n                        {errors.scanev && touched.scanev && (\n                          <div className=\"invalid-feedback d-block\">\n                            {errors.scanev}\n                          </div>\n                        )}\n                      </FormGroup>\n                    </Form>\n                  )}\n                </Formik>\n                )}\n              </div>\n            </Step>\n            <Step\n              id=\"step6\"\n              name=\"Step 3\"\n              desc=\"Scan CB 1\"\n            >\n              <div className=\"wizard-basic-step\">\n               {loading1 ? (\n                  <div className=\"text-center pt-3\">\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"wizard.async\" />\n                    </p>\n                  </div>\n                ) : (\n                <Formik\n                  innerRef={forms[5]}\n                  initialValues={{\n                    charge_bt1: qrscan_val5,\n                  }}\n                  onSubmit={() => {}}\n                >\n                  {({ errors, touched }) => (\n                    <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                      <FormGroup>\n                        <Label>Scan Charged Battery-1</Label>\n                        <div className=\"mb-3 input-group\">\n                          <Field\n                            className=\"form-control\"\n                            name=\"charge_bt1\"\n                            type=\"text\"\n                            value={qrscan_val5}\n                            onChange={e =>setqrscan_val5(e.target.value)}\n                            validate={validatecharge_bt1}\n                          />\n                          <div className=\"input-group-append\">\n                            <span className=\"input-group-text scan_grp\">\n                              <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR5}>\n                              <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                            </span>\n                          </div>\n                          </div>\n                          {QR5 && \n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\n                        <div>\n                          <QrReader\n                            delay={300}\n                            onError={handleScanQR5}\n                            onScan={handleScanQR5}\n                            style={{ width: '100%' }}\n                          />\n                        </div>\n                        </Col>}\n                        \n                        {errors.charge_bt1 && touched.charge_bt1 && (\n                          <div className=\"invalid-feedback d-block\">\n                            {errors.charge_bt1}\n                          </div>\n                        )}\n                      </FormGroup>\n                    </Form>\n                  )}\n                </Formik>\n                )}\n              </div>\n            </Step>\n            <Step\n              id=\"step7\"\n              name=\"Step 4\"\n              desc=\"Scan CB 2\"\n            >\n              <div className=\"wizard-basic-step\">\n               {loading1 ? (\n                  <div className=\"text-center pt-3\">\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"wizard.async\" />\n                    </p>\n                  </div>\n                ) : (\n                <Formik\n                  innerRef={forms[6]}\n                  initialValues={{\n                    charge_bt2: qrscan_val6,\n                  }}\n                  onSubmit={() => {}}\n                >\n                  {({ errors, touched }) => (\n                    <Form className=\"av-tooltip tooltip-label-right error-l-75\">\n                      <FormGroup>\n                        <Label>Scan Charged Battery-2</Label>\n                        <div className=\"mb-3 input-group\">\n                          <Field\n                            className=\"form-control\"\n                            name=\"charge_bt2\"\n                            type=\"text\"\n                            value={qrscan_val6}\n                            onChange={e =>setqrscan_val6(e.target.value)}\n                            validate={validatecharge_bt2}\n                          />\n                          <div className=\"input-group-append\">\n                            <span className=\"input-group-text scan_grp\">\n                              <Button type=\"button\" className=\"btn scan_btn btn-sm\" onClick={btnScanQR6}>\n                              <i className=\"glyph-icon simple-icon-frame\"></i></Button>\n                            </span>\n                          </div>\n                          </div>\n                          {QR6 && \n                        <Col lg=\"6\" md=\"6\" sm=\"12\">\n                        <div>\n                          <QrReader\n                            delay={300}\n                            onError={handleScanQR6}\n                            onScan={handleScanQR6}\n                            style={{ width: '100%' }}\n                          />\n                        </div>\n                        </Col>}\n                        \n                        {errors.charge_bt2  && (\n                          <div className=\"invalid-feedback d-block\">\n                            {errors.charge_bt2}\n                          </div>\n                        )}\n                      </FormGroup>\n                    </Form>\n                  )}\n                </Formik>\n                )}\n              </div>\n            </Step>\n            \n            <Step id=\"step8\" hideTopNav hidebottomnav>\n              <div className=\"wizard-basic-step text-center pt-3\">\n                {loading ? (\n                  <div>\n                    <Spinner color=\"primary\" className=\"mb-1\" />\n                    <p>\n                      <IntlMessages id=\"wizard.async\" />\n                    </p>\n                  </div>\n                ) : (\n                  <div>\n                    <h2 className=\"mb-2\">\n                      <IntlMessages id=\"wizard.content-thanks\" />\n                    </h2>\n                    <p>\n                      <IntlMessages id=\"wizard.registered\" />\n                    </p>\n                    <p>\n                    <Button onClick={() => window.location.reload(true)}>Restart</Button>\n                    <br/>\n                    </p>\n                  </div>\n                )}\n              </div>\n            </Step>\n          </Steps>\n          <BottomNavigation\n            onClickNext={onClickNext}\n            onClickPrev={onClickPrev}\n            className={`justify-content-center ${\n              bottomNavHidden1 && 'invisible'\n            }`}\n            prevLabel={messages['wizard.prev']}\n            nextLabel={messages['wizard.next']}\n          />\n        </Wizard>\n      </CardBody>\n    </Card>\n      </Colxx>\n    </Row>\n   \n   </>\n);\n};\n\nexport default injectIntl(Start);\n// const mapStateToProps = ({ authUser }) => {\n//   const { loading, error } = authUser;\n//   return { loading, error };\n// };\n// export default connect(mapStateToProps, {\n//   loginUserAction: loginUser,\n// })(injectIntl(Start));\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport IntlMessages from '../../helpers/IntlMessages';\nimport { adminRoot } from '../../constants/defaultValues';\n\nconst getMenuTitle = (sub) => {\n  if('/'+sub===adminRoot) return <IntlMessages id=\"menu.home\" />;\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub, index) => {\n  return path.split(sub)[0] + sub;\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <>\n      {heading && (\n        <h1>\n          <IntlMessages id={heading} />\n        </h1>\n      )}\n      <BreadcrumbItems match={match} />\n    </>\n  );\n};\n\nconst BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split('/');\n  if (paths[paths.length - 1].indexOf(':') > -1) {\n    paths = paths.filter((x) => x.indexOf(':') === -1);\n  }\n  return (\n    <>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={`/${getUrl(path, sub, index)}`}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </>\n  );\n};\n\nexport default BreadcrumbContainer;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport { WithWizard } from 'react-albus';\nimport { Button } from 'reactstrap';\n \nconst BottomNavigation = ({\n  className,\n  onClickPrev,\n  prevLabel,\n  onClickNext,\n  nextLabel,\n}) => {\n  return (\n    <WithWizard\n      render={({ next, previous, step, steps }) => (\n        <div className={`wizard-buttons ${className}`}>\n          <Button\n            color=\"primary\"\n            className={`mr-1 ${steps.indexOf(step) <= 0 ? 'disabled' : ''}`}\n            onClick={() => {\n              onClickPrev(previous, steps, step);\n            }}\n          >\n            {prevLabel}\n          </Button>\n\n          <Button\n            color=\"primary\"\n            className={\n              steps.indexOf(step) >= steps.length - 1 ? 'disabled' : ''\n            }\n            onClick={() => {\n              onClickNext(next, steps, step);\n            }}\n          >\n            {nextLabel}\n          </Button>\n        </div>\n      )}\n    />\n  );\n};\nexport default BottomNavigation;\n","/* eslint-disable react/no-array-index-key */\n/* eslint-disable no-unused-vars */\n/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport { WithWizard } from 'react-albus';\nimport { NavLink } from 'react-router-dom';\n\nconst TopNavigation = ({ className, disableNav, topNavClick }) => {\n  const getClassName = (steps, step, index, stepItem) => {\n    if (steps.indexOf(step) === index) {\n      return 'step-doing';\n    }\n    if (steps.indexOf(step) > index || stepItem.isDone) {\n      stepItem.isDone = true;\n      return 'step-done';\n    }\n    return 'step';\n  };\n\n  const itemClick = (stepItem, push) => {\n    if (disableNav) {\n      return;\n    }\n    topNavClick(stepItem, push);\n  };\n\n  return (\n    <WithWizard\n      render={({ next, previous, step, steps, go, push }) => (\n        <ul\n          className={`nav nav-tabs ${className}${\n            disableNav ? ' disabled' : ''\n          }`}\n        > \n          {steps.map((stepItem, index) => {\n            if (!stepItem.hideTopNav) {\n              return (\n                <li\n                  key={`topNavStep_${index}`}\n                  className={`nav-item ${getClassName(\n                    steps,\n                    step,\n                    index,\n                    stepItem\n                  )}`}\n                >\n                  <NavLink\n                    to=\"#\"\n                    location={{}}\n                    className=\"nav-link\"\n                    onClick={() => itemClick(stepItem, push)}\n                  >\n                    <span>{stepItem.name}</span>\n                    <small>{stepItem.desc}</small>\n                  </NavLink>\n                </li>\n              );\n            }\n            return <span key={`topNavStep_${index}`} />;\n          })}\n        </ul>\n      )}\n    />\n  );\n};\n\nexport default TopNavigation;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table,Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  Input,InputGroup \n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot, getUserListAPI,deleteUserAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\n\nconst UserMaster = ({ match }) => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //user states\n  const [userList,setUserList] = useState([]);\n  const [userID,setUserID] = useState(\"\");\n  const [userToDeleleteId,setUserToDeleleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getUserListAPICall();\n    userAlert();\n  },[pageCount,userID])\n\n  //API CALLS\n  const getUserListAPICall = async() => {\n    setUserList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getUserListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setUserList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteUserAPICall = async(userId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteUserAPI,\n      {user_id:userId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setUserID(userId);\n          userDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  const updateUser = (userId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updateUser',\n      state:{user_id:userId}\n    });\n  }\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //ALert helper methods\n  const userDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const userAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (userId) => {\n    setUserToDeleleteId(userId)\n    setModalVisible(!modalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getUserListAPICall();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <span className=\"page_title\">User</span>\n            <a href=\"adduser\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n            <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n            </CardSubtitle> \n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Username</th>\n                    <th>Full Name</th>\n                    <th>Contact Number</th>\n                    <th>Email</th>\n                    <th>Roles</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"7\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                      userList.length > 0 ?\n                          userList.map((item,index)=>\n                            <tr key={index}>\n                              <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index+1}</th>\n                              <td>{item.username}</td>\n                              <td>{item.name}</td>\n                              <td>{item.contact_number}</td>\n                              <td>{item.email}</td>\n                              <td>{item.role_name}</td>\n                              <td>\n                                  <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateUser(item.id)}}>\n                                      <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                                  </a>\n                                  <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                                      <i className=\"glyph-icon simple-icon-trash\"></i>\n                                  </Button>\n                              </td>\n                            </tr>\n                          ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"7\">Data  Not  Found</td>\n                      </tr>\n                }\n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  Are you sure you would like to delete this user?\n                  <Button color=\"success\" className=\"mt-4\" onClick={()=>{deleteUserAPICall(userToDeleleteId)}}>\n                    Delete User\n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                    Cancel\n                  </Button>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default UserMaster;\n","import React, { useState,useEffect }  from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot, addUserAPI,getUserRolesAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nimport { useHistory } from \"react-router-dom\";\n\nconst AddUser = () => {\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  //user roles\n  const [userRolesList,setUserRolesList] = useState([]);\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    getUserRolesAPICall();\n  },[])\n\n   //API CALLS\n   const getUserRolesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getUserRolesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let userRoles=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           userRoles.push({label:item.name,value:item.id,key:index})\n         })\n         setUserRolesList(userRoles);\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addUserAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addUserAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/user',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          addUserAlert(responseData.msg);\n          setButtonDisabled(false);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Alert helper methods\n  const addUserAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const UserDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name name is required\"),\n    email:yup.string()\n        .email(\"Inavlid email format\")\n        .required(\"Email is required\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n        .required(\"Contact number is required\"),\n    username:yup.string()\n        .required(\"Username is required\"),\n    password:yup.string()\n        .required(\"Password is required\"),\n    confirm_password:yup.string()\n        .equals([yup.ref('password')], \"Passwords must match\")\n        .required(\"Password is required\"),\n  });\n\n  const initialValues = {\n    name:\"\",\n    email:\"\",\n    contact_number:\"\",\n    username:\"\",\n    password:\"\",\n    confirm_password:\"\",\n  };\n  \n  return (    \n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add User</span>\n            <a href=\"User\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> User List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={UserDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n            name:values.name,\n            email:values.email,\n            roles:[selectedOptions.label],\n            contact_number:values.contact_number,\n            username:values.username,\n            password:values.password\n          }\n          addUserAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Full Name \"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Email\"\n                                  value={values.email}\n                                  name=\"email\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.email && touched.email ? \"input-error\":null}\n                                />\n                                {errors.email && touched.email &&(\n                                  <span className=\"error\">{errors.email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Role\n                                </Label>\n                                <Select\n                                  components={{ Input: CustomSelectInput }}\n                                  className=\"react-select\"\n                                  classNamePrefix=\"react-select\"\n                                  name=\"form-field-name\"\n                                  value={selectedOptions}\n                                  onChange={setSelectedOptions}\n                                  options={userRolesList}                                  \n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Username\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"username\"\n                                  placeholder=\"Username\"\n                                  value={values.username}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.username && touched.username ? \"input-error\":null}\n                                />\n                                 {errors.username && touched.username &&(\n                                  <span className=\"error\">{errors.username}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Password\n                                </Label>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Password\"\n                                  name=\"password\"\n                                  value={values.password}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.password && touched.password ? \"input-error\":null}\n                                />\n                                {errors.password && touched.password &&(\n                                  <span className=\"error\">{errors.password}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Confirm Password\n                                </Label>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Confirm Password\"\n                                  name=\"confirm_password\"\n                                  value={values.confirm_password}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.confirm_password && touched.confirm_password ? \"input-error\":null}\n                                />\n                                {errors.confirm_password && touched.confirm_password &&(\n                                  <span className=\"error\">{errors.confirm_password}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default AddUser;","import React, { useState,useEffect }  from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n} from 'reactstrap';\nimport Select from 'react-select';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot, updateUserAPI,getUserRolesAPI,getUserByIdAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport { useHistory,useLocation } from \"react-router-dom\";\n\nconst UpdateUser = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //multiSelect state\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  //user roles\n  const [userRolesList,setUserRolesList] = useState([]);\n  //user details state\n  const [name,setName] = useState(\"\");\n  const [email,setEmail] = useState(\"\");\n  const [contactNumber,setContactNumber] = useState(\"\");\n  const [username,setUsername] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  // error state\n  const [errorConfirmPassword,setErrorConfirmPassword] = useState(false);\n\n  const history = useHistory();\n  const location = useLocation();\n\n\n  useEffect(()=>{\n    getUserRolesAPICall();\n    getUserByIdAPICall();\n  },[])\n\n   //API CALLS\n   const getUserRolesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getUserRolesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let userRoles=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           userRoles.push({label:item.name,value:item.id,key:index})\n         })\n         setUserRolesList(userRoles);\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const getUserByIdAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getUserByIdAPI,\n    {\n        user_id:location.state.user_id\n    },\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        let tempData = [];\n        if (responseData.status === 1) {\n        setName(responseData.data.name);\n        setEmail(responseData.data.email);\n        setContactNumber(responseData.data.contact_number);\n        setUsername(responseData.data.username);\n        responseData.data.roles.map((item,index)=>{\n            tempData.push({label:item.name,value:item.id,key:index})\n        })\n        setSelectedOptions(tempData);\n        }else{\n        console.log(responseData.msg);\n        }\n    }).catch(error=>{\n        console.log(error);\n    })\n  }\n\n  const updateUserAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(updateUserAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/user',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          updateUserAlert(responseData.msg);\n        }\n    }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n    })\n  }\n  //Alert helper methods\n  const updateUserAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle password confirmation\n  // const handleConfirmPassword = (value)=>{\n  //   setConfirmPassword(value);\n  //   if (password === value) {\n  //     setErrorConfirmPassword(false);\n  //   } else {\n  //     setErrorConfirmPassword(true);\n  //   }\n  // }\n  //Form Validation Schema\n  const UserDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name name is required\"),\n    email:yup.string()\n        .email(\"Inavlid email format\")\n        .required(\"Email is required\"),\n    contact_number:yup.string()\n                .nullable()\n                .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n                .length(10,\"Invalid contact number length\")\n                .required(\"Contact number is required\"),\n    username:yup.string()\n        .required(\"Username is required\"),\n    password:yup.string(),\n    confirm_password:yup.string()\n        .equals([yup.ref('password')], \"Passwords must match\")\n  });\n  \n  return (    \n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update User</span>\n            <a href=\"User\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> User List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true} \n        initialValues={{\n            name:name,\n            email:email,\n            contact_number:contactNumber,\n            username:username,\n            password:\"\",\n            confirm_password:\"\",\n        }}\n        validationSchema={UserDetailsValidationSchema} \n        onSubmit={(values)=>{\n          setErrorConfirmPassword(false);\n          if (values.password === values.confirm_password) {\n            let roleValue;\n            if (Array.isArray(selectedOptions)) {\n              roleValue = selectedOptions[0].label;\n            } else {\n              roleValue = selectedOptions.label;\n            }\n            const params = {\n              user_id:location.state.user_id,\n              name:values.name,\n              email:values.email,\n              roles:[roleValue],\n              contact_number:values.contact_number,\n              username:values.username,\n              password:values.password\n            }\n          updateUserAPICall(params);\n          } else {\n            setErrorConfirmPassword(true);\n            return;\n          }\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                  {alertMsg}\n                                </Alert>\n                              </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Full Name \"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Email\"\n                                  value={values.email}\n                                  name=\"email\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.email && touched.email ? \"input-error\":null}\n                                />\n                                {errors.email && touched.email &&(\n                                  <span className=\"error\">{errors.email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Role\n                                </Label>\n                                <Select\n                                  components={{ Input: CustomSelectInput }}\n                                  className=\"react-select\"\n                                  classNamePrefix=\"react-select\"\n                                  name=\"form-field-name\"\n                                  value={selectedOptions}\n                                  onChange={setSelectedOptions}\n                                  options={userRolesList}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Username\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"username\"\n                                  placeholder=\"Username\"\n                                  value={values.username}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.username && touched.username ? \"input-error\":null}\n                                />\n                                 {errors.username && touched.username &&(\n                                  <span className=\"error\">{errors.username}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Password\n                                </Label>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Password\"\n                                  name=\"password\"\n                                  value={values.password}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.password && touched.password ? \"input-error\":null}\n                                />\n                                {errors.password && touched.password &&(\n                                  <span className=\"error\">{errors.password}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Confirm Password\n                                </Label>\n                                <Input\n                                  type=\"password\"\n                                  placeholder=\"Confirm Password\"\n                                  name=\"confirm_password\"\n                                  value={values.confirm_password}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.confirm_password && touched.confirm_password ? \"input-error\":null}\n                                />\n                                {errors.confirm_password && touched.confirm_password &&(\n                                  <span className=\"error\">{errors.confirm_password}</span>\n                                )}\n                                {errorConfirmPassword && \n                                  <span className=\"error\">{\"\\n\"+\"Please confirm Password\"}</span>\n                                }\n                              </FormGroup>\n                            </Colxx>\n                            {/* <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Password\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Password\"\n                                  name=\"password\"\n                                  value={password}\n                                  onChange={e=>setPassword(e.target.value)}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                  Confirm Password\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Confirm Password\"\n                                  name=\"confirm_password\"\n                                  value={confirmPassword}\n                                  onChange={e=>handleConfirmPassword(e.target.value)}\n                                />\n                                {errorConfirmPassword && \n                                  <span className=\"error\">Passwords must match</span>\n                                }\n                              </FormGroup>\n                            </Colxx> */}\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default UpdateUser;","import React, { useEffect, useState } from 'react';\nimport { Row, Card, CardBody, CardTitle, Table, Button } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getUserRolesAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\n\n\nconst RoleMaster = ({ match }) => {\n  //user roles state\n  const [userRolesList,setUserRolesList] = useState([]);\n  const [isLoading,setIsLoading] = useState(true);\n\n  useEffect(()=>{\n    getUserRolesAPICall();\n  },[])\n\n  //API CALLS\n  const getUserRolesAPICall = async() => {\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getUserRolesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n         setUserRolesList(responseData.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Role</span>\n            <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n\n      <Row className=\"mb-5\">\n\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Role Name</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"2\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                  userRolesList.length > 0 ?\n                    userRolesList.map((item,index)=>\n                      <tr key={index}>\n                        <th scope=\"row\">{index +1}</th>\n                        <td>{item.name}</td>\n                      </tr>\n                    ):<tr>\n                        <td className=\"text-center text-danger\" colSpan=\"2\">Data  Not  Found</td>\n                    </tr>\n                }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default RoleMaster;\n","import React from 'react';\nimport { \n  Row, Card, CardBody, FormGroup,Label, Input, CustomInput, Button\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\n\nconst AddRole = () => {\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Role</span>\n            <a href=\"Role\" className=\"mt-2 btn-primary default btn-sm tbl_action_btn float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Role List</b>\n            </a>\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card className=\"mb-4\">\n              <CardBody> \n                  <Row>\n                    <Colxx sm={12}>\n                      <FormGroup>\n                        <Label>\n                          Role Name\n                        </Label>\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Role Name\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx sm={3}>\n                      <FormGroup>\n                        <CustomInput\n                          type=\"checkbox\"\n                          label=\"Role Create\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx sm={3}>\n                      <FormGroup>\n                        <CustomInput\n                          type=\"checkbox\"\n                          label=\"Role Update\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx sm={3}>\n                      <FormGroup>\n                        <CustomInput\n                          type=\"checkbox\"\n                          label=\"User List\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx sm={3}>\n                      <FormGroup>\n                        <CustomInput\n                          type=\"checkbox\"\n                          label=\"Report Permission\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx sm=\"12\" className=\"text-center\">\n                      <Button color=\"primary\" className=\"default mr-2\">\n                          <b>Add</b>\n                      </Button>\n                      <Button color=\"light\" className=\"default\">\n                          <b>Cancel</b>\n                      </Button>\n                    </Colxx>\n                  </Row>\n              </CardBody>\n              </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default AddRole;\n","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle,Collapse, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,InputGroup \n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getBatteryListAPI,deleteBatterytAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\nconst BatteryMaster = ({ match }) => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //collapse states\n  const [collapse1, setCollapse1] = useState(false);\n  const [collapse2, setCollapse2] = useState(false);\n  const [collapse3, setCollapse3] = useState(false);\n  const [collapse4, setCollapse4] = useState(false);\n  const [collapse5, setCollapse5] = useState(false);\n  const [collapse6, setCollapse6] = useState(false);\n  const [collapse7, setCollapse7] = useState(false);\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [infoModalVisible,setInfoModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //battery list\n  const [batteryList,setBatteryList] = useState([]);\n  const [batteryID,setBatteryID] = useState(\"\");\n  const [batteryToDeleteId,setBatteryToDeleteId] = useState(\"\");\n  //data states\n  const [batteryInfo,setBatteryInfo] = useState({});\n  const [batteryAllData,setBatteryAllData] = useState({});\n  const [makYear,setMakeYear] = useState(\"\");\n  const [chemistry,setChemistry] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getBatteryListAPICall();\n    batteryAlert();\n  },[batteryID,pageCount])\n\n  //API calls\n  const getBatteryListAPICall = async() => {\n    setBatteryList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getBatteryListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setBatteryList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteBatteryAPICall = async(batteryId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteBatterytAPI,\n      {battery_master_id:batteryId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setBatteryID(batteryId);\n          batteryDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          batteryDeletedAlert(responseData.status,responseData.msg)\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updateBattery = (batteryId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updatebattery',\n      state:{battery_master_id:batteryId}\n    });\n  }\n\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const batteryDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n\n  const batteryAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (batteryId) => {\n    setBatteryToDeleteId(batteryId)\n    setModalVisible(!modalVisible);\n  }\n  //modal for all data\n  const toggleInfoModal = (batteryItem) => {\n    let tempAllData = {};\n    if (batteryItem.all_data==undefined) {\n      tempAllData = {};\n    }else {\n      tempAllData = JSON.parse(batteryItem.all_data);\n      setMakeYear(tempAllData.make_year.month.label + tempAllData.make_year.year.label);\n      setChemistry(tempAllData.chemistry);\n      setBatteryInfo(batteryItem);\n      setBatteryAllData(tempAllData)\n    }    \n    setInfoModalVisible(!infoModalVisible);\n  }\n   //handle search input\n   const handleSearch = () => {\n      setPageCount(1);\n      getBatteryListAPICall();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Battery</span>\n            <a href=\"addbattery\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                  <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                    {alertMsg}\n                  </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>OEM</th>\n                    <th>Model</th>\n                    <th>Make Year</th>\n                    <th>Type of Connector</th>\n                    <th>Chemistry</th>\n                    <th>Minimum Delivered Kwh</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"8\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    batteryList.length > 0 ?\n                      batteryList.map((item,index)=>\n                        <tr key={index}>\n                          <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                          <td>{item.oem_name}</td>\n                          <td>{item.model_name}</td>\n                          <td>{item.make_year}</td>\n                          <td>{item.type_of_connector}</td>\n                          <td>{JSON.parse(item.all_data)!=null?JSON.parse(item.all_data).chemistry.label:\"\"}</td>\n                          <td>{JSON.parse(item.all_data)!=null?JSON.parse(item.all_data).minimum_delivered:\"\"}</td>\n                          <td>\n                          {item.all_data!=null && <Button color=\"primary\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>{toggleInfoModal(item)}}>\n                                <i className=\"glyph-icon simple-icon-eye\"></i>\n                            </Button>}\n                            <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateBattery(item.battery_master_id)}}>\n                                <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                            </a>\n                            <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.battery_master_id)}}>\n                                <i className=\"glyph-icon simple-icon-trash\"></i>\n                            </Button>                        \n                          </td>\n                        </tr>\n                        ):<tr>\n                              <td className=\"text-center text-danger\" colSpan=\"7\">Data  Not  Found</td>\n                          </tr>\n                        }                  \n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  Are you sure you would like to delete this battery?\n                  <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteBatteryAPICall(batteryToDeleteId)}>\n                    Delete Battery \n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                    Cancel\n                  </Button>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n        <div className=\"modal-dialog modal-fullscreen\" >\n          <Modal\n            isOpen={infoModalVisible}\n            toggle={toggleInfoModal} \n            className=\"modal-fullscreen\">\n            <ModalBody>\n              <Row>\n                <Colxx md=\"12\">\n                    <i className=\"simple-icon-close float-right mr-4 close-icon\" onClick={toggleInfoModal}></i>\n                </Colxx>\n              </Row>\n              <Row className=\"mt-2\">\n                  <Colxx xxs=\"12\" lg=\"12\">\n                    <ul className=\"list-unstyled mb-4\">\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">1</span>\n                                General Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse1 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse1(!collapse1)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse1}>\n                            <div className=\"card-body pt-0\">\n                              <Row>\n                                <Colxx md=\"6\">\n                                  <b>OEM:</b> {batteryInfo.oem_name}\n                                </Colxx>\n                                <Colxx md=\"6\" >\n                                  <b>Model:</b> {batteryInfo.model_name}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Make Year:</b> {makYear}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Chemistry:</b> {chemistry.label}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Nominal Capacity:</b> {batteryAllData.nominal_capacity}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Minimum Capacity:</b> {batteryAllData.minimum_capacity}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>No. of cell in series:</b> {batteryAllData.series_cell}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>No. of cell in parallel:</b> {batteryAllData.parallel_cell}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                 <b> Cell Type:</b> {batteryAllData.cell_type}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Cell Make:</b> {batteryAllData.cell_make}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Total number of cells:</b> {batteryAllData.total_cells}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Nominal voltage:</b> {batteryAllData.nominal_voltage}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Minimum delivered KWH:</b> {batteryAllData.minimum_delivered}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Pack Configuration:</b> {batteryAllData.pack_configuration}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>BMS type:</b> {batteryAllData.bms_type}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                 <b> Weight:</b> {batteryAllData.weight}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Dimension:</b> {batteryAllData.dimension}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Type of Connector:</b> {batteryInfo.type_of_connector}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Remark 1:</b> {batteryInfo.remark_1}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Remark 2:</b> {batteryInfo.remark_2}\n                                </Colxx>\n                              </Row>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">2</span>\n                                Electrical Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse2 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse2(!collapse2)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse2}>\n                            <div className=\"card-body pt-0\">\n                              <Row>\n                                <Colxx md=\"6\">\n                                  <b>Operating voltage range:</b> {batteryAllData.operating_voltage_range}\n                                </Colxx>\n                                <Colxx md=\"6\" >\n                                  <b>Charging mode:</b> {batteryAllData.charging_mode}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Recommended voltage:</b> {batteryAllData.recommended_voltage}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Std. DisCh. current:</b> {batteryAllData.discharging_current}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Pulsed DisCh. Current(A):</b> {batteryAllData.pulsed_discharge_current}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Std. Charging Current(A):</b> {batteryAllData.standard_charging_current}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Cell low cut pro level:</b> {batteryAllData.cell_low_protection_level}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Cell low cut pro rec level:</b> {batteryAllData.cell_low_protection_recovery}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Cell high cut pro level:</b> {batteryAllData.cell_high_protection_level}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Cell high cut pro recovery level:</b> {batteryAllData.cell_high_protection_recovery}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Battery cells efficiency rate:</b> {batteryAllData.battery_cells_efficiency}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Battery cells failure rate:</b> {batteryAllData.battery_cells_faliure}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Battery pack effi rate:</b> {batteryAllData.battery_pack_efficiency}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Battery pack failure rate:</b> {batteryAllData.battery_pack_faliure}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Bleeding start voltage level:</b> {batteryAllData.bleeding_start_voltage}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Over Temp. pro DisCh.mode:</b> {batteryAllData.over_temp_pro_dis}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Temp. pro rec DisCh.mode:</b> {batteryAllData.over_temp_recovery_dis}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Temp. pro charge mode:</b> {batteryAllData.over_temp_pro_charge}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Temp. pro rec charge mode:</b> {batteryAllData.over_temp_recovery_charge}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Remark 1:</b> {batteryAllData.ec_remark_1}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Remark 2:</b> {batteryAllData.ec_remark_2}\n                                </Colxx>\n                              </Row>\n                            </div>\n                          </Collapse>\n                        </Card>\n                        </li>\n                        <li>\n                          <Card className=\"question d-flex mb-4\">\n                            <div className=\"d-flex flex-grow-1 min-width-zero\">\n                              <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                                <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                  <span className=\"heading-number d-inline-block\">3</span>\n                                  Temprature Characteristics\n                                </div>\n                              </div>\n                              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                                <Button\n                                  outline\n                                  color=\"theme-3\"\n                                  className={`icon-button ml-1 rotate-icon-click ${\n                                    collapse3 ? 'rotate' : ''\n                                  }`}\n                                  onClick={() => setCollapse3(!collapse3)}\n                                >\n                                  <i className=\"simple-icon-arrow-down\" />\n                                </Button>\n                              </div>\n                            </div>\n                            <Collapse isOpen={collapse3}>\n                              <div className=\"card-body pt-0\">\n                                <div className=\"edit-mode\">\n                                  <Row>\n                                    <Colxx md=\"6\">\n                                      <b>Max. Working Temp.:</b> {batteryAllData.max_working_temp}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Storage Temp.:</b> {batteryAllData.storage_temp}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Temp. control at cell level:</b> {batteryAllData.temp_control_cell}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Temp. control at pack level:</b> {batteryAllData.temp_control_pack}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Temp. control at swap. level:</b> {batteryAllData.temp_control_swapping}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark 1:</b> {batteryAllData.tc_remark_1}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark 2:</b> {batteryAllData.tc_remark_2}\n                                    </Colxx>\n                                  </Row>\n                                </div>\n                              </div>\n                            </Collapse>\n                          </Card>\n                        </li>\n                        <li>\n                          <Card className=\"question d-flex mb-4\">\n                            <div className=\"d-flex flex-grow-1 min-width-zero\">\n                              <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                                <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                  <span className=\"heading-number d-inline-block\">4</span>\n                                  Mechanical Characteristics\n                                </div>\n                              </div>\n                              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                                <Button\n                                  outline\n                                  color=\"theme-3\"\n                                  className={`icon-button ml-1 rotate-icon-click ${\n                                    collapse4 ? 'rotate' : ''\n                                  }`}\n                                  onClick={() => setCollapse4(!collapse4)}\n                                >\n                                  <i className=\"simple-icon-arrow-down\" />\n                                </Button>\n                              </div>\n                            </div>\n                            <Collapse isOpen={collapse4}>\n                              <div className=\"card-body pt-0\">\n                                <div className=\"edit-mode\">\n                                  <Row>\n                                    <Colxx md=\"6\">\n                                      <b>Module dimension:</b> {batteryAllData.module_dimension}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Cabinet design:</b> {batteryAllData.cabinet_design}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Degradation of sensors/connectors:</b> {batteryAllData.degradation_sensors}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Power connector:</b> {batteryAllData.power_connector}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>RS485/CAN:</b> {batteryAllData.rs_can}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Casing:</b> {batteryAllData.casing}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark 1:</b> {batteryAllData.mc_remark_1}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark 2:</b> {batteryAllData.mc_remark_2}\n                                    </Colxx>\n                                  </Row>\n                                </div>\n                              </div>\n                            </Collapse>\n                          </Card>\n                        </li>\n                        <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">5</span>\n                                Protections\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse5 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse5(!collapse5)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse5}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Row>\n                                  <Colxx md=\"6\">\n                                    <b>Cell over voltage pro:</b> {batteryAllData.cell_over_voltage}\n                                  </Colxx>\n                                  <Colxx md=\"6\" >\n                                    <b>Cell under voltage pro:</b> {batteryAllData.cell_under_voltage}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Ch. ov. current pro:</b> {batteryAllData.charging_over_current}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>DisCh. ov. current pro:</b> {batteryAllData.discharging_over_current}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Output short circuit pro:</b> {batteryAllData.output_short_circuit}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Cell Temp Pro. in DisCh.:</b> {batteryAllData.cell_temp_protection_discharging}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Remark 1:</b> {batteryAllData.p_remark_1}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Remark 2:</b> {batteryAllData.p_remark_2}\n                                  </Colxx>\n                                </Row>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                        </li>\n                        <li>\n                          <Card className=\"question d-flex mb-4\">\n                            <div className=\"d-flex flex-grow-1 min-width-zero\">\n                              <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                                <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                  <span className=\"heading-number d-inline-block\">6</span>\n                                  Warranty\n                                </div>\n                              </div>\n                              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                                <Button\n                                  outline\n                                  color=\"theme-3\"\n                                  className={`icon-button ml-1 rotate-icon-click ${\n                                    collapse6 ? 'rotate' : ''\n                                  }`}\n                                  onClick={() => setCollapse6(!collapse6)}\n                                >\n                                  <i className=\"simple-icon-arrow-down\" />\n                                </Button>\n                              </div>\n                            </div>\n                            <Collapse isOpen={collapse6}>\n                              <div className=\"card-body pt-0\">\n                                <div className=\"edit-mode\">\n                                  <Row>\n                                    <Colxx md=\"6\">\n                                      <b>Cycle Life:</b> {batteryAllData.cycle_life}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Capacity Retention of 70%:</b> {batteryAllData.capacity_retention}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Depth of DisCh.:</b> {batteryAllData.depth_discharge}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark 1:</b> {batteryAllData.w_remark_1}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark 2:</b> {batteryAllData.w_remark_2}\n                                    </Colxx>\n                                  </Row>\n                                </div>\n                              </div>\n                            </Collapse>\n                          </Card>\n                        </li>\n                        <li>\n                          <Card className=\"question d-flex mb-4\">\n                            <div className=\"d-flex flex-grow-1 min-width-zero\">\n                              <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                                <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                  <span className=\"heading-number d-inline-block\">7</span>\n                                  Interface\n                                </div>\n                              </div>\n                              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                                <Button\n                                  outline\n                                  color=\"theme-3\"\n                                  className={`icon-button ml-1 rotate-icon-click ${\n                                    collapse7 ? 'rotate' : ''\n                                  }`}\n                                  onClick={() => setCollapse7(!collapse7)}\n                                >\n                                  <i className=\"simple-icon-arrow-down\" />\n                                </Button>\n                              </div>\n                            </div>\n                            <Collapse isOpen={collapse7}>\n                              <div className=\"card-body pt-0\">\n                                <div className=\"edit-mode\">\n                                  <Row>\n                                    <Colxx md=\"6\">\n                                      <b>Communication Prototcol:</b> {batteryAllData.communication_prototcol}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Network Communication:</b> {batteryAllData.network_communication}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark 1:</b> {batteryAllData.i_remark_1}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark 2:</b> {batteryAllData.i_remark_2}\n                                    </Colxx>  \n                                  </Row>\n                                </div>\n                              </div>\n                            </Collapse>\n                          </Card>\n                        </li>\n                    </ul>\n                  </Colxx>\n              </Row>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleInfoModal}>\n                Close\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </div>        \n      </Row>\n    </>\n  );\n};\nexport default BatteryMaster;","import React, { useState, useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardSubtitle,Alert,\n  Label,Input, Button,Collapse,Form,Badge\n } from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getOemAPI,addBatteryAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst AddBattery = () => {\n   //alert states\n   const [alertVisible,setAlertVisible] = useState(false);\n   const [alertMsg,setAlertMsg] = useState(\"\");\n   const [alertColor,setAlertColor] = useState(\"\");\n  //collapse states\n  const [collapse1, setCollapse1] = useState(false);\n  const [collapse2, setCollapse2] = useState(false);\n  const [collapse3, setCollapse3] = useState(false);\n  const [collapse4, setCollapse4] = useState(false);\n  const [collapse5, setCollapse5] = useState(false);\n  const [collapse6, setCollapse6] = useState(false);\n  const [collapse7, setCollapse7] = useState(false);\n  //dropdown states\n  const [oem,setOem] = useState(\"\");\n  const [oemList,setOemList] = useState([]);\n  const [month,setMonth] = useState(null);\n  const [year,setYear] = useState(null);\n  const [chemistry,setChemistry] = useState(\"\");\n  //image states\n  const [imageSelected,setImageSelected] = useState();\n  const [imagePreview,setImagePreview] = useState();\n  const [imageErrorFLag,setImageErrorFlag] = useState(false);\n  const [imageKey,setImageKey] = useState(true); //boolean key to rerender input on removing image\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n \n  const history = useHistory();\n\n  useEffect(()=>{\n    getOemAPICall();\n  },[])\n\n  //API calls\n  const getOemAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:\"1\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let tempData = [];\n        if (responseData.status === 1) {          \n          responseData.data.map(item=>{\n            tempData.push({label: item.name, value: item.oem_id, id:item.oem_id});\n          })\n          setOemList(tempData);\n        }else{\n          addBatteryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addBatteryAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addBatteryAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/battery',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          addBatteryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const BatteryDetailsValidationSchema = yup.object().shape({\n    model_name:yup.string()\n        .required(\"Model name is required\"),\n    type_of_connector:yup.string()\n        .required(\"Type of connector is required\"),\n  });\n\n  const initialValues = {    \n    model_name:\"\",\n    nominal_capacity:\"\",\n    minimum_capacity:\"\",\n    series_cell:\"\",\n    parallel_cell:\"\",\n    cell_type:\"\",\n    cell_make:\"\",\n    total_cells:\"\",\n    nominal_voltage:\"\",\n    minimum_delivered:\"\",\n    pack_configuration:\"\",\n    bms_type:\"\",\n    weight:\"\",\n    dimension:\"\",\n    type_of_connector:\"\",\n    gc_remark_1:\"\",\n    gc_remark_2:\"\",\n    operating_voltage_range:\"\",\n    charging_mode:\"\",\n    recommended_voltage:\"\",\n    discharging_current:\"\",\n    pulsed_discharge_current:\"\",\n    standard_charging_current:\"\",\n    cell_low_protection_level:\"\",\n    cell_low_protection_recovery:\"\",\n    cell_high_protection_level:\"\",\n    cell_high_protection_recovery:\"\",\n    battery_cells_efficiency:\"\",\n    battery_cells_faliure:\"\",\n    battery_pack_efficiency:\"\",\n    battery_pack_faliure:\"\",\n    bleeding_start_voltage:\"\",\n    over_temp_pro_dis:\"\",\n    over_temp_recovery_dis:\"\",\n    over_temp_pro_charge:\"\",\n    over_temp_recovery_charge:\"\",\n    max_working_temp:\"\",\n    storage_temp:\"\",\n    temp_control_cell:\"\",\n    temp_control_pack:\"\",\n    temp_control_swapping:\"\",\n    module_dimension:\"\",\n    cabinet_design:\"\",\n    degradation_sensors:\"\",\n    power_connector:\"\",\n    rs_can:\"\",\n    casing:\"\",\n    cell_over_voltage:\"\",\n    cell_under_voltage:\"\",\n    charging_over_current:\"\",\n    discharging_over_current:\"\",\n    output_short_circuit:\"\",\n    cell_temp_protection_discharging:\"\",\n    cycle_life:\"\",\n    capacity_retention:\"\",\n    depth_discharge:\"\",\n    communication_prototcol:\"\",\n    network_communication:\"\",\n    ec_remark_1:\"\",\n    ec_remark_2:\"\",\n    tc_remark_1:\"\",\n    tc_remark_2:\"\",\n    mc_remark_1:\"\",\n    mc_remark_2:\"\",\n    p_remark_1:\"\",\n    p_remark_2:\"\",\n    w_remark_1:\"\",\n    w_remark_2:\"\",\n    i_remark_1:\"\",\n    i_remark_2:\"\",\n  };\n\n  //helper methods\n  const getYear = () => {\n    let yearList = [];\n    for (let index = 0; index <= 20; index++) {\n      const temp = {label:2010+index,value:index+1,id:index+1}\n      yearList.push(temp);\n    }\n    return yearList\n  };\n  //Alert helper methods\n  const addBatteryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //image selection methods\n  const handleImageSelect = (imageFile) =>{\n    const fileExtension = imageFile.name.split('.').pop();\n    if (fileExtension == \"jpg\" || fileExtension == \"jpeg\" || fileExtension == \"png\") {\n      setImageErrorFlag(false);\n      setImageSelected(imageFile);\n      setImagePreview(URL.createObjectURL(imageFile));\n    } else {\n      setImageErrorFlag(true);\n    }\n  }\n  const handleDeleteImage = () =>{\n    setImageKey(!imageKey);\n    setImagePreview();\n    setImageSelected();\n  }\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={BatteryDetailsValidationSchema} \n        onSubmit={(values)=>{\n         if (month == null || year == null) {\n           addBatteryAlert(\"Make Year is required\");\n           return;\n         }\n          let formData  = new FormData();\n          const tempData={\n              make_year:{month:month,year:year},\n              chemistry:chemistry,\n              nominal_capacity:values.nominal_capacity,\n              minimum_capacity:values.minimum_capacity,\n              series_cell:values.series_cell,\n              parallel_cell:values.parallel_cell,\n              cell_type:values.cell_type,\n              cell_make:values.cell_make,\n              total_cells:values.total_cells,\n              nominal_voltage:values.nominal_voltage,\n              minimum_delivered:values.minimum_delivered,\n              pack_configuration:values.pack_configuration,\n              bms_type:values.bms_type,\n              weight:values.weight,\n              dimension:values.dimension,\n              operating_voltage_range:\"\",\n              charging_mode:values.charging_mode,\n              recommended_voltage:values.recommended_voltage,\n              discharging_current:values.discharging_current,\n              pulsed_discharge_current:values.pulsed_discharge_current,\n              standard_charging_current:values.standard_charging_current,\n              cell_low_protection_level:values.cell_low_protection_level,\n              cell_low_protection_recovery:values.cell_low_protection_recovery,\n              cell_high_protection_level:values.cell_high_protection_level,\n              cell_high_protection_recovery:values.cell_high_protection_recovery,\n              battery_cells_efficiency:values.battery_cells_efficiency,\n              battery_cells_faliure:values.battery_cells_faliure,\n              battery_pack_efficiency:values.battery_pack_efficiency,\n              battery_pack_faliure:values.battery_pack_faliure,\n              bleeding_start_voltage:values.bleeding_start_voltage,\n              over_temp_pro_dis:values.over_temp_pro_dis,\n              over_temp_recovery_dis:values.over_temp_recovery_dis,\n              over_temp_pro_charge:values.over_temp_pro_charge,\n              over_temp_recovery_charge:values.over_temp_recovery_charge,\n              max_working_temp:values.max_working_temp,\n              storage_temp:values.storage_temp,\n              temp_control_cell:values.temp_control_cell,\n              temp_control_pack:values.temp_control_pack,\n              temp_control_swapping:values.temp_control_swapping,\n              module_dimension:values.module_dimension,\n              cabinet_design:values.cabinet_design,\n              degradation_sensors:values.degradation_sensors,\n              power_connector:values.power_connector,\n              rs_can:values.rs_can,\n              casing:values.casing,\n              cell_over_voltage:values.cell_over_voltage,\n              cell_under_voltage:values.cell_under_voltage,\n              charging_over_current:values.charging_over_current,\n              discharging_over_current:values.discharging_over_current,\n              output_short_circuit:values.output_short_circuit,\n              cell_temp_protection_discharging:values.cell_temp_protection_discharging,\n              cycle_life:values.cycle_life,\n              capacity_retention:values.capacity_retention,\n              depth_discharge:values.depth_discharge,\n              communication_prototcol:values.communication_prototcol,\n              network_communication:values.network_communication,\n              ec_remark_1:values.ec_remark_1,\n              ec_remark_2:values.ec_remark_2,\n              tc_remark_1:values.tc_remark_1,\n              tc_remark_2:values.tc_remark_2,\n              mc_remark_1:values.mc_remark_1,\n              mc_remark_2:values.mc_remark_2,\n              p_remark_1:values.p_remark_1,\n              p_remark_2:values.p_remark_2,\n              w_remark_1:values.w_remark_1,\n              w_remark_2:values.w_remark_2,\n              i_remark_1:values.i_remark_1,\n              i_remark_2:values.i_remark_2,\n          }\n          formData.append('oem_id',oem.value);\n          formData.append('model_name',values.model_name,);\n          formData.append('type_of_connector',values.type_of_connector);\n          formData.append('make_year',month.label+\"-\"+year.label);\n          formData.append('img_file',imageSelected);\n          formData.append('remark_1',values.gc_remark_1);\n          formData.append('remark_2',values.gc_remark_2);\n          formData.append('all_data',JSON.stringify(tempData));\n          addBatteryAPICall(formData);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors,isValid})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\">\n                    <span className=\"page_title\">Add Battery</span>\n                      <Button color=\"light\" className=\"default float-right\" onClick={()=>history.goBack()}>\n                          <b>Cancel</b>\n                      </Button>\n                      <Button color=\"primary\" className=\"default mr-2 float-right\" onClick={handleSubmit}  disabled={buttonDisabled}>\n                        <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Add</b>\n                      </Button>              \n                  <Separator className=\"mb-5\" />\n                </Colxx>\n              </Row>\n              <Row>\n                <Colxx xxs=\"12\" lg=\"12\">\n                  <ul className=\"list-unstyled mb-4\">\n                    <li>\n                      <CardSubtitle className=\"mb-3\">\n                        <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                          {alertMsg}\n                        </Alert>\n                      </CardSubtitle>\n                    </li>\n                    <li>\n                      <Card className={isValid?\"question d-flex mb-4\":\"question d-flex mb-4 cardBorderError\"}>\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">1</span>\n                              General Characteristics\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse1 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse1(!collapse1)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse1}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                        OEM\n                                      </Label>\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Select OEM\"\n                                        value={oem}\n                                        onChange={(e) => setOem(e)}\n                                        options={oemList}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Model Name\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Model Name\"\n                                        name=\"model_name\"\n                                        value={values.model_name}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        className={errors.model_name && touched.model_name ? \"input-error\":null}\n                                      />\n                                      {errors.model_name && touched.model_name &&(\n                                        <span className=\"error\">{errors.model_name}</span>\n                                      )}\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Make Year\n                                      </Label>\n                                      <Row>\n                                      <Colxx md=\"6\">\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Month\"\n                                        value={month}\n                                        onChange={(e) => setMonth(e)}\n                                        options={[\n                                          { label: 'Jan', value: '1', id: 1 },\n                                          { label: 'Feb', value: '2', id: 2 },\n                                          { label: 'Mar', value: '3', id: 3 },\n                                          { label: 'Apr', value: '4', id: 4 },\n                                          { label: 'May', value: '5', id: 5 },\n                                          { label: 'Jun', value: '6', id: 6 },\n                                          { label: 'Jul', value: '7', id: 7 },\n                                          { label: 'Aug', value: '8', id: 8 },\n                                          { label: 'Sep', value: '9', id: 9 },\n                                          { label: 'Oct', value: '10', id: 10 },\n                                          { label: 'Nov', value: '11', id: 11 },\n                                          { label: 'Dec', value: '12', id: 12 },\n                                        ]}\n                                      />\n                                      </Colxx>\n                                      <Colxx md=\"6\">\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Year\"\n                                        value={year}\n                                        onChange={(e) => setYear(e)}\n                                        options={getYear()}\n                                      />\n                                      </Colxx>\n                                      </Row>\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Chemistry\n                                      </Label>\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        value={chemistry}\n                                        onChange={(e) => setChemistry(e)}\n                                        options={[\n                                          { label: 'NMC', value: '1', id: 1 },\n                                          { label: 'NCA', value: '2', id: 2 },\n                                          { label: 'LFP', value: '3', id: 3 },\n                                          { label: 'LTO', value: '4', id: 4 },\n                                          { label: 'LMO', value: '5', id: 5 }\n                                        ]}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Nominal Capacity (AH)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Nominal Capacity (AH)\"\n                                        name=\"nominal_capacity\"\n                                        value={values.nominal_capacity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Minimum Capacity (AH)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Minimum Capacity (AH)\"\n                                        name=\"minimum_capacity\"\n                                        value={values.minimum_capacity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      No. of cell in series\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"No. of cell in series\"\n                                        name=\"series_cell\"\n                                        value={values.series_cell}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      No. of cell in parallel\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"No. of cell in parallel\"\n                                        name=\"parallel_cell\"\n                                        value={values.parallel_cell}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell Type\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell Type\"\n                                        name=\"cell_type\"\n                                        value={values.cell_type}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell Make\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell Make\"\n                                        name=\"cell_make\"\n                                        value={values.cell_make}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>Remark1\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Total number of cells\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Total number of cells\"\n                                        name=\"total_cells\"\n                                        value={values.total_cells}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Nominal voltage (V)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Nominal voltage (V)\"\n                                        name=\"nominal_voltage\"\n                                        value={values.nominal_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Minimum delivered KWH\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Minimum delivered KWH\"\n                                        name=\"minimum_delivered\"\n                                        value={values.minimum_delivered}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Pack Configuration\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Pack Configuration\"\n                                        name=\"pack_configuration\"\n                                        value={values.pack_configuration}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      BMS type\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"BMS type\"\n                                        name=\"bms_type\"\n                                        value={values.bms_type}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Weight\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Weight\"\n                                        name=\"weight\"\n                                        value={values.weight}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Dimension\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Module dimension\"\n                                        name=\"dimension\"\n                                        value={values.dimension}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Type of Connector\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Type of Connector\"\n                                        name=\"type_of_connector\"\n                                        value={values.type_of_connector}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                      {errors.type_of_connector && touched.type_of_connector &&(\n                                        <span className=\"error\">{errors.type_of_connector}</span>\n                                      )}\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                        Image\n                                      </Label>\n                                      <Input\n                                        key={imageKey}\n                                        type=\"file\"\n                                        name=\"upload_image\"\n                                        accept=\".png,.jpg,.jpeg\"\n                                        onChange={e=>handleImageSelect(e.target.files[0])}\n                                      />\n                                      {imageErrorFLag && \n                                        <span className=\"error\">Image must be either png,jpg or jpeg format</span>\n                                      }\n                                    </FormGroup>\n                                  </Colxx>\n                                  {imagePreview!=null &&\n                                    <Colxx sm={3}>\n                                      <div>\n                                        <Button className=\"custom-badge default tbl_action_btn\" onClick={()=>handleDeleteImage()}><i className=\"glyph-icon simple-icon-trash image-remove-icon\"></i></Button>\n                                        <img src={imagePreview} height=\"100px\" width=\"150px\" alt=\"Image Preview\"/>\n                                      </div>\n                                    </Colxx>\n                                  }\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"gc_remark_1\"\n                                        value={values.gc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"gc_remark_2\"\n                                        value={values.gc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                    </li>\n                    <li>\n                      <Card className=\"question d-flex mb-4\">\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">2</span>\n                              Electrical Characteristics\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse2 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse2(!collapse2)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse2}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Operating Voltage Range(V)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Operating voltage range(V)\"\n                                        name=\"operating_voltage_range\"\n                                        value={values.operating_voltage_range}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Charging Mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Charging mode\"\n                                        name=\"charging_mode\"\n                                        value={values.charging_mode}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Recommended Voltage (V)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Recommended voltage (V)\"\n                                        name=\"recommended_voltage\"\n                                        value={values.recommended_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Std. DisCh. Current (A)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Std. DisCh. current\"\n                                        name=\"discharging_current\"\n                                        value={values.discharging_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Pulsed Discharge Current(A)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Pulsed Discharge Current(A)\"\n                                        name=\"pulsed_discharge_current\"\n                                        value={values.pulsed_discharge_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Std. Charging Current(A)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Std. Charging Current(A)\"\n                                        name=\"standard_charging_current\"\n                                        value={values.standard_charging_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell low cut prot. level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell low cut prot. level\"\n                                        name=\"cell_low_protection_level\"\n                                        value={values.cell_low_protection_level}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell low cut prot. recovery level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell low cut prot. recovery level\"\n                                        name=\"cell_low_protection_recovery\"\n                                        value={values.cell_low_protection_recovery}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell high cut prot. level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell high cut prot. level\"\n                                        name=\"cell_high_protection_level\"\n                                        value={values.cell_high_protection_level}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell high cut prot. recovery level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell high cut prot. rec level\"\n                                        name=\"cell_high_protection_recovery\"\n                                        value={values.cell_high_protection_recovery}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery cells efficiency rate\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery cells efficiency rate\"\n                                        name=\"battery_cells_efficiency\"\n                                        value={values.battery_cells_efficiency}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery cells failure rate\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery cells failure rate\"\n                                        name=\"battery_cells_faliure\"\n                                        value={values.battery_cells_faliure}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery pack efficiency rate\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery pack efficiency rate\"\n                                        name=\"battery_pack_efficiency\"\n                                        value={values.battery_pack_efficiency}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery pack failure rate\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery pack failure rate\"\n                                        name=\"battery_pack_faliure\"\n                                        value={values.battery_pack_faliure}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Bleeding start voltage level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Bleeding start voltage level\"\n                                        name=\"bleeding_start_voltage\"\n                                        value={values.bleeding_start_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Over Temp. prot. in DisCh.mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Over Temp. prot. DisCh.mode\"\n                                        name=\"over_temp_pro_dis\"\n                                        value={values.over_temp_pro_dis}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Over Temp. prot. recovery in DisCh.mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Temp. prot. rec DisCh.mode\"\n                                        name=\"over_temp_recovery_dis\"\n                                        value={values.over_temp_recovery_dis}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Over Temp. prot. in charge mode \n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Temp. prot. charge mode\"\n                                        name=\"over_temp_pro_charge\"\n                                        value={values.over_temp_pro_charge}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Over Temp. prot. recovery in charge mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Temp. prot. rec charge mode\"\n                                        name=\"over_temp_recovery_charge\"\n                                        value={values.over_temp_recovery_charge}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"ec_remark_1\"\n                                        value={values.ec_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"ec_remark_2\"\n                                        value={values.ec_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">3</span>\n                                Temprature Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse3 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse3(!collapse3)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse3}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>                        \n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Maximum Working Temp.\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Max. Working Temp.\"\n                                          name=\"max_working_temp\"\n                                          value={values.max_working_temp}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Storage Temp.\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Storage Temp.\"\n                                          name=\"storage_temp\"\n                                          value={values.storage_temp}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Temp. control at cell level\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Temp. control at cell level\"\n                                          name=\"temp_control_cell\"\n                                          value={values.temp_control_cell}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Temp. control at pack level\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Temp. control at pack level\"\n                                          name=\"temp_control_pack\"\n                                          value={values.temp_control_pack}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Temp. control at swapping panel level\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Temp. control at swapping panel level\"\n                                          name=\"temp_control_swapping\"\n                                          value={values.temp_control_swapping}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"tc_remark_1\"\n                                        value={values.tc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"tc_remark_2\"\n                                        value={values.tc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>                        \n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">4</span>\n                                Mechanical Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse4 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse4(!collapse4)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse4}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Module dimension\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Module dimension\"\n                                          name=\"module_dimension\"\n                                          value={values.module_dimension}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Cabinet design\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Cabinet design\"\n                                          name=\"cabinet_design\"\n                                          value={values.cabinet_design}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Degradation of sensors/connectors\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Degradation of sensors\"\n                                          name=\"degradation_sensors\"\n                                          value={values.degradation_sensors}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Power connector\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Power connector\"\n                                          name=\"power_connector\"\n                                          value={values.power_connector}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        RS485/CAN\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"RS485/CAN\"\n                                          name=\"rs_can\"\n                                          value={values.rs_can}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Casing\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Casing\"\n                                          name=\"casing\"\n                                          value={values.casing}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"mc_remark_1\"\n                                        value={values.mc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"mc_remark_2\"\n                                        value={values.mc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                      <Card className=\"question d-flex mb-4\">\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">5</span>\n                              Protections\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse5 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse5(!collapse5)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse5}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell over voltage prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell over voltage prot.\"\n                                        name=\"cell_over_voltage\"\n                                        value={values.cell_over_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell under voltage prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell under voltage prot.\"\n                                        name=\"cell_under_voltage\"\n                                        value={values.cell_under_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Charging over current prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Charging over current prot.\"\n                                        name=\"charging_over_current\"\n                                        value={values.charging_over_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      DisCh. over current prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"DisCh. over current prot.\"\n                                        name=\"discharging_over_current\"\n                                        value={values.discharging_over_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Output short circuit prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Output short circuit prot.\"\n                                        name=\"output_short_circuit\"\n                                        value={values.output_short_circuit}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell temp prot. in DisCh. mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell temp prot. in DisCh. mode\"\n                                        name=\"cell_temp_protection_discharging\"\n                                        value={values.cell_temp_protection_discharging}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"p_remark_1\"\n                                        value={values.p_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"p_remark_2\"\n                                        value={values.p_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">6</span>\n                                Warranty\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse6 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse6(!collapse6)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse6}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Cycle life @ 80 DoD% / No. of Years\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Cycle life @ 80 DoD% / No. of Years\"\n                                          name=\"cycle_life\"\n                                          value={values.cycle_life}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Capacity retention of 70%\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Capacity retention of 70%\"\n                                          name=\"capacity_retention\"\n                                          value={values.capacity_retention}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Depth of Discharge (DoD) upon return\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Depth of Discharge (DoD) upon return\"\n                                          name=\"depth_discharge\"\n                                          value={values.depth_discharge}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"w_remark_1\"\n                                        value={values.w_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"w_remark_2\"\n                                        value={values.w_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">7</span>\n                                Interface\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse7 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse7(!collapse7)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse7}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Communication Protocol\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Communication Protocol\"\n                                          name=\"communication_prototcol\"\n                                          value={values.communication_prototcol}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Netwrok Communication\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Netwrok Communication\"\n                                          name=\"network_communication\"\n                                          value={values.network_communication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"i_remark_1\"\n                                        value={values.i_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"i_remark_2\"\n                                        value={values.i_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                  </ul>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AddBattery;   \n","import React, { useState, useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardSubtitle,Alert,\n  Label,Input, Button,Collapse,Form,\n } from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getOemAPI,updateBatteryAPI,getBatteryByIdAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateBattery = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //collapse states\n  const [collapse1, setCollapse1] = useState(false);\n  const [collapse2, setCollapse2] = useState(false);\n  const [collapse3, setCollapse3] = useState(false);\n  const [collapse4, setCollapse4] = useState(false);\n  const [collapse5, setCollapse5] = useState(false);\n  const [collapse6, setCollapse6] = useState(false);\n  const [collapse7, setCollapse7] = useState(false);\n  //dropdown states\n  const [oem,setOem] = useState({});\n  const [oemList,setOemList] = useState([]);\n  const [month,setMonth] = useState();\n  const [year,setYear] = useState();\n  const [chemistry,setChemistry] = useState(\"\");\n  //image states\n  const [imageSelected,setImageSelected] = useState();\n  const [imageFilePath,setImageFilePath] = useState();\n  const [imagePreview,setImagePreview] = useState();\n  const [imageErrorFLag,setImageErrorFlag] = useState(false);\n  const [imageKey,setImageKey] = useState(true); //boolean key to rerender input on removing image\n  //form default values states\n  const [modelName,setModelName] = useState(\"\");\n  const [connectorType,setConnectorType] = useState(\"\");\n  const [gcRemark1,setGcRemark1] = useState(\"\");\n  const [gcRemark2,setGcRemark2] = useState(\"\");\n  const [nominalCapacity,setNominalCapacity] = useState(\"\");\n  const [minimumCapacity,setMinimumCapacity] = useState(\"\");\n  const [seriesCell,setSeriesCell] = useState(\"\");\n  const [parallelCell,setParallelCell] = useState(\"\");\n  const [cellType,setCellType] = useState(\"\");\n  const [cellMake,setCellMake] = useState(\"\");\n  const [totalCells,setTotalCells] = useState(\"\");\n  const [nominalVoltage,setNominalVoltage] = useState(\"\");\n  const [minimumDelivered,setMinimumDelivered] = useState(\"\");\n  const [packConfiguration,setPackConfiguration] = useState(\"\");\n  const [bmsType,setBmsType] = useState(\"\");\n  const [weight,setWeight] = useState(\"\");\n  const [dimension,setDimension] = useState(\"\");            \n  const [operatingVoltageRange,setOperatingVoltageRange] = useState(\"\");\n  const [chargingMode,setChargingMode] = useState(\"\");\n  const [recommendedVoltage,setRecommendedVoltage] = useState(\"\");\n  const [dischargingCurrent,setDischargingCurrent] = useState(\"\");           \n  const [pulsedDischargeCurrent,setPulsedDischargeCurrent] = useState(\"\");\n  const [standardChargingCurrent,setStandardChargingCurrent] = useState(\"\");\n  const [cellLowProtectionLevel,setCellLowProtectionLevel] = useState(\"\");            \n  const [cellLowProtectionRecovery,setCellLowProtectionRecovery] = useState(\"\");\n  const [cellHighProtectionLevel,setCellHighProtectionLevel] = useState(\"\");\n  const [cellHighProtectionRecovery,setCellHighProtectionRecovery] = useState(\"\");\n  const [batteryCellsEfficiency,setBatteryCellsEfficiency] = useState(\"\");\n  const [batteryCellsFaliure,setBatteryCellsFaliure] = useState(\"\");\n  const [batteryPackEfficiency,setBatteryPackEfficiency] = useState(\"\");\n  const [batteryPackFaliure,setBatteryPackFaliure] = useState(\"\");\n  const [bleedingstartvoltage,setBleedingstartvoltage] = useState(\"\");\n  const [overTempProDis,setOverTempProDis] = useState(\"\");\n  const [overTempRecoveryDis,setOverTempRecoveryDis] = useState(\"\");\n  const [overTempProCharge,setOverTempProCharge] = useState(\"\");\n  const [overTempRecoveryCharge,setOverTempRecoveryCharge] = useState(\"\");\n  const [maxWorkingTemp,setMaxWorkingTemp] = useState(\"\");\n  const [storageTemp,setStorageTemp] = useState(\"\");\n  const [tempControlCell,setTempControlCell] = useState(\"\");\n  const [tempControlPack,setTempControlPack] = useState(\"\");\n  const [tempControlSwapping,setTempControlSwapping] = useState(\"\");\n  const [moduleDimension,setModuleDimension] = useState(\"\");\n  const [cabinetDesign,setCabinetDesign] = useState(\"\");\n  const [degradationSensors,setDegradationSensors] = useState(\"\");\n  const [powerConnector,setPowerConnector] = useState(\"\");\n  const [rsCan,setRsCan] = useState(\"\");\n  const [casing,setCasing] = useState(\"\");\n  const [cellOverVoltage,setCellOverVoltage] = useState(\"\");\n  const [cellUnderVoltage,setCellUnderVoltage] = useState(\"\");\n  const [chargingOverCurrent,setChargingOverCurrent] = useState(\"\");\n  const [dischargingOverCurrent,setDischargingOverCurrent] = useState(\"\");\n  const [outputShortCircuit,setOutputShortCircuit] = useState(\"\");\n  const [cellTempProtectionDischarging,setCellTempProtectionDischarging] = useState(\"\");\n  const [cycleLife,setCycleLife] = useState(\"\");\n  const [capacityRetention,setCapacityRetention] = useState(\"\");\n  const [depthDischarge,setDepthDischarge] = useState(\"\");            \n  const [communicationPrototcol,setcommunicationPrototcol] = useState(\"\");            \n  const [networkCommunication,setNetworkCommunication] = useState(\"\");\n  const [ecRemark1,setEcRemark1] = useState(\"\");\n  const [ecRemark2,setEcRemark2] = useState(\"\");   \n  const [tcRemark1,setTcRemark1] = useState(\"\");\n  const [tcRemark2,setTcRemark2] = useState(\"\");          \n  const [mcRemark1,setMcRemark1] = useState(\"\");\n  const [mcRemark2,setMcRemark2] = useState(\"\"); \n  const [pRemark1,setPRemark1] = useState(\"\");\n  const [pRemark2,setPRemark2] = useState(\"\"); \n  const [wRemark1,setWRemark1] = useState(\"\");\n  const [wRemark2,setWRemark2] = useState(\"\"); \n  const [iRemark1,setIRemark1] = useState(\"\");\n  const [iRemark2,setIRemark2] = useState(\"\"); \n \n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getOemAPICall();\n    getBatteryByIdAPICall();\n},[])\n\n\n  //API calls\n  const getOemAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:\"1\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let tempData = [];\n        if (responseData.status === 1) {          \n          responseData.data.map(item=>{\n            tempData.push({label: item.name, value: item.oem_id, id:item.oem_id});\n          })\n          setOemList(tempData);\n        }else{\n          updateBatteryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getBatteryByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getBatteryByIdAPI,\n        {\n            battery_master_id:location.state.battery_master_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            let allData = {};\n            if (responseData.status === 1) {\n                setImagePreview(responseData.data.file_img);\n                setImageFilePath(responseData.data.file_name_path);\n                setOem({label:responseData.data.oem_name,value:responseData.data.oem_id,id:responseData.data.oem_id});\n                setModelName(responseData.data.model_name);\n                setConnectorType(responseData.data.type_of_connector);\n                setGcRemark1(responseData.data.remark_1);\n                setGcRemark2(responseData.data.remark_2);\n                allData = JSON.parse(responseData.data.all_data);\n                setMonth(allData.make_year.month);\n                setYear(allData.make_year.year);\n                setChemistry(allData.chemistry);\n                setNominalCapacity(allData.nominal_capacity);\n                setMinimumCapacity(allData.minimum_capacity);\n                setSeriesCell(allData.series_cell);\n                setParallelCell(allData.parallel_cell);\n                setCellType(allData.cell_type);\n                setCellMake(allData.cell_make);\n                setTotalCells(allData.total_cells);\n                setNominalVoltage(allData.nominal_voltage);\n                setMinimumDelivered(allData.minimum_delivered);\n                setPackConfiguration(allData.pack_configuration);\n                setBmsType(allData.bms_type);\n                setWeight(allData.weight);\n                setDimension(allData.dimension);\n                setOperatingVoltageRange(allData.operating_voltage_range);\n                setChargingMode(allData.chargingMode);\n                setRecommendedVoltage(allData.recommended_voltage);\n                setDischargingCurrent(allData.discharging_current);\n                setPulsedDischargeCurrent(allData.pulsed_discharge_current);\n                setStandardChargingCurrent(allData.standard_charging_current);\n                setCellLowProtectionLevel(allData.cell_low_protection_level);\n                setCellLowProtectionRecovery(allData.cell_low_protection_recovery);\n                setCellHighProtectionLevel(allData.cell_high_protection_level);\n                setCellHighProtectionRecovery(allData.cell_high_protection_recovery);\n                setBatteryCellsEfficiency(allData.battery_cells_efficiency);\n                setBatteryCellsFaliure(allData.battery_cells_faliure);\n                setBatteryPackEfficiency(allData.battery_pack_efficiency);\n                setBatteryPackFaliure(allData.battery_pack_faliure);\n                setBleedingstartvoltage(allData.bleeding_start_voltage);\n                setOverTempProDis(allData.over_temp_pro_dis);\n                setOverTempRecoveryDis(allData.over_temp_recovery_dis);\n                setOverTempProCharge(allData.over_temp_pro_charge);\n                setOverTempRecoveryCharge(allData.over_temp_recovery_charge);\n                setMaxWorkingTemp(allData.max_working_temp);\n                setStorageTemp(allData.storage_temp);\n                setTempControlCell(allData.temp_control_cell);\n                setTempControlPack(allData.temp_control_pack);\n                setTempControlSwapping(allData.temp_control_swapping);\n                setModuleDimension(allData.module_dimension);\n                setCabinetDesign(allData.cabinet_design);\n                setDegradationSensors(allData.degradation_sensors);\n                setPowerConnector(allData.power_connector);\n                setRsCan(allData.rs_can);\n                setCasing(allData.casing);\n                setCellOverVoltage(allData.cell_over_voltage);\n                setCellUnderVoltage(allData.cell_under_voltage);\n                setChargingOverCurrent(allData.charging_over_current);\n                setDischargingOverCurrent(allData.discharging_over_current);\n                setOutputShortCircuit(allData.output_short_circuit);\n                setCellTempProtectionDischarging(allData.cell_temp_protection_discharging);\n                setCycleLife(allData.cycle_life);\n                setCapacityRetention(allData.capacity_retention);\n                setDepthDischarge(allData.depth_discharge);\n                setcommunicationPrototcol(allData.communication_prototcol);\n                setNetworkCommunication(allData.network_communication);\n                setEcRemark1(allData.ec_remark_1);\n                setEcRemark2(allData.ec_remark_2);\n                setTcRemark1(allData.tc_remark_1);\n                setTcRemark2(allData.tc_remark_2);\n                setMcRemark1(allData.mc_remark_1);\n                setMcRemark2(allData.mc_remark_2);\n                setPRemark1(allData.p_remark_1);\n                setPRemark2(allData.p_remark_2);\n                setWRemark1(allData.w_remark_1);\n                setWRemark2(allData.w_remark_2);\n                setIRemark1(allData.i_remark_1);\n                setIRemark2(allData.i_remark_2);\n            }else{\n              updateBatteryAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n    const updateBatteryAPICall = async(params) => {\n        setButtonDisabled(true);\n        const currentUser = getCurrentUser();\n        await axios.post(updateBatteryAPI,\n        params,\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n            history.push({\n                pathname:adminRoot+'/pages/battery',\n                state:{\n                responseStatus:responseData.status,\n                responseMsg:responseData.msg\n                }\n            })\n            }else{\n              setButtonDisabled(false);\n              updateBatteryAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            setButtonDisabled(false);\n            console.log(error);\n        })\n    }\n\n  //Form Validation Schema\n  const BatteryDetailsValidationSchema = yup.object().shape({\n    model_name:yup.string()\n        .required(\"Model name is required\"),\n    type_of_connector:yup.string()\n        .required(\"Type of connector is required\"),\n  });\n\n  //helpers\n  const getYear = () => {\n    let yearList = [];\n    for (let index = 0; index <= 20; index++) {\n      const temp = {label:2010+index,value:index+1,id:index+1}\n      yearList.push(temp);\n    }\n    return yearList\n  };\n  //Alert helper methods\n  const updateBatteryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //image selection methods\n  const handleImageSelect = (imageFile) =>{\n    const fileExtension = imageFile.name.split('.').pop();\n    if (fileExtension == \"jpg\" || fileExtension == \"jpeg\" || fileExtension == \"png\") {\n      setImageErrorFlag(false);\n      setImageSelected(imageFile);\n      setImageFilePath(\"\");\n      setImagePreview(URL.createObjectURL(imageFile));\n    } else {\n      setImageErrorFlag(true);\n    }\n  }\n  const handleDeleteImage = () =>{\n    setImageKey(!imageKey);\n    setImagePreview();\n    setImageFilePath(\"\");\n  }\n\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            model_name:modelName,\n            nominal_capacity:nominalCapacity,\n            minimum_capacity:minimumCapacity,\n            series_cell:seriesCell,\n            parallel_cell:parallelCell,\n            cell_type:cellType,\n            cell_make:cellMake,\n            total_cells:totalCells,\n            nominal_voltage:nominalVoltage,\n            minimum_delivered:minimumDelivered,\n            pack_configuration:packConfiguration,\n            bms_type:bmsType,\n            weight:weight,\n            dimension:dimension,\n            type_of_connector:connectorType,\n            gc_remark_1:gcRemark1,\n            gc_remark_2:gcRemark2,\n            operating_voltage_range:operatingVoltageRange,\n            charging_mode:chargingMode,\n            recommended_voltage:recommendedVoltage,\n            discharging_current:dischargingCurrent,\n            pulsed_discharge_current:pulsedDischargeCurrent,\n            standard_charging_current:standardChargingCurrent,\n            cell_low_protection_level:cellLowProtectionLevel,\n            cell_low_protection_recovery:cellLowProtectionRecovery,\n            cell_high_protection_level:cellHighProtectionLevel,\n            cell_high_protection_recovery:cellHighProtectionRecovery,\n            battery_cells_efficiency:batteryCellsEfficiency,\n            battery_cells_faliure:batteryCellsFaliure,\n            battery_pack_efficiency:batteryPackEfficiency,\n            battery_pack_faliure:batteryPackFaliure,\n            bleeding_start_voltage:bleedingstartvoltage,\n            over_temp_pro_dis:overTempProDis,\n            over_temp_recovery_dis:overTempRecoveryDis,\n            over_temp_pro_charge:overTempProCharge,\n            over_temp_recovery_charge:overTempRecoveryCharge,\n            max_working_temp:maxWorkingTemp,\n            storage_temp:storageTemp,\n            temp_control_cell:tempControlCell,\n            temp_control_pack:tempControlPack,\n            temp_control_swapping:tempControlSwapping,\n            module_dimension:moduleDimension,\n            cabinet_design:cabinetDesign,\n            degradation_sensors:degradationSensors,\n            power_connector:powerConnector,\n            rs_can:rsCan,\n            casing:casing,\n            cell_over_voltage:cellOverVoltage,\n            cell_under_voltage:cellUnderVoltage,\n            charging_over_current:chargingOverCurrent,\n            discharging_over_current:dischargingOverCurrent,\n            output_short_circuit:outputShortCircuit,\n            cell_temp_protection_discharging:cellTempProtectionDischarging,\n            cycle_life:cycleLife,\n            capacity_retention:capacityRetention,\n            depth_discharge:depthDischarge,\n            communication_prototcol:communicationPrototcol,\n            network_communication:networkCommunication,\n            ec_remark_1:ecRemark1,\n            ec_remark_2:ecRemark2,\n            tc_remark_1:tcRemark1,\n            tc_remark_2:tcRemark2,\n            mc_remark_1:mcRemark1,\n            mc_remark_2:mcRemark2,\n            p_remark_1:pRemark1,\n            p_remark_2:pRemark2,\n            w_remark_1:wRemark1,\n            w_remark_2:wRemark2,\n            i_remark_1:iRemark1,\n            i_remark_2:iRemark2,\n        }}\n        validationSchema={BatteryDetailsValidationSchema} \n        onSubmit={(values)=>{\n          if (month == null || year == null) {\n            updateBatteryAlert(\"Make Year is required\");\n            return;\n          }\n          let formData  = new FormData();\n          const tempData={\n              make_year:{month:month,year:year},\n              chemistry:chemistry,\n              nominal_capacity:values.nominal_capacity,\n              minimum_capacity:values.minimum_capacity,\n              series_cell:values.series_cell,\n              parallel_cell:values.parallel_cell,\n              cell_type:values.cell_type,\n              cell_make:values.cell_make,\n              total_cells:values.total_cells,\n              nominal_voltage:values.nominal_voltage,\n              minimum_delivered:values.minimum_delivered,\n              pack_configuration:values.pack_configuration,\n              bms_type:values.bms_type,\n              weight:values.weight,\n              dimension:values.dimension,\n              operating_voltage_range:values.operating_voltage_range,\n              charging_mode:values.charging_mode,\n              recommended_voltage:values.recommended_voltage,\n              discharging_current:values.discharging_current,\n              pulsed_discharge_current:values.pulsed_discharge_current,\n              standard_charging_current:values.standard_charging_current,\n              cell_low_protection_level:values.cell_low_protection_level,\n              cell_low_protection_recovery:values.cell_low_protection_recovery,\n              cell_high_protection_level:values.cell_high_protection_level,\n              cell_high_protection_recovery:values.cell_high_protection_recovery,\n              battery_cells_efficiency:values.battery_cells_efficiency,\n              battery_cells_faliure:values.battery_cells_faliure,\n              battery_pack_efficiency:values.battery_pack_efficiency,\n              battery_pack_faliure:values.battery_pack_faliure,\n              bleeding_start_voltage:values.bleeding_start_voltage,\n              over_temp_pro_dis:values.over_temp_pro_dis,\n              over_temp_recovery_dis:values.over_temp_recovery_dis,\n              over_temp_pro_charge:values.over_temp_pro_charge,\n              over_temp_recovery_charge:values.over_temp_recovery_charge,\n              max_working_temp:values.max_working_temp,\n              storage_temp:values.storage_temp,\n              temp_control_cell:values.temp_control_cell,\n              temp_control_pack:values.temp_control_pack,\n              temp_control_swapping:values.temp_control_swapping,\n              module_dimension:values.module_dimension,\n              cabinet_design:values.cabinet_design,\n              degradation_sensors:values.degradation_sensors,\n              power_connector:values.power_connector,\n              rs_can:values.rs_can,\n              casing:values.casing,\n              cell_over_voltage:values.cell_over_voltage,\n              cell_under_voltage:values.cell_under_voltage,\n              charging_over_current:values.charging_over_current,\n              discharging_over_current:values.discharging_over_current,\n              output_short_circuit:values.output_short_circuit,\n              cell_temp_protection_discharging:values.cell_temp_protection_discharging,\n              cycle_life:values.cycle_life,\n              capacity_retention:values.capacity_retention,\n              depth_discharge:values.depth_discharge,\n              communication_prototcol:values.communication_prototcol,\n              network_communication:values.network_communication,\n              ec_remark_1:values.ec_remark_1,\n              ec_remark_2:values.ec_remark_2,\n              tc_remark_1:values.tc_remark_1,\n              tc_remark_2:values.tc_remark_2,\n              mc_remark_1:values.mc_remark_1,\n              mc_remark_2:values.mc_remark_2,\n              p_remark_1:values.p_remark_1,\n              p_remark_2:values.p_remark_2,\n              w_remark_1:values.w_remark_1,\n              w_remark_2:values.w_remark_2,\n              i_remark_1:values.i_remark_1,\n              i_remark_2:values.i_remark_2,\n          }\n          formData.append('battery_master_id',location.state.battery_master_id);\n          formData.append('oem_id',oem.value);\n          formData.append('model_name',values.model_name,);\n          formData.append('type_of_connector',values.type_of_connector);\n          formData.append('make_year',month.label+\"-\"+year.label);\n          formData.append('file_name_path',imageFilePath);\n          formData.append('remark_1',values.gc_remark_1);\n          formData.append('remark_2',values.gc_remark_2);\n          formData.append('all_data',JSON.stringify(tempData));\n          if (imageSelected!=null){\n            formData.append('img_file',imageSelected);\n          }\n          updateBatteryAPICall(formData);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors,isValid})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\">\n                    <span className=\"page_title\">Update Battery</span>\n                      <Button color=\"light\" className=\"default float-right\" onClick={()=>history.goBack()}>\n                          <b>Cancel</b>\n                      </Button>\n                      <Button color=\"primary\" className=\"default mr-2 float-right\" onClick={handleSubmit} disabled={buttonDisabled}>\n                        <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Update</b>\n                      </Button>              \n                  <Separator className=\"mb-5\" />\n                </Colxx>\n              </Row>\n              <Row>\n                <Colxx xxs=\"12\" lg=\"12\">\n                  <ul className=\"list-unstyled mb-4\">\n                    <li>\n                      <CardSubtitle className=\"mb-3\">\n                        <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                          {alertMsg}\n                        </Alert>\n                      </CardSubtitle>\n                    </li>\n                    <li>\n                      <Card className={isValid?\"question d-flex mb-4\":\"question d-flex mb-4 cardBorderError\"}>\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">1</span>\n                              General Characteristics\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse1 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse1(!collapse1)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse1}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                        OEM\n                                      </Label>\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Year\"\n                                        value={oem}\n                                        onChange={(e) => setOem(e)}\n                                        options={oemList}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Model Name\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Model Name\"\n                                        name=\"model_name\"\n                                        value={values.model_name}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        className={errors.model_name && touched.model_name ? \"input-error\":null}\n                                      />\n                                      {errors.model_name && touched.model_name &&(\n                                        <span className=\"error\">{errors.model_name}</span>\n                                      )}\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Make Year\n                                      </Label>\n                                      <Row>\n                                      <Colxx md=\"6\">\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Month\"\n                                        value={month}\n                                        onChange={(e) => setMonth(e)}\n                                        options={[\n                                          { label: 'Jan', value: '1', id: 1 },\n                                          { label: 'Feb', value: '2', id: 2 },\n                                          { label: 'Mar', value: '3', id: 3 },\n                                          { label: 'Apr', value: '4', id: 4 },\n                                          { label: 'May', value: '5', id: 6 },\n                                          { label: 'Jun', value: '6', id: 7 },\n                                          { label: 'Jul', value: '7', id: 8 },\n                                          { label: 'Aug', value: '8', id: 9 },\n                                          { label: 'Sep', value: '9', id: 10 },\n                                          { label: 'Oct', value: '10', id: 11 },\n                                          { label: 'Nov', value: '11', id: 12 },\n                                          { label: 'Dec', value: '12', id: 13 },\n                                        ]}\n                                      />\n                                      </Colxx>\n                                      <Colxx md=\"6\">\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Year\"\n                                        value={year}\n                                        onChange={(e) => setYear(e)}\n                                        options={getYear()}\n                                      />\n                                      </Colxx>\n                                      </Row>\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Chemistry\n                                      </Label>\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        value={chemistry}\n                                        onChange={(e) => setChemistry(e)}\n                                        options={[\n                                          { label: 'NMC', value: '1', id: 1 },\n                                          { label: 'NCA', value: '2', id: 2 },\n                                          { label: 'LFP', value: '3', id: 3 },\n                                          { label: 'LTO', value: '4', id: 4 },\n                                          { label: 'LMO', value: '5', id: 5 }\n                                        ]}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Nominal Capacity (AH)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Nominal Capacity (AH)\"\n                                        name=\"nominal_capacity\"\n                                        value={values.nominal_capacity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Minimum Capacity (AH)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Minimum Capacity (AH)\"\n                                        name=\"minimum_capacity\"\n                                        value={values.minimum_capacity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      No. of cell in series\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"No. of cell in series\"\n                                        name=\"series_cell\"\n                                        value={values.series_cell}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      No. of cell in parallel\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"No. of cell in parallel\"\n                                        name=\"parallel_cell\"\n                                        value={values.parallel_cell}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell Type\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell Type\"\n                                        name=\"cell_type\"\n                                        value={values.cell_type}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell Make\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell Make\"\n                                        name=\"cell_make\"\n                                        value={values.cell_make}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Total number of cells\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Total number of cells\"\n                                        name=\"total_cells\"\n                                        value={values.total_cells}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Nominal voltage (V)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Nominal voltage (V)\"\n                                        name=\"nominal_voltage\"\n                                        value={values.nominal_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Minimum delivered KWH\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Minimum delivered KWH\"\n                                        name=\"minimum_delivered\"\n                                        value={values.minimum_delivered}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Pack Configuration\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Pack Configuration\"\n                                        name=\"pack_configuration\"\n                                        value={values.pack_configuration}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      BMS type\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"BMS type\"\n                                        name=\"bms_type\"\n                                        value={values.bms_type}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Weight\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Weight\"\n                                        name=\"weight\"\n                                        value={values.weight}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Dimension\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Module dimension\"\n                                        name=\"dimension\"\n                                        value={values.dimension}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Type of Connector\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Type of Connector\"\n                                        name=\"type_of_connector\"\n                                        value={values.type_of_connector}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                      {errors.type_of_connector && touched.type_of_connector &&(\n                                        <span className=\"error\">{errors.type_of_connector}</span>\n                                      )}\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                        Image\n                                      </Label>\n                                      <Input\n                                        key={imageKey}\n                                        type=\"file\"\n                                        name=\"upload_image\"\n                                        accept=\".png,.jpg,.jpeg\"\n                                        onChange={e=>handleImageSelect(e.target.files[0])}\n                                      />\n                                      {imageErrorFLag && \n                                        <span className=\"error\">Image must be either png,jpg or jpeg format</span>\n                                      }\n                                    </FormGroup>\n                                  </Colxx>\n                                  {(imagePreview!=null && imagePreview!=\"\") &&\n                                    <Colxx sm={3}>\n                                      <div>\n                                        <Button className=\"custom-badge default tbl_action_btn\" onClick={()=>handleDeleteImage()}><i className=\"glyph-icon simple-icon-trash image-remove-icon\"></i></Button>\n                                        <img src={imagePreview} height=\"100px\" width=\"150px\" alt=\"Image Preview\"/>\n                                      </div>\n                                    </Colxx>\n                                  }                \n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark 1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"gc_remark_1\"\n                                        value={values.gc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark 2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"gc_remark_2\"\n                                        value={values.gc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                    </li>\n                    <li>\n                      <Card className=\"question d-flex mb-4\">\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">2</span>\n                              Electrical Characteristics\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse2 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse2(!collapse2)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse2}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Operating Voltage Range(V)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Operating voltage range(V)\"\n                                        name=\"operating_voltage_range\"\n                                        value={values.operating_voltage_range}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Charging Mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Charging mode\"\n                                        name=\"charging_mode\"\n                                        value={values.charging_mode}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Recommended Voltage (V)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Recommended voltage (V)\"\n                                        name=\"recommended_voltage\"\n                                        value={values.recommended_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Std. DisCh. Current (A)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Std. DisCh. current\"\n                                        name=\"discharging_current\"\n                                        value={values.discharging_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Pulsed Discharge Current(A)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Pulsed Discharge Current(A)\"\n                                        name=\"pulsed_discharge_current\"\n                                        value={values.pulsed_discharge_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Std. Charging Current(A)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Std. Charging Current(A)\"\n                                        name=\"standard_charging_current\"\n                                        value={values.standard_charging_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell low cut prot. level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell low cut prot. level\"\n                                        name=\"cell_low_protection_level\"\n                                        value={values.cell_low_protection_level}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell low cut prot. recovery level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell low cut prot. recovery level\"\n                                        name=\"cell_low_protection_recovery\"\n                                        value={values.cell_low_protection_recovery}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell high cut prot. level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell high cut prot. level\"\n                                        name=\"cell_high_protection_level\"\n                                        value={values.cell_high_protection_level}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell high cut prot. recovery level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell high cut prot. rec level\"\n                                        name=\"cell_high_protection_recovery\"\n                                        value={values.cell_high_protection_recovery}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery cells efficiency rate\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery cells efficiency rate\"\n                                        name=\"battery_cells_efficiency\"\n                                        value={values.battery_cells_efficiency}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery cells failure rate\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery cells failure rate\"\n                                        name=\"battery_cells_faliure\"\n                                        value={values.battery_cells_faliure}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery pack efficiency rate\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery pack efficiency rate\"\n                                        name=\"battery_pack_efficiency\"\n                                        value={values.battery_pack_efficiency}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery pack failure rate\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery pack failure rate\"\n                                        name=\"battery_pack_faliure\"\n                                        value={values.battery_pack_faliure}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Bleeding start voltage level\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Bleeding start voltage level\"\n                                        name=\"bleeding_start_voltage\"\n                                        value={values.bleeding_start_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Over temp. prot. in DisCh.mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Over Temp. prot. DisCh.mode\"\n                                        name=\"over_temp_pro_dis\"\n                                        value={values.over_temp_pro_dis}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Over temp. prot. recovery in DisCh.mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Temp. prot. rec DisCh.mode\"\n                                        name=\"over_temp_recovery_dis\"\n                                        value={values.over_temp_recovery_dis}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Over temp. prot. in charge mode \n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Temp. prot. charge mode\"\n                                        name=\"over_temp_pro_charge\"\n                                        value={values.over_temp_pro_charge}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Over temp. prot. recovery in charge mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Temp. prot. rec charge mode\"\n                                        name=\"over_temp_recovery_charge\"\n                                        value={values.over_temp_recovery_charge}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"ec_remark_1\"\n                                        value={values.ec_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"ec_remark_2\"\n                                        value={values.ec_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">3</span>\n                                Temprature Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse3 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse3(!collapse3)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse3}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>                        \n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Maximum Working Temp.\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Max. Working Temp.\"\n                                          name=\"max_working_temp\"\n                                          value={values.max_working_temp}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Storage Temp.\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Storage Temp.\"\n                                          name=\"storage_temp\"\n                                          value={values.storage_temp}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Temp. control at cell level\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Temp. control at cell level\"\n                                          name=\"temp_control_cell\"\n                                          value={values.temp_control_cell}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Temp. control at pack level\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Temp. control at pack level\"\n                                          name=\"temp_control_pack\"\n                                          value={values.temp_control_pack}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Temp. control at swapping panel level\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Temp. control at swapping panel level\"\n                                          name=\"temp_control_swapping\"\n                                          value={values.temp_control_swapping}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"tc_remark_1\"\n                                        value={values.tc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"tc_remark_2\"\n                                        value={values.tc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>                        \n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">4</span>\n                                Mechanical Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse4 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse4(!collapse4)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse4}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Module dimension\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Module dimension\"\n                                          name=\"module_dimension\"\n                                          value={values.module_dimension}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Cabinet design\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Cabinet design\"\n                                          name=\"cabinet_design\"\n                                          value={values.cabinet_design}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Degradation of sensors/connectors\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Degradation of sensors\"\n                                          name=\"degradation_sensors\"\n                                          value={values.degradation_sensors}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Power connector\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Power connector\"\n                                          name=\"power_connector\"\n                                          value={values.power_connector}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        RS485/CAN\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"RS485/CAN\"\n                                          name=\"rs_can\"\n                                          value={values.rs_can}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Casing\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Casing\"\n                                          name=\"casing\"\n                                          value={values.casing}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"mc_remark_1\"\n                                        value={values.mc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"mc_remark_2\"\n                                        value={values.mc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                      <Card className=\"question d-flex mb-4\">\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">5</span>\n                              Protections\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse5 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse5(!collapse5)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse5}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell over voltage prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell over voltage prot.\"\n                                        name=\"cell_over_voltage\"\n                                        value={values.cell_over_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell under voltage prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell under voltage prot.\"\n                                        name=\"cell_under_voltage\"\n                                        value={values.cell_under_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Charging over current prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Charging over current prot.\"\n                                        name=\"charging_over_current\"\n                                        value={values.charging_over_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      DisCh. over current prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"DisCh. over current prot.\"\n                                        name=\"discharging_over_current\"\n                                        value={values.discharging_over_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Output short circuit prot.\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Output short circuit prot.\"\n                                        name=\"output_short_circuit\"\n                                        value={values.output_short_circuit}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cell temp prot. in DisCh. mode\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cell temp prot. in DisCh. mode\"\n                                        name=\"cell_temp_protection_discharging\"\n                                        value={values.cell_temp_protection_discharging}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"p_remark_1\"\n                                        value={values.p_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"p_remark_2\"\n                                        value={values.p_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">6</span>\n                                Warranty\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse6 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse6(!collapse6)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse6}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Cycle life @ 80 DoD% / No. of Years\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Cycle life @ 80 DoD% / No. of Years\"\n                                          name=\"cycle_life\"\n                                          value={values.cycle_life}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Capacity retention of 70%\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Capacity retention of 70%\"\n                                          name=\"capacity_retention\"\n                                          value={values.capacity_retention}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Depth of Discharge (DoD) upon return\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Depth of Discharge (DoD) upon return\"\n                                          name=\"depth_discharge\"\n                                          value={values.depth_discharge}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"w_remark_1\"\n                                        value={values.w_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"w_remark_2\"\n                                        value={values.w_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">7</span>\n                                Interface\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse7 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse7(!collapse7)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse7}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Communication Protocol\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Communication Protocol\"\n                                          name=\"communication_prototcol\"\n                                          value={values.communication_prototcol}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Netwrok Communication\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Netwrok Communication\"\n                                          name=\"network_communication\"\n                                          value={values.network_communication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"i_remark_1\"\n                                        value={values.i_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"i_remark_2\"\n                                        value={values.i_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                  </ul>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default UpdateBattery;   \n","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  Input,InputGroup \n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getEvListAPI,deleteEvAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\nconst EvMaster = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //station list\n  const [evList,setEvList] = useState([]);\n  const [evID,setEvID] = useState(\"\");\n  const [evToDeleteId,setEvToDeleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n  \n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getEvListAPICall();\n    evAlert();\n  },[evID,pageCount])\n\n  //API calls\n  const getEvListAPICall = async() => {\n    setEvList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getEvListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setEvList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n      setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteEvAPICall = async(evId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteEvAPI,\n      {ev_master_id:evId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setEvID(evId);\n          evDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updateEv = (evId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updateev',\n      state:{ev_master_id:evId}\n    });\n  }\n\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const evDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const evAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (evId) => {\n    setEvToDeleteId(evId)\n    setModalVisible(!modalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getEvListAPICall();\n  }\n\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Electrical Vehicle</span>\n            <a href=\"addev\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                  <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                    {alertMsg}\n                  </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Vehicle Model</th>\n                    <th>Vehicle Make</th>\n                    <th>Vehicle Type</th>\n                    <th>Battery Capacity</th>\n                    <th>Fleet Owner</th>\n                    <th>EV Driver</th>\n                    <th>Remark1</th>\n                    <th>Remark2</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"10\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                  evList.length > 0 ?\n                    evList.map((item,index)=>\n                        <tr key={index}>\n                        <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                        <td>{item.vehicle_model}</td>\n                        <td>{item.vehicle_make}</td>\n                        <td>{item.vehicle_type}</td>\n                        <td>{item.battery_capacity}</td>\n                        <td>{item.fleet_operator_name}</td>\n                        <td>{JSON.parse(item.all_data)!=null?JSON.parse(item.all_data).ev_driver:\"\"}</td>\n                        <td>{item.remark_1}</td>\n                        <td>{item.remark_2}</td>\n                        <td>\n                          <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateEv(item.ev_master_id)}}>\n                              <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                          </a>\n                          <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.ev_master_id)}}>\n                              <i className=\"glyph-icon simple-icon-trash\"></i>\n                          </Button>\n                        </td>\n                      </tr>\n                      ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"10\">Data  Not  Found</td>\n                        </tr>\n                    }\n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  Are you sure you would like to delete this EV?\n                  <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteEvAPICall(evToDeleteId)}>\n                    Delete EV \n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                    Cancel\n                  </Button>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default EvMaster;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row, FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {addEvAPI,adminRoot,getFleetOperatorAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst AddEV = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  const [fleetOpNames,setFleetOpNames] = useState([]); \n\n  useEffect(()=>{\n      GetFleetOperatorAPICall();\n  },[]);\n\n  const history = useHistory();\n\n  const GetFleetOperatorAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n        if (responseData.status === 1) {\n         setFleetOpNames(responseData.data);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  //API calls\n  const addEvAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addEvAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/ev',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          evAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const evAddedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const EvDetailsValidationSchema = yup.object().shape({\n    vehicle_model:yup.string()\n        .required(\"Vehicle Model is required\"),\n    vehicle_make:yup.string()\n        .required(\"Vehicle Make is required\"),\n    vehicle_type:yup.string()\n        .required(\"Vehicle Type is required\"),\n    battery_capacity:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"Battery Capacity is required\"),\n    fleet_owner_id:yup.string()\n        .required(\"Fleet Owner is required\"),\n  });\n\n  const initialValues = {\n    vehicle_model:\"\",\n    vehicle_make:\"\",\n    vehicle_type:\"\",\n    battery_capacity:\"\",\n    fleet_owner_id:\"\",\n    ev_driver:\"\",\n    remark_1:\"\",\n    remark_2:\"\"\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add EV</span>\n            <a href=\"ev\" className=\"btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> EV List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={EvDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const tempAllData = {ev_driver:values.ev_driver}\n          const params = {\n            vehicle_model:values.vehicle_model,\n            vehicle_make:values.vehicle_make,\n            vehicle_type:values.vehicle_type,\n            battery_capacity:values.battery_capacity,\n            fleet_owner_id:values.fleet_owner_id,\n            all_data:JSON.stringify(tempAllData),\n            remark_1:values.remark_1,\n            remark_2:values.remark_2\n          }\n          addEvAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                          <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                  Vehicle Model\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Vehicle Model\"\n                                  name=\"vehicle_model\"\n                                  value={values.vehicle_model}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.vehicle_model && touched.vehicle_model ? \"input-error\":null}\n                                />\n                                {errors.vehicle_model && touched.vehicle_model &&(\n                                  <span className=\"error\">{errors.vehicle_model}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                  Vehicle Make\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Vehicle Make\"\n                                  value={values.vehicle_make}\n                                  name=\"vehicle_make\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.vehicle_make && touched.vehicle_make ? \"input-error\":null}\n                                />\n                                {errors.vehicle_make && touched.vehicle_make &&(\n                                  <span className=\"error\">{errors.vehicle_make}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                Vehicle Type\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Vehicle Type\"\n                                  name=\"vehicle_type\"\n                                  value={values.vehicle_type}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.vehicle_type && touched.vehicle_type ? \"input-error\":null}\n                                />\n                                {errors.vehicle_type && touched.vehicle_type &&(\n                                  <span className=\"error\">{errors.vehicle_type}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                Battery Capacity\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  placeholder=\"Battery Capacity\"\n                                  name=\"battery_capacity\"\n                                  value={values.battery_capacity}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.battery_capacity && touched.battery_capacity ? \"input-error\":null}\n                                />\n                                {errors.battery_capacity && touched.battery_capacity &&(\n                                  <span className=\"error\">{errors.battery_capacity}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                  Fleet Owner\n                                </Label>\n                                <Input \n                                  type=\"select\"\n                                  name=\"fleet_owner_id\"\n                                  value={values.fleet_owner_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option key=\"\" value=\"\">All Fleet</option>\n                                  {fleetOpNames.map(item=>\n                                    <option key={item.fleet_operator_id} value={item.fleet_operator_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.fleet_owner_id && touched.fleet_owner_id &&(\n                                  <span className=\"error\">{errors.fleet_owner_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                  EV Driver\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"EV Driver\"\n                                  name=\"ev_driver\"\n                                  value={values.ev_driver}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.ev_driver && touched.ev_driver ? \"input-error\":null}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark 1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark 1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark 2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark 2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default AddEV;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row, FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {updateEvAPI,getEvByIdAPI,adminRoot,getFleetOperatorAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst UpdateEv = () => {\n  const history = useHistory();\n  const location = useLocation();\n  //states\n  const [vehicleModel,setVehicleModel] = useState(\"\");\n  const [vehicleMake,setVehicleMake] = useState(\"\");\n  const [vehicleType,setVehicleType] = useState(\"\");\n  const [batteryCapacity,setBatteryCapacity] = useState(\"\");\n  const [fleetOwner,setFleetOwner] = useState(\"\");\n  const [evDriver,setEvDriver] = useState(\"\");\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  const [fleetOpNames,setFleetOpNames] = useState([]); \n\n  useEffect(()=>{\n      GetFleetOperatorAPICall();\n      getEvByIdAPICall();\n  },[])\n\n  //API calls\n  const GetFleetOperatorAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n        if (responseData.status === 1) {\n         setFleetOpNames(responseData.data);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n    const getEvByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getEvByIdAPI,\n        {\n            ev_master_id:location.state.ev_master_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n                setVehicleModel(responseData.data.vehicle_model);\n                setVehicleMake(responseData.data.vehicle_make);\n                setVehicleType(responseData.data.vehicle_type);\n                setBatteryCapacity(responseData.data.battery_capacity);\n                setFleetOwner(responseData.data.fleet_owner_id);\n                setEvDriver(JSON.parse(responseData.data.all_data).ev_driver);\n                (responseData.data.remark_1!=null)?setRemark1(responseData.data.remark_1):setRemark1(\"\");\n                (responseData.data.remark_2!=null)?setRemark2(responseData.data.remark_2):setRemark2(\"\");\n            }else{\n              evUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n    const updateEvAPICall = async(params) => {\n        setButtonDisabled(true);\n        const currentUser = getCurrentUser();\n        await axios.post(updateEvAPI,\n        params,\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n              history.push({\n                pathname:adminRoot+'/pages/ev',\n                state:{\n                  responseStatus:responseData.status,\n                  responseMsg:responseData.msg\n                }\n              })\n            }else{\n              setButtonDisabled(false);\n              evUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            setButtonDisabled(false);\n            console.log(error);\n        })\n    }\n\n  //helper methods\n  //Alert helper methods\n  const evUpdatedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const EvDetailsValidationSchema = yup.object().shape({\n    vehicle_model:yup.string()\n        .required(\"Vehicle Model is required\"),\n    vehicle_make:yup.string()\n        .required(\"Vehicle Make is required\"),\n    vehicle_type:yup.string()\n        .required(\"Vehicle Type is required\"),\n    battery_capacity:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"Battery Capacity is required\"),\n    fleet_owner_id:yup.string()\n        .nullable()\n        .required(\"Fleet Owner is required\"),\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update EV</span>\n            <a href=\"ev\" className=\"btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> EV List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n      enableReinitialize ={true}\n        initialValues={{\n            vehicle_model:vehicleModel,\n            vehicle_make:vehicleMake,\n            vehicle_type:vehicleType,\n            battery_capacity:batteryCapacity,\n            fleet_owner_id:fleetOwner,\n            ev_driver:evDriver,\n            remark_1:remark1,\n            remark_2:remark2\n        }}\n        validationSchema={EvDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const tempAllData = {ev_driver:values.ev_driver}\n          const params = {\n            ev_master_id: location.state.ev_master_id,\n            vehicle_model:values.vehicle_model,\n            vehicle_make:values.vehicle_make,\n            vehicle_type:values.vehicle_type,\n            battery_capacity:values.battery_capacity,\n            fleet_owner_id:values.fleet_owner_id,\n            all_data:JSON.stringify(tempAllData),\n            remark_1:values.remark_1,\n            remark_2:values.remark_2,\n          }\n          updateEvAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                  Vehicle Model\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Vehicle Model\"\n                                  name=\"vehicle_model\"\n                                  value={values.vehicle_model}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.vehicle_model && touched.vehicle_model ? \"input-error\":null}\n                                />\n                                {errors.vehicle_model && touched.vehicle_model &&(\n                                  <span className=\"error\">{errors.vehicle_model}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                  Vehicle Make\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Vehicle Make\"\n                                  value={values.vehicle_make}\n                                  name=\"vehicle_make\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.vehicle_make && touched.vehicle_make ? \"input-error\":null}\n                                />\n                                {errors.vehicle_make && touched.vehicle_make &&(\n                                  <span className=\"error\">{errors.vehicle_make}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                Vehicle Type\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Vehicle Type\"\n                                  name=\"vehicle_type\"\n                                  value={values.vehicle_type}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.vehicle_type && touched.vehicle_type ? \"input-error\":null}\n                                />\n                                {errors.vehicle_type && touched.vehicle_type &&(\n                                  <span className=\"error\">{errors.vehicle_type}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                Battery Capacity\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  placeholder=\"Battery Capacity\"\n                                  name=\"battery_capacity\"\n                                  value={values.battery_capacity}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.battery_capacity && touched.battery_capacity ? \"input-error\":null}\n                                />\n                                {errors.battery_capacity && touched.battery_capacity &&(\n                                  <span className=\"error\">{errors.battery_capacity}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                  Fleet Owner\n                                </Label>\n                                <Input \n                                  type=\"select\"\n                                  name=\"fleet_owner_id\"\n                                  value={values.fleet_owner_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option key=\"\" value=\"\">All Fleet</option>\n                                  {fleetOpNames.map((item,index)=>\n                                    <option key={index} value={item.fleet_operator_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.fleet_owner_id && touched.fleet_owner_id &&(\n                                  <span className=\"error\">{errors.fleet_owner_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={4}>\n                              <FormGroup>\n                                <Label>\n                                  EV Driver\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"EV Driver\"\n                                  name=\"ev_driver\"\n                                  value={values.ev_driver}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.ev_driver && touched.ev_driver ? \"input-error\":null}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark 1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark 1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark 2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark 2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default UpdateEv;","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Collapse,\n  Input,InputGroup \n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getBulkChargerListAPI,deleteBulkChargerAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\nconst BulkChargerMaster = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //collapse states\n  const [collapse1, setCollapse1] = useState(false);\n  const [collapse2, setCollapse2] = useState(false);\n  const [collapse3, setCollapse3] = useState(false);\n  const [collapse4, setCollapse4] = useState(false);\n  const [collapse5, setCollapse5] = useState(false);\n  const [collapse6, setCollapse6] = useState(false);\n  const [collapse7, setCollapse7] = useState(false);\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [infoModalVisible,setInfoModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //bulkCharger list\n  const [bulkChargerList,setBulkChargerList] = useState([]);\n  const [bulkChargerID,setBulkChargerID] = useState(\"\");\n  const [bulkChargerToDeleteId,setBulkChargerToDeleteId] = useState(\"\");\n  //data states\n  const [bulkChargerInfo,setBulkChargerInfo] = useState({});\n  const [bulkChargerAllData,setBulkChargerAllData] = useState({});\n  const [isLoading,setIsLoading] = useState(true);\n  \n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getBulkChargerListAPICall();\n    bulkChargerAlert();\n  },[bulkChargerID,pageCount])\n\n  //API calls\n  const getBulkChargerListAPICall = async() => {\n    setBulkChargerList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getBulkChargerListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setBulkChargerList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const deleteBulkChargerAPICall = async(bulkChargerId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteBulkChargerAPI,\n      {charger_master_id:bulkChargerId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setBulkChargerID(bulkChargerId);\n          bulkChargerDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          bulkChargerDeletedAlert(responseData.status,responseData.msg)\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updatebulkCharger = (bulkChargerId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updatebulkcharger',\n      state:{bulkCharger_master_id:bulkChargerId}\n    });\n  }\n\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const bulkChargerDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const bulkChargerAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (bulkChargerId) => {\n    setBulkChargerToDeleteId(bulkChargerId)\n    setModalVisible(!modalVisible);\n  }\n  //modal for all data\n  const toggleInfoModal = (bulkChargerItem) => {\n    let tempAllData = {};\n    if (bulkChargerItem.all_data==undefined) {\n      tempAllData = {};\n    }else {\n      tempAllData = JSON.parse(bulkChargerItem.all_data);\n      setBulkChargerInfo(bulkChargerItem);\n      setBulkChargerAllData(tempAllData)\n    }    \n    setInfoModalVisible(!infoModalVisible);\n  }\n    //handle search input\n    const handleSearch = () => {\n        setPageCount(1);\n        getBulkChargerListAPICall();\n    }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Bulk Charger</span>\n            <a href=\"addbulkcharger\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>OEM</th>\n                    <th>Make</th>\n                    <th>Model</th>\n                    <th>Dimension</th>\n                    <th>No. Of Connectors</th>\n                    <th>Output Power</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"8\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    bulkChargerList.length > 0 ?\n                      bulkChargerList.map((item,index)=>\n                      <tr key={index}>\n                      <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                      <td>{item.oem_name}</td>\n                      <td>{item.make}</td>\n                      <td>{item.model}</td>\n                      <td>{item.dimension}</td>\n                      <td>{JSON.parse(item.all_data)!=null?JSON.parse(item.all_data).no_of_connetor:\"\"}</td>\n                      <td>{JSON.parse(item.all_data)!=null?JSON.parse(item.all_data).output_power:\"\"}</td>\n                      <td>\n                      {item.all_data!=null && <Button color=\"primary\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>{toggleInfoModal(item)}}>\n                            <i className=\"glyph-icon simple-icon-eye\"></i>\n                        </Button>}\n                        <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updatebulkCharger(item.id)}}>\n                            <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                        </a>\n                        <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                            <i className=\"glyph-icon simple-icon-trash\"></i>\n                        </Button>                        \n                      </td>\n                    </tr>\n                    ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"8\">Data  Not  Found</td>\n                      </tr>\n                    }\n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  Are you sure you would like to delete this bulkCharger?\n                  <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteBulkChargerAPICall(bulkChargerToDeleteId)}>\n                    Delete \n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                    Cancel\n                  </Button>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n        <div className=\"modal-dialog modal-fullscreen\" >\n          <Modal\n            isOpen={infoModalVisible}\n            toggle={toggleInfoModal} \n            className=\"modal-fullscreen\">\n            <ModalBody>\n              <Row>\n                <Colxx md=\"12\">\n                    <i className=\"simple-icon-close float-right mr-4 close-icon\" onClick={toggleInfoModal}></i>\n                </Colxx>\n              </Row>\n              <Row className=\"mt-2\">\n                  <Colxx xxs=\"12\" lg=\"12\">\n                    <ul className=\"list-unstyled mb-4\">\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">1</span>\n                                General Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse1 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse1(!collapse1)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse1}>\n                            <div className=\"card-body pt-0\">\n                              <Row>\n                                <Colxx md=\"6\">\n                                  <b>OEM:</b> {bulkChargerAllData.oem_name}\n                                </Colxx>\n                                <Colxx md=\"6\" >\n                                  <b>Model:</b> {bulkChargerInfo.model}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Make Year:</b> {bulkChargerInfo.make}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Battery modules :</b> {bulkChargerAllData.battery_modules}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Battery Type :</b> {bulkChargerAllData.battery_type}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Battery Capacity :</b> {bulkChargerAllData.battery_capacity}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Battery slot Dimension :</b> {bulkChargerAllData.battery_slot_dimension}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>No. of Connetor :</b> {bulkChargerAllData.no_of_connetor}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                 <b> Battery Slot Indicator:</b> {bulkChargerAllData.battery_slot_indicator}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Charging Connector :</b> {bulkChargerAllData.charging_connector}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Remark1 :</b> {bulkChargerInfo.remark_1}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Remark2 :</b> {bulkChargerInfo.remark_2}\n                                </Colxx>\n                              </Row>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">2</span>\n                                Electrical Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse2 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse2(!collapse2)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse2}>\n                            <div className=\"card-body pt-0\">\n                              <Row>\n                                <Colxx md=\"6\">\n                                  <b>Voltage:</b> {bulkChargerAllData.voltage}\n                                </Colxx>\n                                <Colxx md=\"6\" >\n                                  <b>Max. Input Power:</b> {bulkChargerAllData.max_input_power}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Frequency:</b> {bulkChargerAllData.frequency}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Current:</b> {bulkChargerAllData.current}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>THD/Power Factor :</b> {bulkChargerAllData.thd_power_factor}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Protection :</b> {bulkChargerAllData.protection}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Charging Voltage :</b> {bulkChargerAllData.charging_voltage}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Output Power :</b> {bulkChargerAllData.output_power}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Max. Charging Current:</b> {bulkChargerAllData.max_charging_current}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Power of Each Battery Slot :</b> {bulkChargerAllData.power_of_each_battery_slot}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Full load power of Each Slot :</b> {bulkChargerAllData.full_load_power_of_each_slot}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Input Impedance :</b> {bulkChargerAllData.input_impedance}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Static Voltage Regulation :</b> {bulkChargerAllData.static_voltage_regulation}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Ripple and Noise :</b> {bulkChargerAllData.ripple_and_noise}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Output Protection:</b> {bulkChargerAllData.output_protection}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Efficiency:</b> {bulkChargerAllData.efficiency}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b> Acoustic Noise:</b> {bulkChargerAllData.acoustic_noise}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Remark1 :</b> {bulkChargerAllData.ec_remark_1}\n                                </Colxx>\n                                <Colxx md=\"6\" className=\"mt-2\"> \n                                  <b>Remark2 :</b> {bulkChargerAllData.ec_remark_2}\n                                </Colxx>\n                              </Row>\n                            </div>\n                          </Collapse>\n                        </Card>\n                        </li>\n                        <li>\n                          <Card className=\"question d-flex mb-4\">\n                            <div className=\"d-flex flex-grow-1 min-width-zero\">\n                              <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                                <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                  <span className=\"heading-number d-inline-block\">3</span>\n                                  Temprature Characteristics\n                                </div>\n                              </div>\n                              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                                <Button\n                                  outline\n                                  color=\"theme-3\"\n                                  className={`icon-button ml-1 rotate-icon-click ${\n                                    collapse3 ? 'rotate' : ''\n                                  }`}\n                                  onClick={() => setCollapse3(!collapse3)}\n                                >\n                                  <i className=\"simple-icon-arrow-down\" />\n                                </Button>\n                              </div>\n                            </div>\n                            <Collapse isOpen={collapse3}>\n                              <div className=\"card-body pt-0\">\n                                <div className=\"edit-mode\">\n                                  <Row>\n                                    <Colxx md=\"6\">\n                                      <b>Operating Temp.:</b> {bulkChargerAllData.operating_temp}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Storage Temp.:</b> {bulkChargerAllData.storage_temp}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Humidity:</b> {bulkChargerAllData.humidity}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Ambient Pressure:</b> {bulkChargerAllData.ambient_pressure}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Temp. Sensor:</b> {bulkChargerAllData.temperature_sensor}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Remark1 :</b> {bulkChargerAllData.tc_remark_1}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark2 :</b> {bulkChargerAllData.tc_remark_2}\n                                    </Colxx>\n                                  </Row>\n                                </div>\n                              </div>\n                            </Collapse>\n                          </Card>\n                        </li>\n                        <li>\n                          <Card className=\"question d-flex mb-4\">\n                            <div className=\"d-flex flex-grow-1 min-width-zero\">\n                              <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                                <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                  <span className=\"heading-number d-inline-block\">4</span>\n                                  Mechanical Characteristics\n                                </div>\n                              </div>\n                              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                                <Button\n                                  outline\n                                  color=\"theme-3\"\n                                  className={`icon-button ml-1 rotate-icon-click ${\n                                    collapse4 ? 'rotate' : ''\n                                  }`}\n                                  onClick={() => setCollapse4(!collapse4)}\n                                >\n                                  <i className=\"simple-icon-arrow-down\" />\n                                </Button>\n                              </div>\n                            </div>\n                            <Collapse isOpen={collapse4}>\n                              <div className=\"card-body pt-0\">\n                                <div className=\"edit-mode\">\n                                  <Row>\n                                    <Colxx md=\"6\">\n                                      <b>Accessories:</b> {bulkChargerAllData.accessories}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Battery Door Locking:</b> {bulkChargerAllData.battery_door_locking}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Dimension:</b> {bulkChargerInfo.dimension}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Thickness:</b> {bulkChargerAllData.thickness}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Colour:</b> {bulkChargerAllData.colour}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Cable entry:</b> {bulkChargerAllData.cable_entry}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark1 :</b> {bulkChargerAllData.mc_remark_1}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark2 :</b> {bulkChargerAllData.mc_remark_2}\n                                    </Colxx>\n                                  </Row>\n                                </div>\n                              </div>\n                            </Collapse>\n                          </Card>\n                        </li>\n                        <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">5</span>\n                                Protections\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse5 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse5(!collapse5)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse5}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Row>\n                                  <Colxx md=\"6\">\n                                    <b>Alarms:</b> {bulkChargerAllData.alarms}\n                                  </Colxx>\n                                  <Colxx md=\"6\" >\n                                    <b>Emergency Protection:</b> {bulkChargerAllData.emergency_protection}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Cooling:</b> {bulkChargerAllData.cooling}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>IP Rating:</b> {bulkChargerAllData.ip_rating}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Mechanical:</b> {bulkChargerAllData.mechanical}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Surge Protection:</b> {bulkChargerAllData.surge_protection}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Fire and Safety:</b> {bulkChargerAllData.fire_safety}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Smoke Detector:</b> {bulkChargerAllData.smoke_detector}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Thermal Detector:</b> {bulkChargerAllData.thermal_detector}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Fire Suppresion System:</b> {bulkChargerAllData.fire_suppresion_system}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Video Surevillance:</b> {bulkChargerAllData.video_surevillance}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Water Level Sensor:</b> {bulkChargerAllData.water_level_sensor}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Remark1 :</b> {bulkChargerAllData.p_remark_1}\n                                  </Colxx>\n                                  <Colxx md=\"6\" className=\"mt-2\"> \n                                    <b>Remark2 :</b> {bulkChargerAllData.p_remark_2}\n                                  </Colxx>\n                                </Row>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                        </li>\n                        <li>\n                          <Card className=\"question d-flex mb-4\">\n                            <div className=\"d-flex flex-grow-1 min-width-zero\">\n                              <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                                <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                  <span className=\"heading-number d-inline-block\">6</span>\n                                  Warranty\n                                </div>\n                              </div>\n                              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                                <Button\n                                  outline\n                                  color=\"theme-3\"\n                                  className={`icon-button ml-1 rotate-icon-click ${\n                                    collapse6 ? 'rotate' : ''\n                                  }`}\n                                  onClick={() => setCollapse6(!collapse6)}\n                                >\n                                  <i className=\"simple-icon-arrow-down\" />\n                                </Button>\n                              </div>\n                            </div>\n                            <Collapse isOpen={collapse6}>\n                              <div className=\"card-body pt-0\">\n                                <div className=\"edit-mode\">\n                                  <Row>\n                                    <Colxx md=\"6\">\n                                      <b>MTBF:</b> {bulkChargerAllData.mtbf}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark1 :</b> {bulkChargerAllData.w_remark_1}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark2 :</b> {bulkChargerAllData.w_remark_2}\n                                    </Colxx>\n                                  </Row>\n                                </div>\n                              </div>\n                            </Collapse>\n                          </Card>\n                        </li>\n                        <li>\n                          <Card className=\"question d-flex mb-4\">\n                            <div className=\"d-flex flex-grow-1 min-width-zero\">\n                              <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                                <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                  <span className=\"heading-number d-inline-block\">7</span>\n                                  Interface\n                                </div>\n                              </div>\n                              <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                                <Button\n                                  outline\n                                  color=\"theme-3\"\n                                  className={`icon-button ml-1 rotate-icon-click ${\n                                    collapse7 ? 'rotate' : ''\n                                  }`}\n                                  onClick={() => setCollapse7(!collapse7)}\n                                >\n                                  <i className=\"simple-icon-arrow-down\" />\n                                </Button>\n                              </div>\n                            </div>\n                            <Collapse isOpen={collapse7}>\n                              <div className=\"card-body pt-0\">\n                                <div className=\"edit-mode\">\n                                  <Row>\n                                    <Colxx md=\"6\">\n                                      <b>User Authentication:</b> {bulkChargerAllData.user_authentication}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Display:</b> {bulkChargerAllData.display}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Communication:</b> {bulkChargerAllData.communication}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Indication:</b> {bulkChargerAllData.indication}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>Interface mode:</b> {bulkChargerAllData.interface_mode}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Identification:</b> {bulkChargerAllData.identification}\n                                    </Colxx>\n                                    <Colxx md=\"6\" >\n                                      <b>User Interface:</b> {bulkChargerAllData.user_interface}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Network Communication:</b> {bulkChargerAllData.network_communication}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Application Use:</b> {bulkChargerAllData.application_use}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark1 :</b> {bulkChargerAllData.i_remark_1}\n                                    </Colxx>\n                                    <Colxx md=\"6\" className=\"mt-2\"> \n                                      <b>Remark2 :</b> {bulkChargerAllData.i_remark_2}\n                                    </Colxx>\n                                  </Row>\n                                </div>\n                              </div>\n                            </Collapse>\n                          </Card>\n                        </li>\n                    </ul>\n                  </Colxx>\n              </Row>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleInfoModal}>\n                Close\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </div> \n      </Row>\n    </>\n  );\n};\nexport default BulkChargerMaster;\n","import React, { useState, useEffect } from 'react';\nimport { \n  Row,FormGroup, Card,CardSubtitle,\n  Label,Input, Button, Collapse,Form,Alert\n } from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getOemAPI,addBulkChargerAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst AddBulkCharger = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //collapse states\n  const [collapse1, setCollapse1] = useState(false);\n  const [collapse2, setCollapse2] = useState(false);\n  const [collapse3, setCollapse3] = useState(false);\n  const [collapse4, setCollapse4] = useState(false);\n  const [collapse5, setCollapse5] = useState(false);\n  const [collapse6, setCollapse6] = useState(false);\n  const [collapse7, setCollapse7] = useState(false);\n  //dropdown states\n  const [oem,setOem] = useState(\"\");\n  const [oemList,setOemList] = useState([]);\n  const [month,setMonth] = useState(null);\n  const [year,setYear] = useState(null);\n  //image states\n  const [imageSelected,setImageSelected] = useState();\n  const [imagePreview,setImagePreview] = useState();\n  const [imageErrorFLag,setImageErrorFlag] = useState(false);\n  const [imageKey,setImageKey] = useState(true); //boolean key to rerender input on removing image\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    getOemAPICall();\n  },[])\n\n  // //API calls\n  const getOemAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:\"3\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let tempData = [];\n        if (responseData.status === 1) {          \n          responseData.data.map(item=>{\n            tempData.push({label: item.name, value: item.oem_id, id:item.oem_id});\n          })\n          setOemList(tempData);\n        }else{\n          addBulkChargerAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addBulkChargerAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addBulkChargerAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/bulkcharger',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          addBulkChargerAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const BulkChargerDetailsValidationSchema = yup.object().shape({\n    model:yup.string()\n        .required(\"Model name is required\"),\n    dimension:yup.string()\n        .required(\"Dimension is required\"),\n  });\n\n  const initialValues = {    \n    model:\"\",\n    battery_modules:\"\",\n    battery_type:\"\",\n    battery_capacity:\"\",\n    battery_slot_dimension:\"\",\n    no_of_connetor:\"\",\n    battery_slot_indicator:\"\",\n    charging_connector:\"\",\n    gc_remark_1:\"\",\n    gc_remark_2:\"\",\n    voltage:\"\",\n    max_input_power:\"\",\n    frequency:\"\",\n    current:\"\",\n    thd_power_factor:\"\",\n    protection:\"\",\n    charging_voltage:\"\",\n    output_power:\"\",\n    max_charging_current:\"\",\n    power_of_each_battery_slot:\"\",\n    full_load_power_of_each_slot:\"\",\n    input_impedance:\"\",\n    static_voltage_regulation:\"\",\n    ripple_and_noise:\"\",\n    output_protection:\"\",\n    efficiency:\"\",\n    acoustic_noise:\"\",\n    operating_temp:\"\",\n    storage_temp:\"\",\n    humidity:\"\",\n    ambient_pressure:\"\",\n    accessories:\"\",\n    accessories:\"\",\n    battery_door_locking:\"\",\n    dimension:\"\",\n    thickness:\"\",\n    colour:\"\",\n    cable_entry:\"\",\n    alarms:\"\",\n    emergency_protection:\"\",\n    cooling:\"\",\n    ip_rating:\"\",\n    mechanical:\"\",\n    surge_protection:\"\",\n    power_connector:\"\",\n    fire_safety:\"\",\n    smoke_detector:\"\",\n    thermal_detector:\"\",\n    fire_suppresion_system:\"\",\n    video_surevillance:\"\",\n    water_level_sensor:\"\",\n    mtbf:\"\",\n    user_authentication:\"\",\n    display:\"\",\n    communication:\"\",\n    indication:\"\",\n    interface_mode:\"\",\n    identification:\"\",\n    user_interface:\"\",\n    network_communication:\"\",\n    application_use:\"\",\n    ec_remark_1:\"\",\n    ec_remark_2:\"\",\n    tc_remark_1:\"\",\n    tc_remark_2:\"\",\n    mc_remark_1:\"\",\n    mc_remark_2:\"\",\n    p_remark_1:\"\",\n    p_remark_2:\"\",\n    w_remark_1:\"\",\n    w_remark_2:\"\",\n    i_remark_1:\"\",\n    i_remark_2:\"\",\n  };\n\n  //helper\n  const getYear = () => {\n    let yearList = [];\n    for (let index = 0; index <= 20; index++) {\n      const temp = {label:2010+index,value:index+1,id:index+1}\n      yearList.push(temp);\n    }\n    return yearList\n  };\n  //Alert helper methods\n  const addBulkChargerAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //image selection methods\n  const handleImageSelect = (imageFile) =>{\n    const fileExtension = imageFile.name.split('.').pop();\n    if (fileExtension == \"jpg\" || fileExtension == \"jpeg\" || fileExtension == \"png\") {\n      setImageErrorFlag(false);\n      setImageSelected(imageFile);\n      setImagePreview(URL.createObjectURL(imageFile));\n    } else {\n      setImageErrorFlag(true);\n    }\n  }\n  const handleDeleteImage = () =>{\n    setImageKey(!imageKey);\n    setImagePreview();\n    setImageSelected();\n  }\n\n  return (\n    <>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={BulkChargerDetailsValidationSchema} \n        onSubmit={(values)=>{\n          if (month == null || year == null) {\n            addBulkChargerAlert(\"Make Year is required\");\n            return;\n          }\n          let formData = new FormData();\n          const tempData={\n            oem_name:oem.label,\n            make:{month:month,year:year},\n            battery_modules:values.battery_modules,\n            battery_type:values.battery_type,\n            battery_capacity:values.battery_capacity,\n            battery_slot_dimension:values.battery_slot_dimension,\n            no_of_connetor:values.no_of_connetor,\n            battery_slot_indicator:values.battery_slot_indicator,\n            charging_connector:values.charging_connector,\n            voltage:values.voltage,\n            max_input_power:values.max_input_power,\n            frequency:values.frequency,\n            current:values.current,\n            thd_power_factor:values.thd_power_factor,\n            protection:values.protection,\n            charging_voltage:values.charging_voltage,\n            output_power:values.output_power,\n            max_charging_current:values.max_charging_current,\n            power_of_each_battery_slot:values.power_of_each_battery_slot,\n            full_load_power_of_each_slot:values.full_load_power_of_each_slot,\n            input_impedance:values.input_impedance,\n            static_voltage_regulation:values.static_voltage_regulation,\n            ripple_and_noise:values.ripple_and_noise,\n            output_protection:values.output_protection,\n            efficiency:values.efficiency,\n            acoustic_noise:values.acoustic_noise,\n            operating_temp:values.operating_temp,\n            storage_temp:values.storage_temp,\n            humidity:values.humidity,\n            ambient_pressure:values.ambient_pressure,\n            accessories:values.accessories,\n            accessories:values.accessories,\n            battery_door_locking:values.battery_door_locking,\n            thickness:values.thickness,\n            colour:values.colour,\n            cable_entry:values.cable_entry,\n            alarms:values.alarms,\n            emergency_protection:values.emergency_protection,\n            cooling:values.cooling,\n            ip_rating:values.ip_rating,\n            mechanical:values.mechanical,\n            surge_protection:values.surge_protection,\n            power_connector:values.power_connector,\n            fire_safety:values.fire_safety,\n            smoke_detector:values.smoke_detector,\n            thermal_detector:values.thermal_detector,\n            fire_suppresion_system:values.fire_suppresion_system,\n            video_surevillance:values.video_surevillance,\n            water_level_sensor:values.water_level_sensor,\n            mtbf:values.mtbf,\n            user_authentication:values.user_authentication,\n            display:values.display,\n            communication:values.communication,\n            indication:values.indication,\n            interface_mode:values.interface_mode,\n            identification:values.identification,\n            user_interface:values.user_interface,\n            network_communication:values.network_communication,\n            application_use:values.application_use,\n            ec_remark_1:values.ec_remark_1,\n            ec_remark_2:values.ec_remark_2,\n            tc_remark_1:values.tc_remark_1,\n            tc_remark_2:values.tc_remark_2,\n            mc_remark_1:values.mc_remark_1,\n            mc_remark_2:values.mc_remark_2,\n            p_remark_1:values.p_remark_1,\n            p_remark_2:values.p_remark_2,\n            w_remark_1:values.w_remark_1,\n            w_remark_2:values.w_remark_2,\n            i_remark_1:values.i_remark_1,\n            i_remark_2:values.i_remark_2,\n          }\n          formData.append('oem_id',oem.value);\n          formData.append('model',values.model,);\n          formData.append('dimension',values.dimension);\n          formData.append('make',month.label+\"-\"+year.label);\n          formData.append('img_file',imageSelected);\n          formData.append('remark_1',values.gc_remark_1);\n          formData.append('remark_2',values.gc_remark_2);\n          formData.append('all_data',JSON.stringify(tempData));\n          addBulkChargerAPICall(formData);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors,isValid})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\">\n                    <span className=\"page_title\">Add Bulk Charger</span>\n                      <Button color=\"light\" className=\"default float-right\" onClick={()=>history.goBack()}>\n                          <b>Cancel</b>\n                      </Button>\n                      <Button color=\"primary\" className=\"default mr-2 float-right\" onClick={handleSubmit} disabled={buttonDisabled}>\n                        <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Add</b>\n                      </Button>              \n                  <Separator className=\"mb-5\" />\n                </Colxx>\n              </Row>\n              <Row>\n                <Colxx xxs=\"12\" lg=\"12\">\n                  <ul className=\"list-unstyled mb-4\">\n                    <li>\n                      <CardSubtitle className=\"mb-3\">\n                        <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                          {alertMsg}\n                        </Alert>\n                      </CardSubtitle>\n                    </li>\n                    <li>\n                      <Card className={isValid?\"question d-flex mb-4\":\"question d-flex mb-4 cardBorderError\"}>\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">1</span>\n                              General Characteristics\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse1 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse1(!collapse1)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse1}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                                <Row>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                        OEM\n                                      </Label>\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Select OEM\"\n                                        value={oem}\n                                        onChange={(e) => setOem(e)}\n                                        options={oemList}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Model Name\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Model Name\"\n                                        name=\"model\"\n                                        value={values.model}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        className={errors.model && touched.model ? \"input-error\":null}\n                                      />\n                                      {errors.model && touched.model &&(\n                                        <span className=\"error\">{errors.model}</span>\n                                      )}\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Make Year\n                                      </Label>\n                                      <Row>\n                                      <Colxx md=\"6\">\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Month\"\n                                        value={month}\n                                        onChange={(e) => setMonth(e)}\n                                        options={[\n                                          { label: 'January', value: '1', id: 1 },\n                                          { label: 'February', value: '2', id: 2 },\n                                          { label: 'March', value: '3', id: 3 },\n                                          { label: 'April', value: '4', id: 4 },\n                                          { label: 'May', value: '5', id: 6 },\n                                          { label: 'June', value: '6', id: 7 },\n                                          { label: 'July', value: '7', id: 8 },\n                                          { label: 'August', value: '8', id: 9 },\n                                          { label: 'September', value: '9', id: 10 },\n                                          { label: 'October', value: '10', id: 11 },\n                                          { label: 'November', value: '11', id: 12 },\n                                          { label: 'December', value: '12', id: 13 },\n                                        ]}\n                                      />\n                                      </Colxx>\n                                      <Colxx md=\"6\">\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Year\"\n                                        value={year}\n                                        onChange={(e) => setYear(e)}\n                                        options={getYear()}\n                                      />\n                                      </Colxx>\n                                      </Row>\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx md={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery modules \n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery modules \"\n                                        name=\"battery_modules\"\n                                        value={values.battery_modules}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx md={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery Type (AH)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery Type (AH)\"\n                                        name=\"battery_type\"\n                                        value={values.battery_type}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery Capacity (AH)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery Capacity (AH)\"\n                                        name=\"battery_capacity\"\n                                        value={values.battery_capacity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery slot dimension\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery slot dimension\"\n                                        name=\"battery_slot_dimension\"\n                                        value={values.battery_slot_dimension}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      No. of connetor\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"no. of connetor\"\n                                        name=\"no_of_connetor\"\n                                        value={values.no_of_connetor}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery slot indicator\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery slot indicator\"\n                                        name=\"battery_slot_indicator\"\n                                        value={values.battery_slot_indicator}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Charging Connector\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Charging Connector\"\n                                        name=\"charging_connector\"\n                                        value={values.charging_connector}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                        Image\n                                      </Label>\n                                      <Input\n                                        key={imageKey}\n                                        type=\"file\"\n                                        name=\"upload_image\"\n                                        accept=\".png,.jpg,.jpeg\"\n                                        onChange={e=>handleImageSelect(e.target.files[0])}\n                                      />\n                                      {imageErrorFLag && \n                                        <span className=\"error\">Image must be either png,jpg or jpeg format</span>\n                                      }\n                                    </FormGroup>\n                                  </Colxx>\n                                  {imagePreview!=null &&\n                                    <Colxx sm={3}>\n                                      <div>\n                                        <Button className=\"custom-badge default tbl_action_btn\" onClick={()=>handleDeleteImage()}><i className=\"glyph-icon simple-icon-trash image-remove-icon\"></i></Button>\n                                        <img src={imagePreview} height=\"100px\" width=\"150px\" alt=\"Image Preview\"/>\n                                      </div>\n                                    </Colxx>\n                                  }\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"gc_remark_1\"\n                                        value={values.gc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"gc_remark_2\"\n                                        value={values.gc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                    </li>\n                    <li>\n                      <Card className=\"question d-flex mb-4\">\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">2</span>\n                              Electrical Characteristics\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse2 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse2(!collapse2)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse2}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Voltage\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Voltage\"\n                                        name=\"voltage\"\n                                        value={values.voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Max input power\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Max input power\"\n                                        name=\"max_input_power\"\n                                        value={values.max_input_power}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Frequency\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Frequency\"\n                                        name=\"frequency\"\n                                        value={values.frequency}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Current \n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Current\"\n                                        name=\"current\"\n                                        value={values.current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      THD/Power Factor\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"THD/Power Factor\"\n                                        name=\"thd_power_factor\"\n                                        value={values.thd_power_factor}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Protection\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Protection\"\n                                        name=\"protection\"\n                                        value={values.protection}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Charging Voltage\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Charging Voltage\"\n                                        name=\"charging_voltage\"\n                                        value={values.charging_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Output power\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Output power\"\n                                        name=\"output_power\"\n                                        value={values.output_power}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Max charging current\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Max charging current\"\n                                        name=\"max_charging_current\"\n                                        value={values.max_charging_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Power of each battery slot\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Power of each battery slot\"\n                                        name=\"power_of_each_battery_slot\"\n                                        value={values.power_of_each_battery_slot}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Full load power of each slot\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Full load power of each slot\"\n                                        name=\"full_load_power_of_each_slot\"\n                                        value={values.full_load_power_of_each_slot}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Input impedance\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Input impedance\"\n                                        name=\"input_impedance\"\n                                        value={values.input_impedance}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Static voltage regulation\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Static voltage regulation\"\n                                        name=\"static_voltage_regulation\"\n                                        value={values.static_voltage_regulation}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Ripple and noise\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Ripple and noise\"\n                                        name=\"ripple_and_noise\"\n                                        value={values.ripple_and_noise}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Output protection\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Output protection\"\n                                        name=\"output_protection\"\n                                        value={values.output_protection}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Efficiency\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Efficiency\"\n                                        name=\"efficiency\"\n                                        value={values.efficiency}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Acoustic Noise\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Acoustic Noise\"\n                                        name=\"acoustic_noise\"\n                                        value={values.acoustic_noise}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"ec_remark_1\"\n                                        value={values.ec_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"ec_remark_2\"\n                                        value={values.ec_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">3</span>\n                                Temprature Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse3 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse3(!collapse3)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse3}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                  <Row>                        \n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Operating Temp.\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Operating Temp.\"\n                                          name=\"operating_temp\"\n                                          value={values.operating_temp}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Storage Temp.\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Storage Temp.\"\n                                          name=\"storage_temp\"\n                                          value={values.storage_temp}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Humidity\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Humidity\"\n                                          name=\"humidity\"\n                                          value={values.humidity}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Temp. sensor\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Temp. sensor\"\n                                          name=\"temperature_sensor\"\n                                          value={values.temperature_sensor}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"tc_remark_1\"\n                                        value={values.tc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"tc_remark_2\"\n                                        value={values.tc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>                          \n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className={isValid?\"question d-flex mb-4\":\"question d-flex mb-4 cardBorderError\"}>\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">4</span>\n                                Mechanical Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse4 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse4(!collapse4)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse4}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Ambient pressure\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Ambient pressure\"\n                                          name=\"ambient_pressure\"\n                                          value={values.ambient_pressure}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Accessories\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Accessories\"\n                                          name=\"accessories\"\n                                          value={values.accessories}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Battery door locking\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Battery door locking\"\n                                          name=\"battery_door_locking\"\n                                          value={values.battery_door_locking}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Dimension\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Dimension\"\n                                          name=\"dimension\"\n                                          value={values.dimension}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                         {errors.dimension && touched.dimension &&(\n                                            <span className=\"error\">{errors.dimension}</span>\n                                          )}\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Thickness\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Thickness\"\n                                          name=\"thickness\"\n                                          value={values.thickness}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Colour\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Colour\"\n                                          name=\"colour\"\n                                          value={values.colour}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Cable entry\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Cable entry\"\n                                          name=\"cable_entry\"\n                                          value={values.cable_entry}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx> \n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"mc_remark_1\"\n                                        value={values.mc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"mc_remark_2\"\n                                        value={values.mc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                      <Card className=\"question d-flex mb-4\">\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">5</span>\n                              Protections\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse5 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse5(!collapse5)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse5}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Alarms\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Alarms\"\n                                        name=\"alarms\"\n                                        value={values.alarms}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Emergency protection\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Emergency protection\"\n                                        name=\"emergency_protection\"\n                                        value={values.emergency_protection}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cooling\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cooling\"\n                                        name=\"cooling\"\n                                        value={values.cooling}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      IP Rating\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"IP Rating\"\n                                        name=\"ip_rating\"\n                                        value={values.ip_rating}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Mechanical\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Mechanical\"\n                                        name=\"mechanical\"\n                                        value={values.mechanical}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Surge protection\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Surge protection\"\n                                        name=\"surge_protection\"\n                                        value={values.surge_protection}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Power Connector\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Power Connector\"\n                                          name=\"power_connector\"\n                                          value={values.power_connector}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Fire safety\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Fire safety\"\n                                          name=\"fire_safety\"\n                                          value={values.fire_safety}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Smoke Detector\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Smoke Detector\"\n                                          name=\"smoke_detector\"\n                                          value={values.smoke_detector}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Thermal Detector\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Thermal Detector\"\n                                          name=\"thermal_detector\"\n                                          value={values.thermal_detector}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Fire suppresion system\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Fire suppresion system\"\n                                          name=\"fire_suppresion_system\"\n                                          value={values.fire_suppresion_system}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Video Surevillance\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Video Surevillance\"\n                                          name=\"video_surevillance\"\n                                          value={values.video_surevillance}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Water level sensor\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Water level sensor\"\n                                          name=\"water_level_sensor\"\n                                          value={values.water_level_sensor}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"p_remark_1\"\n                                        value={values.p_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"p_remark_2\"\n                                        value={values.p_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx> \n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">6</span>\n                                Warranty\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse6 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse6(!collapse6)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse6}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        MTBF\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"MTBF\"\n                                          name=\"mtbf\"\n                                          value={values.mtbf}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"w_remark_1\"\n                                        value={values.w_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"w_remark_2\"\n                                        value={values.w_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">7</span>\n                                Interface\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse7 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse7(!collapse7)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse7}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        User Authentication\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"User Authentication\"\n                                          name=\"user_authentication\"\n                                          value={values.user_authentication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Display\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Display\"\n                                          name=\"display\"\n                                          value={values.display}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Communication \n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Communication \"\n                                          name=\"communication\"\n                                          value={values.communication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Indication\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Indication\"\n                                          name=\"indication\"\n                                          value={values.indication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Interface mode\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Interface mode\"\n                                          name=\"interface_mode\"\n                                          value={values.interface_mode}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Identification\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Identification\"\n                                          name=\"identification\"\n                                          value={values.identification}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        User interface\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"User interface\"\n                                          name=\"user_interface\"\n                                          value={values.user_interface}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Netwrok Communication\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Netwrok Communication\"\n                                          name=\"network_communication\"\n                                          value={values.network_communication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Application use\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Application use\"\n                                          name=\"application_use\"\n                                          value={values.application_use}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"i_remark_1\"\n                                        value={values.i_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"i_remark_2\"\n                                        value={values.i_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                  </ul>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AddBulkCharger;\n\n{/* <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Bulk Charger</span>\n            <a href=\"bulkcharger\" className=\"btn btn-light default btn-sm float-right\">\n                <b>Cancel</b>\n            </a>\n            <Button color=\"primary\" className=\"default mr-2 btn-sm float-right\">\n                <b>Add</b>\n            </Button>\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n        <ul className=\"list-unstyled mb-4\">\n        <li>\n            <Card className=\"question d-flex mb-4\">\n              <div className=\"d-flex flex-grow-1 min-width-zero\">\n                <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                  <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                    <span className=\"heading-number d-inline-block\">1</span>\n                    General Characteristics\n                  </div>\n                </div>\n                <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                  <Button\n                    outline\n                    color=\"theme-3\"\n                    className={`icon-button ml-1 rotate-icon-click ${\n                      collapse1 ? 'rotate' : ''\n                    }`}\n                    onClick={() => setCollapse1(!collapse1)}\n                  >\n                    <i className=\"simple-icon-arrow-down\" />\n                  </Button>\n                </div>\n              </div>\n              <Collapse isOpen={collapse1}>\n                <div className=\"card-body pt-0\">\n                  <div className=\"edit-mode\">\n                    <Form>\n                      <Row>\n                          <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            OEM\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"OEM\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Model Name\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Model Name\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Make Year\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Make\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Battery Modules\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Battery Modules\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Battery Type\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Battery Type\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Battery Capacity\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Battery Capacity\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Battery Slot Dimension\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Battery Slot Dimension\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            No. of Connetor\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"No. of Connetor\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Battery Slot Indicator\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Battery Slot Indicator\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Charging Connector\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Charging Connector\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Remark1\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Remark1\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                        <Colxx sm={3}>\n                          <FormGroup>\n                            <Label>\n                            Remark2\n                            </Label>\n                            <Input\n                              type=\"text\"\n                              placeholder=\"Remark2\"\n                            />\n                          </FormGroup>\n                        </Colxx>\n                      </Row>\n                    </Form>\n                  </div>\n                </div>\n              </Collapse>\n            </Card>\n            </li>\n            <li>\n              <Card className=\"question d-flex mb-4\">\n                <div className=\"d-flex flex-grow-1 min-width-zero\">\n                  <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                    <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                      <span className=\"heading-number d-inline-block\">2</span>\n                      Electrical Characteristics\n                    </div>\n                  </div>\n                  <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                    <Button\n                      outline\n                      color=\"theme-3\"\n                      className={`icon-button ml-1 rotate-icon-click ${\n                        collapse2 ? 'rotate' : ''\n                      }`}\n                      onClick={() => setCollapse2(!collapse2)}\n                    >\n                      <i className=\"simple-icon-arrow-down\" />\n                    </Button>\n                  </div>\n                </div>\n                <Collapse isOpen={collapse2}>\n                  <div className=\"card-body pt-0\">\n                    <div className=\"edit-mode\">\n                      <Form>\n                        <Row>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Voltage\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Voltage\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Max. Input Power\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Max. Input Power\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Frequency\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Frequency\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Current\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Current\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              THD/Power Factor\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"THD/Power Factor\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Protection\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Protection\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Charging Voltage\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Charging Voltage\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Output Power\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Output Power\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Max. Charging Current\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Max. Charging Current\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Power of Each Battery Slot\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Power of Each Battery Slot\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Full load power of Each Slot\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Full load power of Each Slot\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Input Impedance\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Input Impedance\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Static Voltage Regulation\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Static Voltage Regulation\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Ripple and Noise\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Ripple and Noise\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Output Protection\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Output Protection\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Efficiency\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Efficiency\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Acoustic Noise\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Acoustic Noise\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    </div>\n                  </div>\n                </Collapse>\n              </Card>\n              </li>\n              <li>\n              <Card className=\"question d-flex mb-4\">\n                <div className=\"d-flex flex-grow-1 min-width-zero\">\n                  <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                    <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                      <span className=\"heading-number d-inline-block\">3</span>\n                      Temp. Characteristics\n                    </div>\n                  </div>\n                  <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                    <Button\n                      outline\n                      color=\"theme-3\"\n                      className={`icon-button ml-1 rotate-icon-click ${\n                        collapse3 ? 'rotate' : ''\n                      }`}\n                      onClick={() => setCollapse3(!collapse3)}\n                    >\n                      <i className=\"simple-icon-arrow-down\" />\n                    </Button>\n                  </div>\n                </div>\n                <Collapse isOpen={collapse3}>\n                  <div className=\"card-body pt-0\">\n                    <div className=\"edit-mode\">\n                      <Form>\n                        <Row>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Operating Temp.\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Operating Temp.\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Storage Temp.\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Storage Temp.\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Humidity\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Humidity\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Ambient Pressure\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Ambient Pressure\"\n                              />\n                            </FormGroup>\n                          </Colxx> \n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Temp. Sensor\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Temp. Sensor\"\n                              />\n                            </FormGroup>\n                          </Colxx>     \n                        </Row>\n                      </Form>\n                    </div>\n                  </div>\n                </Collapse>\n              </Card>\n              </li>\n              <li>\n              <Card className=\"question d-flex mb-4\">\n                <div className=\"d-flex flex-grow-1 min-width-zero\">\n                  <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                    <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                      <span className=\"heading-number d-inline-block\">4</span>\n                      Mechanical characteristics\n                    </div>\n                  </div>\n                  <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                    <Button\n                      outline\n                      color=\"theme-3\"\n                      className={`icon-button ml-1 rotate-icon-click ${\n                        collapse4 ? 'rotate' : ''\n                      }`}\n                      onClick={() => setCollapse4(!collapse4)}\n                    >\n                      <i className=\"simple-icon-arrow-down\" />\n                    </Button>\n                  </div>\n                </div>\n                <Collapse isOpen={collapse4}>\n                  <div className=\"card-body pt-0\">\n                    <div className=\"edit-mode\">\n                      <Form>\n                        <Row>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Accessories\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Accessories\"\n                              />\n                            </FormGroup>\n                          </Colxx>                                    \n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Battery Door Locking\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Battery Door Locking\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Dimension\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Dimension\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Thickness\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Thickness\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Colour\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Colour\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Cable entry\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Cable entry\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    </div>\n                  </div>\n                </Collapse>\n              </Card>\n              </li>\n              <li>\n              <Card className=\"question d-flex mb-4\">\n                <div className=\"d-flex flex-grow-1 min-width-zero\">\n                  <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                    <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                      <span className=\"heading-number d-inline-block\">5</span>\n                      Protections\n                    </div>\n                  </div>\n                  <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                    <Button\n                      outline\n                      color=\"theme-3\"\n                      className={`icon-button ml-1 rotate-icon-click ${\n                        collapse5 ? 'rotate' : ''\n                      }`}\n                      onClick={() => setCollapse5(!collapse5)}\n                    >\n                      <i className=\"simple-icon-arrow-down\" />\n                    </Button>\n                  </div>\n                </div>\n                <Collapse isOpen={collapse5}>\n                  <div className=\"card-body pt-0\">\n                    <div className=\"edit-mode\">\n                      <Form>\n                        <Row>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Alarms\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Alarms\"\n                              />\n                            </FormGroup>\n                          </Colxx>                  \n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Emergency Protection\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Emergency Protection\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Cooling\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Cooling\"\n                              />\n                            </FormGroup>\n                          </Colxx>                  \n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              IP Rating\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"IP Rating\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Mechanical\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Mechanical\"\n                              />\n                            </FormGroup>\n                          </Colxx>                  \n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Surge Protection\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Surge Protection\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Fire & Safety\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Fire & Safety\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Smoke Detector\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Smoke Detector\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Thermal Detector\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Thermal Detector\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Fire Suppresion System\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Fire Suppresion System\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Video Surevillance\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Video Surevillance\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={3}>\n                            <FormGroup>\n                              <Label>\n                              Water Level Sensor\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Water Level Sensor\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    </div>\n                  </div>\n                </Collapse>\n              </Card>\n              </li>\n              <li>\n              <Card className=\"question d-flex mb-4\">\n                <div className=\"d-flex flex-grow-1 min-width-zero\">\n                  <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                    <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                      <span className=\"heading-number d-inline-block\">6</span>\n                      Warranty\n                    </div>\n                  </div>\n                  <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                    <Button\n                      outline\n                      color=\"theme-3\"\n                      className={`icon-button ml-1 rotate-icon-click ${\n                        collapse6 ? 'rotate' : ''\n                      }`}\n                      onClick={() => setCollapse6(!collapse6)}\n                    >\n                      <i className=\"simple-icon-arrow-down\" />\n                    </Button>\n                  </div>\n                </div>\n                <Collapse isOpen={collapse6}>\n                  <div className=\"card-body pt-0\">\n                    <div className=\"edit-mode\">\n                      <Form>\n                        <Row>\n                          <Colxx sm={12}>\n                            <FormGroup>\n                              <Label>\n                              MTBF\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"MTBF\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    </div>\n                  </div>\n                </Collapse>\n              </Card>\n              </li>\n              <li>\n              <Card className=\"question d-flex mb-4\">\n                <div className=\"d-flex flex-grow-1 min-width-zero\">\n                  <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                    <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                      <span className=\"heading-number d-inline-block\">7</span>\n                      Interface\n                    </div>\n                  </div>\n                  <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                    <Button\n                      outline\n                      color=\"theme-3\"\n                      className={`icon-button ml-1 rotate-icon-click ${\n                        collapse7 ? 'rotate' : ''\n                      }`}\n                      onClick={() => setCollapse7(!collapse7)}\n                    >\n                      <i className=\"simple-icon-arrow-down\" />\n                    </Button>\n                  </div>\n                </div>\n                <Collapse isOpen={collapse7}>\n                  <div className=\"card-body pt-0\">\n                    <div className=\"edit-mode\">\n                      <Form>\n                        <Row>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              User Authentication\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"User Authentication\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Display\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Display\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Communication\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Communication\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Indication\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Indication\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Interface mode\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Interface mode\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Identification\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Identification\"\n                              />\n                            </FormGroup>\n                          </Colxx>                  \n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              User Interface\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"User Interface\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Network Communication\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Network Communication\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <FormGroup>\n                              <Label>\n                              Application Use\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Application Use\"\n                              />\n                            </FormGroup>\n                          </Colxx>\n                        </Row>\n                      </Form>\n                    </div>\n                  </div>\n                </Collapse>\n              </Card>\n              </li>\n          </ul>\n        </Colxx>\n      </Row> */}","import React, { useState, useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,CardSubtitle,\n  Label,Input, Button, Collapse,Form,Alert\n } from 'reactstrap';\nimport Select from 'react-select';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getOemAPI,getBulkChargerByIdAPI,updateBulkChargerAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateBulkCharger = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //collapse states\n  const [collapse1, setCollapse1] = useState(false);\n  const [collapse2, setCollapse2] = useState(false);\n  const [collapse3, setCollapse3] = useState(false);\n  const [collapse4, setCollapse4] = useState(false);\n  const [collapse5, setCollapse5] = useState(false);\n  const [collapse6, setCollapse6] = useState(false);\n  const [collapse7, setCollapse7] = useState(false);\n  //dropdown states\n  const [oem,setOem] = useState(\"\");\n  const [oemList,setOemList] = useState([]);\n  const [month,setMonth] = useState(null);\n  const [year,setYear] = useState(null);\n  //image states\n  const [imageSelected,setImageSelected] = useState();\n  const [imageFilePath,setImageFilePath] = useState();\n  const [imagePreview,setImagePreview] = useState();\n  const [imageErrorFLag,setImageErrorFlag] = useState(false);\n  const [imageKey,setImageKey] = useState(true); //boolean key to rerender input on removing image\n  //form default values states\n  const [modelName,setModelName] = useState(\"\");\n  const [batteryModules,setBatteryModules] = useState(\"\");\n  const [batteryType,setBatteryType] = useState(\"\");\n  const [batteryCapacity,setBatteryCapacity] = useState(\"\");\n  const [batterySlotDimension,setBatterySlotDimension] = useState(\"\");\n  const [noOfConnetor,setNoOfConnetor] = useState(\"\");\n  const [batterySlotIndicator,setBatterySlotIndicator] = useState(\"\");\n  const [chargingConnector,setChargingConnector] = useState(\"\");\n  const [gcRemark1,setGcRemark1] = useState(\"\");\n  const [gcRemark2,setGcRemark2] = useState(\"\");\n  const [voltage,setVoltage] = useState(\"\");\n  const [maxInputPower,setMaxInputPower] = useState(\"\");\n  const [frequency,setFrequency] = useState(\"\");\n  const [current,setCurrent] = useState(\"\");\n  const [thdPowerFactor,setThdPowerFactor] = useState(\"\");\n  const [protection,setProtection] = useState(\"\");\n  const [chargingVoltage,setChargingVoltage] = useState(\"\");\n  const [outputPower,setOutputPower] = useState(\"\");\n  const [maxChargingCurrent,setMaxChargingCurrent] = useState(\"\");\n  const [powerOfEachBatterySlot,setPowerOfEachBatterySlot] = useState(\"\");\n  const [fullLoadPowerOfEachSlot,setFullLoadPowerOfEachSlot] = useState(\"\");\n  const [inputImpedance,setInputImpedance] = useState(\"\");\n  const [staticVoltageRegulation,setStaticVoltageRegulation] = useState(\"\");\n  const [rippleAndNoise,setRippleAndNoise] = useState(\"\");\n  const [outputProtection,setOutputProtection] = useState(\"\");\n  const [efficiency,setEfficiency] = useState(\"\");\n  const [acousticNoise,setAcousticNoise] = useState(\"\");\n  const [operatingTemp,setOperatingTemp] = useState(\"\");\n  const [storageTemp,setStorageTemp] = useState(\"\");\n  const [humidity,setHumidity] = useState(\"\");\n  const [ambientPressure,setAmbientPressure] = useState(\"\");\n  const [accessories,setAccessories] = useState(\"\");\n  const [batteryDoorLocking,setBatteryDoorLocking] = useState(\"\");\n  const [dimension,setDimension] = useState(\"\");\n  const [thickness,setThickness] = useState(\"\");\n  const [colour,setColour] = useState(\"\");\n  const [cableEntry,setCableEntry] = useState(\"\");\n  const [alarms,setAlarms] = useState(\"\");\n  const [emergencyProtection,setEmergencyProtection] = useState(\"\");\n  const [cooling,setCooling] = useState(\"\");\n  const [ipRating,setIpRating] = useState(\"\");\n  const [mechanical,setMechanical] = useState(\"\");\n  const [surgeProtection,setSurgeProtection] = useState(\"\");\n  const [powerConnector,setPowerConnector] = useState(\"\");\n  const [fireSafety,setFireSafety] = useState(\"\");\n  const [smokeDetector,setSmokeDetector] = useState(\"\");\n  const [thermalDetector,setThermalDetector] = useState(\"\");\n  const [fireSuppresionSystem,setFireSuppresionSystem] = useState(\"\");\n  const [videoSurevillance,setVideoSurevillance] = useState(\"\");\n  const [waterLevelSensor,setWaterLevelSensor] = useState(\"\");\n  const [mtbf,setMtbf] = useState(\"\");\n  const [userAuthentication,setUserAuthentication] = useState(\"\");\n  const [display,setDisplay] = useState(\"\");\n  const [communication,setCommunication] = useState(\"\");\n  const [indication,setIndication] = useState(\"\");\n  const [interfaceMode,setInterfaceMode] = useState(\"\");\n  const [identification,setIdentification] = useState(\"\");\n  const [userInterface,setUserInterface] = useState(\"\");\n  const [networkCommunication,setNetworkCommunication] = useState(\"\");\n  const [applicationUse,setApplicationUse] = useState(\"\");\n  const [ecRemark1,setEcRemark1] = useState(\"\");\n  const [ecRemark2,setEcRemark2] = useState(\"\");   \n  const [tcRemark1,setTcRemark1] = useState(\"\");\n  const [tcRemark2,setTcRemark2] = useState(\"\");          \n  const [mcRemark1,setMcRemark1] = useState(\"\");\n  const [mcRemark2,setMcRemark2] = useState(\"\"); \n  const [pRemark1,setPRemark1] = useState(\"\");\n  const [pRemark2,setPRemark2] = useState(\"\"); \n  const [wRemark1,setWRemark1] = useState(\"\");\n  const [wRemark2,setWRemark2] = useState(\"\"); \n  const [iRemark1,setIRemark1] = useState(\"\");\n  const [iRemark2,setIRemark2] = useState(\"\");\n  \n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getOemAPICall();\n    getBulkChargerByIdAPICall();\n  },[])\n\n  // //API calls\n  const getOemAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:\"3\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let tempData = [];\n        if (responseData.status === 1) {          \n          responseData.data.map(item=>{\n            tempData.push({label: item.name, value: item.oem_id, id:item.oem_id});\n          })\n          setOemList(tempData);\n        }else{\n          // updateBulkChargerAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getBulkChargerByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getBulkChargerByIdAPI,\n        {\n            charger_master_id:location.state.bulkCharger_master_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            let allData = {};\n            if (responseData.status === 1) {\n                setImagePreview(responseData.data.file_img);\n                setImageFilePath(responseData.data.file_name_path);\n                setModelName(responseData.data.model);\n                setGcRemark1(responseData.data.remark_1);\n                setGcRemark2(responseData.data.remark_2);\n                setDimension(responseData.data.dimension);\n                allData = JSON.parse(responseData.data.all_data);\n                setOem({label:allData.oem_name,value:responseData.data.oem_id,id:responseData.data.oem_id});\n                setMonth(allData.make.month);\n                setYear(allData.make.year);\n                setBatteryModules(allData.battery_modules);\n                setBatteryType(allData.battery_type);\n                setBatteryCapacity(allData.battery_capacity);\n                setBatterySlotDimension(allData.battery_slot_dimension);\n                setNoOfConnetor(allData.no_of_connetor);\n                setBatterySlotIndicator(allData.series_cell);\n                setChargingConnector(allData.charging_connector);\n                setVoltage(allData.voltage);\n                setMaxInputPower(allData.max_input_power);\n                setFrequency(allData.frequency);\n                setCurrent(allData.current);\n                setThdPowerFactor(allData.thd_power_factor);\n                setProtection(allData.protection);\n                setChargingVoltage(allData.charging_voltage);\n                setOutputPower(allData.output_power);\n                setMaxChargingCurrent(allData.max_charging_current);\n                setPowerOfEachBatterySlot(allData.power_of_each_battery_slot);\n                setFullLoadPowerOfEachSlot(allData.full_load_power_of_each_slot);\n                setInputImpedance(allData.input_impedance);\n                setStaticVoltageRegulation(allData.static_voltage_regulation);\n                setRippleAndNoise(allData.ripple_and_noise);\n                setOutputProtection(allData.output_protection);\n                setEfficiency(allData.efficiency);\n                setAcousticNoise(allData.acoustic_noise);\n                setOperatingTemp(allData.operating_temp);\n                setStorageTemp(allData.storage_temp);\n                setHumidity(allData.humidity);\n                setAmbientPressure(allData.ambient_pressure);\n                setAccessories(allData.accessories);\n                setBatteryDoorLocking(allData.battery_door_locking);\n                setThickness(allData.thickness);\n                setColour(allData.colour);\n                setCableEntry(allData.cable_entry);\n                setAlarms(allData.alarms);\n                setEmergencyProtection(allData.emergency_protection);\n                setCooling(allData.cooling);\n                setIpRating(allData.ip_rating);\n                setMechanical(allData.mechanical);\n                setSurgeProtection(allData.surge_protection);\n                setPowerConnector(allData.power_connector);\n                setFireSafety(allData.fire_safety);\n                setSmokeDetector(allData.smoke_detector);\n                setThermalDetector(allData.thermal_detector);\n                setFireSuppresionSystem(allData.fire_suppresion_system);\n                setVideoSurevillance(allData.video_surevillance);\n                setWaterLevelSensor(allData.water_level_sensor);\n                setMtbf(allData.mtbf);\n                setUserAuthentication(allData.user_authentication);\n                setDisplay(allData.display);\n                setCommunication(allData.communication);\n                setIndication(allData.indication);\n                setInterfaceMode(allData.interface_mode);\n                setIdentification(allData.identification);\n                setUserInterface(allData.user_interface);\n                setNetworkCommunication(allData.network_communication);\n                setApplicationUse(allData.application_use);\n                setEcRemark1(allData.ec_remark_1);\n                setEcRemark2(allData.ec_remark_2);\n                setTcRemark1(allData.tc_remark_1);\n                setTcRemark2(allData.tc_remark_2);\n                setMcRemark1(allData.mc_remark_1);\n                setMcRemark2(allData.mc_remark_2);\n                setPRemark1(allData.p_remark_1);\n                setPRemark2(allData.p_remark_2);\n                setWRemark1(allData.w_remark_1);\n                setWRemark2(allData.w_remark_2);\n                setIRemark1(allData.i_remark_1);\n                setIRemark2(allData.i_remark_2);\n            }else{\n            updateBulkChargerAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n  const updateBulkChargerAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(updateBulkChargerAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/bulkcharger',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          updateBulkChargerAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const BulkChargerDetailsValidationSchema = yup.object().shape({\n    model:yup.string()\n        .required(\"Model name is required\"),\n    dimension:yup.string()\n        .required(\"Dimension is required\"),\n  });\n\n  //helper\n  const getYear = () => {\n    let yearList = [];\n    for (let index = 0; index <= 20; index++) {\n      const temp = {label:2010+index,value:index+1,id:index+1}\n      yearList.push(temp);\n    }\n    return yearList\n  };\n  //Alert helper methods\n  const updateBulkChargerAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //image selection methods\n  const handleImageSelect = (imageFile) =>{\n    const fileExtension = imageFile.name.split('.').pop();\n    if (fileExtension == \"jpg\" || fileExtension == \"jpeg\" || fileExtension == \"png\") {\n      setImageErrorFlag(false);\n      setImageSelected(imageFile);\n      setImageFilePath(\"\");\n      setImagePreview(URL.createObjectURL(imageFile));\n    } else {\n      setImageErrorFlag(true);\n    }\n  }\n  const handleDeleteImage = () =>{\n    setImageKey(!imageKey);\n    setImagePreview();\n    setImageFilePath(\"\");\n  }\n\n  return (\n    <>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            model:modelName,\n            battery_modules:batteryModules,\n            battery_type:batteryType,\n            battery_capacity:batteryCapacity,\n            battery_slot_dimension:batterySlotDimension,\n            no_of_connetor:noOfConnetor,\n            battery_slot_indicator:batterySlotIndicator,\n            charging_connector:chargingConnector,\n            gc_remark_1:gcRemark1,\n            gc_remark_2:gcRemark2,\n            voltage:voltage,\n            max_input_power:maxInputPower,\n            frequency:frequency,\n            current:current,\n            thd_power_factor:thdPowerFactor,\n            protection:protection,\n            charging_voltage:chargingVoltage,\n            output_power:outputPower,\n            max_charging_current:maxChargingCurrent,\n            power_of_each_battery_slot:powerOfEachBatterySlot,\n            full_load_power_of_each_slot:fullLoadPowerOfEachSlot,\n            input_impedance:inputImpedance,\n            static_voltage_regulation:staticVoltageRegulation,\n            ripple_and_noise:rippleAndNoise,\n            output_protection:outputProtection,\n            efficiency:efficiency,\n            acoustic_noise:acousticNoise,\n            operating_temp:operatingTemp,\n            storage_temp:storageTemp,\n            humidity:humidity,\n            ambient_pressure:ambientPressure,\n            accessories:accessories,\n            battery_door_locking:batteryDoorLocking,\n            dimension:dimension,\n            thickness:thickness,\n            colour:colour,\n            cable_entry:cableEntry,\n            alarms:alarms,\n            emergency_protection:emergencyProtection,\n            cooling:cooling,\n            ip_rating:ipRating,\n            mechanical:mechanical,\n            surge_protection:surgeProtection,\n            power_connector:powerConnector,\n            fire_safety:fireSafety,\n            smoke_detector:smokeDetector,\n            thermal_detector:thermalDetector,\n            fire_suppresion_system:fireSuppresionSystem,\n            video_surevillance:videoSurevillance,\n            water_level_sensor:waterLevelSensor,\n            mtbf:mtbf,\n            user_authentication:userAuthentication,\n            display:display,\n            communication:communication,\n            indication:indication,\n            interface_mode:interfaceMode,\n            identification:identification,\n            user_interface:userInterface,\n            network_communication:networkCommunication,\n            application_use:applicationUse,\n            ec_remark_1:ecRemark1,\n            ec_remark_2:ecRemark2,\n            tc_remark_1:tcRemark1,\n            tc_remark_2:tcRemark2,\n            mc_remark_1:mcRemark1,\n            mc_remark_2:mcRemark2,\n            p_remark_1:pRemark1,\n            p_remark_2:pRemark2,\n            w_remark_1:wRemark1,\n            w_remark_2:wRemark2,\n            i_remark_1:iRemark1,\n            i_remark_2:iRemark2,\n        }}\n        validationSchema={BulkChargerDetailsValidationSchema} \n        onSubmit={(values)=>{\n          if (month == null || year == null) {\n            updateBulkChargerAlert(\"Make Year is required\");\n            return;\n          }\n          let formData  = new FormData();\n          const tempData={\n              oem_name:oem.label,\n              make:{month:month,year:year},\n              battery_modules:values.battery_modules,\n              battery_type:values.battery_type,\n              battery_capacity:values.battery_capacity,\n              no_of_connetor:values.no_of_connetor,\n              battery_slot_dimension:values.battery_slot_dimension,\n              battery_slot_indicator:values.battery_slot_indicator,\n              charging_connector:values.charging_connector,\n              voltage:values.voltage,\n              max_input_power:values.max_input_power,\n              frequency:values.frequency,\n              current:values.current,\n              thd_power_factor:values.thd_power_factor,\n              protection:values.protection,\n              charging_voltage:values.charging_voltage,\n              output_power:values.output_power,\n              max_charging_current:values.max_charging_current,\n              power_of_each_battery_slot:values.power_of_each_battery_slot,\n              full_load_power_of_each_slot:values.full_load_power_of_each_slot,\n              input_impedance:values.input_impedance,\n              static_voltage_regulation:values.static_voltage_regulation,\n              ripple_and_noise:values.ripple_and_noise,\n              output_protection:values.output_protection,\n              efficiency:values.efficiency,\n              acoustic_noise:values.acoustic_noise,\n              operating_temp:values.operating_temp,\n              storage_temp:values.storage_temp,\n              humidity:values.humidity,\n              ambient_pressure:values.ambient_pressure,\n              accessories:values.accessories,\n              accessories:values.accessories,\n              battery_door_locking:values.battery_door_locking,\n              thickness:values.thickness,\n              colour:values.colour,\n              cable_entry:values.cable_entry,\n              alarms:values.alarms,\n              emergency_protection:values.emergency_protection,\n              cooling:values.cooling,\n              ip_rating:values.ip_rating,\n              mechanical:values.mechanical,\n              surge_protection:values.surge_protection,\n              power_connector:values.power_connector,\n              fire_safety:values.fire_safety,\n              smoke_detector:values.smoke_detector,\n              thermal_detector:values.thermal_detector,\n              fire_suppresion_system:values.fire_suppresion_system,\n              video_surevillance:values.video_surevillance,\n              water_level_sensor:values.water_level_sensor,\n              mtbf:values.mtbf,\n              user_authentication:values.user_authentication,\n              display:values.display,\n              communication:values.communication,\n              indication:values.indication,\n              interface_mode:values.interface_mode,\n              identification:values.identification,\n              user_interface:values.user_interface,\n              network_communication:values.network_communication,\n              application_use:values.application_use,\n              ec_remark_1:values.ec_remark_1,\n              ec_remark_2:values.ec_remark_2,\n              tc_remark_1:values.tc_remark_1,\n              tc_remark_2:values.tc_remark_2,\n              mc_remark_1:values.mc_remark_1,\n              mc_remark_2:values.mc_remark_2,\n              p_remark_1:values.p_remark_1,\n              p_remark_2:values.p_remark_2,\n              w_remark_1:values.w_remark_1,\n              w_remark_2:values.w_remark_2,\n              i_remark_1:values.i_remark_1,\n              i_remark_2:values.i_remark_2,\n          }\n          formData.append('charger_master_id',location.state.bulkCharger_master_id);\n          formData.append('oem_id',oem.value);\n          formData.append('model',values.model,);\n          formData.append('dimension',values.dimension);\n          formData.append('make',month.label+\"-\"+year.label);\n          formData.append('remark_1',values.gc_remark_1);\n          formData.append('remark_2',values.gc_remark_2);\n          formData.append('all_data',JSON.stringify(tempData));\n          formData.append('file_name_path',imageFilePath);\n          if (imageSelected!=null) {\n            formData.append('img_file',imageSelected);\n          }\n          updateBulkChargerAPICall(formData);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors,isValid})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\">\n                    <span className=\"page_title\">Update Bulk Charger</span>\n                      <Button color=\"light\" className=\"default float-right\" onClick={()=>history.goBack()}>\n                          <b>Cancel</b>\n                      </Button>\n                      <Button color=\"primary\" className=\"default mr-2 float-right\" onClick={handleSubmit} disabled={buttonDisabled}>\n                        <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Update</b>\n                      </Button>              \n                  <Separator className=\"mb-5\" />\n                </Colxx>\n              </Row>\n              <Row>\n                <Colxx xxs=\"12\" lg=\"12\">\n                  <ul className=\"list-unstyled mb-4\">\n                    <li>\n                      <CardSubtitle className=\"mb-3\">\n                        <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                          {alertMsg}\n                        </Alert>\n                      </CardSubtitle>\n                    </li>\n                    <li>\n                      <Card className={isValid?\"question d-flex mb-4\":\"question d-flex mb-4 cardBorderError\"}>\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">1</span>\n                              General Characteristics\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse1 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse1(!collapse1)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse1}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                                <Row>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                        OEM\n                                      </Label>\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Select OEM\"\n                                        value={oem}\n                                        onChange={(e) => setOem(e)}\n                                        options={oemList}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Model Name\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Model Name\"\n                                        name=\"model\"\n                                        value={values.model}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        className={errors.model && touched.model ? \"input-error\":null}\n                                      />\n                                      {errors.model && touched.model &&(\n                                        <span className=\"error\">{errors.model}</span>\n                                      )}\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Make Year\n                                      </Label>\n                                      <Row>\n                                      <Colxx md=\"6\">\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Month\"\n                                        value={month}\n                                        onChange={(e) => setMonth(e)}\n                                        options={[\n                                          { label: 'January', value: '1', id: 1 },\n                                          { label: 'February', value: '2', id: 2 },\n                                          { label: 'March', value: '3', id: 3 },\n                                          { label: 'April', value: '4', id: 4 },\n                                          { label: 'May', value: '5', id: 6 },\n                                          { label: 'June', value: '6', id: 7 },\n                                          { label: 'July', value: '7', id: 8 },\n                                          { label: 'August', value: '8', id: 9 },\n                                          { label: 'September', value: '9', id: 10 },\n                                          { label: 'October', value: '10', id: 11 },\n                                          { label: 'November', value: '11', id: 12 },\n                                          { label: 'December', value: '12', id: 13 },\n                                        ]}\n                                      />\n                                      </Colxx>\n                                      <Colxx md=\"6\">\n                                      <Select\n                                        components={{ Input: CustomSelectInput }}\n                                        className=\"react-select\"\n                                        classNamePrefix=\"react-select\"\n                                        name=\"form-field-name\"\n                                        placeholder=\"Year\"\n                                        value={year}\n                                        onChange={(e) => setYear(e)}\n                                        options={getYear()}\n                                      />\n                                      </Colxx>\n                                      </Row>\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx md={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery modules \n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery modules \"\n                                        name=\"battery_modules\"\n                                        value={values.battery_modules}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx md={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery Type (AH)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery Type (AH)\"\n                                        name=\"battery_type\"\n                                        value={values.battery_type}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery Capacity (AH)\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery Capacity (AH)\"\n                                        name=\"battery_capacity\"\n                                        value={values.battery_capacity}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery slot dimension\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery slot dimension\"\n                                        name=\"battery_slot_dimension\"\n                                        value={values.battery_slot_dimension}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      no. of connetor\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"no. of connetor\"\n                                        name=\"no_of_connetor\"\n                                        value={values.no_of_connetor}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Battery slot indicator\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Battery slot indicator\"\n                                        name=\"battery_slot_indicator\"\n                                        value={values.battery_slot_indicator}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Charging Connector\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Charging Connector\"\n                                        name=\"charging_connector\"\n                                        value={values.charging_connector}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                        Image\n                                      </Label>\n                                      <Input\n                                        key={imageKey}\n                                        type=\"file\"\n                                        name=\"upload_image\"\n                                        accept=\".png,.jpg,.jpeg\"\n                                        onChange={e=>handleImageSelect(e.target.files[0])}\n                                      />\n                                      {imageErrorFLag && \n                                        <span className=\"error\">Image must be either png,jpg or jpeg format</span>\n                                      }\n                                    </FormGroup>\n                                  </Colxx>\n                                  {(imagePreview!=null  && imagePreview!=\"\") &&\n                                    <Colxx sm={3}>\n                                      <div>\n                                        <Button className=\"custom-badge default tbl_action_btn\" onClick={()=>handleDeleteImage()}><i className=\"glyph-icon simple-icon-trash image-remove-icon\"></i></Button>\n                                        <img src={imagePreview} height=\"100px\" width=\"150px\" alt=\"Image Preview\"/>\n                                      </div>\n                                    </Colxx>\n                                  } \n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"gc_remark_1\"\n                                        value={values.gc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"gc_remark_2\"\n                                        value={values.gc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                    </li>\n                    <li>\n                      <Card className=\"question d-flex mb-4\">\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">2</span>\n                              Electrical Characteristics\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse2 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse2(!collapse2)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse2}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Voltage\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Voltage\"\n                                        name=\"voltage\"\n                                        value={values.voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Max input power\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Max input power\"\n                                        name=\"max_input_power\"\n                                        value={values.max_input_power}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Frequency\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Frequency\"\n                                        name=\"frequency\"\n                                        value={values.frequency}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Current \n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Current\"\n                                        name=\"current\"\n                                        value={values.current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      THD/Power Factor\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"THD/Power Factor\"\n                                        name=\"thd_power_factor\"\n                                        value={values.thd_power_factor}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Protection\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Protection\"\n                                        name=\"protection\"\n                                        value={values.protection}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Charging Voltage\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Charging Voltage\"\n                                        name=\"charging_voltage\"\n                                        value={values.charging_voltage}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Output power\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Output power\"\n                                        name=\"output_power\"\n                                        value={values.output_power}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Max charging current\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Max charging current\"\n                                        name=\"max_charging_current\"\n                                        value={values.max_charging_current}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Power of each battery slot\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Power of each battery slot\"\n                                        name=\"power_of_each_battery_slot\"\n                                        value={values.power_of_each_battery_slot}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Full load power of each slot\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Full load power of each slot\"\n                                        name=\"full_load_power_of_each_slot\"\n                                        value={values.full_load_power_of_each_slot}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Input impedance\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Input impedance\"\n                                        name=\"input_impedance\"\n                                        value={values.input_impedance}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Static voltage regulation\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Static voltage regulation\"\n                                        name=\"static_voltage_regulation\"\n                                        value={values.static_voltage_regulation}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Ripple and noise\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Ripple and noise\"\n                                        name=\"ripple_and_noise\"\n                                        value={values.ripple_and_noise}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Output protection\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Output protection\"\n                                        name=\"output_protection\"\n                                        value={values.output_protection}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Efficiency\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Efficiency\"\n                                        name=\"efficiency\"\n                                        value={values.efficiency}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Acoustic Noise\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Acoustic Noise\"\n                                        name=\"acoustic_noise\"\n                                        value={values.acoustic_noise}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"ec_remark_1\"\n                                        value={values.ec_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={3}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"ec_remark_2\"\n                                        value={values.ec_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">3</span>\n                                Temprature Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse3 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse3(!collapse3)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse3}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                  <Row>                        \n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Operating temp\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Operating temp\"\n                                          name=\"operating_temp\"\n                                          value={values.operating_temp}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Storage Temp.\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Storage Temp.\"\n                                          name=\"storage_temp\"\n                                          value={values.storage_temp}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Humidity\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Humidity\"\n                                          name=\"humidity\"\n                                          value={values.humidity}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        Temp. sensor\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Temp. sensor\"\n                                          name=\"temperature_sensor\"\n                                          value={values.temperature_sensor}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"tc_remark_1\"\n                                        value={values.tc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"tc_remark_2\"\n                                        value={values.tc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>                        \n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className={isValid?\"question d-flex mb-4\":\"question d-flex mb-4 cardBorderError\"}>\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">4</span>\n                                Mechanical Characteristics\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse4 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse4(!collapse4)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse4}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Ambient pressure\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Ambient pressure\"\n                                          name=\"ambient_pressure\"\n                                          value={values.ambient_pressure}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Accessories\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Accessories\"\n                                          name=\"accessories\"\n                                          value={values.accessories}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Battery door locking\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Battery door locking\"\n                                          name=\"battery_door_locking\"\n                                          value={values.battery_door_locking}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Dimension\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Dimension\"\n                                          name=\"dimension\"\n                                          value={values.dimension}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                         {errors.dimension && touched.dimension &&(\n                                            <span className=\"error\">{errors.dimension}</span>\n                                            )}\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Thickness\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Thickness\"\n                                          name=\"thickness\"\n                                          value={values.thickness}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Colour\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Colour\"\n                                          name=\"colour\"\n                                          value={values.colour}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Cable entry\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Cable entry\"\n                                          name=\"cable_entry\"\n                                          value={values.cable_entry}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"mc_remark_1\"\n                                        value={values.mc_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"mc_remark_2\"\n                                        value={values.mc_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx> \n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                      <Card className=\"question d-flex mb-4\">\n                        <div className=\"d-flex flex-grow-1 min-width-zero\">\n                          <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                            <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                              <span className=\"heading-number d-inline-block\">5</span>\n                              Protections\n                            </div>\n                          </div>\n                          <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                            <Button\n                              outline\n                              color=\"theme-3\"\n                              className={`icon-button ml-1 rotate-icon-click ${\n                                collapse5 ? 'rotate' : ''\n                              }`}\n                              onClick={() => setCollapse5(!collapse5)}\n                            >\n                              <i className=\"simple-icon-arrow-down\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <Collapse isOpen={collapse5}>\n                          <div className=\"card-body pt-0\">\n                            <div className=\"edit-mode\">\n                              <Form>\n                              <Row>\n                                <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Alarms\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Alarms\"\n                                        name=\"alarms\"\n                                        value={values.alarms}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Emergency protection\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Emergency protection\"\n                                        name=\"emergency_protection\"\n                                        value={values.emergency_protection}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Cooling\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Cooling\"\n                                        name=\"cooling\"\n                                        value={values.cooling}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      IP Rating\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"IP Rating\"\n                                        name=\"ip_rating\"\n                                        value={values.ip_rating}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Mechanical\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Mechanical\"\n                                        name=\"mechanical\"\n                                        value={values.mechanical}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Surge protection\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Surge protection\"\n                                        name=\"surge_protection\"\n                                        value={values.surge_protection}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Power Connector\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Power Connector\"\n                                          name=\"power_connector\"\n                                          value={values.power_connector}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Fire safety\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Fire safety\"\n                                          name=\"fire_safety\"\n                                          value={values.fire_safety}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Smoke Detector\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Smoke Detector\"\n                                          name=\"smoke_detector\"\n                                          value={values.smoke_detector}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Thermal Detector\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Thermal Detector\"\n                                          name=\"thermal_detector\"\n                                          value={values.thermal_detector}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Fire suppresion system\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Fire suppresion system\"\n                                          name=\"fire_suppresion_system\"\n                                          value={values.fire_suppresion_system}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Video Surevillance\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Video Surevillance\"\n                                          name=\"video_surevillance\"\n                                          value={values.video_surevillance}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Water level sensor\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Water level sensor\"\n                                          name=\"water_level_sensor\"\n                                          value={values.water_level_sensor}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"p_remark_1\"\n                                        value={values.p_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"p_remark_2\"\n                                        value={values.p_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx> \n                                </Row>\n                              </Form>\n                            </div>\n                          </div>\n                        </Collapse>\n                      </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">6</span>\n                                Warranty\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse6 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse6(!collapse6)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse6}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                    <Colxx sm={4}>\n                                      <FormGroup>\n                                        <Label>\n                                        MTBF\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"MTBF\"\n                                          name=\"mtbf\"\n                                          value={values.mtbf}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"w_remark_1\"\n                                        value={values.w_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={4}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"w_remark_2\"\n                                        value={values.w_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                      <li>\n                        <Card className=\"question d-flex mb-4\">\n                          <div className=\"d-flex flex-grow-1 min-width-zero\">\n                            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n                              <div className=\"list-item-heading mb-0 truncate w-80 mb-1 mt-1\">\n                                <span className=\"heading-number d-inline-block\">7</span>\n                                Interface\n                              </div>\n                            </div>\n                            <div className=\"custom-control custom-checkbox pl-1 align-self-center pr-4\">\n                              <Button\n                                outline\n                                color=\"theme-3\"\n                                className={`icon-button ml-1 rotate-icon-click ${\n                                  collapse7 ? 'rotate' : ''\n                                }`}\n                                onClick={() => setCollapse7(!collapse7)}\n                              >\n                                <i className=\"simple-icon-arrow-down\" />\n                              </Button>\n                            </div>\n                          </div>\n                          <Collapse isOpen={collapse7}>\n                            <div className=\"card-body pt-0\">\n                              <div className=\"edit-mode\">\n                                <Form>\n                                <Row>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        User Authentication\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"User Authentication\"\n                                          name=\"user_authentication\"\n                                          value={values.user_authentication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Display\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Display\"\n                                          name=\"display\"\n                                          value={values.display}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Communication \n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Communication \"\n                                          name=\"communication\"\n                                          value={values.communication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Indication\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Indication\"\n                                          name=\"indication\"\n                                          value={values.indication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Interface mode\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Interface mode\"\n                                          name=\"interface_mode\"\n                                          value={values.interface_mode}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Identification\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Identification\"\n                                          name=\"identification\"\n                                          value={values.identification}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        User interface\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"User interface\"\n                                          name=\"user_interface\"\n                                          value={values.user_interface}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Netwrok Communication\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Netwrok Communication\"\n                                          name=\"network_communication\"\n                                          value={values.network_communication}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                      <FormGroup>\n                                        <Label>\n                                        Application use\n                                        </Label>\n                                        <Input\n                                          type=\"text\"\n                                          placeholder=\"Application use\"\n                                          name=\"application_use\"\n                                          value={values.application_use}\n                                          onChange={handleChange}\n                                          onBlur={handleBlur}\n                                        />\n                                      </FormGroup>\n                                    </Colxx>\n                                    <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark1\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark1\"\n                                        name=\"i_remark_1\"\n                                        value={values.i_remark_1}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  <Colxx sm={6}>\n                                    <FormGroup>\n                                      <Label>\n                                      Remark2\n                                      </Label>\n                                      <Input\n                                        type=\"text\"\n                                        placeholder=\"Remark2\"\n                                        name=\"i_remark_2\"\n                                        value={values.i_remark_2}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                      />\n                                    </FormGroup>\n                                  </Colxx>\n                                  </Row>\n                                </Form>\n                              </div>\n                            </div>\n                          </Collapse>\n                        </Card>\n                      </li>\n                  </ul>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default UpdateBulkCharger;","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  Input,InputGroup \n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getFleetOperatorListAPI,deleteFleetOperatorAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\nconst FleetMaster = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //station list\n  const [fleetOperatorList,setFleetOperatorList] = useState([]);\n  const [fleetOperatorID,setFleetOperatorID] = useState(\"\");\n  const [fleetOperatorToDeleteId,setFleetOperatorToDeleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getFleetOperatorListAPICall();\n    fleetOperatorAlert();\n  },[fleetOperatorID,pageCount])\n\n  //API calls\n  const getFleetOperatorListAPICall = async() => {\n    setFleetOperatorList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setFleetOperatorList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteFleetOperatorAPICall = async(fleetOperatorId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteFleetOperatorAPI,\n      {fleet_operator_id:fleetOperatorId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setFleetOperatorID(fleetOperatorId);\n          fleetOperatorDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          console.log(responseData.msg);\n          fleetOperatorDeletedAlert(responseData.status,responseData.msg)\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updateFleetOperator = (fleetOperatorId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updatefleetoperator',\n      state:{fleet_operator_id:fleetOperatorId}\n    });\n  }\n\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const fleetOperatorDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n\n  const fleetOperatorAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (fleetOperatorId) => {\n    setFleetOperatorToDeleteId(fleetOperatorId)\n    setModalVisible(!modalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getFleetOperatorListAPICall();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Fleet Operator</span>\n            <a href=\"addfleetoperator\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                    <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                      {alertMsg}\n                    </Alert>\n                </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>Users</th>\n                    <th>Address</th>                    \n                    <th>Contact Person</th>\n                    <th>Contact Number</th>\n                    <th>Contact Email</th>\n                    <th>Remark1</th>\n                    <th>Remark2</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"11\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    fleetOperatorList.length > 0 ?\n                      fleetOperatorList.map((item,index)=>\n                            <tr key={index}>\n                            <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                            <td>{item.name}</td>\n                            <td>{item.users_name}</td>\n                            <td>{item.address}</td>\n                            <td>{item.contact_person}</td>\n                            <td>{item.contact_number}</td>\n                            <td>{item.contact_email}</td>\n                            <td>{item.remark_1}</td>\n                            <td>{item.remark_2}</td>\n                            <td>\n                              <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateFleetOperator(item.fleet_operator_id)}}>\n                                  <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                              </a>\n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.fleet_operator_id)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>\n                            </td>\n                          </tr>\n                      ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"11\">Data  Not  Found</td>\n                        </tr>\n                      }   \n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  <Row>\n                    <Colxx md=\"12\">\n                    Are you sure you would like to delete this Fleet Operator?\n                    </Colxx>\n                    <Colxx md=\"12\">\n                      <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteFleetOperatorAPICall(fleetOperatorToDeleteId)}>\n                      Delete Fleet Operator \n                      </Button>{' '}\n                      <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                        Cancel\n                      </Button>\n                    </Colxx>\n                  </Row>\n                  \n                  \n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default FleetMaster;\n","import React, { useState,useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {addFleetOperatorAPI,getUsersByRolesAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst AddFleet = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //multiSelect state\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  //fleet users list \n  const [fleetOperatorUsers, setFleetOperatorUsers] = useState([]);\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    getFleetOperatorUsersAPICall();\n  },[])\n\n  //API calls\n  const getFleetOperatorUsersAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getUsersByRolesAPI,\n      {user_role:\"fleet operator\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let users=[];\n        if (responseData.status === 1) {\n          responseData.data.map(item=>{\n           users.push({label:item.name,value:item.id,key:item.id})\n         })\n         setFleetOperatorUsers(users);\n        }else{\n          fleetAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addFleetOperatorAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addFleetOperatorAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/fleetoperator',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          fleetAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const fleetAddedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const FleetOperatorDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name is required\"),\n    address:yup.string()\n        .required(\"Address is required\"),\n    contact_person:yup.string()\n        .required(\"Contact Person is required\"),\n    contact_email:yup.string()\n        .email(\"Invalid Email format\")\n        .required(\"Contact email is required\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n        .required(\"Contact number is required\"),\n  });\n\n  const initialValues = {\n    name:\"\",\n    contact_person:\"\",\n    contact_email:\"\",\n    contact_number:\"\",\n    address:\"\",\n    remark_1:\"\",\n    remark_2:\"\"\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Fleet Operator</span>\n            <a href=\"fleetoperator\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Fleet Operator List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={FleetOperatorDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const usersSelected = [];\n          selectedOptions.map(item=>{\n            usersSelected.push(item.value)\n          })\n          const params = {\n            name:values.name,\n            users:usersSelected,\n            contact_person:values.contact_person,\n            contact_email:values.contact_email,\n            contact_number:values.contact_number,\n            address:values.address,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2\n          }\n          addFleetOperatorAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Users\n                                </Label>\n                                  <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={selectedOptions}\n                                    onChange={setSelectedOptions}\n                                    options={fleetOperatorUsers}\n                                  />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Person\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Person\"\n                                  name=\"contact_person\"\n                                  value={values.contact_person}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_person && touched.contact_person ? \"input-error\":null}\n                                />\n                                {errors.contact_person && touched.contact_person &&(\n                                  <span className=\"error\">{errors.contact_person}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Email\"\n                                  name=\"contact_email\"\n                                  value={values.contact_email}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_email && touched.contact_email ? \"input-error\":null}\n                                />\n                                {errors.contact_email && touched.contact_email &&(\n                                  <span className=\"error\">{errors.contact_email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Address\"\n                                  name=\"address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik> \n    </>\n  );\n};\n\nexport default AddFleet;","import React, { useState,useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getFleetOperatorByIdAPI,updateFleetOperatorAPI,getUsersByRolesAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateFleet = () => {\n  //multiSelect state\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  //fleet users list \n  const [fleetOperatorUsers, setFleetOperatorUsers] = useState([]);\n  //Fleet Operator details state\n  const [name,setName] = useState(\"\");\n  const [contactPerson,setContactPerson] = useState([]);\n  const [contactEmail,setContactEmail] = useState(\"\");\n  const [contactNumber,setContactNumber] = useState(\"\");\n  const [address,setAddress] = useState(\"\");\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getFleetOperatorUsersAPICall();\n    getFleetOperatorByIdAPICall();\n  },[])\n\n  //API calls\n  const getFleetOperatorUsersAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getUsersByRolesAPI,\n      {user_role:\"fleet operator\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let users=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           users.push({label:item.name,value:item.id,key:index})\n         })\n         setFleetOperatorUsers(users);\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getFleetOperatorByIdAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getFleetOperatorByIdAPI,\n    {\n        fleet_operator_id:location.state.fleet_operator_id\n    },\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        let tempData = [];\n        if (responseData.status === 1) {\n        setName(responseData.data.name);\n        setContactPerson(responseData.data.contact_person);\n        setContactEmail(responseData.data.contact_email);\n        setContactNumber(responseData.data.contact_number);\n        setAddress(responseData.data.address);\n        setRemark1(responseData.data.remark_1);\n        setRemark2(responseData.data.remark_2);\n        responseData.data.users.map((item,index)=>{\n            tempData.push({label:item.name,value:item.id,key:index})\n        })\n        setSelectedOptions(tempData);\n        }else{\n          fleetUpdatedAlert(responseData.msg);\n        }\n    }).catch(error=>{\n        console.log(error);\n    })\n}\n\nconst updateFleetOperatorAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(updateFleetOperatorAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/fleetoperator',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          fleetUpdatedAlert(responseData.msg);\n        }\n    }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n    })\n}\n\n  //helper methods\n  //Alert helper methods\n  const fleetUpdatedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const FleetOperatorDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name is required\"),\n    address:yup.string()\n        .required(\"Address is required\"),\n    contact_person:yup.string()\n        .required(\"Contact Person is required\"),\n    contact_email:yup.string()\n        .email(\"Invalid Email format\")\n        .required(\"Contact email is required\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n        .required(\"Contact number is required\"),\n  });\n\n  const initialValues = {\n    name:name,\n    contact_person:contactPerson,\n    contact_email:contactEmail,\n    contact_number:contactNumber,\n    address:address,\n    remark_1:remark1,\n    remark_2:remark2\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Fleet Operator</span>\n            <a href=\"fleetoperator\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Fleet Operator List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={initialValues}\n        validationSchema={FleetOperatorDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const usersSelected = [];\n          selectedOptions.map(item=>{\n            usersSelected.push(item.value)\n          })\n          const params = {\n            fleet_operator_id:location.state.fleet_operator_id,\n            name:values.name,\n            users:usersSelected,\n            contact_person:values.contact_person,\n            contact_email:values.contact_email,\n            contact_number:values.contact_number,\n            address:values.address,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2\n          }\n          updateFleetOperatorAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Users\n                                </Label>\n                                  <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={selectedOptions}\n                                    onChange={setSelectedOptions}\n                                    options={fleetOperatorUsers}\n                                  />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Person\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Person\"\n                                  name=\"contact_person\"\n                                  value={values.contact_person}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_person && touched.contact_person ? \"input-error\":null}\n                                />\n                                {errors.contact_person && touched.contact_person &&(\n                                  <span className=\"error\">{errors.contact_person}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Email\"\n                                  name=\"contact_email\"\n                                  value={values.contact_email}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_email && touched.contact_email ? \"input-error\":null}\n                                />\n                                {errors.contact_email && touched.contact_email &&(\n                                  <span className=\"error\">{errors.contact_email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Address\"\n                                  name=\"address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik> \n    </>\n  );\n};\n\nexport default UpdateFleet;","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  Input,InputGroup\n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot, getOwnerListAPI,deleteOwnerAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\n\nconst OwnerMaster = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //user states\n  const [ownerList,setOwnerList] = useState([]);\n  const [ownerID,setOwnerID] = useState(\"\");\n  const [ownerToDeleleteId,setOwnerToDeleleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getOwnerListAPICall();\n    ownerAlert();\n  },[pageCount,ownerID])\n\n  //API CALLS\n  const getOwnerListAPICall = async() => {\n    setOwnerList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getOwnerListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setOwnerList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const deleteOwnerAPICall = async(ownerId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteOwnerAPI,\n      {owner_master_id:ownerId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setOwnerID(ownerId);\n          ownerDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  const updateOwner = (ownerId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updateowner',\n      state:{owner_master_id:ownerId}\n    });\n  }\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //ALert helper methods\n  const ownerDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const ownerAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (userId) => {\n    setOwnerToDeleleteId(userId)\n    setModalVisible(!modalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getOwnerListAPICall();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Owner</span>\n            <a href=\"addowner\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n            <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n            </CardSubtitle> \n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Owner Name</th>\n                    <th>Contact Number</th>\n                    <th>Contact Email</th>\n                    <th>Address</th>                    \n                    <th>Remark</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"7\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    ownerList.length > 0 ?\n                    ownerList.map((item,index)=>\n                      <tr key={index}>\n                        <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index+1}</th>\n                        <td>{item.name}</td>\n                        <td>{JSON.parse(item.all_data)!=null?JSON.parse(item.all_data).contact_number:\"\"}</td>\n                        <td>{JSON.parse(item.all_data)!=null?JSON.parse(item.all_data).contact_email:\"\"}</td>\n                        <td>{JSON.parse(item.all_data)!=null?JSON.parse(item.all_data).address:\"\"}</td>\n                        <td>{item.remark}</td>\n                        <td>\n                            <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateOwner(item.owner_master_id)}}>\n                                <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                            </a>\n                            <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.owner_master_id)}}>\n                                <i className=\"glyph-icon simple-icon-trash\"></i>\n                            </Button>\n                        </td>\n                      </tr>\n                    ):<tr>\n                        <td className=\"text-center text-danger\" colSpan=\"7\">Data  Not  Found</td>\n                    </tr>\n                }\n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  Are you sure you would like to delete this owner?\n                  <Button color=\"success\" className=\"mt-4\" onClick={()=>{deleteOwnerAPICall(ownerToDeleleteId)}}>\n                    Delete Owner\n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                    Cancel\n                  </Button>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default OwnerMaster;\n","import React,{useState} from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot, addOwnerAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst AddOwner = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n\n  const history = useHistory();\n\n  //API calls\n  const addOwnerAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addOwnerAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/owner',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          ownerAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const ownerAddedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const OwnerDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Owner name is required\"),\n    contact_email:yup.string()\n        .email(\"Invalid Email format\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n  });\n\n  const initialValues = {\n    name:\"\",\n    contact_email:\"\",\n    contact_number:\"\",\n    address:\"\",\n    remark:\"\",\n  };\n  \n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Owner</span>\n            <a href=\"owner\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Owner List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={OwnerDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const tempAllData = {\n            contact_email:values.contact_email,\n            contact_number:values.contact_number,\n            address:values.address,\n          }\n          const params = {\n            name: values.name,\n            all_data:JSON.stringify(tempAllData),\n            remark:values.remark\n          }\n          addOwnerAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                        <Row>\n                          <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Full Name \"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Email\"\n                                  name=\"contact_email\"\n                                  value={values.contact_email}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_email && touched.contact_email ? \"input-error\":null}\n                                />\n                                {errors.contact_email && touched.contact_email &&(\n                                  <span className=\"error\">{errors.contact_email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Address\"\n                                  name=\"address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Remark \"\n                                  name=\"remark\"\n                                  value={values.remark}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default AddOwner;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row, FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {updateOwnerAPI,getOwnerByIdAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst UpdateOwner = () => {\n  const history = useHistory();\n  const location = useLocation();\n\n  //states\n  const [ownerName,setOwnerName] = useState(\"\");\n  const [contactEmail,setContactEmail] = useState(\"\");\n  const [contactNumber,setContactNumber] = useState(\"\");\n  const [address,setAddress] = useState(\"\");\n  const [remark,setRemark] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n\n  useEffect(()=>{\n      getOwnerByIdAPICall();\n  },[])\n\n  //API calls\n    const getOwnerByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getOwnerByIdAPI,\n        {\n            owner_master_id:location.state.owner_master_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n            setOwnerName(responseData.data.name);\n            setContactEmail(JSON.parse(responseData.data.all_data).contact_email);\n            setContactNumber(JSON.parse(responseData.data.all_data).contact_number);\n            setAddress(JSON.parse(responseData.data.all_data).address);\n            setRemark(responseData.data.remark);\n            }else{\n              ownerUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n\n    const updateOwnerAPICall = async(params) => {\n        setButtonDisabled(true);\n        const currentUser = getCurrentUser();\n        await axios.post(updateOwnerAPI,\n        params,\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n              history.push({\n                pathname:adminRoot+'/pages/owner',\n                state:{\n                  responseStatus:responseData.status,\n                  responseMsg:responseData.msg\n                }\n              })\n            }else{\n              setButtonDisabled(false);\n              ownerUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            setButtonDisabled(false);\n            console.log(error);\n        })\n    }\n\n  //helper methods\n  //Alert helper methods\n  const ownerUpdatedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const OwnerDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Owner Name is required\"),\n    contact_email:yup.string()\n        .email(\"Invalid Email format\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Owner</span>\n            <a href=\"owner\" className=\"btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Owner List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n      enableReinitialize ={true}\n        initialValues={{\n            name:ownerName,\n            contact_email:contactEmail,\n            contact_number:contactNumber,\n            address:address,\n            remark:remark\n        }}\n        validationSchema={OwnerDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const tempAllData = {\n            contact_email:values.contact_email,\n            contact_number:values.contact_number,\n            address:values.address,\n          }\n          const params = {\n              owner_master_id:location.state.owner_master_id,\n              name:values.name,\n              all_data:JSON.stringify(tempAllData),\n              remark:values.remark\n          }\n          updateOwnerAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                    Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Email\"\n                                  name=\"contact_email\"\n                                  value={values.contact_email}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_email && touched.contact_email ? \"input-error\":null}\n                                />\n                                {errors.contact_email && touched.contact_email &&(\n                                  <span className=\"error\">{errors.contact_email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Address\"\n                                  name=\"address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark\"\n                                  placeholder=\"Remark\"\n                                  value={values.remark}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default UpdateOwner;","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  Input,InputGroup \n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getOemListAPI,deleteOemAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\nconst OEMMaster = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //station list\n  const [oemList,setOemList] = useState([]);\n  const [oemID,setOemID] = useState(\"\");\n  const [oemToDeleteId,setOemToDeleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getOemListAPICall();\n    oemAlert();\n  },[oemID,pageCount])\n\n  //API calls\n  const getOemListAPICall = async() => {\n    setOemList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getOemListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setOemList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteOemAPICall = async(oemId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteOemAPI,\n      {oem_id:oemId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setOemID(oemId);\n          oemDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          console.log(responseData.msg);\n          oemDeletedAlert(responseData.status,responseData.msg)\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updateOem = (oemId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updateoem',\n      state:{oem_id:oemId}\n    });\n  }\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const oemDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const oemAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (oemId) => {\n    setOemToDeleteId(oemId)\n    setModalVisible(!modalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getOemListAPICall();\n  }\n\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Original Equipment Manufacturer</span>\n            <a href=\"addoem\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                  <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                    {alertMsg}\n                  </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>Type</th>\n                    <th>Address</th>\n                    <th>Contact Person</th>\n                    <th>Contact Number</th>\n                    <th>Contact Email</th>\n                    <th>Users</th>\n                    <th>Remark1</th>\n                    <th>Remark2</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"11\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                  oemList.length > 0 ?\n                    oemList.map((item,index)=>\n                      <tr key={index}>\n                        <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                        <td>{item.name}</td>\n                        <td>{item.type===1?\"Battery\":item.type ===2?\"EV\":\"Charger\"}</td>\n                        <td>{item.address}</td>\n                        <td>{item.contact_person}</td>\n                        <td>{item.contact_number}</td>\n                        <td>{item.contact_email}</td>\n                        <td>{item.users_name}</td>\n                        <td>{item.remark_1}</td>\n                        <td>{item.remark_2}</td>\n                        <td>\n                          <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateOem(item.oem_id)}}>\n                              <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                          </a>\n                          <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.oem_id)}}>\n                              <i className=\"glyph-icon simple-icon-trash\"></i>\n                          </Button>\n                        </td>\n                      </tr>\n                      ):<tr>\n                        <td className=\"text-center text-danger\" colSpan=\"11\">Data  Not  Found</td>\n                      </tr>\n                }\n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  Are you sure you would like to delete this OEM?\n                  <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteOemAPICall(oemToDeleteId)}>\n                    Delete OEM \n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                    Cancel\n                  </Button>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default OEMMaster;\n","import React, { useEffect, useState } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {addOemAPI,getUsersByRolesAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst AddOEM = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //multiselect state\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  //oem users list\n  const [oemUsers, setOemUsers] = useState([]);\n  const [type, setType] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    getOemUsersAPICall();\n  },[])\n\n  //API calls\n  const getOemUsersAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getUsersByRolesAPI,\n      {user_role:\"OEM\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let users=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           users.push({label:item.name,value:item.id,key:index})\n         })\n         setOemUsers(users);\n        }else{\n          oemAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addOemAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addOemAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/oem',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          oemAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const oemAddedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const OemDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name is required\"),\n    address:yup.string()\n        .required(\"Address is required\"),\n    contact_person:yup.string()\n        .required(\"Contact Person is required\"),\n    contact_email:yup.string()\n        .email(\"Invalid Email format\")\n        .required(\"Contact email is required\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n        .required(\"Contact number is required\"),\n  });\n\n  const initialValues = {\n    name:\"\",\n    address:\"\",\n    contact_person:\"\",\n    contact_email:\"\",\n    contact_number:\"\",\n    remark_1:\"\",\n    remark_2:\"\"\n  };\n\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add OEM</span>\n            <a href=\"oem\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> OEM List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={OemDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const usersSelected = [];\n          selectedOptions.map(item=>{\n            usersSelected.push(item.value)\n          })\n          const params = {\n            name:values.name,\n            address:values.address,\n            contact_person:values.contact_person,\n            contact_email:values.contact_email,\n            contact_number:values.contact_number,\n            users:usersSelected,\n            type:type,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2\n          }\n          console.log(params);\n          addOemAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                        <Row>\n                          <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Address\"\n                                  name=\"address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={4}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Person\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Person\"\n                                  name=\"contact_person\"\n                                  value={values.contact_person}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_person && touched.contact_person ? \"input-error\":null}\n                                />\n                                {errors.contact_person && touched.contact_person &&(\n                                  <span className=\"error\">{errors.contact_person}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={4}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Email\"\n                                  name=\"contact_email\"\n                                  value={values.contact_email}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_email && touched.contact_email ? \"input-error\":null}\n                                />\n                                {errors.contact_email && touched.contact_email &&(\n                                  <span className=\"error\">{errors.contact_email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={4}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  Users\n                                </Label>\n                                  <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={selectedOptions}\n                                    onChange={setSelectedOptions}\n                                    options={oemUsers}\n                                  />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  Type\n                                </Label>\n                                <Input type=\"select\" onChange={(e)=>setType(e.target.value)}>\n                                    <option key={0} >Select</option>\n                                    <option key={1} value={1}>Battery</option>\n                                    <option key={2} value={2}>EV</option>\n                                    <option key={3} value={3}>Charger</option>\n                                </Input>\n                                </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default AddOEM;\n","import React, { useEffect, useState } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {updateOemAPI,getOemUsersAPI,getOemByIdAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst UpdateOEM = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //multiselect state\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [oemUsers, setOemUsers] = useState([]);\n  //type state\n  const [type, setType] = useState(\"\");\n  //oem details state\n  const [name,setName] = useState(\"\");\n  const [address,setAddress] = useState(\"\");\n  const [contactPerson,setContactPerson] = useState([]);\n  const [contactEmail,setContactEmail] = useState(\"\");\n  const [contactNumber,setContactNumber] = useState(\"\");\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n   \n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getOemUsersAPICall();\n    getOemByIdAPICall();\n  },[])\n\n  //API calls\n  const getOemUsersAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getOemUsersAPI,\n      {user_role:\"OEM\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        let users=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           users.push({label:item.name,value:item.id,key:index})\n         })\n         setOemUsers(users);\n        }else{\n          oemUpdatedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n    }\n    const getOemByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getOemByIdAPI,\n        {\n            oem_id:location.state.oem_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            let tempData = [];\n            if (responseData.status === 1) {\n            setName(responseData.data.name);\n            setAddress(responseData.data.address);\n            setContactPerson(responseData.data.contact_person);\n            setContactEmail(responseData.data.contact_email);\n            setContactNumber(responseData.data.contact_number);\n            setType(responseData.data.type);\n            setRemark1(responseData.data.remark_1);\n            setRemark2(responseData.data.remark_2);\n            responseData.data.users.map((item,index)=>{\n                tempData.push({label:item.name,value:item.id,key:index})\n            })\n            setSelectedOptions(tempData);\n            }else{\n              oemUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n\n    const updateOemAPICall = async(params) => {\n        setButtonDisabled(true);\n        const currentUser = getCurrentUser();\n        await axios.post(updateOemAPI,\n        params,\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n              history.push({\n                pathname:adminRoot+'/pages/oem',\n                state:{\n                  responseStatus:responseData.status,\n                  responseMsg:responseData.msg\n                }\n              })\n            }else{\n              setButtonDisabled(false);\n              oemUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            setButtonDisabled(false);\n            console.log(error);\n        })\n    }\n\n  //helper methods\n  //Alert helper methods\n  const oemUpdatedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Form Validation Schema\n  const OemDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Name is required\"),\n    address:yup.string()\n        .required(\"Address is required\"),\n    contact_person:yup.string()\n        .required(\"Contact Person is required\"),\n    contact_email:yup.string()\n        .email(\"Invalid Email format\")\n        .required(\"Contact email is required\"),\n    contact_number:yup.string()\n        .matches(/\\+?\\d[\\d -]{8,12}\\d/,\"Invalid contact number\")\n        .length(10,\"Invalid contact number length\")\n        .required(\"Contact number is required\"),\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update OEM</span>\n            <a href=\"oem\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> OEM List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            name:name,\n            address:address,\n            contact_person:contactPerson,\n            contact_email:contactEmail,\n            contact_number:contactNumber,\n            remark_1:remark1,\n            remark_2:remark2\n        }}\n        validationSchema={OemDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const usersSelected = [];\n          selectedOptions.map(item=>{\n            usersSelected.push(item.value)\n          })\n          const params = {\n            oem_id:location.state.oem_id,\n            name:values.name,\n            address:values.address,\n            contact_person:values.contact_person,\n            contact_email:values.contact_email,\n            contact_number:values.contact_number,\n            users:usersSelected,\n            type:type,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2\n          }\n          updateOemAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Address\"\n                                  name=\"address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={4}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Person\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Person\"\n                                  name=\"contact_person\"\n                                  value={values.contact_person}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_person && touched.contact_person ? \"input-error\":null}\n                                />\n                                {errors.contact_person && touched.contact_person &&(\n                                  <span className=\"error\">{errors.contact_person}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={4}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Email\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Email\"\n                                  name=\"contact_email\"\n                                  value={values.contact_email}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_email && touched.contact_email ? \"input-error\":null}\n                                />\n                                {errors.contact_email && touched.contact_email &&(\n                                  <span className=\"error\">{errors.contact_email}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={4}>\n                              <FormGroup>\n                                <Label>\n                                  Contact Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Contact Number\"\n                                  name=\"contact_number\"\n                                  value={values.contact_number}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.contact_number && touched.contact_number ? \"input-error\":null}\n                                />\n                                {errors.contact_number && touched.contact_number &&(\n                                  <span className=\"error\">{errors.contact_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  Users\n                                </Label>\n                                  <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={selectedOptions}\n                                    onChange={setSelectedOptions}\n                                    options={oemUsers}\n                                  />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  Battery\n                                </Label>\n                                <Input type=\"select\" onChange={(e)=>setType(e.target.value)} value={type}>\n                                    <option key={0} >Select</option>\n                                    <option key={1} value={1}>Battery</option>\n                                    <option key={2} value={2}>EV</option>\n                                    <option key={3} value={3}>Charger</option>\n                                </Input>\n                                </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default UpdateOEM;\n","import React, { useEffect, useState } from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  Input,InputGroup \n} from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getSwappingStationAPI,deleteSwappingStationAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\nconst SwappingStationMaster = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //station list\n  const [stationList,setStationList] = useState([]);\n  const [stationID,setStationID] = useState(\"\");\n  const [stationToDeleteId,setStationToDeleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getSwappingStationListAPI();\n    stationAlert();\n  },[stationID,pageCount])\n\n  //API calls\n  const getSwappingStationListAPI = async() => {\n    setStationList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getSwappingStationAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setStationList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteSwappingStationAPICall = async(stationId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteSwappingStationAPI,\n      {hub_master_id:stationId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setStationID(stationId);\n          stationDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          stationDeletedAlert(responseData.status,responseData.msg)\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updateSwappingStation = (stationId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updateswapping_station',\n      state:{station_id:stationId}\n    });\n  }\n\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const stationDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n\n  const stationAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (stationId) => {\n    setStationToDeleteId(stationId)\n    setModalVisible(!modalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getSwappingStationListAPI();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Swapping Station</span>\n            <a href=\"addswapping_station\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n            <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n            </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>EV Capacity</th>\n                    <th>Address</th>\n                    <th>City</th>\n                    <th>State</th>\n                    <th>Country</th>\n                    <th>Remark1</th>\n                    <th>Remark2</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {isLoading ?\n                    <tr>\n                        <td className=\"text-center\" colSpan=\"10\"><div className=\"custom-list-loading\" /></td>\n                    </tr> : \n                    stationList.length > 0 ?\n                      stationList.map((item,index)=>\n                        <tr key={item.hub_master_id}>\n                        <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                        <td>{item.name}</td>\n                        <td>{item.ev_capacity}</td>\n                        <td>{item.address}</td>\n                        <td>{item.city_name}</td>\n                        <td>{item.state_name}</td>\n                        <td>{item.country_name}</td>\n                        <td>{item.remark_1}</td>\n                        <td>{item.remark_2}</td>\n                        <td>\n                          <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateSwappingStation(item.hub_master_id)}}>\n                              <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                          </a>\n                          <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.hub_master_id)}}>\n                              <i className=\"glyph-icon simple-icon-trash\"></i>\n                          </Button>\n                        </td>\n                      </tr>\n                      ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"10\">Data  Not  Found</td>\n                      </tr>\n                  }\n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  Are you sure you would like to delete this station?\n                  <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteSwappingStationAPICall(stationToDeleteId)}>\n                    Delete Station \n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                    Cancel\n                  </Button>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default SwappingStationMaster;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,\n  Alert,\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {addSwappingStationAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst AddSwappingStation = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n  },[])\n\n  //API calls\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addSwappingStationAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addSwappingStationAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/swapping_station',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          stationAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n  //helper methods\n  //Alert helper methods\n  const stationAddedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    console.log(state);\n    getCityNamesAPICall(state);\n  }\n  //handle city select\n  const handleCitySelect = (city) => {\n    setCityId(city);\n  }\n  //Form Validation Schema\n  const StationDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Station name is required\"),\n    ev_capacity:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"EV capacity is required\"),\n    address:yup.string()\n        .required(\"Address is required\")\n  });\n\n  const initialValues = {\n    name:\"\",\n    ev_capacity:\"\",\n    latitude:\"\",\n    longitude:\"\",\n    address:\"\",\n    remark_1:\"\",\n    remark_2:\"\"\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Swapping Station</span>\n            <a href=\"swapping_station\" className=\"btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Swapping Station List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={StationDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n            name:values.name,\n            ev_capacity:values.ev_capacity,\n            latitude:values.latitude,\n            longitude:values.longitude,\n            address:values.address,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2,\n            country_id:countryId,\n            state_id:stateId,\n            city_id:cityId\n          }\n          addSwappingStationAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                EV Capacity\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"EV Capacity\"\n                                  value={values.ev_capacity}\n                                  name=\"ev_capacity\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.ev_capacity && touched.ev_capacity ? \"input-error\":null}\n                                />\n                                {errors.ev_capacity && touched.ev_capacity &&(\n                                  <span className=\"error\">{errors.ev_capacity}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  Country\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"country_id\"\n                                value={countryId}\n                                onChange={e=>handleCountrySelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select Country</option>\n                                  {countryList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.country_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  State\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"state_id\"\n                                value={stateId}\n                                onChange={e=>handleStateSelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select State</option>\n                                  {stateList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.state_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  City\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"city_id\"\n                                value={cityId}\n                                onChange={e=>handleCitySelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select City</option>\n                                  {cityList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.city_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Longitude\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  name=\"longitude\"\n                                  placeholder=\"Longitude\"\n                                  value={values.longitude}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Latitude\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  name=\"latitude\"\n                                  placeholder=\"Latitude\"\n                                  value={values.latitude}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"address\"\n                                  placeholder=\"Address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default AddSwappingStation;\n","import React,{useEffect, useState} from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,\n  Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {updateSwappingStationAPI,getStationByIdAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateSwappingStation = () => {\n  const history = useHistory();\n  const location = useLocation();\n  //states\n  const [stationName,setStationName] = useState(\"\");\n  const [evCapacity,setEvCapacity] = useState(\"\");\n  const [longitude,setLongitude] = useState(\"\");\n  const [latitude,setLatitude] = useState(\"\");\n  const [stationAddress,setStationAddress] = useState(\"\");\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n\n  useEffect(()=>{\n      getStationByIdAPICall();\n      getCountryNamesAPICall();\n  },[])\n\n  //API calls\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStationByIdAPICall = async() => {\n      const currentUser = getCurrentUser();\n      await axios.post(getStationByIdAPI,\n      {\n          hub_master_id:location.state.station_id\n      },\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n          const responseData = response.data;\n          if (responseData.status === 1) {\n          getStateNamesAPICall(responseData.data.country_id);\n          getCityNamesAPICall(responseData.data.state_id);\n          setStationName(responseData.data.name);\n          setStationAddress(responseData.data.address);\n          setEvCapacity(responseData.data.ev_capacity);\n          setLongitude(responseData.data.longitude);\n          setLatitude(responseData.data.latitude);\n          setRemark1(responseData.data.remark_1);\n          setRemark2(responseData.data.remark_2);\n          setCountryId(responseData.data.country_id);\n          setStateId(responseData.data.state_id);\n          setCityId(responseData.data.city_id);\n          }else{\n            stationUpdatedAlert(responseData.msg);\n          }\n      }).catch(error=>{\n          console.log(error);\n      })\n  }\n\n  const updateSwappingStationAPICall = async(params) => {\n      setButtonDisabled(true);\n      const currentUser = getCurrentUser();\n      await axios.post(updateSwappingStationAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n          const responseData = response.data;\n          if (responseData.status === 1) {\n            history.push({\n              pathname:adminRoot+'/pages/swapping_station',\n              state:{\n                responseStatus:responseData.status,\n                responseMsg:responseData.msg\n              }\n            })\n          }else{\n            setButtonDisabled(false);\n            stationUpdatedAlert(responseData.msg);\n          }\n      }).catch(error=>{\n          setButtonDisabled(false);\n          console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const stationUpdatedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    console.log(state);\n    getCityNamesAPICall(state);\n  }\n  //handle city select\n  const handleCitySelect = (city) => {\n    setCityId(city);\n  }\n  //Form Validation Schema\n  const StationDetailsValidationSchema = yup.object().shape({\n    name:yup.string()\n        .required(\"Station name is required\"),\n    ev_capacity:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"EV capacity is required\"),\n    address:yup.string()\n        .nullable()\n        .required(\"Address is required\")\n  });\n\n  \n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Swapping Station</span>\n            <a href=\"swapping_station\" className=\"btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Swapping Station List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true} \n        initialValues={{\n          name:stationName,\n          ev_capacity:evCapacity,\n          latitude:latitude,\n          longitude:longitude,\n          address:stationAddress,\n          remark_1:remark1,\n          remark_2:remark2\n        }}\n        validationSchema={StationDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n            hub_master_id: location.state.station_id,\n            name:values.name,\n            address:values.address,\n            ev_capacity:values.ev_capacity,\n            remark_1:values.remark_1,\n            remark_2:values.remark_2,\n            latitude:values.latitude,\n            longitude:values.longitude,\n            country_id:countryId,\n            state_id:stateId,\n            city_id:cityId\n          }\n          updateSwappingStationAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                          <Row>\n                          <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Name\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Name\"\n                                  name=\"name\"\n                                  value={values.name}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.name && touched.name ? \"input-error\":null}\n                                />\n                                {errors.name && touched.name &&(\n                                  <span className=\"error\">{errors.name}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                EV Capacity\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"EV Capacity\"\n                                  value={values.ev_capacity}\n                                  name=\"ev_capacity\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.ev_capacity && touched.ev_capacity ? \"input-error\":null}\n                                />\n                                {errors.ev_capacity && touched.ev_capacity &&(\n                                  <span className=\"error\">{errors.ev_capacity}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  Country\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"country_id\"\n                                value={countryId}\n                                onChange={e=>handleCountrySelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select Country</option>\n                                  {countryList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.country_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  State\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"state_id\"\n                                value={stateId}\n                                onChange={e=>handleStateSelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select State</option>\n                                  {stateList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.state_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md=\"4\">\n                              <FormGroup>\n                                <Label>\n                                  City\n                                </Label>\n                                <Input\n                                type=\"select\"\n                                name=\"city_id\"\n                                value={cityId}\n                                onChange={e=>handleCitySelect(e.target.value)}\n                                onBlur={handleBlur}\n                                >\n                                  <option key={0}>Select City</option>\n                                  {cityList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.city_name}</option>\n                                  )}\n                                </Input>\n                                {errors.country_id && touched.country_id &&(\n                                    <span className=\"error\">{errors.country_id}</span>\n                                )}\n                              </FormGroup>    \n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Longitude\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  name=\"longitude\"\n                                  placeholder=\"Longitude\"\n                                  value={values.longitude}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Latitude\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  name=\"latitude\"\n                                  placeholder=\"Latitude\"\n                                  value={values.latitude}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Address\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"address\"\n                                  placeholder=\"Address\"\n                                  value={values.address}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.address && touched.address ? \"input-error\":null}\n                                />\n                                {errors.address && touched.address &&(\n                                  <span className=\"error\">{errors.address}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Remark1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default UpdateSwappingStation;\n","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  Input,InputGroup\n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot, getFaultListAPI,deleteFaultAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\n\nconst FaultMaster = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //user states\n  const [faultList,setFaultList] = useState([]);\n  const [faultID,setFaultID] = useState(\"\");\n  const [faultToDeleleteId,setFaultToDeleleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getFaultListAPICall();\n    faultAlert();\n  },[pageCount,faultID])\n\n  //API CALLS\n  const getFaultListAPICall = async() => {\n    setFaultList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getFaultListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setFaultList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteFaultAPICall = async(faultId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteFaultAPI,\n      {fault_master_id:faultId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setFaultID(faultId);\n          faultDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  const updateFault = (faultId) => {\n    history.push({\n      pathname:adminRoot+'/pages/updatefault',\n      state:{fault_master_id:faultId}\n    });\n  }\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //ALert helper methods\n  const faultDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const faultAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (faultId) => {\n    setFaultToDeleleteId(faultId)\n    setModalVisible(!modalVisible);\n  }\n    //handle search input\n    const handleSearch = () => {\n        setPageCount(1);\n        getFaultListAPICall();\n    }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Fault</span>\n            <a href=\"addfault\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                  <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                    {alertMsg}\n                  </Alert>\n              </CardSubtitle> \n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Type</th>\n                    <th>OEM</th>\n                    <th>Position</th>\n                    <th>Fault title</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"6\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                  faultList.length > 0 ?\n                    faultList.map((item,index)=>\n                      <tr key={index}>\n                        <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index+1}</th>\n                        <td>{item.type===1?\"Battery\":item.type ===2?\"EV\":item.type ===3?\"Charger\":\"Connector\"}</td>\n                        <td>{item.oem_name}</td>\n                        <td>{item.bit_position}</td>\n                        <td>{item.title}</td>\n                        <td>\n                            <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateFault(item.id)}}>\n                                <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                            </a>\n                            <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                                <i className=\"glyph-icon simple-icon-trash\"></i>\n                            </Button>\n                        </td>\n                      </tr>\n                    ):<tr>\n                        <td className=\"text-center text-danger\" colSpan=\"6\">Data  Not  Found</td>\n                    </tr>\n                }   \n                </tbody>\n              </Table>\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  Are you sure you would like to delete this fault?\n                  <Button color=\"success\" className=\"mt-4\" onClick={()=>{deleteFaultAPICall(faultToDeleleteId)}}>\n                    Delete Fault\n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                    Cancel\n                  </Button>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default FaultMaster;\n","import React, { useState,useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot,getOemAPI,addFaultAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport { useHistory } from \"react-router-dom\";\n\nconst AddFault = () => {\n  const history = useHistory();\n  //dropdown state\n  const [oemList,setOemList] = useState([]);\n  const [oemId,setOemId] = useState(\"\");\n  const [type,setType] = useState(\"\");\n  //error flags\n  const [errorTypeFlag,setErrorTypeFlag] = useState(false);\n  const [errorOemFlag,setErrorOemFlag] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n\n  //API calls\n  const getOemAPICall = async(typeId) => {\n    setAlertVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:typeId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {          \n          setOemList(responseData.data);\n        }else{\n          setOemList([]);\n          faultAddedAlert(\"OEM data for selectd type not found\");\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const addFaultAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addFaultAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/pages/fault',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          faultAddedAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const faultAddedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //type select method\n  const handleTypeSelect = (typeValue) => {\n    setOemId(\"\");\n    setType(typeValue);\n    if (typeValue == 4) {\n      getOemAPICall(3);\n    } else {\n      getOemAPICall(typeValue); \n    }\n  }\n  //type blur\n  const handleTypeBlur = (typeValue) => {\n    setErrorTypeFlag(false);\n    if (typeValue == 0) {\n      setErrorTypeFlag(true);\n    }\n  }\n  //OEM select method\n  const handleOemSelect = (oemValue) => {\n    if (oemValue == 0) {\n      setOemId(\" \");\n    } else {\n      setOemId(oemValue); \n    }\n  }\n  //oem blur\n  const handleOemBlur = (oemValue) => {\n    setErrorOemFlag(false);\n    if (oemValue == 0) {\n      setErrorOemFlag(true);\n    }\n  }\n  //Form Validation Schema\n  const FaultDetailsValidationSchema = yup.object().shape({\n    title:yup.string()\n        .required(\"Fault title is required\"),\n    bit_position:yup.string()\n        .required(\"Position is required\"),\n  });\n\n  const initialValues = {\n    title:\"\",\n    bit_position:\"\",\n  };\n\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Fault</span>\n            <a href=\"fault\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Fault List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={FaultDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n            type:type,\n            title:values.title,\n            bit_position:values.bit_position,\n            oem_id:oemId\n          }\n          addFaultAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                        <Row>\n                          <Colxx md=\"12\">\n                            <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                              {alertMsg}\n                            </Alert>\n                          </Colxx>\n                          <Colxx sm={6}>\n                            <FormGroup>\n                              <Label>\n                                Type\n                              </Label>\n                              <Input \n                              type=\"select\" \n                              name=\"type\"\n                              value={type}\n                              onChange={(e)=>handleTypeSelect(e.target.value)}\n                              onBlur={(e)=>handleTypeBlur(e.target.value)}>\n                                  <option key={0} value={0}>Select</option>\n                                  <option key={1} value={1}>Battery</option>\n                                  <option key={2} value={2}>EV</option>\n                                  <option key={3} value={3}>Charger</option>\n                                  <option key={4} value={4}>Connector</option>\n                              </Input>\n                              {errorTypeFlag &&(\n                                  <span className=\"error\">Type is required</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  OEM\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"oem_id\"\n                                value={oemId}\n                                onChange={(e)=>handleOemSelect(e.target.value)}\n                                onBlur={(e)=>handleOemBlur(e.target.value)}>\n                                    <option key={0} value={0}>Select</option>\n                                    {oemList.map(item=>\n                                      <option key={item.oem_id} value={item.oem_id}>{item.name}</option>\n                                    )}\n                                </Input>\n                                {errorOemFlag &&(\n                                    <span className=\"error\">OEM is required</span>\n                                  )}   \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Fault Title\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Fault title \"\n                                  name=\"title\"\n                                  value={values.title}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.title && touched.title ? \"input-error\":null}\n                                />\n                                {errors.title && touched.title &&(\n                                  <span className=\"error\">{errors.title}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Position\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  placeholder=\"Position \"\n                                  name=\"bit_position\"\n                                  value={values.bit_position}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.bit_position && touched.bit_position ? \"input-error\":null}\n                                />\n                                {errors.bit_position && touched.bit_position &&(\n                                  <span className=\"error\">{errors.bit_position}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default AddFault;\n","import React, { useState,useEffect } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {adminRoot,getOemAPI,updateFaultAPI,getFaultByIdAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\nimport { useHistory,useLocation } from \"react-router-dom\";\n\nconst UpdateFault = () => {\n  const history = useHistory();\n  const location = useLocation();\n  //state\n  const [oemId,setOemId] = useState(\"\");\n  const [oemList,setOemList] = useState([]);\n  const [type,setType] = useState(0);\n  const [faultTitle,setFaultTitle] = useState(\"\");\n  const [position,setPosition] = useState(\"\");\n  //error flags\n  const [errorTypeFlag,setErrorTypeFlag] = useState(false);\n  const [errorOemFlag,setErrorOemFlag] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n\n  useEffect(()=>{\n      getFaultByIdAPICall();\n    },[])\n\n\n  //API calls\n  const getOemAPICall = async(typeId) => {\n    setAlertVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:typeId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {          \n          setOemList(responseData.data);\n        }else{\n          setOemList([]);\n          faultUpdatedAlert(\"OEM data for selectd type not found\");\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getFaultByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getFaultByIdAPI,\n        {\n            fault_master_id:location.state.fault_master_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n                setType(responseData.data.type);\n                responseData.data.type==4?getOemAPICall(3):getOemAPICall(responseData.data.type);\n                setOemId(responseData.data.oem_id);\n                setFaultTitle(responseData.data.title);\n                setPosition(responseData.data.bit_position);\n            }else{                \n              faultUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n\n    const updateFaultAPICall = async(params) => {\n        setButtonDisabled(true);\n        const currentUser = getCurrentUser();\n        await axios.post(updateFaultAPI,\n        params,\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n              history.push({\n                pathname:adminRoot+'/pages/fault',\n                state:{\n                  responseStatus:responseData.status,\n                  responseMsg:responseData.msg\n                }\n              })\n            }else{\n              setButtonDisabled(false);\n              faultUpdatedAlert(responseData.msg);\n            }\n        }).catch(error=>{\n            setButtonDisabled(false);\n            console.log(error);\n        })\n    }\n\n  //helper methods\n  //Alert helper methods\n  const faultUpdatedAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //type select method\n  const handleTypeSelect = (typeValue) => {\n    setOemId(\"\");\n    setType(typeValue);\n    if (typeValue == 4) {\n      getOemAPICall(3);\n    } else {\n      getOemAPICall(typeValue); \n    }\n  }\n  //type blur\n  const handleTypeBlur = (typeValue) => {\n    setErrorTypeFlag(false);\n    if (typeValue == 0) {\n      setErrorTypeFlag(true);\n    }\n  }\n  //OEM select method\n  const handleOemSelect = (oemValue) => {\n    if (oemValue == 0) {\n      setOemId(\" \");\n    } else {\n      setOemId(oemValue); \n    }\n  }\n  //oem blur\n  const handleOemBlur = (oemValue) => {\n    setErrorOemFlag(false);\n    if (oemValue == 0) {\n      setErrorOemFlag(true);\n    }\n  }\n  //Form Validation Schema\n  const FaultDetailsValidationSchema = yup.object().shape({\n    title:yup.string()\n        .required(\"Fault title is required\"),\n    bit_position:yup.string()\n        .required(\"Position is required\"),\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Fault</span>\n            <a href=\"fault\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Fault List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            title:faultTitle,\n            bit_position:position,\n        }}\n        validationSchema={FaultDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params = {\n              fault_master_id:location.state.fault_master_id,\n              type:type,\n              title:values.title,\n              oem_id:oemId,\n              bit_position:values.bit_position\n            }\n          updateFaultAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody> \n                        <Row>\n                          <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                                Type\n                              </Label>\n                              <Input type=\"select\" \n                              name=\"type\"\n                              value={type}\n                              onChange={(e)=>handleTypeSelect(e.target.value)}\n                              onBlur={(e)=>handleTypeBlur(e.target.value)}>\n                                  <option key={0} value={0}>Select</option>\n                                  <option key={1} value={1}>Battery</option>\n                                  <option key={2} value={2}>EV</option>\n                                  <option key={3} value={3}>Charger</option>\n                                  <option key={4} value={4}>Connector</option>\n                              </Input>\n                              {errorTypeFlag &&(\n                                  <span className=\"error\">Type is required</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx sm={6}>\n                              <FormGroup>\n                                <Label>\n                                  OEM\n                                </Label>\n                                <Input type=\"select\" \n                                name=\"oem_id\"\n                                value={oemId}\n                                onChange={(e)=>handleOemSelect(e.target.value)}\n                                onBlur={(e)=>handleOemBlur(e.target.value)}>\n                                    <option key={0} value={0}>Select</option>\n                                    {oemList.map((item,index)=>\n                                      <option key={index} value={item.oem_id}>{item.name}</option>\n                                    )}\n                                </Input>\n                                {errorOemFlag &&(\n                                    <span className=\"error\">OEM is required</span>\n                                  )}   \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Fault Title\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Fault title \"\n                                  name=\"title\"\n                                  value={values.title}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.title && touched.title ? \"input-error\":null}\n                                />\n                                {errors.title && touched.title &&(\n                                  <span className=\"error\">{errors.title}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Position\n                                </Label>\n                                <Input\n                                  type=\"number\"\n                                  placeholder=\"Position \"\n                                  name=\"bit_position\"\n                                  value={values.bit_position}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.bit_position && touched.bit_position ? \"input-error\":null}\n                                />\n                                {errors.bit_position && touched.bit_position &&(\n                                  <span className=\"error\">{errors.bit_position}</span>\n                                )}  \n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>  \n    </>\n  );\n};\n\nexport default UpdateFault;\n","import React, { useEffect, useState } from 'react';\nimport {\n    Row, FormGroup,Label,\n    Card, CardBody,CardSubtitle,\n    Modal, ModalHeader, ModalBody, ModalFooter, \n    Table, Button, \n    DropdownItem,DropdownMenu,DropdownToggle,Alert,UncontrolledDropdown,\n    Input,InputGroup \n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getCountryListAPI,getCountryByIdAPI,addCountryAPI,updateCountryAPI,deleteCountryAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst CountryMaster = ({ match }) => {\n    //alert states\n    const [alertVisible,setAlertVisible] = useState(false);\n    const [alertMsg,setAlertMsg] = useState(\"\");\n    const [alertColor,setAlertColor] = useState(\"\");\n    //search state\n    const [searchBy,setSearchBy] = useState(\"\");\n    //Pagination states\n    const [pageCount,setPageCount] = useState(\"1\");\n    const [lastPageCount,setLastPageCount] = useState(\"1\");\n    //flag to check whether data in list or not\n    const [listFlag,setListFlag] = useState(false);\n    //toggle to re-render page on add,updates,delete\n    const [toggleChange,setToggleChange] = useState(false);\n    //Modal States\n    const [modalVisible,setModalVisible] = useState(false);\n    const [modalUpdateVisible,setModalUpdateVisible] = useState(false);\n    //button state ... state 0 for add and 1 for update\n    const [buttonState,setButtonState] = useState();\n    //loader states\n    const [isLoading,setIsLoading] = useState(true);\n    //country list state\n    const [countryList,setCountryList] = useState([]);\n    const [countryId,setCountryId] = useState(\"\");\n    const [countryName,setCountryName] = useState(\"\");         \n\n    useEffect(()=>{\n        getCountryListAPICall();\n    },[pageCount,toggleChange])\n\n  //API CALLS\n  const getCountryListAPICall = async() => {\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getCountryListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setListFlag(true);\n            setLastPageCount(responseData.data.last_page);\n            setCountryList(responseData.data.data);\n        }else{\n            setListFlag(false);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n          setListFlag(false);\n        console.log(error);\n      })\n  }\n  const getCountryByIdAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(getCountryByIdAPI,\n    {country_master_id:params},\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n        setCountryId(responseData.data.id);\n        setCountryName(responseData.data.country_name);\n    }else{\n        countryAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const addCountryAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(addCountryAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n        countryAlert(responseData.status,responseData.msg);\n        setToggleChange(!toggleChange);\n    }else{\n        countryAlert(responseData.status,responseData.msg);\n        setToggleChange(!toggleChange);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const updateCountryAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(updateCountryAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n        countryAlert(responseData.status,responseData.msg);\n        setToggleChange(!toggleChange);\n    }else{\n        countryAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const deleteCountryAPICall = async(params) => {\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteCountryAPI,\n    {country_master_id:params},\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n        countryAlert(responseData.status,responseData.msg);\n        setToggleChange(!toggleChange);\n    }else{\n        countryAlert(responseData.status,responseData.msg);\n        setToggleChange(!toggleChange);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n\n  //helper methods\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const countryAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }              \n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Modal helper methods\n  const toggleModal = (countryId) => {\n      setCountryId(countryId);    \n      setModalVisible(!modalVisible);\n  }\n  const toggleUpdateModal = (status,country) => {\n      setButtonState(status);\n      if (status == 0) {\n          setCountryName(\"\");\n          setModalUpdateVisible(!modalUpdateVisible);   \n      } else {\n          getCountryByIdAPICall(country);\n          setModalUpdateVisible(!modalUpdateVisible);\n      }\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getCountryListAPICall();\n  }\n  //Form Validation Schema\n  const CountryDetailsValidationSchema = yup.object().shape({\n    country_name:yup.string()\n        .required(\"Country is required\"),\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Country</span>\n            <Button color=\"primary\" className=\"mt-2 default btn-sm float-right\" onClick={()=>toggleUpdateModal(0)}>\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </Button>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n          <div className=\"text-right mr-5 mb-2\">\n              <span className=\"ml-5\">Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}              \n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Country</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"3\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    listFlag?\n                        countryList.map((item,index)=>\n                          <tr key={index}>\n                            <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                            <td>{item.country_name}</td>\n                            <td>\n                              <Button color=\"info\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>toggleUpdateModal(1,item.id)}>\n                                  <i className=\"glyph-icon simple-icon-pencil\"></i>\n                              </Button>\n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>  \n                            </td>\n                          </tr>\n                        ):<tr>\n                            <td className=\"text-center text-danger\" colSpan=\"7\">Data  Not  Found</td>\n                        </tr>\n                }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Modal\n        isOpen={modalVisible}\n        toggle={toggleModal} >\n        <ModalHeader className=\"text-center\">\n          <Row>\n            <Colxx md=\"12\">\n              Are you sure you would like to delete this ?\n            </Colxx>\n            <Colxx md=\"12\">\n              <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteCountryAPICall(countryId)}>\n                Delete \n              </Button>{' '}\n              <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                Cancel\n              </Button>\n            </Colxx>\n          </Row>\n        </ModalHeader>\n      </Modal>\n      <Modal\n        isOpen={modalUpdateVisible}\n        toggle={toggleUpdateModal} >\n            <Formik\n                enableReinitialize={true}\n                initialValues={{\n                    country_name:countryName,\n                }}\n                validationSchema={CountryDetailsValidationSchema} \n                onSubmit={(values)=>{\n                    if (buttonState==0) {\n                        addCountryAPICall(values);\n                    } else {\n                        const params={country_master_id:countryId,country_name:values.country_name};\n                        updateCountryAPICall(params);\n                    }\n                }} >\n                {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n                    <>\n                    <ModalHeader>\n                        {buttonState==0?\"Add Country\":\"Update Country\"}\n                    </ModalHeader>  \n                    <ModalBody>\n                        <Row>\n                            <Colxx md=\"12\">\n                                <FormGroup>\n                                    <Label>\n                                     Country\n                                    </Label>\n                                    <Input\n                                    type=\"text\"\n                                    placeholder=\"Country\"\n                                    name=\"country_name\"\n                                    value={values.country_name}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    />\n                                    {errors.country_name && touched.country_name &&(\n                                        <span className=\"error\">{errors.country_name}</span>\n                                    )}\n                                </FormGroup>    \n                            </Colxx>\n                        </Row>\n                    </ModalBody>\n                    <ModalFooter>\n                    <Button color=\"success\" className=\"mt-4\" onClick={handleSubmit}>\n                        {buttonState==0?\"Add\":\"Update\"}\n                    </Button>{' '}\n                    <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={()=>toggleUpdateModal(0)}>\n                        Cancel\n                    </Button>\n                    </ModalFooter>\n                    </>\n                )}\n            </Formik>\n      </Modal>\n    </>\n  );\n};\nexport default CountryMaster;","import React, { useEffect, useState } from 'react';\nimport { \n  Row, FormGroup,Label,\n  Card, CardBody,CardSubtitle,\n  Modal, ModalHeader, ModalBody, ModalFooter, \n  Table, Button, \n  DropdownItem,DropdownMenu,DropdownToggle,Alert,UncontrolledDropdown,\n  Input,InputGroup \n} from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getStateListAPI,getCountriesAPI,getStateByIdAPI,addStateAPI,updateStateAPI,deleteStateAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst StateMaster = ({ match }) => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //flag to check whether data in list or not\n  const [listFlag,setListFlag] = useState(false);\n  //toggle to re-render page on add,updates,delete\n  const [toggleChange,setToggleChange] = useState(false);\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [modalUpdateVisible,setModalUpdateVisible] = useState(false);\n  //button state ... state 0 for add and 1 for update\n  const [buttonState,setButtonState] = useState();\n  //loader states\n  const [isLoading,setIsLoading] = useState(true);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  //default values state\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [stateName,setStateName] = useState(\"\");\n\n  useEffect(()=>{\n    getStateListAPICall();\n    getCountryNamesAPICall();\n  },[pageCount,toggleChange])\n\n  //API CALLS\n  const getStateListAPICall = async() => {\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getStateListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setListFlag(true);\n            setLastPageCount(responseData.data.last_page);\n            setStateList(responseData.data.data);\n        }else{\n            setListFlag(false);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n          setListFlag(false);\n        console.log(error);\n      })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n          stateAlert(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateByIdAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(getStateByIdAPI,\n    {state_master_id:params},\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n        setCountryId(responseData.data.country_id);\n        setStateId(responseData.data.id);\n        setStateName(responseData.data.state_name);\n    }else{\n        stateAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const addStateAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(addStateAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      setToggleChange(!toggleChange);\n      stateAlert(responseData.status,responseData.msg);\n    }else{\n      stateAlert(responseData.status,responseData.msg);\n        setToggleChange(!toggleChange);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const updateStateAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(updateStateAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      setToggleChange(!toggleChange);\n      stateAlert(responseData.status,responseData.msg);\n    }else{\n      stateAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const deleteStateAPICall = async(params) => {\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteStateAPI,\n    {state_master_id:params},\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      setToggleChange(!toggleChange);\n      stateAlert(responseData.status,responseData.msg);\n    }else{\n      stateAlert(responseData.status,responseData.msg);\n        setToggleChange(!toggleChange);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n\n  //helper methods\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const stateAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }            \n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }  \nconst toggleModal = (state) => {\n  setStateId(state);    \n  setModalVisible(!modalVisible);\n}\nconst toggleUpdateModal = (status,state) => {\n  setButtonState(status);\n  if (status == 0) {\n      setCountryId(\"\");\n      setStateName(\"\");\n      setModalUpdateVisible(!modalUpdateVisible);   \n  } else {\n      getStateByIdAPICall(state);\n      setModalUpdateVisible(!modalUpdateVisible);\n  }\n}\n//handle search input\nconst handleSearch = () => {\n  setPageCount(1);\n  getStateListAPICall();\n}\n  //Form Validation Schema\n  const StateDetailsValidationSchema = yup.object().shape({\n    country_id:yup.string()\n        .required(\"Country is required\"),\n    state_name:yup.string()\n        .required(\"State is required\"),\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">State</span>\n            <Button color=\"primary\" className=\"mt-2 default btn-sm float-right\" onClick={()=>toggleUpdateModal(0)}>\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </Button>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n          <div className=\"text-right mr-5 mb-2\">\n              <span className=\"ml-5\">Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}              \n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Country</th>\n                    <th>State</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"4\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    listFlag?\n                        stateList.map((item,index)=>\n                          <tr key={index}>\n                            <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                            <td>{item.country_name}</td>\n                            <td>{item.state_name}</td>\n                            <td>\n                              <Button color=\"info\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>toggleUpdateModal(1,item.id)}>\n                                  <i className=\"glyph-icon simple-icon-pencil\"></i>\n                              </Button>\n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>  \n                            </td>\n                          </tr>\n                        ):<tr>\n                            <td className=\"text-center text-danger\" colSpan=\"4\">Data  Not  Found</td>\n                        </tr>\n                           \n                      }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Modal\n        isOpen={modalVisible}\n        toggle={toggleModal} >\n        <ModalHeader className=\"text-center\">\n          <Row>\n            <Colxx md=\"12\">\n              Are you sure you would like to delete this ?\n            </Colxx>\n            <Colxx md=\"12\">\n              <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteStateAPICall(stateId)}>\n                Delete \n              </Button>{' '}\n              <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                Cancel\n              </Button>\n            </Colxx>\n          </Row>\n        </ModalHeader>\n      </Modal>\n      <Modal\n        isOpen={modalUpdateVisible}\n        toggle={toggleUpdateModal} >\n          <Formik\n              enableReinitialize={true}\n              initialValues={{\n                country_id:countryId,\n                state_name:stateName,\n              }}\n              validationSchema={StateDetailsValidationSchema} \n              onSubmit={(values)=>{\n                if (buttonState==0) {\n                  addStateAPICall(values);\n                } else {\n                  const params={state_master_id:stateId,country_id:values.country_id,state_name:values.state_name};\n                  updateStateAPICall(params);\n                }\n              }} >\n              {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n                  <>\n                  <ModalHeader>\n                  {buttonState==0?\"Add State\":\"Update State\"}\n                  </ModalHeader>  \n                  <ModalBody>\n                    <Row>\n                        <Colxx md=\"12\">\n                          <FormGroup>\n                            <Label>\n                              Country\n                            </Label>\n                            <Input\n                            type=\"select\"\n                            name=\"country_id\"\n                            value={values.country_id}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            >\n                              <option key={0}>Select Country</option>\n                              {countryList.map((item,index)=>\n                                <option key={index} value={item.id}>{item.country_name}</option>\n                              )}\n                            </Input>\n                            {errors.country_id && touched.country_id &&(\n                                <span className=\"error\">{errors.country_id}</span>\n                            )}\n                          </FormGroup>    \n                        </Colxx>\n                        <Colxx md=\"12\">\n                          <FormGroup>\n                              <Label>\n                                State\n                              </Label>\n                              <Input\n                              type=\"text\"\n                              placeholder=\"State\"\n                              name=\"state_name\"\n                              value={values.state_name}\n                              onChange={handleChange}\n                              onBlur={handleBlur}\n                              />\n                              {errors.state_name && touched.state_name &&(\n                                  <span className=\"error\">{errors.state_name}</span>\n                              )}\n                        </FormGroup>    \n                      </Colxx>\n                    </Row>\n                  </ModalBody>\n                  <ModalFooter>\n                  <Button color=\"success\" className=\"mt-4\" onClick={handleSubmit}>\n                    {buttonState==0?\"Add\":\"Update\"}\n                  </Button>{' '}\n                  <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={()=>toggleUpdateModal(0)}>\n                    Cancel\n                  </Button>\n                  </ModalFooter>\n                  </>\n              )}\n          </Formik>\n      </Modal>\n    </>\n  );\n};\nexport default StateMaster;\n","import React, { useEffect, useState } from 'react';\nimport { \n  Row, FormGroup,Label,\n  Card, CardBody,CardSubtitle,\n  Modal, ModalHeader, ModalBody, ModalFooter, \n  Table, Button, \n  DropdownItem,DropdownMenu,DropdownToggle,Alert,UncontrolledDropdown,\n  Input,InputGroup\n} from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getCountriesAPI,getStatesByCountryAPI,getCityListAPI,getCityByIdAPI,addCityAPI,updateCityAPI,deleteCityAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\n\nconst CityMaster = ({ match }) => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //flag to check whether data in list or not\n  const [listFlag,setListFlag] = useState(false);\n  //toggle to re-render page on add,updates,delete\n  const [toggleChange,setToggleChange] = useState(false);\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [modalUpdateVisible,setModalUpdateVisible] = useState(false);\n  //button state ... state 0 for add and 1 for update\n  const [buttonState,setButtonState] = useState();\n  //loader states\n  const [isLoading,setIsLoading] = useState(true);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  //default values state\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityName,setCityName] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n\n\n  useEffect(()=>{\n    getCityListAPICall();\n    getCountryNamesAPICall();\n  },[pageCount,toggleChange])\n\n  //API CALLS\n  const getCityListAPICall = async() => {\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getCityListAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setListFlag(true);\n          setLastPageCount(responseData.data.last_page);\n          setCityList(responseData.data.data);\n        }else{\n          setListFlag(false)\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        setListFlag(false)\n      })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            cityAlert(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n            cityAlert(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityByIdAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(getCityByIdAPI,\n    {city_master_id:params},\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      console.log(responseData.data);\n      getStateNamesAPICall(responseData.data.country_id);\n      setStateId(responseData.data.state_id);\n      setCountryId(responseData.data.country_id);\n      setCityName(responseData.data.city_name);\n      setCityId(responseData.data.id);\n    }else{\n        cityAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const addCityAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(addCityAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      setToggleChange(!toggleChange);\n      cityAlert(responseData.status,responseData.msg);\n    }else{\n      setToggleChange(!toggleChange);\n      cityAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const updateCityAPICall = async(params) => {\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(updateCityAPI,\n    params,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      setToggleChange(!toggleChange);\n      cityAlert(responseData.status,responseData.msg);\n    }else{\n      cityAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n  const deleteCityAPICall = async(params) => {\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteCityAPI,\n    {city_master_id:params},\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n    const responseData = response.data;\n    if (responseData.status === 1) {\n      setToggleChange(!toggleChange);\n      cityAlert(responseData.status,responseData.msg);\n    }else{\n      setToggleChange(!toggleChange);\n      cityAlert(responseData.status,responseData.msg);\n    }\n    }).catch(error=>{\n    console.log(error);\n    })\n  }\n\n  //helper methods\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const cityAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }              \n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Modal helper methods\n  const toggleModal = (city) => {\n    setCityId(city);    \n    setModalVisible(!modalVisible);\n  }\n  const toggleUpdateModal = (status,city) => {\n    setButtonState(status);\n    if (status == 0) {\n        setCountryId(\"\");\n        setStateId(\"\");\n        setCityName(\"\");\n        setStateList([]);\n        setModalUpdateVisible(!modalUpdateVisible);   \n    } else {\n      getCityByIdAPICall(city);\n      setModalUpdateVisible(!modalUpdateVisible);\n    }\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n    //   getChargerMappingAPICall();\n  }\n  //handle Country Select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    getStateNamesAPICall(country)\n  }\n  //Form Validation Schema\n  const CityDetailsValidationSchema = yup.object().shape({\n    state_id:yup.string()\n        .required(\"State is required\"),\n    city_name:yup.string()\n        .required(\"City is required\"),\n  });\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">City</span>\n            <Button color=\"primary\" className=\"mt-2 default btn-sm float-right\" onClick={()=>toggleUpdateModal(0)}>\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </Button>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n          <div className=\"text-right mr-5 mb-2\">\n              <span className=\"ml-5\">Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}              \n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Country</th>\n                    <th>State</th>\n                    <th>City</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"5\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    listFlag?\n                        cityList.map((item,index)=>\n                          <tr key={index}>\n                            <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                            <td>{item.country_name}</td>\n                            <td>{item.state_name}</td>\n                            <td>{item.city_name}</td>\n                            <td>\n                              <Button color=\"info\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>toggleUpdateModal(1,item.id)}>\n                                  <i className=\"glyph-icon simple-icon-pencil\"></i>\n                              </Button>\n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>  \n                            </td>\n                          </tr>\n                        ):<tr>\n                            <td className=\"text-center text-danger\" colSpan=\"5\">Data  Not  Found</td>\n                        </tr>\n                           \n                      }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Modal\n        isOpen={modalVisible}\n        toggle={toggleModal} >\n        <ModalHeader className=\"text-center\">\n          <Row>\n            <Colxx md=\"12\">\n              Are you sure you would like to delete this ?\n            </Colxx>\n            <Colxx md=\"12\">\n              <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteCityAPICall(cityId)}>\n                Delete \n              </Button>{' '}\n              <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                Cancel\n              </Button>\n            </Colxx>\n          </Row>\n        </ModalHeader>\n      </Modal>\n      <Modal\n        isOpen={modalUpdateVisible}\n        toggle={toggleUpdateModal} >\n          <Formik\n              enableReinitialize={true}\n              initialValues={{\n                state_id:stateId,\n                city_name:cityName,\n              }}\n              validationSchema={CityDetailsValidationSchema} \n              onSubmit={(values)=>{\n              console.log(values);\n              if (buttonState==0) {\n                addCityAPICall(values);\n              } else {\n                const params={city_master_id:cityId,state_id:values.state_id,city_name:values.city_name};\n                updateCityAPICall(params);\n              }\n              }} >\n              {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n                  <>\n                  <ModalHeader>\n                  {buttonState==0?\"Add City\":\"Update City\"}\n                  </ModalHeader>  \n                  <ModalBody>\n                    <Row>\n                        <Colxx md=\"12\">\n                          <FormGroup>\n                            <Label>\n                              Country\n                            </Label>\n                            <Input\n                            type=\"select\"\n                            name=\"country_id\"\n                            value={countryId}\n                            onChange={e=>handleCountrySelect(e.target.value)}\n                            onBlur={handleBlur}\n                            >\n                              <option key={0}>Select Country</option>\n                              {countryList.map((item,index)=>\n                                <option key={index} value={item.id}>{item.country_name}</option>\n                              )}\n                            </Input>\n                            {errors.country_id && touched.country_id &&(\n                                <span className=\"error\">{errors.country_id}</span>\n                            )}\n                          </FormGroup>    \n                        </Colxx>\n                        <Colxx md=\"12\">\n                          <FormGroup>\n                            <Label>\n                              State\n                            </Label>\n                            <Input\n                            type=\"select\"\n                            name=\"state_id\"\n                            value={values.state_id}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            >\n                              <option key={0}>Select State</option>\n                              {stateList.map((item,index)=>\n                                <option key={index} value={item.id}>{item.state_name}</option>\n                              )}\n                            </Input>\n                            {errors.state_id && touched.state_id &&(\n                                <span className=\"error\">{errors.state_id}</span>\n                            )}\n                          </FormGroup>    \n                        </Colxx>\n                        <Colxx md=\"12\">\n                          <FormGroup>\n                            <Label>\n                              City\n                            </Label>\n                            <Input\n                            type=\"text\"\n                            placeholder=\"City\"\n                            name=\"city_name\"\n                            value={values.city_name}\n                            onChange={handleChange}\n                            onBlur={handleBlur}\n                            />\n                            {errors.city_name && touched.city_name &&(\n                                <span className=\"error\">{errors.city_name}</span>\n                            )}\n                        </FormGroup>    \n                      </Colxx>\n                    </Row>\n                  </ModalBody>\n                  <ModalFooter>\n                  <Button color=\"success\" className=\"mt-4\" onClick={handleSubmit}>\n                  {buttonState==0?\"Add\":\"Update\"}\n                      </Button>{' '}\n                      <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={()=>toggleUpdateModal(0)}>\n                      Cancel\n                      </Button>\n                  </ModalFooter>\n                  </>\n              )}\n          </Formik>\n      </Modal>\n    </>\n  );\n};\nexport default CityMaster;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledButtonDropdown,\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\n\nimport {getStationsAPI,getDashboardDataAPI} from '../../../constants/defaultValues'\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport axios from 'axios';\nimport { ThemeColors } from '../../../helpers/ThemeColors';\nimport {ChargerDoughnut, setChargerChartData} from './operator/ChargerDoughnut';\nimport {ConnectorDoughnut,setConnectorChartData} from './operator/ConnectorDoughnut';\nimport {BatteryStatusChart,setBatteryChartData} from './operator/BatteryStatusChart';\nimport { IconCardsCarousel, setBatteriesCount, setChargerCount, setConnectorCount, setEVCount,setStationCount } from './manager/cardCarousel';\nimport {SwapChartCard,setSwapChartData,setshowSwapChart} from './manager/SwapChart';\nimport {EnergyChartCard,setEnergyChartData, setshowEnergyChart} from './manager/EnergyChart';\nimport {KPICards,setKPIChartData} from './manager/KPICards';\nimport { StationDoughnut,setStationChartData } from './manager/StationDoughnut';\nconst colors = ThemeColors();\n\nconst Admin_dashboard = () => {\n  //All station names\n  const [stationNameData,setStationNameData] = useState([]);\n  \n  //Swapping useStates\n  \n  const [swappingChartData,setSwappingChartData] = useState({}); //swapping chart data\n  const [swappingDropHeader,setSwappingDropHeader] = useState(\"All Stations\"); //swapping dropdown header\n  const [swappingStation,setSwappingStation] = useState('0'); //swapping chart dropdown\n  //Batteries useStates\n  \n  //Chargers useStates\n  const [chargerData,setChargerData] = useState({}); //charger card and chart data\n  \n  const [chargerStation,setChargerStation] = useState('0'); //chargers chart dropdown\n  //Slots useState\n  \n  const [slotStation,setSlotStation] = useState('0'); //slots chart dropdown\n\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n  },[])\n  useEffect(()=>{\n    GetDashboardDataAPICall();\n  },[swappingStation,chargerStation,slotStation])\n\n  //API call\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        //stationNamesData = responseData.data;\n        setStationNameData(responseData.data)\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const GetDashboardDataAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getDashboardDataAPI,\n    {\n     station_id:swappingStation\n    },\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n\n        setshowEnergyChart(true);\n        setshowSwapChart(true);\n        setStationCount(responseData.data.station.total);\n        setBatteriesCount(responseData.data.batteries.total)\n       \n        setChargerCount(responseData.data.chargers.total);\n       \n        setEVCount(responseData.data.ev.total);\n        setConnectorCount(responseData.data.slots.total);\n\n        setBatteryChartData(0,responseData.data.batteries.total,responseData.data.batteries.in_charging);\n        setBatteryChartData(1,responseData.data.batteries.total,responseData.data.batteries.charged);\n        setBatteryChartData(2,responseData.data.batteries.total,responseData.data.batteries.discharged);\n        setBatteryChartData(3,responseData.data.batteries.total,responseData.data.batteries.faulty);\n        setBatteryChartData(4,responseData.data.batteries.total,responseData.data.batteries.out);\n        \n        setChargerChartData(responseData.data.chargers.operational,responseData.data.chargers.faulty);\n        setConnectorChartData( responseData.data.slots.inuse,responseData.data.slots.available,responseData.data.slots.faulty);\n        setStationChartData(responseData.data.station.operational,responseData.data.station.faulty);\n        setChargerData(responseData.data.chargers);\n        setEnergyChartData(responseData);\n        setSwapChartData(responseData);\n       \n        setKPIChartData(0,abbreviateNumber(responseData.data.energy_sold.cumulative),abbreviateNumber(responseData.data.misc.unit_30)+\" in last 30 days\");\n        setKPIChartData(1,abbreviateNumber(responseData.data.energy_sold.avg_unit_per_ev_per_day),\"\");\n        setKPIChartData(2,responseData.data.swapping.daily,abbreviateNumber(responseData.data.misc.swap_30)+\" in last 30 days\");\n\n        setSwappingChartData({\n          labels: responseData.data.swapping.date,\n          datasets: [\n            {\n              label: 'Complete',\n              data: responseData.data.swapping.complete_swap_data,\n              borderColor: colors.themeColor1,\n              pointBackgroundColor: colors.foregroundColor,\n              pointBorderColor: colors.themeColor1,\n              pointHoverBackgroundColor: colors.themeColor1,\n              pointHoverBorderColor: colors.foregroundColor,\n              pointRadius: 6,\n              pointBorderWidth: 2,\n              pointHoverRadius: 8,\n              fill: false,\n            },\n            {\n              label: 'Incomplete',\n              data: responseData.data.swapping.incomplete_swap_data,\n              borderColor: colors.themeColor2,\n              pointBackgroundColor: colors.foregroundColor,\n              pointBorderColor: colors.themeColor2,\n              pointHoverBackgroundColor: colors.themeColor2,\n              pointHoverBorderColor: colors.foregroundColor,\n              pointRadius: 6,\n              pointBorderWidth: 2,\n              pointHoverRadius: 8,\n              fill: false,\n            },\n        ],\n        });\n               \n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const abbreviateNumber =(num)=>{\n   let fixed=0;\n    if (num === null) { return null; } // terminate early\n  if (num === 0) { return '0'; } // terminate early\n  fixed = (!fixed || fixed < 0) ? 0 : fixed; // number of decimal places to show\n  var b = (num).toPrecision(2).split(\"e\"), // get power\n      k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3), // floor at decimals, ceiling at trillions\n      c = k < 1 ? num.toFixed(0 + fixed) : (num / Math.pow(10, k * 3) ).toFixed(1 + fixed), // divide by power\n      d = c < 0 ? c : Math.abs(c), // enforce -0 is 0\n      e = d + ['', 'K', 'M', 'B', 'T'][k]; // append power\n  return e;\n  }\n  //dropdown handle methods\n \n  //swapping dropdown\n  const handleSwappingStationSelect =(e)=>{\n    setSwappingDropHeader(e.currentTarget.textContent);\n    setSwappingStation(e.target.value);\n  }\n \n  return (\n    <>\n     <Row>\n        <Colxx xxs=\"12\">\n         <span className=\"page_title\">Admin Dashboard</span>\n         <div className=\"btn-group float-right float-none-xs\">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                caret\n                color='primary'>\n                {swappingDropHeader}\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem header>Stations</DropdownItem>\n                <DropdownItem key={0} value={0} onClick={e=>handleSwappingStationSelect(e)}>All Stations</DropdownItem>\n                {stationNameData.map((item,i) =>\n                  <DropdownItem key={i} value={item.hub_master_id} onClick={e=>handleSwappingStationSelect(e)}>{item.name}</DropdownItem>\n                )}\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n         <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>     \n      <Row>\n        <Colxx lg=\"12\" xl=\"12\" md=\"12\">\n          <IconCardsCarousel />         \n        </Colxx>       \n      </Row>\n      <Row>\n        <Colxx lg=\"5\" xxs=\"12\" className=\"mb-5\">\n          <SwapChartCard />\n        </Colxx>\n        <Colxx lg=\"2\" xxs=\"12\" className=\"mb-2\">\n         <KPICards />\n        </Colxx>\n        <Colxx lg=\"5\" xxs=\"12\" className=\"mb-5\">\n          <EnergyChartCard />\n        </Colxx>\n      </Row>\n      <Row className=\"mb-12\">\n      <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n          <StationDoughnut />\n        </Colxx>\n        <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n          <ChargerDoughnut />\n        </Colxx>\n        <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n          <BatteryStatusChart cardClass=\"dashboard-progress\"  />\n        </Colxx>    \n        <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n          <ConnectorDoughnut />\n        </Colxx>       \n    </Row>\n    </>\n  );\n};\n\nexport default Admin_dashboard;","import React,{useState,useEffect} from 'react';\nimport { \n  Row,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledButtonDropdown,\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\n\nimport {getStationsAPI,getDashboardDataAPI} from '../../../constants/defaultValues'\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport axios from 'axios';\nimport { ThemeColors } from '../../../helpers/ThemeColors';\nimport {ChargerDoughnut, setChargerChartData} from './operator/ChargerDoughnut';\nimport {ConnectorDoughnut,setConnectorChartData} from './operator/ConnectorDoughnut';\nimport {BatteryStatusChart,setBatteryChartData} from './operator/BatteryStatusChart';\nimport { IconCardsCarousel, setBatteriesCount, setChargerCount, setConnectorCount, setEVCount,setStationCount } from './manager/cardCarousel';\nimport {SwapChartCard,setSwapChartData,setshowSwapChart} from './manager/SwapChart';\nimport {EnergyChartCard,setEnergyChartData, setshowEnergyChart} from './manager/EnergyChart';\nimport {KPICards,setKPIChartData} from './manager/KPICards';\nimport { StationDoughnut,setStationChartData } from './manager/StationDoughnut';\nconst colors = ThemeColors();\n\nconst Mgr_dashboard = () => {\n  //All station names\n  const [stationNameData,setStationNameData] = useState([]);\n  \n  //Swapping useStates\n  \n  const [swappingChartData,setSwappingChartData] = useState({}); //swapping chart data\n  const [swappingDropHeader,setSwappingDropHeader] = useState(\"All Stations\"); //swapping dropdown header\n  const [swappingStation,setSwappingStation] = useState('0'); //swapping chart dropdown\n  //Batteries useStates\n  \n  //Chargers useStates\n  const [chargerData,setChargerData] = useState({}); //charger card and chart data\n  \n  const [chargerStation,setChargerStation] = useState('0'); //chargers chart dropdown\n  //Slots useState\n  \n  const [slotStation,setSlotStation] = useState('0'); //slots chart dropdown\n\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n  },[])\n  useEffect(()=>{\n    GetDashboardDataAPICall();\n  },[swappingStation,chargerStation,slotStation])\n\n  //API call\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        //stationNamesData = responseData.data;\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const GetDashboardDataAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getDashboardDataAPI,\n    {\n     station_id:swappingStation\n    },\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n\n        setshowEnergyChart(true);\n        setshowSwapChart(true);\n        setStationCount(responseData.data.station.total);\n        setBatteriesCount(responseData.data.batteries.total)\n       \n        setChargerCount(responseData.data.chargers.total);\n       \n        setEVCount(responseData.data.ev.total);\n        setConnectorCount(responseData.data.slots.total);\n\n        setBatteryChartData(0,responseData.data.batteries.total,responseData.data.batteries.in_charging);\n        setBatteryChartData(1,responseData.data.batteries.total,responseData.data.batteries.charged);\n        setBatteryChartData(2,responseData.data.batteries.total,responseData.data.batteries.discharged);\n        setBatteryChartData(3,responseData.data.batteries.total,responseData.data.batteries.faulty);\n        setBatteryChartData(4,responseData.data.batteries.total,responseData.data.batteries.out);\n        \n        setChargerChartData(responseData.data.chargers.operational,responseData.data.chargers.faulty);\n        setConnectorChartData( responseData.data.slots.inuse,responseData.data.slots.available,responseData.data.slots.faulty);\n        setStationChartData(responseData.data.station.operational,responseData.data.station.faulty);\n        setChargerData(responseData.data.chargers);\n        setEnergyChartData(responseData);\n        setSwapChartData(responseData);\n       \n        setKPIChartData(0,abbreviateNumber(responseData.data.energy_sold.cumulative),abbreviateNumber(responseData.data.misc.unit_30)+\" in last 30 days\");\n        setKPIChartData(1,abbreviateNumber(responseData.data.energy_sold.avg_unit_per_ev_per_day),\"\");\n        setKPIChartData(2,responseData.data.swapping.daily,abbreviateNumber(responseData.data.misc.swap_30)+\" in last 30 days\");\n\n        setSwappingChartData({\n          labels: responseData.data.swapping.date,\n          datasets: [\n            {\n              label: 'Complete',\n              data: responseData.data.swapping.complete_swap_data,\n              borderColor: colors.themeColor1,\n              pointBackgroundColor: colors.foregroundColor,\n              pointBorderColor: colors.themeColor1,\n              pointHoverBackgroundColor: colors.themeColor1,\n              pointHoverBorderColor: colors.foregroundColor,\n              pointRadius: 6,\n              pointBorderWidth: 2,\n              pointHoverRadius: 8,\n              fill: false,\n            },\n            {\n              label: 'Incomplete',\n              data: responseData.data.swapping.incomplete_swap_data,\n              borderColor: colors.themeColor2,\n              pointBackgroundColor: colors.foregroundColor,\n              pointBorderColor: colors.themeColor2,\n              pointHoverBackgroundColor: colors.themeColor2,\n              pointHoverBorderColor: colors.foregroundColor,\n              pointRadius: 6,\n              pointBorderWidth: 2,\n              pointHoverRadius: 8,\n              fill: false,\n            },\n        ],\n        });\n               \n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n  const abbreviateNumber =(num)=>{\n   let fixed=0;\n    if (num === null) { return null; } // terminate early\n  if (num === 0) { return '0'; } // terminate early\n  fixed = (!fixed || fixed < 0) ? 0 : fixed; // number of decimal places to show\n  var b = (num).toPrecision(2).split(\"e\"), // get power\n      k = b.length === 1 ? 0 : Math.floor(Math.min(b[1].slice(1), 14) / 3), // floor at decimals, ceiling at trillions\n      c = k < 1 ? num.toFixed(0 + fixed) : (num / Math.pow(10, k * 3) ).toFixed(1 + fixed), // divide by power\n      d = c < 0 ? c : Math.abs(c), // enforce -0 is 0\n      e = d + ['', 'K', 'M', 'B', 'T'][k]; // append power\n  return e;\n  }\n  //dropdown handle methods\n \n  //swapping dropdown\n  const handleSwappingStationSelect =(e)=>{\n    setSwappingDropHeader(e.currentTarget.textContent);\n    setSwappingStation(e.target.value);\n  }\n \n  return (\n    <>\n     <Row>\n        <Colxx xxs=\"12\">\n         <span className=\"page_title\">Manager Dashboard</span>\n         <div className=\"btn-group float-right float-none-xs \">\n            <UncontrolledButtonDropdown>\n              <DropdownToggle\n                caret\n                color='primary'>\n                {swappingDropHeader}\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem header>Stations</DropdownItem>\n                <DropdownItem key={0} value={0} onClick={e=>handleSwappingStationSelect(e)}>All Stations</DropdownItem>\n                {stationNameData.map((item,i) =>\n                  <DropdownItem key={i} value={item.hub_master_id} onClick={e=>handleSwappingStationSelect(e)}>{item.name}</DropdownItem>\n                )}\n              </DropdownMenu>\n            </UncontrolledButtonDropdown>\n          </div>\n         <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>     \n      <Row>\n        <Colxx lg=\"12\" xl=\"12\" md=\"12\">\n          <IconCardsCarousel />         \n        </Colxx>       \n      </Row>\n      <Row>\n        <Colxx lg=\"5\" xxs=\"12\" className=\"mb-5\">\n          <SwapChartCard />\n        </Colxx>\n        <Colxx lg=\"2\" xxs=\"12\" className=\"mb-2\">\n         <KPICards />\n        </Colxx>\n        <Colxx lg=\"5\" xxs=\"12\" className=\"mb-5\">\n          <EnergyChartCard />\n        </Colxx>\n      </Row>\n      <Row className=\"mb-12\">\n      <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n        <StationDoughnut />\n      </Colxx>\n      <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n        <ChargerDoughnut />\n      </Colxx>\n      <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n        <BatteryStatusChart cardClass=\"dashboard-progress\"  />\n      </Colxx>    \n      <Colxx sm=\"12\" md=\"6\" lg=\"3\" className=\"mb-3\">\n        <ConnectorDoughnut />\n      </Colxx>       \n    </Row>\n    </>\n  );\n};\n\nexport default Mgr_dashboard;","import React, { useEffect, useState } from 'react';\nimport { Row, Card, CardBody,\n  Modal,ModalHeader, ModalBody, ModalFooter,\n  Table, Button, \n  DropdownItem,DropdownMenu,DropdownToggle,\n  Alert,\n  UncontrolledDropdown,\n  FormGroup,\n  Label,\n  Input,InputGroup \n} from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getStationsAPI,getEvInventoryByIdAPI,getEvMappingAPI,mapEvAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\n\nconst Evmapping = () => {\n  //default values in modal\n  const [evData,setEvData] = useState([]);\n  const [stationNameData,setStationNameData] = useState([]);\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n  const [selectedHub, setSelectedHub] = useState([]);\n  const [updateEvMappingId,setUpdateEvMappingId] = useState(false);\n  // list state\n  const [evList,setEvList] = useState([]);\n  const [evType,setEvType] = useState(\"All Ev\");\n  const [deleteEvMappingId,setDeleteEvMappingId] = useState(0);\n  const [isUpdate,setIsUpdate] = useState(0);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [modalUpdateVisible,setModalUpdateVisible] = useState(false);\n  const [isLoading,setIsLoading] = useState(true);\n  //alert states for update modal\n  const [alertModalVisible,setAlertModalVisible] = useState(false);\n  const [alertModalMsg,setAlertModalMsg] = useState(\"\");\n  const [alertModalColor,setAlertModalColor] = useState(\"\");\n\n  useEffect(()=>{\n    getEvMappingAPICall();\n  },[isUpdate,pageCount,evType]);\n\n  //API CALLS\n  const getEvMappingAPICall = async() => {\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getEvMappingAPI+pageCount+\"&ev_type=\"+evType+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setEvList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n          setEvList([]);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getEvInventoryByIdAPICall = async(evInventoryId) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getEvInventoryByIdAPI,\n      {ev_inventory_id:evInventoryId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setEvData(responseData.data);\n          setSelectedHub(responseData.data.hub_id);\n          setRemark1(responseData.data.remark_1);\n          setRemark2(responseData.data.remark_2)\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      });   \n  }\n  const mapEvAPICall = async(evMappingId,hubId,remark1,remark2) =>{\n    setModalVisible(false);\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(mapEvAPI,\n      {ev_inventory_id:evMappingId,hub_id:hubId,remark_1:remark1,remark_2:remark2},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n          const responseData = response.data;\n          if (responseData.status === 1) {\n            setIsUpdate(!isUpdate);\n            if (hubId==0) {\n              evMappingDeletedAlert(responseData.status,\"EV Unmapped Successfully\") \n            } else {\n              evMappingDeletedAlert(responseData.status,responseData.msg) \n            }\n          } else {\n            evMappingDeletedAlert(responseData.status,responseData.msg)\n          }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n\n  //helper methods\n  //Alert helper methods\n  const evMappingDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }              \n  }\n  const evModalAlert = (status,msg)=>{\n    setAlertModalVisible(true);\n    setAlertModalMsg(msg);\n    if (status === 1) {\n      setAlertModalColor(\"success\");\n    } else {\n      setAlertModalColor(\"danger\");\n    }              \n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Modal helper methods\n  const toggleModal = (item) => {\n    setRemark1(item.remark_1);\n    setRemark2(item.remark_2);\n    setDeleteEvMappingId(item.ev_inventory_id);\n    setModalVisible(!modalVisible);\n  }\n  const toggleUpdateModal = (item) => {\n    GetStationNamesAPICall();\n    getEvInventoryByIdAPICall(item.ev_inventory_id);\n    setUpdateEvMappingId(item.ev_inventory_id);\n    setModalUpdateVisible(!modalUpdateVisible);\n  }\n  // value input handle method\n  const updateEvMappingDetails = () =>{\n    if (selectedHub !=0) {\n      console.log(\"mapped\");\n      mapEvAPICall(updateEvMappingId,selectedHub,remark1,remark2)\n    } else {\n      evModalAlert(0,\"Station is required\");\n      return;  \n    } \n  }\n   //handle search input\n   const handleSearch = () => {\n      setPageCount(1);\n      getEvMappingAPICall();\n  }\n  \n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">EV Mapping</span>\n            <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n          <div className=\"text-right mr-5 mb-2\">\n              <span>EV Type : </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {evType}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                    <DropdownItem onClick={() => {setEvType('All Ev');setPageCount(1)}}>All</DropdownItem>\n                    <DropdownItem onClick={() => {setEvType('Mapped EV');setPageCount(1)}}>Mapped EV</DropdownItem>\n                    <DropdownItem onClick={() => {setEvType('Unmapped EV');setPageCount(1)}}>Unmapped EV</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span className=\"ml-5\">Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}              \n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert} className=\"mb-3\">\n            {alertMsg}\n          </Alert>\n          <Card className=\"mb-4\">\n            <CardBody>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>EV Id</th>\n                    <th>Swapping Station</th>\n                    <th>Remark1</th>\n                    <th>Remark2</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"6\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                  (evList.length > 0)?\n                    evList.map((item,index)=>\n                      <tr key={item.ev_inventory_id}>\n                        <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index+1}</th>\n                        <td>\n                            <p className=\"mb-0\"><b>QR Code: </b>{item.e_qr_code}</p>\n                            <p className=\"mb-0\"><b>Vehicle Model: </b>{item.vehicle_model}</p>\n                            <p className=\"mb-0\"><b>Vehicle Make: </b>{item.vehicle_make}</p>\n                            <p className=\"mb-0\"><b>Vehicle Type: </b>{item.vehicle_type}</p> \n                        </td>\n                        <td>{item.station_name}</td>\n                        <td>{item.remark_1}</td>\n                        <td>{item.remark_2}</td>\n                        <td>\n                          <Button color=\"info\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>toggleUpdateModal(item)}>\n                              <i className=\"glyph-icon simple-icon-pencil\"></i>\n                          </Button>\n                          {(item.hub_id > 0) && \n                          <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item)}}>\n                              <i className=\"glyph-icon simple-icon-trash\"></i>\n                          </Button>}\n                          \n                        </td>\n                      </tr>\n                    ):<tr>\n                        <td className=\"text-center text-danger\" colSpan=\"6\">Data  Not  Found</td>\n                    </tr>\n                  }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Modal\n        isOpen={modalVisible}\n        toggle={toggleModal} >\n        <ModalHeader className=\"text-center\">\n          Are you sure you would like to unmap this ev?\n          <Button color=\"success\" className=\"mt-4\" onClick={()=>mapEvAPICall(deleteEvMappingId,0,remark1,remark2)}>\n            Unmap\n          </Button>{' '}\n          <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n            Cancel\n          </Button>\n        </ModalHeader>\n      </Modal>\n      <Modal\n        isOpen={modalUpdateVisible}\n        toggle={toggleUpdateModal} >\n          <ModalHeader>\n            <Row>\n              <Colxx md=\"12\" className=\"mt-2 text-center\">\n              Update details\n              </Colxx>\n            </Row>\n          </ModalHeader>  \n          <ModalBody>\n            <Row>\n              <Colxx md=\"12\">\n                <Alert color={alertModalColor} isOpen={alertModalVisible} toggle={()=>setAlertModalVisible(false)}>\n                  {alertModalMsg}\n                </Alert>\n              </Colxx>\n              <Colxx sm={12}>\n                <FormGroup>\n                  <h5>\n                  EV details\n                  </h5>\n                  <Row>\n                    <Colxx md={12}>\n                      <b>Vehicle Vin : </b>{evData.vehicle_vin}\n                    </Colxx>\n                    <Colxx md={12}>\n                      <b>QR Code : </b>{evData.e_qr_code}\n                    </Colxx>\n                  </Row>  \n                </FormGroup>\n              </Colxx>\n              <Colxx md={12}>\n                <FormGroup>\n                  <Label>\n                  Swapping Station\n                  </Label>\n                  <Input \n                  type=\"select\" \n                  name=\"hub_id\" \n                  placeholder=\"Station\"\n                  value={selectedHub} onChange={(e)=>{setSelectedHub(e.target.value)}}>\n                    <option value=\"0\">Select Station</option>\n                    {stationNameData.map((item)=>\n                      <option value={item.hub_master_id} key={item.hub_master_id}>{item.name}</option>\n                    )}\n                  </Input>\n                </FormGroup>\n              </Colxx>\n              <Colxx md={12} sm={12}>\n                <FormGroup>\n                  <Label>\n                  Remark1\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Remark1\"\n                    value={remark1}\n                    onChange={(e)=>{setRemark1(e.target.value)}}\n                  />\n                </FormGroup>\n              </Colxx>\n              <Colxx md={12} sm={12}>\n                <FormGroup>\n                  <Label>\n                    Remark2\n                  </Label>\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Remark2\"\n                    value={remark2}\n                    onChange={(e)=>{setRemark2(e.target.value)}}\n                  />\n                </FormGroup>\n              </Colxx>\n            </Row>\n          </ModalBody>\n          <ModalFooter>\n          <Button color=\"success\" className=\"mt-4\" onClick={()=>updateEvMappingDetails()}>\n              Map\n            </Button>{' '}\n            <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleUpdateModal}>\n              Cancel\n            </Button>\n          </ModalFooter>\n      </Modal>\n    </>\n  );\n};\nexport default Evmapping;\n","import React, { useEffect, useState } from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {adminRoot,getStationsAPI,getEvInventoryByIdAPI,mapEvAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\n\nconst AddEvmapping = () => {\n  const [evData,setEvData] = useState([]);\n  const [stationNameData,setStationNameData] = useState([]);\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n  const [selectedHub, setSelectedHub] = useState([]);\n\n  const location = useLocation();\n  const history = useHistory();\n  \n  let evInventoryId = 0;\n  if (location.state !== null && location.state !== undefined && location.state.ev_inventory_id !== null && location.state.ev_inventory_id !== undefined) {\n      evInventoryId = location.state.ev_inventory_id;\n  }else{\n      history.goBack();\n  }\n  useEffect(()=>{\n    getEvInventoryByIdAPICall();\n  },[]);\n\n  //API CALLS\n  const getEvInventoryByIdAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getEvInventoryByIdAPI,{ev_inventory_id:evInventoryId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setEvData(responseData.data);\n          setSelectedHub(responseData.data.hub_id);\n          setRemark1(responseData.data.remark_1);\n          setRemark2(responseData.data.remark_2)\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      });   \n    await axios.get(getStationsAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setStationNameData(responseData.data)\n        }else{\n          console.log(responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })   \n  }\n  //\n  const submitEvData = () => {\n    const currentUser = getCurrentUser();\n    const postdata = {ev_inventory_id:evInventoryId,hub_id:selectedHub,remark_1:remark1,remark_2:remark2};\n    axios.post(mapEvAPI,postdata,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/mapping/evmapping',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          alert(responseData.msg);\n        }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add EV Mapping</span>\n            <a href=\"evmapping\" className=\"mt-2 btn-primary default btn-sm tbl_action_btn float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> EV Mapping List</b>\n            </a>\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card className=\"mb-4\">\n              <CardBody> \n                  <Row>\n                    <Colxx sm={12}>\n                      <FormGroup>\n                        <h5>\n                        EV details\n                        </h5>\n                        <Row>\n                          <Colxx sm={4}>\n                            <b>Vehicle Vin : </b>{evData.vehicle_vin}\n                          </Colxx>\n                          <Colxx sm={4}>\n                            <b>QR Code : </b>{evData.e_qr_code}\n                          </Colxx>\n                        </Row>  \n                        <Separator className=\"mb-3\" />                      \n                      </FormGroup>\n                    </Colxx>\n                    <Colxx md={4} sm={12}>\n                      <FormGroup>\n                        <Label>\n                        Swapping Station\n                        </Label>\n                        <Input type=\"select\" name=\"hub_id\" placeholder=\"Station\"\n                            value={selectedHub} onChange={(e)=>{setSelectedHub(e.target.value)}}>\n                            <option value=\"0\">Select Station</option>\n                            {stationNameData.map((item)=>\n                              <option value={item.hub_master_id} key={item.hub_master_id}>{item.name}</option>\n                            )}\n                          </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx md={4} sm={12}>\n                      <FormGroup>\n                        <Label>\n                        Remark1\n                        </Label>\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Remark1\"\n                          value={remark1}\n                          onChange={(e)=>{setRemark1(e.target.value)}}\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx md={4} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          Remark2\n                        </Label>\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Remark2\"\n                          value={remark2}\n                          onChange={(e)=>{setRemark2(e.target.value)}}\n                        />\n                      </FormGroup>\n                    </Colxx>\n                  </Row>\n                  <Row>\n                    <Colxx sm=\"12\" className=\"text-center\">\n                      <Button color=\"primary\" className=\"default mr-2\" onClick={submitEvData}>\n                          <b>Add</b>\n                      </Button>\n                      <Button color=\"light\" className=\"default\">\n                          <b>Cancel</b>\n                      </Button>\n                    </Colxx>\n                  </Row>\n              </CardBody>\n              </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default AddEvmapping;\n","import React, { useEffect, useState } from 'react';\nimport { Row, FormGroup,Label,Input,\n  Card, CardBody,CardSubtitle,\n  Modal, ModalHeader, ModalBody, ModalFooter, \n  Table, Button, DropdownItem,\n  DropdownMenu,\n  DropdownToggle,Alert,\n  UncontrolledDropdown,\n  InputGroup\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getStationsAPI,getEvInventoryByStationAPI,getBatteryMappingAPI,mapBatteryAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\n\nconst Batterymapping = () => {\n  //states\n  const [batteryMappingList,setBatteryMappingList] = useState([]);\n  const [batteryType,setBatteryType] = useState(\"All Battery\");\n  const [deleteBatteryId,setDeleteBatteryId] = useState(\"\");\n  const [updateBatteryId,setUpdateBatteryId] = useState(\"\");\n  const [isUpdate,setIsUpdate] = useState(false);\n  const [remark,setRemark] = useState(\"\");\n  //dropdown states\n  const [stationNameData,setStationNameData] = useState([]);\n  const [stationId,setStationId] = useState(\"\");\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  const [alertModalVisible,setAlertModalVisible] = useState(false);\n  const [alertModalMsg,setAlertModalMsg] = useState(\"\");\n  const [alertModalColor,setAlertModalColor] = useState(\"\");\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [modalUpdateVisible,setModalUpdateVisible] = useState(false);\n  const [isLoading,setIsLoading] = useState(true);\n\n  useEffect(()=>{\n    getBatteryMappingAPICall();\n  },[isUpdate,pageCount,batteryType]);\n\n  //API CALLS\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getBatteryMappingAPICall = async() => {\n    setBatteryMappingList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getBatteryMappingAPI+pageCount+\"&battery_type=\"+batteryType+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setBatteryMappingList(responseData.data.data);\n        }else{\n          setLastPageCount(pageCount);\n          setBatteryMappingList([]);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const mapBatteryAPICall = async(batteryId,hubId,remark) =>{\n    setModalVisible(false);\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(mapBatteryAPI,\n      {battery_inventory_id:batteryId,ev_inventory_id:0,hub_id:hubId,remark:remark},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n          const responseData = response.data;\n          if (responseData.status === 1) {\n            setIsUpdate(!isUpdate);\n            if (hubId==0) {\n              batteryDeletedAlert(responseData.status,\"Battery Unmapped Successfully\") \n            } else {\n              batteryDeletedAlert(responseData.status,responseData.msg) \n            }\n          }else{\n            batteryDeletedAlert(responseData.status,responseData.msg)\n          }\n          \n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  //helper methods\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const batteryDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }              \n  }\n  const batteryModalAlert = (status,msg)=>{\n    setAlertModalVisible(true);\n    setAlertModalMsg(msg);\n    if (status === 1) {\n      setAlertModalColor(\"success\");\n    } else {\n      setAlertModalColor(\"danger\");\n    }              \n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Modal helper methods\n  const toggleModal = (item) => {\n    setRemark(item.remark)\n    setDeleteBatteryId(item.battery_inventory_id);\n    setModalVisible(!modalVisible);\n  }\n  const toggleUpdateModal = (item) => {\n    GetStationNamesAPICall();\n    setStationId(item.hub_id);\n    setRemark(item.remark); \n    setUpdateBatteryId(item.battery_inventory_id);\n    setModalUpdateVisible(!modalUpdateVisible);\n  }\n  // value imput handle method\n  //station\n  const handleStationChange = (e) => {\n      setStationId(e.target.value);\n  }\n  const updateBatteryMappingDetails = () =>{\n    if (stationId !=0) {\n      mapBatteryAPICall(updateBatteryId,stationId,remark)\n    } else {\n      batteryModalAlert(0,\"Station is required\");\n      return;  \n    } \n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getBatteryMappingAPICall();\n  }\n  \n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Battery Mapping</span>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n          <div className=\"text-right mr-5 mb-2\">\n              <span>Battery Type : </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {batteryType}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                    <DropdownItem onClick={() => {setBatteryType('All Battery');setPageCount(1)}}>All</DropdownItem>\n                    <DropdownItem onClick={() => {setBatteryType('Mapped Battery');setPageCount(1)}}>Mapped Battery</DropdownItem>\n                    <DropdownItem onClick={() => {setBatteryType('Unmapped Battery');setPageCount(1)}}>Unmapped Battery</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span className=\"ml-5\">Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}              \n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Battery Name</th>\n                    <th>EV Id</th>\n                    <th>Swapping Station</th>\n                    <th>Remark</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"6\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    (batteryMappingList.length > 0)?\n                        batteryMappingList.map((item,index)=>\n                          <tr key={item.battery_inventory_id}>\n                            <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                            <td>\n                                <p className=\"mb-0\"><b>QR Code: </b>{item.b_qr_code}</p>\n                                <p className=\"mb-0\"><b>Serial No: </b>{item.serial_number}</p>\n                                <p className=\"mb-0\"><b>BIN: </b>{item.bin}</p>\n                                <p className=\"mb-0\"><b>SOC: </b>{item.soc}</p> \n                            </td>\n                            <td>{item.ev_inventory_id}</td>\n                            <td>{item.station_name}</td>\n                            <td>{item.remark}</td>\n                            <td>\n                              <Button color=\"info\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>toggleUpdateModal(item)}>\n                                  <i className=\"glyph-icon simple-icon-pencil\"></i>\n                              </Button>\n                              {(item.hub_id > 0) && \n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>}\n                              \n                            </td>\n                          </tr>\n                        ):<tr>\n                            <td className=\"text-center text-danger\" colSpan=\"6\">Data  Not  Found</td>\n                        </tr>\n                      }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Modal\n        isOpen={modalVisible}\n        toggle={toggleModal} >\n        <ModalHeader className=\"text-center\">\n          <Row>\n            <Colxx md=\"12\">\n              Are you sure you would like to delete this?\n            </Colxx>\n            <Colxx md=\"12\">\n              <Button color=\"success\" className=\"mt-4\" onClick={()=>mapBatteryAPICall(deleteBatteryId,0,remark)}>\n                Unmap \n              </Button>{' '}\n              <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                Cancel\n              </Button>\n            </Colxx>\n          </Row>\n        </ModalHeader>\n      </Modal>\n      <Modal\n        isOpen={modalUpdateVisible}\n        toggle={toggleUpdateModal} >\n          <ModalHeader>\n            Update\n          </ModalHeader>  \n          <ModalBody>\n            <Row>\n              <Colxx md=\"12\">\n                <Alert color={alertModalColor} isOpen={alertModalVisible} toggle={()=>setAlertModalVisible(false)}>\n                  {alertModalMsg}\n                </Alert>\n              </Colxx>\n              <Colxx md=\"12\">\n                <FormGroup>\n                  <Label>\n                    Swapping Station\n                  </Label>\n                  <Input\n                  type=\"select\"\n                  placeholder=\"Select\"\n                  name=\"hub_id\"\n                  value={stationId}\n                  onChange={e=>handleStationChange(e)}\n                  >\n                    <option value={0} key={0}>Select Station</option>\n                    {stationNameData.map((item)=>\n                      <option value={item.hub_master_id} key={item.hub_master_id}>{item.name}</option>\n                    )}\n                  </Input>\n                </FormGroup>\n              </Colxx>\n              <Colxx md=\"12\">\n                  <FormGroup>\n                    <Label>\n                      Remark\n                    </Label>\n                    <Input\n                    type=\"text\"\n                    placeholder=\"Remark\"\n                    name=\"remark\"\n                    value={remark}\n                    onChange={e=>setRemark(e.target.value)}\n                    />\n                  </FormGroup>\n                </Colxx>\n            </Row>\n          </ModalBody>\n          <ModalFooter>\n          <Button color=\"success\" className=\"mt-4\" onClick={()=>updateBatteryMappingDetails()}>\n              Update\n            </Button>{' '}\n            <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleUpdateModal}>\n              Cancel\n            </Button>\n          </ModalFooter>\n      </Modal>\n    </>\n  );\n};\nexport default Batterymapping;\n","import React from 'react';\nimport { \n  Row,FormGroup, Card, CardBody,\n  Label,Input, Button\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\n\nconst AddBatterymapping = () => {\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Battery Mapping</span>\n            <a href=\"batterymapping\" className=\"mt-2 btn-primary default btn-sm tbl_action_btn float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Battery Mapping List</b>\n            </a>\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card>\n            <CardBody>\n                <Row>\n                  <Colxx sm={12}>\n                    <FormGroup>\n                      <Label>\n                      Swapping Station\n                      </Label>\n                      <Input type=\"select\">\n                        <option>Select</option>\n                        <option>station1</option>\n                        <option>station2</option>\n                        <option>station3</option>\n                      </Input>\n                    </FormGroup>\n                  </Colxx>\n                  <Colxx sm={6}>\n                      <FormGroup>\n                        <Label>\n                        Remark1\n                        </Label>\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Remark1\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx sm={6}>\n                      <FormGroup>\n                        <Label>\n                          Remark2\n                        </Label>\n                        <Input\n                          type=\"text\"\n                          placeholder=\"Remark2\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                </Row>\n                <Row>\n                    <Colxx sm=\"12\" className=\"text-center\">\n                      <Button color=\"primary\" className=\"default mr-2\">\n                          <b>Add</b>\n                      </Button>\n                      <Button color=\"light\" className=\"default\">\n                          <b>Cancel</b>\n                      </Button>\n                    </Colxx>\n                  </Row>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default AddBatterymapping;\n","import React, { useEffect, useState } from 'react';\nimport { Row, FormGroup,Label,Input,\n  Card, CardBody,CardSubtitle,\n  Modal, ModalHeader, ModalBody, ModalFooter, \n  Table, Button, DropdownItem,\n  DropdownMenu,\n  DropdownToggle,Alert,\n  UncontrolledDropdown,\n  InputGroup \n} from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getStationsAPI,getChargerMappingAPI,mapChargerAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\n\nconst Chargermapping = () => {\n  //states\n  const [chargerMappingList,setChargerMappingList] = useState([]);\n  const [chargerType,setChargerType] = useState(\"All Charger\");\n  const [deleteChargerId,setDeleteChargerId] = useState(\"\");\n  const [updateChargerId,setUpdateChargerId] = useState(false);\n  const [isUpdate,setIsUpdate] = useState(0);\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n  //dropdown states\n  const [stationNameData,setStationNameData] = useState([]);\n  const [stationId,setStationId] = useState(\"\");\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //alert states for update modal\n  const [alertModalVisible,setAlertModalVisible] = useState(false);\n  const [alertModalMsg,setAlertModalMsg] = useState(\"\");\n  const [alertModalColor,setAlertModalColor] = useState(\"\");\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [modalUpdateVisible,setModalUpdateVisible] = useState(false);\n  const [isLoading,setIsLoading] = useState(true);\n\n  useEffect(()=>{\n    getChargerMappingAPICall();\n  },[isUpdate,pageCount,chargerType]);\n\n  //API CALLS\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getChargerMappingAPICall = async() => {\n    setChargerMappingList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getChargerMappingAPI+pageCount+\"&charger_type=\"+chargerType+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setChargerMappingList(responseData.data.data);\n        }else{\n          setLastPageCount(pageCount);\n          setChargerMappingList([]);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const mapChargerAPICall = async(chargerId,hubId,remark1,remark2) =>{\n    setModalVisible(false);\n    setModalUpdateVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(mapChargerAPI,\n      {charger_inventory_id:chargerId,hub_id:hubId,remark_1:remark1,remark_2:remark2},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n          const responseData = response.data;\n          if (responseData.status === 1) {\n            setIsUpdate(!isUpdate);\n            if (hubId==0) {\n              chargerDeletedAlert(responseData.status,\"Charger Unmapped Successfully\") \n            } else {\n              chargerDeletedAlert(responseData.status,responseData.msg) \n            }\n          }else{\n            chargerDeletedAlert(responseData.status,responseData.msg)\n          }\n          \n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  //helper methods\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const chargerDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }              \n  }\n  const chargerModalAlert = (status,msg)=>{\n    setAlertModalVisible(true);\n    setAlertModalMsg(msg);\n    if (status === 1) {\n      setAlertModalColor(\"success\");\n    } else {\n      setAlertModalColor(\"danger\");\n    }              \n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Modal helper methods\n  const toggleModal = (item) => {\n    setRemark1(item.remark_1);\n    setRemark2(item.remark_2);\n    setDeleteChargerId(item.id);\n    setModalVisible(!modalVisible);\n  }\n  const toggleUpdateModal = (item) => {\n    GetStationNamesAPICall();\n    setStationId(item.hub_id);\n    setRemark1(item.remark_1);\n    setRemark2(item.remark_2);\n    setUpdateChargerId(item.id);\n    setModalUpdateVisible(!modalUpdateVisible);\n  }\n  // value input handle method\n  const updateChargerMappingDetails = () =>{\n    if (stationId !=0) {\n      mapChargerAPICall(updateChargerId,stationId,remark1,remark2)\n    } else {\n      chargerModalAlert(0,\"Station is required\");\n      return;  \n    } \n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getChargerMappingAPICall();\n  }\n  \n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Charger Mapping</span>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n          <div className=\"text-right mr-5 mb-2\">\n              <span>Charger Type : </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {chargerType}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                    <DropdownItem onClick={() => {setChargerType('All Charger');setPageCount(1)}}>All</DropdownItem>\n                    <DropdownItem onClick={() => {setChargerType('Mapped Charger');setPageCount(1)}}>Mapped Charger</DropdownItem>\n                    <DropdownItem onClick={() => {setChargerType('Unmapped Charger');setPageCount(1)}}>Unmapped Charger</DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span className=\"ml-5\">Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}              \n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                  {alertMsg}\n                </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Charger Name</th>\n                    <th>Charger Id </th>\n                    <th>Swapping Station</th>\n                    <th>Remark 1</th>\n                    <th>Remark 2</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"7\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                    (chargerMappingList.length > 0)?\n                        chargerMappingList.map((item,index)=>\n                          <tr key={item.id}>\n                            <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                            <td>\n                                <p className=\"mb-0\"><b>QR Code: </b>{item.qr_code}</p>\n                                <p className=\"mb-0\"><b>No of Slot: </b>{item.no_of_slot}</p> \n                                <p className=\"mb-0\"><b>Make: </b>{item.make}</p>\n                                <p className=\"mb-0\"><b>Model: </b>{item.model}</p>\n                                <p className=\"mb-0\"><b>Dimension: </b>{item.dimension}</p>\n                                <p className=\"mb-0\"><b>Owner Name: </b>{item.owner_name}</p>  \n                            </td>\n                            <td>{item.charger_id}</td>\n                            <td>{item.station_name}</td>\n                            <td>{item.remark_1}</td>\n                            <td>{item.remark_2}</td>\n                            <td>\n                              <Button color=\"info\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>toggleUpdateModal(item)}>\n                                  <i className=\"glyph-icon simple-icon-pencil\"></i>\n                              </Button>\n                              {(item.hub_id > 0) && \n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>}  \n                            </td>\n                          </tr>\n                        ):<tr>\n                            <td className=\"text-center text-danger\" colSpan=\"7\">Data  Not  Found</td>\n                        </tr>\n                      }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Modal\n        isOpen={modalVisible}\n        toggle={toggleModal} >\n        <ModalHeader className=\"text-center\">\n          <Row>\n            <Colxx md=\"12\">\n              Are you sure you would like to unmap this?\n            </Colxx>\n            <Colxx md=\"12\">\n              <Button color=\"success\" className=\"mt-4\" onClick={()=>mapChargerAPICall(deleteChargerId,0,remark1,remark2)}>\n                Unmap \n              </Button>{' '}\n              <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                Cancel\n              </Button>\n            </Colxx>\n          </Row>\n        </ModalHeader>\n      </Modal>\n      <Modal\n        isOpen={modalUpdateVisible}\n        toggle={toggleUpdateModal} >\n          <ModalHeader>\n            Update\n          </ModalHeader>  \n          <ModalBody>\n            <Row>\n              <Colxx md=\"12\">\n                <Alert color={alertModalColor} isOpen={alertModalVisible} toggle={()=>setAlertModalVisible(false)}>\n                  {alertModalMsg}\n                </Alert>\n              </Colxx>\n              <Colxx md=\"12\">\n                <FormGroup>\n                  <Label>\n                    Swapping Station\n                  </Label>\n                  <Input\n                  type=\"select\"\n                  placeholder=\"Select\"\n                  name=\"hub_id\"\n                  value={stationId}\n                  onChange={e=>setStationId(e.target.value)}\n                  >\n                    <option value={0} key={0}>Select Station</option>\n                    {stationNameData.map((item)=>\n                      <option value={item.hub_master_id} key={item.hub_master_id}>{item.name}</option>\n                    )}\n                  </Input>\n                </FormGroup>\n              </Colxx>\n              <Colxx md=\"12\">\n                <FormGroup>\n                  <Label>\n                    Remark 1\n                  </Label>\n                  <Input\n                  type=\"text\"\n                  placeholder=\"Remark 1\"\n                  name=\"remark_1\"\n                  value={remark1}\n                  onChange={e=>setRemark1(e.target.value)}\n                  />\n                </FormGroup>\n              </Colxx>\n              <Colxx md=\"12\">\n                <FormGroup>\n                  <Label>\n                    Remark 2\n                  </Label>\n                  <Input\n                  type=\"text\"\n                  placeholder=\"Remark 2\"\n                  name=\"remark_2\"\n                  value={remark2}\n                  onChange={e=>setRemark2(e.target.value)}\n                  />\n                </FormGroup>\n              </Colxx>\n            </Row>\n          </ModalBody>\n          <ModalFooter>\n          <Button color=\"success\" className=\"mt-4\" onClick={()=>updateChargerMappingDetails()}>\n              Update\n            </Button>{' '}\n            <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleUpdateModal}>\n              Cancel\n            </Button>\n          </ModalFooter>\n      </Modal>\n    </>\n  );\n};\nexport default Chargermapping;\n","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Table, Button,\n  Input,InputGroup \n} from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getSwappingStationAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory} from 'react-router-dom';\n\nconst Stationmapping = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //station list\n  const [stationList,setStationList] = useState([]);\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  useEffect(()=>{\n    getSwappingStationListAPI();\n  },[pageCount])\n\n  //API calls\n  const getSwappingStationListAPI = async() => {\n    setStationList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getSwappingStationAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setStationList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n   //Helper methods\n   const mapStation = (hubId) => {\n    history.push({\n      pathname:adminRoot+'/mapping/stationmapping',\n      state:{hub_id:hubId}\n    });\n  }\n\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const stationAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getSwappingStationListAPI();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Station</span>\n            <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                  <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                    {alertMsg}\n                  </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>Name</th>\n                    <th>EV Capacity</th>\n                    <th>Address</th>\n                    <th>Remark1</th>\n                    <th>Remark2</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"8\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                  (stationList.length>0)?\n                      stationList.map((item,index)=>\n                      <tr key={item.hub_master_id}>\n                      <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                      <td>{item.name}</td>\n                      <td>{item.ev_capacity}</td>\n                      <td>{item.address}</td>\n                      <td>{item.remark_1}</td>\n                      <td>{item.remark_2}</td>\n                      <td>\n                      <Button color=\"primary\" className=\"btn-primary default mr-1 btn-sm tbl_action_a\" onClick={()=>mapStation(item.hub_master_id)}>\n                            <b><i className=\"glyph-icon iconsminds-repeat-2\"></i> Map</b>\n                      </Button>\n                      </td>\n                    </tr>\n                    )\n                    :<tr>\n                        <td className=\"text-center text-danger\" colSpan=\"8\">Data  Not  Found</td>\n                    </tr>\n                  }\n                </tbody>\n              </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default Stationmapping;\n","import React, { useEffect, useState } from 'react';\nimport { \n  Card, CardBody, \n  CardHeader, CardTitle,\n  FormGroup,\n  Alert,\n  Row, Button, Input,Table,\n  Modal,ModalHeader\n} from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getFleetOperatorMappingListAPI,getUserMappingListByRoleAPI,mapFleetOperatorAPI,mapByRoleAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useLocation} from 'react-router-dom';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst StationDetail = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  const [unmapAlertVisible,setUnmapAlertVisible] = useState(false);\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //flag to dislpay list\n  const [listFlag,setListFlag] = useState(0);\n  //button selected\n  const [fleetOutline,setFleetOutline] = useState(false); //if outline false then button selected\n  const [operatorOutline,setOperatorOutline] = useState(true);\n  const [managerOutline,setManagerOutline] = useState(true);\n  //user role\n  const [userRole,setUserRole] = useState(\"Fleet Operator\");\n  //fleet/operator/manager id to map\n  const [mappingId,setMappingId] = useState(\"0\");\n  //fleet/operator/manager id to Unmap\n  const [unmapId,setUnmapId] = useState(\"\");\n   //map-unmap list\n   const [mappedList,setMappedList] = useState([]);\n   const [unmappedList,setUnmappedList] = useState([]);\n   //set id for unmap\n   const [isUpdate,setIsUpdate] = useState(false);\n\n   const location = useLocation();\n\n   useEffect(()=>{\n    getMappingListByRoleAPICall();\n  },[isUpdate,userRole])\n\n  //API calls\n  const getMappingListByRoleAPICall = async() => {\n    setMappedList([]);\n    setUnmappedList([]);\n    switch (userRole) {\n      case \"Fleet Operator\":\n        getFleetOperatorMappingListAPICall();\n        break;\n      case \"Operator\":\n        getOperatorMappingListAPICall();\n        break;\n      case \"Manager\":\n      getManagerMappingListAPICall();\n      break;\n      default:\n        getFleetOperatorMappingListAPICall();\n        break;\n    }\n  }\n  const getFleetOperatorMappingListAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getFleetOperatorMappingListAPI,\n      {hub_id:location.state.hub_id},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setMappedList(responseData.data.mapped_fleet_operator);\n          setUnmappedList(responseData.data.other_fleet_operator);\n          if (responseData.data.mapped_fleet_operator.length>0) {\n            setListFlag(responseData.status);\n          }else{\n            setListFlag(0);\n          }\n        }else{\n          setListFlag(responseData.status);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getOperatorMappingListAPICall = async() => {\n    setMappedList([]);\n    const currentUser = getCurrentUser();\n    await axios.post(getUserMappingListByRoleAPI,\n      {user_role:\"Operator\",hub_id:location.state.hub_id},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setMappedList(responseData.data.mapped_user);\n          setUnmappedList(responseData.data.other_user);\n          if (responseData.data.mapped_user.length>0) {\n            setListFlag(responseData.status);\n          }else{\n            setListFlag(0);\n          }\n        }else{\n          setListFlag(responseData.status);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getManagerMappingListAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getUserMappingListByRoleAPI,\n      {user_role:\"Manager\",hub_id:location.state.hub_id},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setMappedList(responseData.data.mapped_user);\n          setUnmappedList(responseData.data.other_user);\n          if (responseData.data.mapped_user.length>0) {\n            setListFlag(responseData.status);\n          }else{\n            setListFlag(0);\n          }\n        }else{\n          setListFlag(responseData.status);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const MapByRoleAPICall = async(stationId,idToMap,mapstate) => {\n    switch (userRole) {\n      case \"Fleet Operator\":\n        MapStationWithFleetAPICall(stationId,idToMap,mapstate);\n        break;\n      case \"Operator\":\n        MapStationWithOperatorAPICall(stationId,idToMap,mapstate);\n        break;\n      case \"Manager\":\n      MapStationWithManagerAPICall(stationId,idToMap,mapstate);\n      break;\n    }\n  }\n  const MapStationWithFleetAPICall = async(stationId,fleetId,mapstate) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(mapFleetOperatorAPI,\n      {hub_id:stationId,fleet_operator_id:fleetId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setIsUpdate(!isUpdate);\n          if (mapstate==1) {\n            mapAlert(responseData.status,responseData.msg);\n          }else{\n            unMapAlert(responseData.status,\"Station Unmapped Successfully\");\n          }\n        }else{\n          mapAlert(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const MapStationWithOperatorAPICall = async(stationId,userId,mapstate) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(mapByRoleAPI,\n      {hub_id:stationId,user_id:userId,user_role:\"Operator\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setIsUpdate(!isUpdate);\n          if (mapstate==1) {\n            mapAlert(responseData.status,responseData.msg);\n          }else{\n            unMapAlert(responseData.status,\"Unmapped Successfully\");\n          }\n        }else{\n          mapAlert(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const MapStationWithManagerAPICall = async(stationId,userId,mapstate) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(mapByRoleAPI,\n      {hub_id:stationId,user_id:userId,user_role:\"Manager\"},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setIsUpdate(!isUpdate);\n          if (mapstate==1) {\n            mapAlert(responseData.status,responseData.msg);\n          }else{\n            unMapAlert(responseData.status,\" Unmapped Successfully\");\n          }\n        }else{\n          mapAlert(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const mapAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const unMapAlert = (status,msg)=>{\n    setUnmapAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //Modal helper methods\n  const toggleModal = (unMapID) => {\n    setUnmapId(unMapID);\n    setModalVisible(!modalVisible);\n  }\n  //display details method\n  const sortDetail = (hubName,name) => {\n    if (hubName == null || hubName == \"\") {\n      return name;\n    } else {\n      return name+\" - \"+hubName;\n    }\n  }\n  //map method\n  const handleMap = (id) => {\n    if (id == 0) {\n      mapAlert(0,\"Please select \"+userRole)\n      return;\n    } else {\n      MapByRoleAPICall(location.state.hub_id,id,1);\n    }\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Station Mapping</span>\n            <a href=\"station\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon iconsminds-arrow-back-3\"></i> Go Back</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs={12} className=\"mb-2\">\n          <Card>\n            <CardBody>\n              <Row>\n                <Colxx md=\"6\">\n                  <Button \n                    outline={fleetOutline} \n                    color=\"primary\" \n                    className=\"default\" \n                    onClick={()=>{\n                      setFleetOutline(false);\n                      setOperatorOutline(true);\n                      setManagerOutline(true);\n                      setUserRole(\"Fleet Operator\")\n                      }}>\n                      <b>Fleet Operator</b>\n                  </Button>\n                  <Button \n                    outline={operatorOutline} \n                    color=\"primary\" \n                    className=\"default\" \n                    onClick={()=>{\n                      setFleetOutline(true);\n                      setOperatorOutline(false);\n                      setManagerOutline(true);\n                      setUserRole(\"Operator\")}}>\n                    <b>Operator</b>\n                  </Button>\n                  <Button \n                    outline={managerOutline} \n                    color=\"primary\" \n                    className=\"default\" \n                    onClick={()=>{\n                      setFleetOutline(true);\n                      setOperatorOutline(true);\n                      setManagerOutline(false);\n                      setUserRole(\"Manager\")}}>\n                    <b>Manager</b>\n                  </Button>\n                </Colxx>\n              </Row>\n              <Row>\n                <Colxx md=\"6 mt-5 \">\n                    <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                      {alertMsg}\n                    </Alert>\n                  </Colxx>                  \n                  <Colxx md=\"12\">\n                    <h4 className=\"mb-3\">Select {userRole}</h4>\n                  </Colxx>   \n              </Row>\n              <Row className=\"mb-4\">\n                <Colxx md={6}>\n                  <FormGroup>\n                  <Input \n                    type=\"select\" \n                    name=\"id\"\n                    onChange={(e)=>setMappingId(e.target.value)}\n                  >\n                    <option key={0} value={0}>Select</option>\n                    {\n                      userRole==\"Operator\"|| userRole===\"Manager\"?\n                      unmappedList.map((item,i)=>\n                        <option key={i} value={item.id}>{sortDetail(item.station_name,item.name)}</option>\n                      ):\n                      unmappedList.map((item,i)=>\n                        <option key={i} value={item.fleet_operator_id}>{sortDetail(item.hub_name,item.name)}</option>\n                      )\n                    }\n                  </Input>\n                  </FormGroup>\n                </Colxx>\n                <Colxx md=\"6\">\n                  <Button \n                  color=\"primary\" \n                  className=\"default\"\n                  onClick={()=>handleMap(mappingId)}>\n                      <b>Save</b>\n                  </Button>\n                </Colxx>\n              </Row> \n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs={12}>\n          <Card>\n            <CardBody>\n              <CardHeader className=\"mb-3\">\n                <Alert color={alertColor} isOpen={unmapAlertVisible} toggle={()=>setUnmapAlertVisible(false)}>\n                  {alertMsg}\n                </Alert>\n              </CardHeader>\n              <h4>Mapping Details</h4>\n                  {\n                    //check role\n                    userRole==\"Operator\"|| userRole==\"Manager\"?\n                      <Table responsive bordered striped>\n                        <thead>\n                          <tr>\n                            <th>#</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Contact Number</th>\n                            <th>Action</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {listFlag>0?\n                            mappedList.map((item,index)=>\n                            <tr key={index}>\n                            <th scope=\"row\">{index +1}</th>\n                            <td>{item.name}</td>\n                            <td>{item.email}</td>\n                            <td>{item.contact_number}</td>\n                            <td>\n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>\n                            </td>\n                          </tr>\n                          ):\n                          <tr>\n                            <td className=\"text-center text-danger\" colSpan=\"5\">Data  Not  Found</td>\n                          </tr>}\n                        </tbody>\n                      </Table>:\n                      <Table responsive bordered striped>\n                      <thead>\n                        <tr>\n                          <th>#</th>\n                          <th>Name</th>\n                          <th>Fleet Id</th>\n                          <th>Address</th>\n                          <th>Contact Person</th>\n                          <th>Contact Email</th>\n                          <th>Contact Number</th>\n                          <th>Remark 2</th>\n                          <th>Remark 2</th>\n                          <th>Action</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {listFlag>0?\n                          mappedList.map((item,index)=>\n                          <tr key={index}>\n                          <th scope=\"row\">{index +1}</th>\n                          <td>{item.name}</td>\n                          <td>{item.fleet_id}</td>\n                          <td>{item.address}</td>\n                          <td>{item.contact_person}</td>\n                          <td>{item.contact_email}</td>\n                          <td>{item.contact_number}</td>\n                          <td>{item.remark_1}</td>\n                          <td>{item.remark_2}</td>\n                          <td>\n                            <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.fleet_operator_id)}}>\n                                <i className=\"glyph-icon simple-icon-trash\"></i>\n                            </Button>\n                          </td>\n                        </tr>\n                        ):\n                        <tr>\n                          <td className=\"text-center text-danger\" colSpan=\"10\">Data  Not  Found</td>\n                        </tr>}\n                      </tbody>\n                    </Table>\n                  }\n              <Modal\n                isOpen={modalVisible}\n                toggle={toggleModal} >\n                <ModalHeader className=\"text-center\">\n                  <Row>\n                    <Colxx md=\"12\">\n                      Are you sure you would like to unmap this ?\n                    </Colxx>\n                    <Colxx md=\"12\">\n                      <Button color=\"success\" className=\"mt-4\" onClick={()=>MapByRoleAPICall(0,unmapId,0)}>\n                        Unmap \n                      </Button>{' '}\n                      <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                        Cancel\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </ModalHeader>\n              </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default StationDetail; ","import React, { useEffect, useState } from 'react';\nimport { \n  CardSubtitle,CardBody, \n  Row, Table, Card,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Input,InputGroup,Button,\n  Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getTransactionAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\n\nconst Transaction = () => {\n  const [transactionList,setTransactionList] = useState([]);\n  const [isLoading,setIsLoading] = useState(true);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");  \n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  const status_val = ['-','Scan EV','Scan DB1','Scan DB2','Scan OTP','Scan EV','Scan CB1','Scan CB2']\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n\n  useEffect(()=>{\n    getTransactionAPICall();\n  },[pageCount])\n\n  //API CALLS\n  const getTransactionAPICall = async() => {\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getTransactionAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setTransactionList(responseData.data.data);          \n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  //helper methods\n  //Alert helper methods\n  const transactionAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getTransactionAPICall();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Transactions</span>\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card>\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                  <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                    {alertMsg}\n                  </Alert>\n              </CardSubtitle>\n              <Table responsive striped bordered>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Status</th>\n                      <th>Station</th>\n                      <th>Operator</th>\n                      <th>EV</th>\n                      <th>DB1</th>\n                      <th>CB1</th>\n                      <th>DB2</th>\n                      <th>CB2</th>\n                      <th>OTP</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"10\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                         transactionList.length > 0 ?\n                            transactionList.map((item,index)=>\n                              <tr key={item.transaction_log_id}>\n                                <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                                <td>{status_val[item.status]}</td>\n                                <td>{item.station_name}</td>\n                                <td>{item.operator}</td>\n                                <td><b>Vehicle VIN : </b>{item.vehicle_vin}</td>\n                                <td>\n                                    <p className=\"mb-0\"><b>BIN:</b>{item.discharged_battery_bin_1}</p>\n                                    <p className=\"mb-0\"><b>SOC:</b>{item.discharged_battery_soc_1}</p>\n                                    <p className=\"mb-0\"><b>BV:</b>{item.discharged_battery_bv_1}</p>\n                                    <p className=\"mb-0\"><b>REC:</b>{item.discharged_battery_rec_1}</p>                           \n                                </td>\n                                <td>\n                                    <p className=\"mb-0\"><b>BIN:</b>{item.charged_battery_bin_1}</p>\n                                    <p className=\"mb-0\"><b>SOC:</b>{item.charged_battery_soc_1}</p>\n                                    <p className=\"mb-0\"><b>BV:</b>{item.charged_battery_bv_1}</p>\n                                    <p className=\"mb-0\"><b>REC:</b>{item.charged_battery_rec_1}</p>\n                                </td> \n                                <td>\n                                    <p className=\"mb-0\"><b>BIN:</b>{item.discharged_battery_bin_2}</p>\n                                    <p className=\"mb-0\"><b>SOC:</b>{item.discharged_battery_soc_2}</p>\n                                    <p className=\"mb-0\"><b>BV:</b>{item.discharged_battery_bv_2}</p>\n                                    <p className=\"mb-0\"><b>REC:</b>{item.discharged_battery_rec_2}</p> \n                                </td>\n                                <td>\n                                    <p className=\"mb-0\"><b>BIN:</b>{item.charged_battery_bin_2}</p>\n                                    <p className=\"mb-0\"><b>SOC:</b>{item.charged_battery_soc_2}</p>\n                                    <p className=\"mb-0\"><b>BV:</b>{item.charged_battery_bv_2}</p>\n                                    <p className=\"mb-0\"><b>REC:</b>{item.charged_battery_rec_2}</p>\n                                </td>\n                                <td>{item.end_otp}</td>\n                              </tr>\n                            ):<tr>\n                                  <td className=\"text-center text-danger\" colSpan=\"10\">Data  Not  Found</td>\n                              </tr>\n                    }                                       \n                  </tbody>\n                </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default Transaction;\n","import React, { useEffect, useState } from 'react';\nimport { \n  CardSubtitle,CardBody, \n  Row, Table, Card, DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Button,Input,InputGroup,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport {getCurrentUser} from '../../../helpers/Utils';\nimport {getQueueLogAPI} from '../../../constants/defaultValues';\nimport axios from 'axios';\n\nconst Queue = () => {\n  const [transactionList,setTransactionList] = useState([]);\n  const [isLoading,setIsLoading] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n\n  useEffect(()=>{\n    getQueueLogAPICall();\n  },[pageCount])\n\n  //API CALLS\n  const getQueueLogAPICall = async() => {\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getQueueLogAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setTransactionList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  //helper methods\n  //Alert helper methods\n  const queueAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getQueueLogAPICall();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Queue</span>\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card>\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                  <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                    {alertMsg}\n                  </Alert>\n              </CardSubtitle>\n              <Table responsive striped bordered>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Station</th>\n                      <th>Operator</th>\n                      <th>EV</th>\n                      <th>DB1</th>\n                      <th>CB1</th>\n                      <th>DB2</th>\n                      <th>CB2</th>\n                      <th>OTP</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"9\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                         transactionList.length > 0 ?\n                            transactionList.map((item,index)=>\n                              <tr key={item.queue_master_id}>\n                                <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                                <td>{item.station_name}</td>\n                                <td>{item.operator}</td>\n                                <td>\n                                  <p className=\"mb-0\"><b>VehicleVIN:</b>{item.vehicle_vin}</p>\n                                  <p className=\"mb-0\"><b>Regi.No.:</b>{item.registration_no}</p>\n                                </td>\n                                <td>\n                                    <p className=\"mb-0\"><b>QR Code: </b>{item.discharged_b1_qr_code}</p>                          \n                                </td>\n                                <td>\n                                    <p className=\"mb-0\"><b>QR Code: </b>{item.charged_b1_qr_code}</p>\n                                </td> \n                                <td>\n                                    <p className=\"mb-0\"><b>QR Code: </b>{item.discharged_b2_qr_code}</p> \n                                </td>\n                                <td>\n                                    <p className=\"mb-0\"><b>QR Code: </b>{item.charged_b2_qr_code}</p>\n                                </td>\n                                <td>{item.end_otp}</td>\n                              </tr>\n                            ):<tr>\n                                  <td className=\"text-center text-danger\" colSpan=\"9\">Data  Not  Found</td>\n                              </tr>\n                    }                            \n                  </tbody>\n                </Table>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default Queue;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row, Card, CardBody,CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,ModalHeader,ModalBody,\n  Input,InputGroup, \n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getBatteryInventoryListAPI,deleteBatteryInventoryAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\n\nconst Battery = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  const [faultModalVisible,setFaultModalVisible] = useState(false);\n  const [faultList,setFaultList] = useState([]);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //battery list\n  const [batteryInventoryList,setBatteryInventoryList] = useState([]);\n  const [batteryInventoryID,setBatteryInventoryID] = useState(\"\");\n  const [batteryInventoryToDeleteId,setBatteryInventoryToDeleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getBatteryInventoryListAPICall();\n    batteryInventoryAlert();\n  },[batteryInventoryID,pageCount])\n\n  //API calls\n  const getBatteryInventoryListAPICall = async() => {\n    setBatteryInventoryList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getBatteryInventoryListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setBatteryInventoryList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteBatteryInventoryAPICall = async(batteryInventoryId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteBatteryInventoryAPI,\n      {battery_inventory_id:batteryInventoryId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setBatteryInventoryID(batteryInventoryId);\n          batteryInventoryDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          batteryInventoryDeletedAlert(responseData.status,responseData.msg)\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updateBatteryInventory = (batteryInventoryId) => {\n    history.push({\n      pathname:adminRoot+'/inventory/updatebattery_inventory',\n      state:{battery_inventory_id:batteryInventoryId}\n    });\n  }\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const batteryInventoryDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const batteryInventoryAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (batteryInventoryId) => {\n    setBatteryInventoryToDeleteId(batteryInventoryId)\n    setModalVisible(!modalVisible);\n  }\n  const toggleFaultModal = (faults) => {\n    setFaultList(faults)\n    setFaultModalVisible(!faultModalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getBatteryInventoryListAPICall();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Battery Inventory</span>\n        <a href=\"addbattery\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card className=\"mb-4\">\n              <CardBody>\n                <CardSubtitle className=\"mb-3\">\n                    <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                      {alertMsg}\n                    </Alert>\n                </CardSubtitle> \n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>BIN</th>\n                      <th>QR Code</th>\n                      <th>OEM</th>\n                      <th>Model Name</th>\n                      <th>Make Year</th>\n                      <th>Owned By</th>\n                      <th>Serial Number</th>\n                      <th>IMEI</th>\n                      <th>SOC</th>\n                      <th>BV</th>\n                      <th>Rec</th>\n                      <th>Latitude</th>\n                      <th>Longitude</th>\n                      <th>Faults</th>\n                      <th>Remark</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"17\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                         batteryInventoryList.length > 0 ?\n                          batteryInventoryList.map((item,index)=>\n                            <tr key={index}>\n                                <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                                <td>{item.bin}</td>\n                                <td>{item.b_qr_code}</td>\n                                <td>{item.oem_name}</td>\n                                <td>{item.model_name}</td>\n                                <td>{item.make_year}</td>\n                                <td>{item.owner_name}</td>\n                                <td>{item.serial_number}</td>\n                                <td>{item.imei}</td>\n                                <td>{item.soc}</td>\n                                <td>{item.bv}</td>\n                                <td>{item.rec}</td>\n                                <td>{item.lat}</td>\n                                <td>{item.lon}</td>\n                                <td>{item.total_alarm>0?\n                                    <Button color=\"info\" className=\"default mr-1 btn-sm tbl_action_btn\" onClick={()=>{toggleFaultModal(item.alarm_list)}}>\n                                      <i className=\"glyph-icon simple-icon-eye\"></i>\n                                    </Button>:\"None\"}</td>\n                                <td>{item.remark}</td>\n                                <td>\n                                  <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateBatteryInventory(item.battery_inventory_id)}}>\n                                      <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                                  </a>\n                                  <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.battery_inventory_id)}}>\n                                      <i className=\"glyph-icon simple-icon-trash\"></i>\n                                  </Button>                        \n                                </td>\n                            </tr>\n                      ):<tr>\n                            <td className=\"text-center text-danger\" colSpan=\"17\">Data  Not  Found</td>\n                        </tr>\n                      }          \n                  </tbody>\n                </Table>\n                <Modal\n                  isOpen={modalVisible}\n                  toggle={toggleModal} >\n                  <ModalHeader className=\"text-center\">\n                    Are you sure you would like to delete this inventory?\n                    <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteBatteryInventoryAPICall(batteryInventoryToDeleteId)}>\n                      Delete Inventory \n                    </Button>{' '}\n                    <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                      Cancel\n                    </Button>\n                  </ModalHeader>\n                </Modal>\n                <Modal\n                  isOpen={faultModalVisible}\n                  toggle={toggleFaultModal} >\n                  <ModalBody>\n                    <h2 className=\"text-center\">Faults</h2>\n                    \n                    {faultList.length>0 &&\n                      faultList.map((item,index)=>\n                      <Row>\n                        <Colxx md=\"12\">\n                          {index+\". \"+item.title}\n                        </Colxx>\n                      </Row>)\n                    }\n                    <Row className=\"text-center\">\n                      <Colxx>\n                        <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={()=>setFaultModalVisible(false)}>\n                          Cancel\n                        </Button>\n                      </Colxx>\n                    </Row> \n                  </ModalBody>\n                </Modal>\n              </CardBody>\n            </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default Battery;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row,Card, CardBody,CardSubtitle,Alert, FormGroup, Label,\n  Input, Button\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getBatteryDataAPI,getOwnersAPI,getStationsAPI,addBatteryInventoryAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst AddBattery = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //dropdown states\n  const [stationNameData,setStationNameData] = useState([]);\n  const [ownerNameData,setOwnerNameData] = useState([]);\n  const [batteryData,setBatteryData] = useState([]);\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n    GetOwnerNamesAPICall();\n    GetBatteryDataAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetOwnerNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getOwnersAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setOwnerNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetBatteryDataAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getBatteryDataAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setBatteryData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const addBatteryInventoryAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addBatteryInventoryAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/inventory/battery',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          addBatteryInventoryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const BatteryInventoryDetailsValidationSchema = yup.object().shape({\n    bin:yup.string()\n        .required(\"BIN is required\"),\n    serial_number:yup.string()\n        .required(\"Serial Number capacity is required\"),\n    b_qr_code:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"Battery QR Code capacity is required\"),\n    own_by:yup.string()\n        .required(\"Owned By is required\"),\n    battery_master_id:yup.string()\n        .required(\"Battery is required\"),\n    imei:yup.string()\n        .required(\"IMEI is required\"),\n    // soc:yup.string()\n    //     .required(\"EV capacity is required\"),\n    // bv:yup.string()\n    //     .required(\"BV is required\"),\n    // rec:yup.string()\n    //     .required(\"Rec is required\"),\n    // lat:yup.string()\n    //     .required(\"Latitude is required\"),\n    // lon:yup.string()\n    //     .required(\"Longitude is required\"),\n  });\n\n  const initialValues = {\n    bin:\"\",\n    serial_number:\"\",\n    b_qr_code:\"\",\n    hub_id:\"\",\n    own_by:\"\",\n    battery_master_id:\"\",\n    imei:\"\",\n    soc:\"\",\n    bv:\"\",\n    rec:\"\",\n    lat:\"\",\n    lon:\"\",\n    remark:\"\",\n  };\n\n  //helper\n  //Alert helper methods\n  const addBatteryInventoryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Battery Inventory</span>\n            <a href=\"battery\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Battery Inventory List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={BatteryInventoryDetailsValidationSchema} \n        onSubmit={(values)=>{\n          addBatteryInventoryAPICall(values);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody>\n                        <CardSubtitle className=\"mb-3\">\n                          <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                            {alertMsg}\n                          </Alert>\n                        </CardSubtitle> \n                          <Row>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                BIN\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"BIN\"\n                                  name=\"bin\"\n                                  value={values.bin}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.bin && touched.bin ? \"input-error\":null}\n                                />\n                                {errors.bin && touched.bin &&(\n                                  <span className=\"error\">{errors.bin}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Serial Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Serial Number\"\n                                  value={values.serial_number}\n                                  name=\"serial_number\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.serial_number && touched.serial_number ? \"input-error\":null}\n                                />\n                                {errors.serial_number && touched.serial_number &&(\n                                  <span className=\"error\">{errors.serial_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Station\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"hub_id\"\n                                  placeholder=\"Station\"\n                                  value={values.hub_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Station</option>\n                                  {stationNameData.map((item,index)=>\n                                    <option value={item.hub_master_id} key={index}>{item.name}</option>\n                                  )}\n                                </Input>\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Owned By\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"own_by\"\n                                  value={values.own_by}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Owned By</option>\n                                  {ownerNameData.map((item,index)=>\n                                    <option value={item.owner_master_id} key={index}>{item.name}</option>\n                                    )}\n                                </Input>\n                                {errors.own_by && touched.own_by &&(\n                                  <span className=\"error\">{errors.own_by}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Battery\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"battery_master_id\"\n                                  value={values.battery_master_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Battery</option>\n                                  {batteryData.map((item,index)=>\n                                    <option value={item.battery_master_id} key={index}>{item.model_name+\"-\"+item.make_year+\"-\"+item.type_of_connector}</option>\n                                    )}\n                                </Input>\n                                {errors.battery_master_id && touched.battery_master_id &&(\n                                  <span className=\"error\">{errors.battery_master_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Battery QR Code\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"b_qr_code\"\n                                  placeholder=\"Battery QR Code\"\n                                  value={values.b_qr_code}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.b_qr_code && touched.b_qr_code &&(\n                                  <span className=\"error\">{errors.b_qr_code}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                BV\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"bv\"\n                                  placeholder=\"BV\"\n                                  value={values.bv}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.bv && touched.bv &&(\n                                  <span className=\"error\">{errors.bv}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                SOC\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"soc\"\n                                  placeholder=\"SOC\"\n                                  value={values.soc}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.soc && touched.soc &&(\n                                  <span className=\"error\">{errors.soc}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                IMEI\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"imei\"\n                                  placeholder=\"IMEI\"\n                                  value={values.imei}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.imei && touched.imei &&(\n                                  <span className=\"error\">{errors.imei}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Rec\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"rec\"\n                                  placeholder=\"Rec\"\n                                  value={values.rec}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.rec && touched.rec &&(\n                                  <span className=\"error\">{errors.rec}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Latitude\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"lat\"\n                                  placeholder=\"Latitude\"\n                                  value={values.lat}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.lat && touched.lat &&(\n                                  <span className=\"error\">{errors.lat}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Longitude\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"lon\"\n                                  placeholder=\"Longitude\"\n                                  value={values.lon}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.lon && touched.lon &&(\n                                  <span className=\"error\">{errors.lon}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark\"\n                                  placeholder=\"Remark\"\n                                  value={values.remark}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AddBattery;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row,Card, CardBody,CardSubtitle,Alert, FormGroup, Label,\n  Input, Button\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getBatteryDataAPI,getOwnersAPI,getStationsAPI,updateBatteryInventoryAPI,getBatteryInventoryByIdAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateBatteryInventory = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //dropdown states\n  const [stationNameData,setStationNameData] = useState([]);\n  const [ownerNameData,setOwnerNameData] = useState([]);\n  const [batteryData,setBatteryData] = useState([]);\n  //states\n  const [bin,setBin] = useState(\"\");\n  const [serialNumber,setSerialNumber] = useState(\"\");\n  const [bQrCode,setBQrCode] = useState(\"\");\n  const [hubId,setHubId] = useState(\"\");\n  const [ownBy,setOwnBy] = useState(\"\");\n  const [batteryMasterId,setBatteryMasterId] = useState(\"\");\n  const [imei,setImei] = useState(\"\");\n  const [soc,setSoc] = useState(\"\");\n  const [bv,setBv] = useState(\"\");\n  const [rec,setRec] = useState(\"\");\n  const [lat,setLat] = useState(\"\");\n  const [lon,setLon] = useState(\"\");\n  const [remark,setRemark] = useState(\"\");\n\n  const history = useHistory();\n  const location = useLocation();\n\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n    GetOwnerNamesAPICall();\n    GetBatteryDataAPICall();\n    getBatteryInventoryByIdAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetOwnerNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getOwnersAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setOwnerNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetBatteryDataAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getBatteryDataAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setBatteryData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getBatteryInventoryByIdAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getBatteryInventoryByIdAPI,\n    {\n        battery_inventory_id:location.state.battery_inventory_id\n    },\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n        setBin(responseData.data.bin);\n        setSerialNumber(responseData.data.serial_number);\n        setBQrCode(responseData.data.b_qr_code);\n        setHubId(responseData.data.hub_id);\n        setOwnBy(responseData.data.own_by);\n        setBatteryMasterId(responseData.data.battery_master_id);\n        setImei(responseData.data.imei);\n        setSoc(responseData.data.soc);\n        setBv(responseData.data.bv);\n        setRec(responseData.data.rec);\n        setLat(responseData.data.lat);\n        setLon(responseData.data.lon);\n        setRemark(responseData.data.remark);\n        }else{\n        console.log(responseData.msg);\n        }\n    }).catch(error=>{\n        console.log(error);\n    })\n}\n  const updateBatteryInventoryAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(updateBatteryInventoryAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/inventory/battery',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          UpdateBatteryInventoryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const BatteryInventoryDetailsValidationSchema = yup.object().shape({\n    bin:yup.string()\n        .required(\"BIN is required\"),\n    serial_number:yup.string()\n        .required(\"Serial Number capacity is required\"),\n    b_qr_code:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"Battery QR Code capacity is required\"),\n    own_by:yup.string()\n        .required(\"Owned By is required\"),\n    battery_master_id:yup.string()\n        .required(\"Battery is required\"),\n    imei:yup.string()\n        .required(\"IMEI is required\"),\n    // soc:yup.string()\n    //     .required(\"EV capacity is required\"),\n    // bv:yup.string()\n    //     .required(\"BV is required\"),\n    // rec:yup.string()\n    //     .required(\"Rec is required\"),\n    // lat:yup.string()\n    //     .required(\"Latitude is required\"),\n    // lon:yup.string()\n    //     .required(\"Longitude is required\"),\n  });\n\n  //helper\n  //Alert helper methods\n  const UpdateBatteryInventoryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Battery Inventory</span>\n            <a href=\"battery\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Battery Inventory List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            bin:bin,\n            serial_number:serialNumber,\n            b_qr_code:bQrCode,\n            hub_id:hubId,\n            own_by:ownBy,\n            battery_master_id:batteryMasterId,\n            imei:imei,\n            soc:soc,\n            bv:bv,\n            rec:rec,\n            lat:lat,\n            lon:lon,\n            remark:remark,\n        }}\n        validationSchema={BatteryInventoryDetailsValidationSchema} \n        onSubmit={(values)=>{\n            const params = {\n                battery_inventory_id:location.state.battery_inventory_id,\n                bin:values.bin,\n                serial_number:values.serial_number,\n                b_qr_code:values.b_qr_code,\n                hub_id:values.hub_id,\n                own_by:values.own_by,\n                battery_master_id:values.battery_master_id,\n                imei:values.imei,\n                soc:values.soc,\n                bv:values.bv,\n                rec:values.rec,\n                lat:values.lat,\n                lon:values.lon,\n                remark:values.remark,\n            }\n          updateBatteryInventoryAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody>\n                        <CardSubtitle className=\"mb-3\">\n                          <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                            {alertMsg}\n                          </Alert>\n                        </CardSubtitle> \n                          <Row>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                BIN\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"BIN\"\n                                  name=\"bin\"\n                                  value={values.bin}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.bin && touched.bin ? \"input-error\":null}\n                                />\n                                {errors.bin && touched.bin &&(\n                                  <span className=\"error\">{errors.bin}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Serial Number\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Serial Number\"\n                                  value={values.serial_number}\n                                  name=\"serial_number\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.serial_number && touched.serial_number ? \"input-error\":null}\n                                />\n                                {errors.serial_number && touched.serial_number &&(\n                                  <span className=\"error\">{errors.serial_number}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Station\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"hub_id\"\n                                  placeholder=\"Station\"\n                                  value={values.hub_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Station</option>\n                                  {stationNameData.map((item)=>\n                                    <option value={item.hub_master_id} key={item.hub_master_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Owned By\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"own_by\"\n                                  value={values.own_by}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Owned By</option>\n                                  {ownerNameData.map(item=>\n                                    <option value={item.owner_master_id} key={item.owner_master_id}>{item.name}</option>\n                                    )}\n                                </Input>\n                                {errors.own_by && touched.own_by &&(\n                                  <span className=\"error\">{errors.own_by}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Battery\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"battery_master_id\"\n                                  value={values.battery_master_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Battery</option>\n                                  {batteryData.map(item=>\n                                    <option value={item.battery_master_id} key={item.battery_master_id}>{item.model_name+\"-\"+item.make_year+\"-\"+item.type_of_connector}</option>\n                                    )}\n                                </Input>\n                                {errors.battery_master_id && touched.battery_master_id &&(\n                                  <span className=\"error\">{errors.battery_master_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Battery QR Code\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"b_qr_code\"\n                                  placeholder=\"Battery QR Code\"\n                                  value={values.b_qr_code}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.b_qr_code && touched.b_qr_code &&(\n                                  <span className=\"error\">{errors.b_qr_code}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                BV\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"bv\"\n                                  placeholder=\"BV\"\n                                  value={values.bv}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.bv && touched.bv &&(\n                                  <span className=\"error\">{errors.bv}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                SOC\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"soc\"\n                                  placeholder=\"SOC\"\n                                  value={values.soc}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.soc && touched.soc &&(\n                                  <span className=\"error\">{errors.soc}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                IMEI\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"imei\"\n                                  placeholder=\"IMEI\"\n                                  value={values.imei}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.imei && touched.imei &&(\n                                  <span className=\"error\">{errors.imei}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Rec\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"rec\"\n                                  placeholder=\"Rec\"\n                                  value={values.rec}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.rec && touched.rec &&(\n                                  <span className=\"error\">{errors.rec}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Latitude\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"lat\"\n                                  placeholder=\"Latitude\"\n                                  value={values.lat}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.lat && touched.lat &&(\n                                  <span className=\"error\">{errors.lat}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Longitude\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"lon\"\n                                  placeholder=\"Longitude\"\n                                  value={values.lon}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                                 {errors.lon && touched.lon &&(\n                                  <span className=\"error\">{errors.lon}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark\"\n                                  placeholder=\"Remark\"\n                                  value={values.remark}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default UpdateBatteryInventory;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row, Card, CardBody,CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader,\n  Input,InputGroup\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getChargerInventoryListAPI,deleteChargerInventoryAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\n\nconst Charger = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //battery list\n  const [chargerInventoryList,setChargerInventoryList] = useState([]);\n  const [chargerInventoryID,setChargerInventoryID] = useState(\"\");\n  const [chargerInventoryToDeleteId,setChargerInventoryToDeleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getChargerInventoryListAPICall();\n    chargerInventoryAlert();\n  },[chargerInventoryID,pageCount])\n\n  //API calls\n  const getChargerInventoryListAPICall = async() => {\n    setChargerInventoryList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getChargerInventoryListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setChargerInventoryList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteChargerInventoryAPICall = async(chargerInventoryId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteChargerInventoryAPI,\n      {charger_inventory_id:chargerInventoryId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setChargerInventoryID(chargerInventoryId);\n          chargerInventoryDeletedAlert(responseData.status,responseData.msg)\n        }else{\n          chargerInventoryDeletedAlert(responseData.status,responseData.msg)\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updateChargerInventory = (chargerInventoryId) => {\n    history.push({\n      pathname:adminRoot+'/inventory/updatecharger_inventory',\n      state:{charger_inventory_id:chargerInventoryId}\n    });\n  }\n  //pagination methods\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const chargerInventoryDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const chargerInventoryAlert = () =>{\n    if (location.state === null || location.state === undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (chargerInventoryId) => {\n    setChargerInventoryToDeleteId(chargerInventoryId)\n    setModalVisible(!modalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getChargerInventoryListAPICall();\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Charger Inventory</span>\n          <a href=\"addcharger\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                    <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                      {alertMsg}\n                    </Alert>\n                </CardSubtitle>  \n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>CID</th>\n                      <th>QR Code</th>\n                      <th>Owned By</th>\n                      <th>Make</th>\n                      <th>Model Name</th>\n                      <th>Hub</th>\n                      <th>No. of slots</th>\n                      <th>Dimensions</th>\n                      <th>Remark 1</th>\n                      <th>Remark 2</th>\n                      <th>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"12\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                        chargerInventoryList.length > 0 ?\n                        chargerInventoryList.map((item,index)=>\n                        <tr key={item.id}>\n                          <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                          <td>{item.charger_id}</td>\n                          <td>{item.qr_code}</td>\n                          <td>{item.owner_name}</td>\n                          <td>{item.make}</td>\n                          <td>{item.model}</td>\n                          <td>{item.station_name}</td>\n                          <td>{item.no_of_slot}</td>\n                          <td>{item.dimension}</td>\n                          <td>{item.remark_1}</td>\n                          <td>{item.remark_2}</td>\n                          <td>\n                            <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateChargerInventory(item.id)}}>\n                                <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                            </a>\n                            <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.id)}}>\n                                <i className=\"glyph-icon simple-icon-trash\"></i>\n                            </Button>                        \n                          </td>\n                        </tr>\n                      ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"12\">Data  Not  Found</td>\n                        </tr>\n                    }          \n                  </tbody>\n                </Table>\n                <Modal\n                  isOpen={modalVisible}\n                  toggle={toggleModal} >\n                  <ModalHeader className=\"text-center\">\n                    Are you sure you would like to delete this inventory?\n                    <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteChargerInventoryAPICall(chargerInventoryToDeleteId)}>\n                      Delete Inventory \n                    </Button>{' '}\n                    <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                      Cancel\n                    </Button>\n                  </ModalHeader>\n                </Modal>\n              </CardBody>\n            </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default Charger;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row,FormGroup, Card,CardSubtitle, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getOwnersAPI,getChargerAPI,getStationsAPI,addChargerInventoryAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { Formik, Field, FieldArray, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nconst AddCharger = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //dropdown states\n  const [stationNameData,setStationNameData] = useState([]);\n  const [ownerNameData,setOwnerNameData] = useState([]);\n  const [chargerMasterData,setChargerMasterData] = useState([]);\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n    GetOwnerNamesAPICall();\n    GetChargerMasterAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetOwnerNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getOwnersAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setOwnerNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetChargerMasterAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getChargerAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setChargerMasterData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const addChargerInventoryAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addChargerInventoryAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/inventory/charger',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          addChargerInventoryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const ChargerInventoryDetailsValidationSchema = yup.object().shape({\n    charger_id:yup.string()\n        .required(\"Charger ID is required\"),\n    hub_id:yup.string()\n        .required(\"Station is required\"),\n    qr_code:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"QR Code capacity is required\"),\n    own_by:yup.string()\n        .required(\"Owned By is required\"),\n    charger_master_id:yup.string()\n        .required(\"Charger is required\"),\n    numberOfSlots: yup.string()\n            .required('Number of slots is required'),\n    slots: yup.array().of(\n      yup.object().shape({\n            // charger_id: yup.string()\n            //     .required('Charger Id is required'),\n            slot_id: yup.string()\n                .required('Slot Id is required')\n        })\n    )\n  });\n\n  const initialValues = {\n    charger_id:\"\",\n    hub_id:\"\",\n    qr_code:\"\",\n    charger_master_id:\"\",\n    own_by:\"\",\n    remark_1:\"\",\n    remark_2:\"\",\n    numberOfSlots: '',\n    slots: []\n  };\n\n  function onChangeSlots(e, field, values, setValues) {\n    // update dynamic form\n    const slots = [...values.slots];\n    const numberOfSlots = e.target.value || 0;\n    const previousNumber = parseInt(field.value || '0');\n    if (previousNumber < numberOfSlots) {\n        for (let i = previousNumber; i < numberOfSlots; i++) {\n            slots.push({ charger_id: '', slot_id: '' });\n        }\n    } else {\n        for (let i = previousNumber; i >= numberOfSlots; i--) {\n            slots.splice(i, 1);\n        }\n    }\n    setValues({ ...values, slots });\n\n    // call formik onChange method\n    field.onChange(e);\n  }\n\n  //helper\n  //Alert helper methods\n  const addChargerInventoryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  function onSubmit(fields) {\n      // display form field values on success\n      const params = {\n        charger_id:fields.charger_id,\n        qr_code:fields.qr_code,\n        hub_id:fields.hub_id,\n        own_by:fields.own_by,\n        charger_master_id:fields.charger_master_id,\n        no_of_slot:fields.numberOfSlots,\n        slots_data:fields.slots,\n        remark_1:fields.remark_1,\n        remark_2:fields.remark_2,\n      }\n      addChargerInventoryAPICall(params);\n  }\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add Charger Inventory</span>\n            <a href=\"charger\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Charger Inventory List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={ChargerInventoryDetailsValidationSchema} \n        onSubmit={onSubmit}>\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors,setValues})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody>\n                        <CardSubtitle className=\"mb-3\">\n                          <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                            {alertMsg}\n                          </Alert>\n                        </CardSubtitle> \n                          <Row>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Charger Id\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Charger Id\"\n                                  name=\"charger_id\"\n                                  value={values.charger_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.charger_id && touched.charger_id ? \"input-error\":null}\n                                />\n                                {errors.charger_id && touched.charger_id &&(\n                                  <span className=\"error\">{errors.charger_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                QR Code\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"QR Code \"\n                                  value={values.qr_code}\n                                  name=\"qr_code\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.qr_code && touched.qr_code ? \"input-error\":null}\n                                />\n                                {errors.qr_code && touched.qr_code &&(\n                                  <span className=\"error\">{errors.qr_code}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Station\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"hub_id\"\n                                  placeholder=\"Station\"\n                                  value={values.hub_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Station</option>\n                                  {stationNameData.map((item,index)=>\n                                    <option value={item.hub_master_id} key={index}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.hub_id && touched.hub_id &&(\n                                  <span className=\"error\">{errors.hub_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Owned By\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"own_by\"\n                                  value={values.own_by}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Owned By</option>\n                                  {ownerNameData.map((item,index)=>\n                                    <option value={item.owner_master_id} key={index}>{item.name}</option>\n                                    )}\n                                </Input>\n                                {errors.own_by && touched.own_by &&(\n                                  <span className=\"error\">{errors.own_by}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Charger\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"charger_master_id\"\n                                  value={values.charger_master_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Charger</option>\n                                  {chargerMasterData.map((item,index)=>\n                                    <option value={item.id} key={index}>{item.make+\"-\"+item.model+\"-\"+item.dimension}</option>\n                                    )}\n                                </Input>\n                                {errors.charger_master_id && touched.charger_master_id &&(\n                                  <span className=\"error\">{errors.charger_master_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Number of Slots\n                                </Label>\n                                <Field name=\"numberOfSlots\">\n                                    {({ field }) => (\n                                        <input type=\"number\" {...field} className={'form-control' + (errors.numberOfSlots && touched.numberOfSlots ? ' is-invalid' : '')} onChange={e => onChangeSlots(e, field, values, setValues)} />\n                                    )}\n                                    </Field>\n                                {errors.numberOfSlots && touched.numberOfSlots &&(\n                                  <span className=\"error\">{errors.numberOfSlots}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={12}>\n                            <FieldArray name=\"slots\">\n                              {() => (values.slots.map((ticket, i) => {\n                                  const ticketErrors = errors.slots?.length && errors.slots[i] || {};\n                                  const ticketTouched = touched.slots?.length && touched.slots[i] || {};\n                                  return (\n                                      <div key={i} className=\"list-group list-group-flush\">\n                                          <div className=\"list-group-item p-0\">\n                                              <div className=\"form-row\">\n                                                  <div className=\"form-group col-1 mt-3\">\n                                                    <h5 className=\"card-title\">Slot#{i + 1}</h5>\n                                                  </div>\n                                                  {/* <div className=\"form-group col-5\">\n                                                      <label>Charger ID</label>\n                                                      <Field name={`slots.${i}.charger_id`} type=\"text\" className={'form-control' + (ticketErrors.charger_id && ticketTouched.charger_id ? ' is-invalid' : '' )} />\n                                                      <ErrorMessage name={`slots.${i}.charger_id`} component=\"div\" className=\"invalid-feedback\" />\n                                                  </div> */}\n                                                  <div className=\"form-group col-6\">\n                                                      <label>Slot ID</label>\n                                                      <Field name={`slots.${i}.slot_id`} type=\"text\" className={'form-control' + (ticketErrors.slot_id && ticketTouched.slot_id ? ' is-invalid' : '' )} />\n                                                      <ErrorMessage name={`slots.${i}.slot_id`} component=\"div\" className=\"invalid-feedback\" />\n                                                  </div>\n                                              </div>\n                                          </div>\n                                      </div>\n                                  );\n                              }))}\n                          </FieldArray>\n                            </Colxx>\n                           \n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark 1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark 1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark 2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark 2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Add</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AddCharger;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row,FormGroup, Card,CardSubtitle, CardBody,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getOwnersAPI,getChargerAPI,getStationsAPI,getChargerInventoryByIdAPI,updateChargerInventoryAPI,adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport { Formik, Field, FieldArray, ErrorMessage } from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateChargerInventory = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //dropdown states\n  const [stationNameData,setStationNameData] = useState([]);\n  const [ownerNameData,setOwnerNameData] = useState([]);\n  const [chargerMasterData,setChargerMasterData] = useState([]);\n  //charger data default states\n  const [chargerId,setChargerId] = useState(\"\");\n  const [hubId,setHubId] = useState(\"\");\n  const [qrCode,setQrCode] = useState(\"\");\n  const [chargerMasterId,setChargerMasterId] = useState(\"\");\n  const [noOfSlot,setNoOfSlot] = useState(\"\");\n  const [slotData,setSlotData] = useState([]);\n  const [ownBy,setOwnBy] = useState(\"\");\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n    GetOwnerNamesAPICall();\n    GetChargerMasterAPICall();\n    getChargerInventoryByIdAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetOwnerNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getOwnersAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setOwnerNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetChargerMasterAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getChargerAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setChargerMasterData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n    const getChargerInventoryByIdAPICall = async() => {\n        const currentUser = getCurrentUser();\n        await axios.post(getChargerInventoryByIdAPI,\n        {\n            charger_inventory_id:location.state.charger_inventory_id\n        },\n        {headers:{Authorization: `Bearer ${currentUser.token}`}})\n        .then(response=>{\n            const responseData = response.data;\n            if (responseData.status === 1) {\n            setChargerId(responseData.data.charger_id);\n            setQrCode(responseData.data.qr_code);\n            setHubId(responseData.data.hub_id);\n            setOwnBy(responseData.data.own_by);\n            setChargerMasterId(responseData.data.charger_master_id);\n            setNoOfSlot(responseData.data.no_of_slot);\n            setSlotData(responseData.data.slots);\n            setRemark1(responseData.data.remark_1);\n            setRemark2(responseData.data.remark_2);\n            }else{\n            console.log(responseData.msg);\n            }\n        }).catch(error=>{\n            console.log(error);\n        })\n    }\n  const updateChargerInventoryAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(updateChargerInventoryAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/inventory/charger',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          updateChargerInventoryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const ChargerInventoryDetailsValidationSchema = yup.object().shape({\n    charger_id:yup.string()\n        .required(\"Charger ID is required\"),\n    hub_id:yup.string()\n        .required(\"Station is required\"),\n    qr_code:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"QR Code capacity is required\"),\n    own_by:yup.string()\n        .required(\"Owned By is required\"),\n    charger_master_id:yup.string()\n        .required(\"Owned By is required\"),\n    numberOfSlots: yup.string()\n        .required('Number of slots is required'),\n    slots: yup.array().of(\n      yup.object().shape({\n            // charger_id: yup.string()\n            //     .required('Charger Id is required'),\n            slot_id: yup.string()\n                .required('Slot Id is required')\n        })\n    )\n  });\n\n  //helper\n  //Alert helper methods\n  const updateChargerInventoryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  function onChangeSlots(e, field, values, setValues) {\n    // update dynamic form\n    const slots = [...values.slots];\n    const numberOfSlots = e.target.value || 0;\n    const previousNumber = parseInt(field.value || '0');\n    if (previousNumber < numberOfSlots) {\n        for (let i = previousNumber; i < numberOfSlots; i++) {\n            slots.push({ charger_id: '', slot_id: '' });\n        }\n    } else {\n        for (let i = previousNumber; i >= numberOfSlots; i--) {\n            slots.splice(i, 1);\n        }\n    }\n    setValues({ ...values, slots });\n\n    // call formik onChange method\n    field.onChange(e);\n  }\n  function onSubmit(fields) {\n      // display form field values on success\n      const params = {\n        charger_inventory_id:location.state.charger_inventory_id,\n        charger_id:fields.charger_id,\n        qr_code:fields.qr_code,\n        hub_id:fields.hub_id,\n        own_by:fields.own_by,\n        charger_master_id:fields.charger_master_id,\n        no_of_slot:fields.numberOfSlots,\n        slots_data:fields.slots,\n        remark_1:fields.remark_1,\n        remark_2:fields.remark_2,\n      }\n      updateChargerInventoryAPICall(params);\n  }\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update Charger Inventory</span>\n            <a href=\"charger\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> Charger Inventory List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            charger_id:chargerId,\n            hub_id:hubId,\n            qr_code:qrCode,\n            charger_master_id:chargerMasterId,\n            own_by:ownBy,\n            remark_1:remark1,\n            remark_2:remark2,\n            numberOfSlots: noOfSlot,\n            slots: slotData\n        }}\n        validationSchema={ChargerInventoryDetailsValidationSchema} \n        onSubmit={onSubmit} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors,setValues})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody>\n                        <CardSubtitle className=\"mb-3\">\n                          <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                            {alertMsg}\n                          </Alert>\n                        </CardSubtitle> \n                          <Row>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                Charger Id\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"Charger Id\"\n                                  name=\"charger_id\"\n                                  value={values.charger_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.charger_id && touched.charger_id ? \"input-error\":null}\n                                />\n                                {errors.charger_id && touched.charger_id &&(\n                                  <span className=\"error\">{errors.charger_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                QR Code\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  placeholder=\"QR Code \"\n                                  value={values.qr_code}\n                                  name=\"qr_code\"\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                  className={errors.qr_code && touched.qr_code ? \"input-error\":null}\n                                />\n                                {errors.qr_code && touched.qr_code &&(\n                                  <span className=\"error\">{errors.qr_code}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Station\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"hub_id\"\n                                  placeholder=\"Station\"\n                                  value={values.hub_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Station</option>\n                                  {stationNameData.map((item)=>\n                                    <option value={item.hub_master_id} key={item.hub_master_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.hub_id && touched.hub_id &&(\n                                  <span className=\"error\">{errors.hub_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Owned By\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"own_by\"\n                                  value={values.own_by}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Owned By</option>\n                                  {ownerNameData.map(item=>\n                                    <option value={item.owner_master_id} key={item.owner_master_id}>{item.name}</option>\n                                    )}\n                                </Input>\n                                {errors.own_by && touched.own_by &&(\n                                  <span className=\"error\">{errors.own_by}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Charger\n                                </Label>\n                                <Input\n                                  type=\"select\"\n                                  name=\"charger_master_id\"\n                                  value={values.charger_master_id}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                >\n                                  <option>Select Charger</option>\n                                  {chargerMasterData.map(item=>\n                                    <option value={item.id} key={item.id}>{item.make+\"-\"+item.model+\"-\"+item.dimension}</option>\n                                    )}\n                                </Input>\n                                {errors.charger_master_id && touched.charger_master_id &&(\n                                  <span className=\"error\">{errors.charger_master_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={3}>\n                              <FormGroup>\n                                <Label>\n                                Number of Slots\n                                </Label>\n                                <Field name=\"numberOfSlots\">\n                                    {({ field }) => (\n                                        <input type=\"number\" {...field} className={'form-control' + (errors.numberOfSlots && touched.numberOfSlots ? ' is-invalid' : '')} onChange={e => onChangeSlots(e, field, values, setValues)} />                                            \n                                    )}\n                                    </Field>\n                                {errors.numberOfSlots && touched.numberOfSlots &&(\n                                  <span className=\"error\">{errors.numberOfSlots}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={12}>\n                            <FieldArray name=\"slots\">\n                              {() => (values.slots.map((ticket, i) => {\n                                  const ticketErrors = errors.slots?.length && errors.slots[i] || {};\n                                  const ticketTouched = touched.slots?.length && touched.slots[i] || {};\n                                  return (\n                                      <div key={i} className=\"list-group list-group-flush\">\n                                          <div className=\"list-group-item p-0\">\n                                              <div className=\"form-row\">\n                                                  <div className=\"form-group col-1 mt-3\">\n                                                    <h5 className=\"card-title\">Slot#{i + 1}</h5>\n                                                  </div>\n                                                  {/* <div className=\"form-group col-5\">\n                                                      <label>Charger ID</label>\n                                                      <Field name={`slots.${i}.charger_id`} type=\"text\" className={'form-control' + (ticketErrors.charger_id && ticketTouched.charger_id ? ' is-invalid' : '' )} />\n                                                      <ErrorMessage name={`slots.${i}.charger_id`} component=\"div\" className=\"invalid-feedback\" />\n                                                  </div> */}\n                                                  <div className=\"form-group col-6\">\n                                                      <label>Slot ID</label>\n                                                      <Field name={`slots.${i}.slot_id`} type=\"text\" className={'form-control' + (ticketErrors.slot_id && ticketTouched.slot_id ? ' is-invalid' : '' )} />\n                                                      <ErrorMessage name={`slots.${i}.slot_id`} component=\"div\" className=\"invalid-feedback\" />\n                                                  </div>\n                                              </div>\n                                          </div>\n                                      </div>\n                                  );\n                              }))}\n                          </FieldArray>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark 1\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_1\"\n                                  placeholder=\"Remark 1\"\n                                  value={values.remark_1}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx md={6}>\n                              <FormGroup>\n                                <Label>\n                                  Remark 2\n                                </Label>\n                                <Input\n                                  type=\"text\"\n                                  name=\"remark_2\"\n                                  placeholder=\"Remark 2\"\n                                  value={values.remark_2}\n                                  onChange={handleChange}\n                                  onBlur={handleBlur}\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                          <Row>\n                            <Colxx md=\"12\" className=\"text-center\">\n                              <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                  <b>Update</b>\n                              </Button>\n                              <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                  <b>Cancel</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                      </CardBody>\n                      </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default UpdateChargerInventory;\n","import React,{useState,useEffect} from 'react';\nimport { Row, Card, CardBody, CardSubtitle, Table, Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Alert,\n  Modal,\n  ModalHeader, \n  Input,InputGroup\n } from 'reactstrap';\nimport {\n  Colxx,\n  Separator,\n} from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getEvInventoryListAPI,deleteEvInventoryAPI, adminRoot} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {useHistory,useLocation} from 'react-router-dom';\n\nconst EvInventoryMaster = () => {\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //Modal States\n  const [modalVisible,setModalVisible] = useState(false);\n  //search state\n  const [searchBy,setSearchBy] = useState(\"\");\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //EV list\n  const [evInventoryList,setEvInventoryList] = useState([]);\n  const [evInventoryID,setEvInventoryID] = useState(\"\");\n  const [evInventoryToDeleteId,setEvInventoryToDeleteId] = useState(\"\");\n  const [isLoading,setIsLoading] = useState(true);\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    getEvInventoryListAPICall();\n    evInventoryAlert();\n  },[evInventoryID,pageCount])\n\n  // //API calls\n  const getEvInventoryListAPICall = async() => {\n    setEvInventoryList([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.get(getEvInventoryListAPI+pageCount+`&search_param=`+searchBy,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setEvInventoryList(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setIsLoading(false);\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const deleteEvInventoryAPICall = async(evInventoryId) =>{\n    setModalVisible(false);\n    const currentUser = getCurrentUser();\n    await axios.post(deleteEvInventoryAPI,\n      {ev_inventory_id:evInventoryId},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setEvInventoryID(evInventoryId);\n          evInventoryDeletedAlert(responseData.status,responseData.msg);\n        }else{\n          evInventoryDeletedAlert(responseData.status,responseData.msg);        \n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //Helper methods\n  const updateEvInventory = (evInventoryId) => {\n    history.push({\n      pathname:adminRoot+'/inventory/updateEv_inventory',\n      state:{ev_inventory_id:evInventoryId}\n    });\n  }\n  //pagination method\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={() => {setPageCount(i+1)}}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Alert helper methods\n  const evInventoryDeletedAlert = (status,msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    if (status === 1) {\n      setAlertColor(\"success\");\n    } else {\n      setAlertColor(\"danger\");\n    }\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const evInventoryAlert = () =>{\n    if (location.state === null || location.state===undefined) {\n      return;\n    }else{\n      if (location.state.responseStatus === 1) {\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"success\");\n        history.replace({\n          state: null,\n        })\n      }else{\n        setAlertVisible(true);\n        setAlertMsg(location.state.responseMsg);\n        setAlertColor(\"danger\");\n        history.replace({\n          state: null,\n        })\n      }\n    }\n  }\n  //Modal helper methods\n  const toggleModal = (evInventoryId) => {\n    setEvInventoryToDeleteId(evInventoryId)\n    setModalVisible(!modalVisible);\n  }\n  //handle search input\n  const handleSearch = () => {\n      setPageCount(1);\n      getEvInventoryListAPICall();\n  }\n\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Electrical Vehicle</span>\n            <a href=\"addEv_inventory\" className=\"mt-2 btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-plus\"></i> Add New</b>\n            </a>\n            <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx md=\"4\">\n          <div className=\"ml-2 mb-2\">\n            <InputGroup>\n            <Input \n            type=\"text\" \n            placeholder=\"Search\"\n            value={searchBy}\n            onChange={e=>setSearchBy(e.target.value)}/>\n            <Button className=\"default search-icon\" color=\"primary\" outline onClick={()=>handleSearch()}><i className=\"glyph-icon simple-icon-magnifier\"></i></Button>\n            </InputGroup>  \n          </div>\n        </Colxx>\n        <Colxx md=\"8\">\n            <div className=\"text-right mr-5 mb-2\">\n              <span>Page </span>\n              <UncontrolledDropdown className=\"d-inline-block\">\n                <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                  {pageCount}\n                </DropdownToggle>\n                <DropdownMenu className=\"dropdownMenu\">\n                  {renderPageList()}\n                </DropdownMenu>\n              </UncontrolledDropdown>\n              <span> of </span>\n              {lastPageCount}\n            </div>\n        </Colxx>\n      </Row>\n      <Row className=\"mb-5\">\n        <Colxx xxs=\"12\">\n          <Card className=\"mb-4\">\n            <CardBody>\n              <CardSubtitle className=\"mb-3\">\n                  <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                    {alertMsg}\n                  </Alert>\n              </CardSubtitle>\n              <Table responsive bordered striped>\n                <thead>\n                  <tr>\n                    <th>#</th>\n                    <th>QR Code</th>\n                    <th>Capacity</th>\n                    <th>Model No</th>\n                    <th>Fleet Operator</th>\n                    <th>Swapping Station</th>\n                    <th>EV Type</th>\n                    <th>Vehicle Id</th>\n                    <th>Vehicle Vin</th>\n                    <th>Reg no</th>\n                    <th>Remark1</th>\n                    <th>Remark2</th>\n                    <th>Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n                {isLoading ?\n                  <tr>\n                      <td className=\"text-center\" colSpan=\"13\"><div className=\"custom-list-loading\" /></td>\n                  </tr> : \n                      evInventoryList.length > 0 ?\n                      evInventoryList.map((item,index)=>\n                            <tr key={item.ev_inventory_id}>\n                            <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                            <td>{item.e_qr_code}</td>\n                            <td>{item.battery_capacity}</td>\n                            <td>{item.vehicle_model}</td>\n                            <td>{item.fleet_operator_name}</td>\n                            <td>{item.station_name}</td>\n                            <td>{item.vehicle_type}</td>\n                            <td>{item.vechicle_id}</td>\n                            <td>{item.vehicle_vin}</td>\n                            <td>{item.registration_no}</td>\n                            <td>{item.remark_1}</td>\n                            <td>{item.remark_2}</td>\n                            <td>\n                              <a className=\"btn-info default mr-1 btn-sm tbl_action_a\" onClick={()=>{updateEvInventory(item.ev_inventory_id)}}>\n                                  <i className=\"glyph-icon simple-icon-pencil text-white\"></i>\n                              </a>\n                              <Button color=\"danger\" className=\"default btn-sm tbl_action_btn\" onClick={()=>{toggleModal(item.ev_inventory_id)}}>\n                                  <i className=\"glyph-icon simple-icon-trash\"></i>\n                              </Button>                        \n                            </td>\n                          </tr>\n                    ):<tr>\n                        <td className=\"text-center text-danger\" colSpan=\"13\">Data  Not  Found</td>\n                    </tr>\n                  }       \n                </tbody>\n              </Table>\n              <Modal\n                  isOpen={modalVisible}\n                  toggle={toggleModal} >\n                  <ModalHeader className=\"text-center\">\n                    Are you sure you would like to delete this inventory?\n                    <Button color=\"success\" className=\"mt-4\" onClick={()=>deleteEvInventoryAPICall(evInventoryToDeleteId)}>\n                      Delete Inventory \n                    </Button>{' '}\n                    <Button color=\"danger\" className=\"mt-4 mr-2\" onClick={toggleModal}>\n                      Cancel\n                    </Button>\n                  </ModalHeader>\n                </Modal>\n            </CardBody>\n          </Card>\n        </Colxx>\n      </Row>\n    </>\n  );\n};\nexport default EvInventoryMaster;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row, FormGroup, Card, CardBody,CardSubtitle,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getStationsAPI,getEvAPI,addEvInventoryAPI,adminRoot,getFleetOperatorAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst AddEvInventory = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //dropdown states\n  const [fleetOpNames,setFleetOpNames] = useState([]); \n  const [stationNameData,setStationNameData] = useState([]);\n  const [evData,setEvData] = useState([]);\n\n  const history = useHistory();\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n    GetFleetOperatorAPICall();\n    GetEvDataAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetFleetOperatorAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n        if (responseData.status === 1) {\n         setFleetOpNames(responseData.data);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetEvDataAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getEvAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setEvData(responseData.data);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const addEvInventoryAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(addEvInventoryAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/inventory/evInventory',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n          setButtonDisabled(false);\n          addEvInventoryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const EvInventoryDetailsValidationSchema = yup.object().shape({\n    e_qr_code:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"QR Code is required\"),\n    fleet_owner_id:yup.string()\n        .required(\"Fleet Owner is required\"),\n    hub_id:yup.string()\n        .required(\"Station is required\"),\n    ev_master_id:yup.string()\n        .required(\"EV details is required\"),\n    registration_no:yup.string()\n        .required(\"Registration No is required\"),\n    vechicle_id:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"Vehicle Id is required\"),\n    vehicle_vin:yup.string()\n        .required(\"Vehicle Vin is required\"),    \n  });\n\n  const initialValues = {\n    e_qr_code:\"\",\n    fleet_owner_id:\"\",\n    hub_id:\"\",\n    ev_master_id:\"\",\n    registration_no:\"\",\n    vechicle_id:\"\",\n    vehicle_vin:\"\",\n    remark_1:\"\",\n    remark_2:\"\",\n  };\n\n  //helper\n  //Alert helper methods\n  const addEvInventoryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Add EV</span>\n            <a href=\"evInventory\" className=\"btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> EV List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={EvInventoryDetailsValidationSchema} \n        onSubmit={(values)=>{\n          addEvInventoryAPICall(values);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody>\n                        <CardSubtitle className=\"mb-3\">\n                          <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                            {alertMsg}\n                          </Alert>\n                        </CardSubtitle> \n                        <Row>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                                QR Code\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"QR Code\"\n                                name=\"e_qr_code\"\n                                value={values.e_qr_code}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                className={errors.e_qr_code && touched.e_qr_code ? \"input-error\":null}\n                              />\n                              {errors.e_qr_code && touched.e_qr_code &&(\n                                <span className=\"error\">{errors.e_qr_code}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                              Fleet Owner\n                              </Label>\n                              <Input \n                                type=\"select\"\n                                name=\"fleet_owner_id\"\n                                value={values.fleet_owner_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              >\n                                <option key=\"\" value=\"\">All Fleet</option>\n                                {fleetOpNames.map((item,i)=>\n                                  <option key={i} value={item.fleet_operator_id}>{item.name}</option>\n                                )}\n                              </Input>\n                              {errors.fleet_owner_id && touched.fleet_owner_id &&(\n                                <span className=\"error\">{errors.fleet_owner_id}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={4}>\n                            <FormGroup>\n                              <Label>\n                              Vehicle Id\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Vehicle Id\"\n                                name=\"vechicle_id\"\n                                value={values.vechicle_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.vechicle_id && touched.vechicle_id &&(\n                                <span className=\"error\">{errors.vechicle_id}</span>\n                              )}                        \n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={4}>\n                            <FormGroup>\n                              <Label>\n                              Vehicle Vin\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Vehicle Vin\"\n                                name=\"vehicle_vin\"\n                                value={values.vehicle_vin}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.vehicle_vin && touched.vehicle_vin &&(\n                                <span className=\"error\">{errors.vehicle_vin}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={4}>\n                            <FormGroup>\n                              <Label>\n                                Registration no\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Registration no\"\n                                name=\"registration_no\"\n                                value={values.registration_no}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.registration_no && touched.registration_no &&(\n                                <span className=\"error\">{errors.registration_no}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                              Swapping Station\n                              </Label>\n                              <Input\n                                type=\"select\"\n                                name=\"hub_id\"\n                                value={values.hub_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              >\n                                <option>Select Swapping Station</option>\n                                {stationNameData.map((item,i)=>\n                                  <option value={item.hub_master_id} key={i}>{item.name}</option>\n                                )}\n                              </Input>\n                              {errors.hub_id && touched.hub_id &&(\n                                <span className=\"error\">{errors.hub_id}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                              EV\n                              </Label>\n                              <Input\n                                type=\"select\"\n                                name=\"ev_master_id\"\n                                value={values.ev_master_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              >\n                                <option>Select EV details</option>\n                                {evData.map((item,i)=>\n                                  <option value={item.ev_master_id} key={i}>{item.vehicle_model+\"-\"+item.vehicle_type+\"-\"+item.battery_capacity}</option>\n                                )}\n                              </Input>\n                              {errors.ev_master_id && touched.ev_master_id &&(\n                                <span className=\"error\">{errors.ev_master_id}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                              Remark 1\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Remark 1\"\n                                name=\"remark_1\"\n                                value={values.remark_1}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.remark_1 && touched.remark_1 &&(\n                                <span className=\"error\">{errors.remark_1}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                                Remark 2\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Remark 2\"\n                                name=\"remark_2\"\n                                value={values.remark_2}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.remark_2 && touched.remark_2 &&(\n                                <span className=\"error\">{errors.remark_2}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                        </Row>\n                        <Row>\n                          <Colxx md=\"12\" className=\"text-center\">\n                            <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                <b>Add</b>\n                            </Button>\n                            <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                <b>Cancel</b>\n                            </Button>\n                          </Colxx>\n                        </Row>\n                    </CardBody>\n                  </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AddEvInventory;\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row, FormGroup, Card, CardBody,CardSubtitle,\n  Label,Input, Button,Alert\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getStationsAPI,getEvAPI,getEvInventoryByIdAPI,updateEvInventoryAPI,adminRoot,getFleetOperatorAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport { useHistory,useLocation } from \"react-router-dom\";\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst UpdateEvInventory = () => {\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //dropdown states\n  const [fleetOpNames,setFleetOpNames] = useState([]); \n  const [stationNameData,setStationNameData] = useState([]);\n  const [evData,setEvData] = useState([]);\n  //EV data default states\n  const [eQrCode,setEQrCode] = useState(\"\");\n  const [fleetOwner,setFleetOwner] = useState(\"\");\n  const [hubId,setHubId] = useState(\"\");\n  const [evMasterId,setEvMasterId] = useState(\"\");\n  const [registrationNo,setRegistrationNo] = useState(\"\");\n  const [vechicleId,setVechicleId] = useState(\"\");\n  const [vechicleVin,setVechicleVin] = useState(\"\");\n  const [remark1,setRemark1] = useState(\"\");\n  const [remark2,setRemark2] = useState(\"\");\n\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(()=>{\n    GetFleetOperatorAPICall();\n    GetStationNamesAPICall();\n    GetEvDataAPICall();\n    getEvInventoryByIdAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNameData(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetFleetOperatorAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n        if (responseData.status === 1) {\n         setFleetOpNames(responseData.data);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetEvDataAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getEvAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setEvData(responseData.data);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getEvInventoryByIdAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getEvInventoryByIdAPI,\n    {\n        ev_inventory_id:location.state.ev_inventory_id\n    },\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n        setEQrCode(responseData.data.e_qr_code);\n        setFleetOwner(responseData.data.fleet_owner_id);\n        setHubId(responseData.data.hub_id);\n        setEvMasterId(responseData.data.ev_master_id);\n        setVechicleId(responseData.data.vechicle_id);\n        setVechicleVin(responseData.data.vehicle_vin);\n        setRegistrationNo(responseData.data.registration_no);\n        setRemark1(responseData.data.remark_1);\n        setRemark2(responseData.data.remark_2);\n        }else{\n        console.log(responseData.msg);\n        }\n    }).catch(error=>{\n        console.log(error);\n    })\n}\n  const updateEvInventoryAPICall = async(params) => {\n    setButtonDisabled(true);\n    const currentUser = getCurrentUser();\n    await axios.post(updateEvInventoryAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          history.push({\n            pathname:adminRoot+'/inventory/evInventory',\n            state:{\n              responseStatus:responseData.status,\n              responseMsg:responseData.msg\n            }\n          })\n        }else{\n            setButtonDisabled(false);\n            updateEvInventoryAlert(responseData.msg);\n        }\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //Form Validation Schema\n  const EvInventoryDetailsValidationSchema = yup.object().shape({\n    e_qr_code:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"QR Code is required\"),\n    fleet_owner_id:yup.string()\n        .required(\"Fleet Owner is required\"),\n    hub_id:yup.string()\n        .required(\"Station is required\"),\n    ev_master_id:yup.string()\n        .required(\"EV details is required\"),\n    registration_no:yup.string()\n        .required(\"Registration No is required\"),\n    vechicle_id:yup.string()\n        .matches(/^\\d+$/,\"Only numbers allowed\")\n        .required(\"Vehicle Id is required\"),\n    vehicle_vin:yup.string()\n        .required(\"Vehicle Vin is required\"),    \n  });\n\n  //helper\n  //Alert helper methods\n  const updateEvInventoryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n            <span className=\"page_title\">Update EV</span>\n            <a href=\"evInventory\" className=\"btn-primary default btn-sm float-right\">\n                <b><i className=\"glyph-icon simple-icon-list\"></i> EV List</b>\n            </a>\n          <Separator className=\"mb-5 mt-1\" />\n        </Colxx>\n      </Row>\n      <Formik\n        enableReinitialize={true}\n        initialValues={{\n            e_qr_code:eQrCode,\n            fleet_owner_id:fleetOwner,\n            hub_id:hubId,\n            ev_master_id:evMasterId,\n            registration_no:registrationNo,\n            vechicle_id:vechicleId,\n            vehicle_vin:vechicleVin,\n            remark_1:remark1,\n            remark_2:remark2,\n        }}\n        validationSchema={EvInventoryDetailsValidationSchema} \n        onSubmit={(values)=>{\n          const params={\n                ev_inventory_id:location.state.ev_inventory_id,\n                e_qr_code:values.e_qr_code,\n                fleet_owner_id:values.fleet_owner_id,\n                hub_id:values.hub_id,\n                ev_master_id:values.ev_master_id,\n                registration_no:values.registration_no,\n                vechicle_id:values.vechicle_id,\n                vehicle_vin:values.vehicle_vin,\n                remark_1:values.remark_1,\n                remark_2:values.remark_2,\n            }\n          updateEvInventoryAPICall(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                  <Card className=\"mb-4\">\n                      <CardBody>\n                        <CardSubtitle className=\"mb-3\">\n                          <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                            {alertMsg}\n                          </Alert>\n                        </CardSubtitle> \n                        <Row>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                                QR Code\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"QR Code\"\n                                name=\"e_qr_code\"\n                                value={values.e_qr_code}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                className={errors.e_qr_code && touched.e_qr_code ? \"input-error\":null}\n                              />\n                              {errors.e_qr_code && touched.e_qr_code &&(\n                                <span className=\"error\">{errors.e_qr_code}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                              Fleet Owner\n                              </Label>\n                              <Input \n                                type=\"select\"\n                                name=\"fleet_owner_id\"\n                                value={values.fleet_owner_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              >\n                                <option key=\"\" value=\"\">All Fleet</option>\n                                {fleetOpNames.map(item=>\n                                  <option key={item.fleet_operator_id} value={item.fleet_operator_id}>{item.name}</option>\n                                )}\n                              </Input>\n                              {errors.fleet_owner_id && touched.fleet_owner_id &&(\n                                <span className=\"error\">{errors.fleet_owner_id}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={4}>\n                            <FormGroup>\n                              <Label>\n                              Vehicle Id\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Vehicle Id\"\n                                name=\"vechicle_id\"\n                                value={values.vechicle_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.vechicle_id && touched.vechicle_id &&(\n                                <span className=\"error\">{errors.vechicle_id}</span>\n                              )}                        \n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={4}>\n                            <FormGroup>\n                              <Label>\n                              Vehicle Vin\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Vehicle Vin\"\n                                name=\"vehicle_vin\"\n                                value={values.vehicle_vin}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.vehicle_vin && touched.vehicle_vin &&(\n                                <span className=\"error\">{errors.vehicle_vin}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={4}>\n                            <FormGroup>\n                              <Label>\n                                Registration no\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Registration no\"\n                                name=\"registration_no\"\n                                value={values.registration_no}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.registration_no && touched.registration_no &&(\n                                <span className=\"error\">{errors.registration_no}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                              Swapping Station\n                              </Label>\n                              <Input\n                                type=\"select\"\n                                name=\"hub_id\"\n                                value={values.hub_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              >\n                                <option>Select Swapping Station</option>\n                                {stationNameData.map((item)=>\n                                  <option value={item.hub_master_id} key={item.hub_master_id}>{item.name}</option>\n                                )}\n                              </Input>\n                              {errors.hub_id && touched.hub_id &&(\n                                <span className=\"error\">{errors.hub_id}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                              EV\n                              </Label>\n                              <Input\n                                type=\"select\"\n                                name=\"ev_master_id\"\n                                value={values.ev_master_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              >\n                                <option>Select EV details</option>\n                                {evData.map((item)=>\n                                  <option value={item.ev_master_id} key={item.ev_master_id}>{item.vehicle_model+\"-\"+item.vehicle_type+\"-\"+item.battery_capacity}</option>\n                                )}\n                              </Input>\n                              {errors.ev_master_id && touched.ev_master_id &&(\n                                <span className=\"error\">{errors.ev_master_id}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                              Remark 1\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Remark 1\"\n                                name=\"remark_1\"\n                                value={values.remark_1}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.remark_1 && touched.remark_1 &&(\n                                <span className=\"error\">{errors.remark_1}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                          <Colxx md={6}>\n                            <FormGroup>\n                              <Label>\n                                Remark 2\n                              </Label>\n                              <Input\n                                type=\"text\"\n                                placeholder=\"Remark 2\"\n                                name=\"remark_2\"\n                                value={values.remark_2}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                              />\n                              {errors.remark_2 && touched.remark_2 &&(\n                                <span className=\"error\">{errors.remark_2}</span>\n                              )}\n                            </FormGroup>\n                          </Colxx>\n                        </Row>\n                        <Row>\n                          <Colxx md=\"12\" className=\"text-center\">\n                            <Button color=\"primary\" className=\"default mr-2\" onClick={handleSubmit} disabled={buttonDisabled}>\n                                <b>Update</b>\n                            </Button>\n                            <Button color=\"light\" className=\"default\" onClick={()=>{history.goBack()}}>\n                                <b>Cancel</b>\n                            </Button>\n                          </Colxx>\n                        </Row>\n                    </CardBody>\n                  </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n    </>\n  );\n};\n\nexport default UpdateEvInventory;\n","import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody,  \n  FormGroup, Label,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n  Input, Table,Button\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,getStationsByCityAPI,bsnReportAPI,downloadBsnReportAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\n\nconst BatterySwappingNetworkReport = ({}) => {\n  //date states\n  const [fromDate,setFromDate] = useState(null);\n  const [toDate,setToDate] = useState(null);\n  //station List\n  const [stationNames,setStationNames] = useState([]);\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(false);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [report,setReport] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n  const [stationId,setStationId] = useState(\"\");\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n  },[]);\n\n  useEffect(()=>{\n    GetStationNamesAPICall(countryId,stateId,cityId);\n  },[countryId,stateId,cityId])\n\n  //API calls\n  const GetStationNamesAPICall = async(country,state,city) => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsByCityAPI+\"country_id=\"+country+\"&state_id=\"+state+\"&city_id=\"+city,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNames(responseData.data)\n      }else{\n        setStationNames([]);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(\"coutries\",responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          setStateList([]);\n          setCityList([]);\n          setStationNames([]);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          setCityList([]);\n          setStationNames([]);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getBSNReportAPICall = async() => {\n    setButtonDisabled(true);\n    setReport([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    // let tempFromDate,tempToDate;\n    // if (fromDate == null | fromDate ==\"\") {\n    //   tempFromDate = fromDate;\n    // }else{\n    //   tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear();\n    // }\n    // if (toDate == null) {\n    //   tempToDate = toDate;\n    // }else{\n    //   tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear();\n    // }\n    const params = {\n      country_id:countryId,\n      state_id:stateId,\n      city_id:cityId,\n      hub_id:stationId,\n      // from_date:tempFromDate,\n      // to_date:tempToDate,\n      page:pageCount\n    }\n    \n    await axios.post(bsnReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page);\n          setReport(responseData.data.data);\n        }else{\n            console.log(responseData.msg);\n        }\n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n  const downloadBSNReportAPICall = async() => {\n    setButtonDisabled(true);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    const params = {\n      country_id:countryId,\n      state_id:stateId,\n      city_id:cityId,\n      hub_id:stationId,\n    }\n    \n    await axios.post(downloadBsnReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          const link = document.createElement('a');\n          link.href = responseData.data.file;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }else{\n          alert(responseData.msg);\n        }    \n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    setStateId(\"\");\n    setCityId(\"\");\n    setStationId(\"\");\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    setCityId(\"\");\n    setStationId(\"\");\n    getCityNamesAPICall(state);\n  }\n  //handle city select\n  const handleCitySelect = (city) => {\n    setCityId(city);\n    setStationId(\"\");\n  }\n  //pagination method\n  const handlePageChange = (index) =>{\n    setPageCount(index+1)\n    getBSNReportAPICall();\n  }\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={()=>handlePageChange(i)}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Battery Swapping Network Report</span>\n        <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n          <Colxx xxs=\"12\" className=\"mb-4\">\n              <Card>\n                  <CardBody>\n                    <Row>\n                      <Colxx lg={2} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            Country\n                          </Label>\n                          <Input \n                          type=\"select\"\n                          name=\"country_id\"\n                          value={countryId}\n                          onChange={e=>handleCountrySelect(e.target.value)}\n                          >\n                            <option key=\"\" value=\"\">All Countries</option>\n                            {countryList.map((item,index)=>\n                              <option key={index} value={item.id}>{item.country_name}</option>\n                            )}\n                          </Input>\n                        </FormGroup>\n                      </Colxx>\n                      <Colxx lg={2} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            State\n                          </Label>\n                          <Input \n                          type=\"select\"\n                          name=\"state_id\"\n                          value={stateId}\n                          onChange={e=>handleStateSelect(e.target.value)}\n                          >\n                            <option key=\"\" value=\"\">All States</option>\n                            {stateList.map((item,index)=>\n                              <option key={index} value={item.id}>{item.state_name}</option>\n                            )}\n                          </Input>\n                        </FormGroup>\n                      </Colxx>\n                      <Colxx lg={2} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            City\n                          </Label>\n                          <Input \n                          type=\"select\"\n                          name=\"city_id\"\n                          value={cityId}\n                          onChange={e=>handleCitySelect(e.target.value)}\n                          >\n                            <option key=\"\" value=\"\">All Cities</option>\n                            {cityList.map((item,index)=>\n                              <option key={index} value={item.id}>{item.city_name}</option>\n                            )}\n                          </Input>\n                        </FormGroup>\n                      </Colxx>\n                      <Colxx lg={2} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            Station\n                          </Label>\n                          <Input \n                          type=\"select\"\n                          name=\"station\"\n                          value={stationId}\n                          onChange={e=> setStationId(e.target.value)}>\n                            <option key=\"\" value=\"\">All Station</option>\n                            {stationNames.map((item,index)=>\n                              <option key={index} value={item.hub_master_id}>{item.name}</option>\n                            )}\n                          </Input>\n                        </FormGroup>\n                      </Colxx>\n                      {/* <Colxx lg={3} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            From Date\n                          </Label>\n                          <DatePicker\n                          placeholderText=\"From Date\"\n                          selected={fromDate}\n                          onChange={date=>setFromDate(date)}\n                          dateFormat=\"dd/MM/yyyy\"\n                          />\n                        </FormGroup>\n                      </Colxx>\n                      <Colxx lg={3} sm={12}>\n                        <FormGroup>\n                          <Label>\n                            To Date\n                          </Label>\n                          <DatePicker\n                          placeholderText=\"To Date\"\n                          selected={toDate}\n                          onChange={date=>setToDate(date)}\n                          dateFormat=\"dd/MM/yyyy\"\n                          />\n                        </FormGroup>\n                      </Colxx> */}\n                      <Colxx  lg={2} sm={12}>\n                        <Button color=\"primary\" className=\"default mt-4 custom_btn\" onClick={() =>{setPageCount(1);getBSNReportAPICall();}} disabled={buttonDisabled}>\n                          <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Generate Report</b>\n                        </Button>\n                      </Colxx>\n                      <Colxx  lg={2} sm={12}>\n                        <Button color=\"success\" className=\"default mt-4 custom_btn\" onClick={() =>{downloadBSNReportAPICall();}} disabled={buttonDisabled}>\n                          <i className=\"glyph-icon simple-icon-download font-weight-bold\"></i> <b>Download Report</b>\n                        </Button>\n                      </Colxx>\n                    </Row>\n                  </CardBody>\n              </Card>\n          </Colxx>\n        </Row>\n      <Row>\n          <Colxx sm={12} lg={12}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Colxx md=\"6\">\n                    <h3>Battery Swapping Network Report Detail</h3>\n                  </Colxx>\n                  {report.length>0 &&\n                    <Colxx md=\"6\">\n                      <div className=\"text-right mr-2 \">\n                        <span>Page </span>\n                        <UncontrolledDropdown className=\"d-inline-block\">\n                          <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                            {pageCount}\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdownMenu\">\n                            {renderPageList()}\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <span> of </span>\n                        {lastPageCount}\n                      </div>\n                    </Colxx>\n                  }\n                </Row>\n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Country</th>\n                      <th>State</th>\n                      <th>City</th>\n                      <th>Station</th>\n                      <th>Total No. of EV</th>\n                      <th>Total No. of Charger</th>\n                      <th>Total No. of Connectors</th>\t\t\t\t\t\t\t\t\t\n                      <th>Total No. of Batteries</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"9\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                      report.length > 0 ?\n                          report.map((item,index)=>\n                            <tr key={index}>\n                              <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                              <td>{item.country_name}</td>\n                              <td>{item.state_name}</td>\n                              <td>{item.city_name}</td>\n                              <td>{item.hub_name}</td>\n                              <td>{item.total_ev}</td>\n                              <td>{item.total_charger}</td>\n                              <td>{item.total_connector}</td>\n                              <td>{item.total_batteries}</td>\n                            </tr>\n                          ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"9\">Data  Not  Found</td>\n                      </tr>\n                  }\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default BatterySwappingNetworkReport;\n","import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody, FormGroup, Label,\n  Input, Button,Alert\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {historyReportAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\n\nconst BatteryHistoricalData = ({}) => {\n  //date states\n  const [fromDate,setFromDate] = useState();\n  const [toDate,setToDate] = useState();\n  const [bin,setBin] = useState();\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(false);\n\n  //helper methods\n  //Alert helper methods\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  const downloadExcelReport = async() => {\n    setAlertVisible(false);\n    \n    const currentUser = getCurrentUser();\n    let tempFromDate=null,tempToDate=null;\n    if (fromDate != null && fromDate !=\"\") {\n      tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear()+\" \"+fromDate.getHours()+\":\"+fromDate.getMinutes()+\":\"+fromDate.getSeconds();\n    }\n    if (toDate != null && toDate !=\"\") {\n      tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear()+\" \"+toDate.getHours()+\":\"+toDate.getMinutes()+\":\"+toDate.getSeconds();\n    }\n    if (tempToDate == null || tempFromDate ==null) {\n      setAlertVisible(true);\n      setAlertMsg(\"Please Select From and To date.\");\n      setAlertColor(\"danger\");\n      return; \n    }\n    setButtonDisabled(true);\n    setIsLoading(true);\n    \n    const params = {\n      bin:bin,\n      from_date:tempFromDate,\n      to_date:tempToDate\n    }\n    \n    await axios.post(historyReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          const link = document.createElement('a');\n          link.href = responseData.data.file;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }else{\n          setAlertVisible(true);\n          setAlertMsg(responseData.msg);\n          setAlertColor(\"danger\");\n        }        \n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n  //Form Validation Schema\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Battery Historical Data</span>\n        <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n            <Card>\n                <CardBody>\n                  <h3>Select Option</h3>\n                  <hr/>\n                  <Row>\n                    <Colxx md=\"12\">\n                      <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                        {alertMsg}\n                      </Alert>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          BIN\n                        </Label>\n                        <Input \n                          type=\"text\"\n                          placeholder=\"BIN\"\n                          name=\"bin\"\n                          value={bin}\n                          onChange={e=>setBin(e.target.value)}\n                        ></Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          From Date\n                        </Label>\n                        <DatePicker\n                        showTimeInput\n                        placeholderText=\"From Date\"\n                        selected={fromDate}\n                        onChange={date=>setFromDate(date)}\n                        dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          To Date\n                        </Label>\n                        <DatePicker\n                        showTimeInput\n                        placeholderText=\"From Date\"\n                        selected={toDate}\n                        onChange={date=>setToDate(date)}\n                        dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx md=\"3\">\n                      <Button color=\"primary\" className=\"default mt-4\" onClick={() => downloadExcelReport()} disabled={buttonDisabled}>\n                        <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>{isLoading ?\n<span>Please Wait</span> : <span>Download Excel Report</span>}</b>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </CardBody>\n            </Card>\n        </Colxx>\n      </Row>    \n    </>\n  );\n};\n\nexport default BatteryHistoricalData;\n","import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody, FormGroup, Label,\n  Input, Table,Button,Alert\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport CustomSelectInput from '../../../components/common/CustomSelectInput';\nimport Select from 'react-select';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getStationsAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,getFleetOperatorAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst ChargingSummary = ({}) => {\n  //date states\n  const [fromDate,setFromDate] = useState();\n  const [toDate,setToDate] = useState();\n  //alert states\n  const [alertVisible,setAlertVisible] = useState(false);\n  const [alertMsg,setAlertMsg] = useState(\"\");\n  const [alertColor,setAlertColor] = useState(\"\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(true);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [stationNames,setStationNames] = useState([]);\n  const [fleetOpNames,setFleetOpNames] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n  //multiselect state\n  const [fleetSelectedOptions, setFleetSelectedOptions] = useState([]);\n  const [stationSelectedOptions, setStationSelectedOptions] = useState([]);\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n    GetStationNamesAPICall();\n    GetFleetOperatorAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      let stations=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           stations.push({label:item.name,value:item.hub_master_id,key:index})\n         })\n         setStationNames(stations);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetFleetOperatorAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      let fleet=[];\n        if (responseData.status === 1) {\n          responseData.data.map((item,index)=>{\n           fleet.push({label:item.name,value:item.fleet_operator_id,key:index})\n         })\n         setFleetOpNames(fleet);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //Alert helper methods\n  const chargingSummaryAlert = (msg)=>{\n    setAlertVisible(true);\n    setAlertMsg(msg);\n    setAlertColor(\"danger\");\n  }\n  const onDismissAlert = ()=>{\n    setAlertVisible(false);\n  }\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    getCityNamesAPICall(state);\n  }\n  //handle city select\n  const handleCitySelect = (city) => {\n    setCityId(city);\n  }\n  //Form Validation Schema\n  const ChargingSummaryDetailsValidationSchema = yup.object().shape({\n    charger_id:yup.string()\n        .required(\"Charger is required\"),\n    connector_id:yup.string()\n        .required(\"Connector is required\"),\n  });\n\n  const initialValues = {\n    charger_id:\"\",\n    connector_id:\"\",\n  };\n  \n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Charging Summary</span>\n        <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={ChargingSummaryDetailsValidationSchema} \n        onSubmit={(values)=>{\n            const fleetSelected = [];\n            fleetSelectedOptions.map(item=>{\n                fleetSelected.push(item.value)\n            })\n            const stationSelected = [];\n            stationSelectedOptions.map(item=>{\n                stationSelected.push(item.value)\n            })\n          const params = {\n            country_id:countryId,\n            state_id:stateId,\n            city_id:cityId,\n            fleet_operator_id:fleetSelected,\n            hub_id:stationSelectedOptions,\n            charger_id:values.charger_id,\n            connector_id:values.connector_id,\n            from_date:fromDate,\n            to_date:toDate\n          }\n          console.log(params);\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                    <Card>\n                        <CardBody>\n                          <Row>\n                          <Colxx md=\"6\">\n                            <h3>Select Option</h3>\n                            </Colxx>\n                            <Colxx md=\"6\">\n                            <Button color=\"primary\" className=\"default mr-2 float-right\" onClick={handleSubmit} >\n                              <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Generate Report</b>\n                            </Button>\n                            </Colxx>\n                          </Row>\n                          <hr/>\n                          <Row>\n                            <Colxx md=\"12\">\n                              <Alert color={alertColor} isOpen={alertVisible} toggle={onDismissAlert}>\n                                {alertMsg}\n                              </Alert>\n                            </Colxx>\n                          <Colxx lg={4} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Country\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"country_id\"\n                                value={countryId}\n                                onChange={e=>handleCountrySelect(e.target.value)}\n                                >\n                                  <option>Select Country</option>\n                                  {countryList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.country_name}</option>\n                                  )}\n                                </Input>\n                                {/* {errors.country_id && touched.country_id &&(\n                                  <span className=\"error\">{errors.country_id}</span>\n                                )} */}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={4} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  State\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"state_id\"\n                                value={stateId}\n                                onChange={e=>handleStateSelect(e.target.value)}\n                                >\n                                  <option>Select State</option>\n                                  {stateList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.state_name}</option>\n                                  )}\n                                </Input>\n                                {/* {errors.state && touched.state &&(\n                                  <span className=\"error\">{errors.state}</span>\n                                )} */}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={4} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  City\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"city_id\"\n                                value={cityId}\n                                onChange={e=>handleCitySelect(e.target.value)}\n                                >\n                                  <option>Select City</option>\n                                  {cityList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.city_name}</option>\n                                  )}\n                                </Input>\n                                {/* {errors.city && touched.city &&(\n                                  <span className=\"error\">{errors.city}</span>\n                                )} */}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={6} sm={12}>\n                                <FormGroup>\n                                    <Label>\n                                    Fleet Operator\n                                    </Label>\n                                    <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={fleetSelectedOptions}\n                                    onChange={setFleetSelectedOptions}\n                                    options={fleetOpNames}\n                                    />\n                                </FormGroup>\n                            </Colxx>\n                            <Colxx lg={6} sm={12}>\n                                <FormGroup>\n                                    <Label>\n                                    Station\n                                    </Label>\n                                    <Select\n                                    components={{ Input: CustomSelectInput }}\n                                    className=\"react-select\"\n                                    classNamePrefix=\"react-select\"\n                                    isMulti\n                                    name=\"form-field-name\"\n                                    value={stationSelectedOptions}\n                                    onChange={setStationSelectedOptions}\n                                    options={stationNames}\n                                    />\n                                </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Charger\n                                </Label>\n                                <Input \n                                type=\"text\"\n                                placeholder=\"Charger Id\"\n                                name=\"charger_id\"\n                                value={values.charger_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                </Input>\n                                {errors.charger_id && touched.charger_id &&(\n                                  <span className=\"error\">{errors.charger_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Connector\n                                </Label>\n                                <Input \n                                type=\"text\"\n                                placeholder=\"Connector Id\"\n                                name=\"connector_id\"\n                                value={values.connector_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                </Input>\n                                {errors.connector_id && touched.connector_id &&(\n                                  <span className=\"error\">{errors.connector_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  From Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"From Date\"\n                                selected={fromDate}\n                                onChange={date=>setFromDate(date)}\n                                dateFormat=\"dd/MM/yyyy\"\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  To Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"To Date\"\n                                selected={toDate}\n                                onChange={date=>setToDate(date)}\n                                dateFormat=\"dd/MM/yyyy\"\n                                />\n                              </FormGroup>\n                            </Colxx>\n                          </Row>\n                        </CardBody>\n                    </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n      <Row>\n          <Colxx sm={12} lg={12}>\n            <Card>\n              <CardBody>\n                <h3>Charging Summary</h3>\n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Date</th>\n                      <th>Charger Id</th>\n                      <th>Connector ID</th>\n                      <th>BIN</th>\n                      <th>Start SoC</th>\n                      <th>Start Battery Voltage</th>\n                      <th>Start Whr</th>\t\t\n                      <th>Start Time</th>\n                      <th>Stop SoC</th>\n                      <th>Stop Battery Voltage</th>\n                      <th>Stop Whr</th>\n                      <th>Stop Time</th>\n                      <th>Charging Duration</th>\n                      <th>Check cell balancing happened</th>\n                      <th>Energy exchanged (DC)</th>\n                      <th>Unit/SoC</th>\n                      <th>Session ID</th>\n                      <th>Energy Meter Reading</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {/* {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"7\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                      userList.length > 0 ?\n                          userList.map((item,index)=>\n                            <tr key={item.id}>\n                              <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index+1}</th>\n                              <td>{item.username}</td>\n                              <td>{item.name}</td>\n                              <td>{item.contact_number}</td>\n                              <td>{item.email}</td>\n                              <td>{item.role_name}</td>\n                            </tr>\n                          ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"7\">Data  Not  Found</td>\n                      </tr>\n                  } */}\n                    <tr>\n                      <th scope=\"row\">1</th>\n                      <td>Country 1</td>\n                      <td>State 1</td>\n                      <td>City 1</td>\n                      <td>Station 1</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                      <td>12</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default ChargingSummary;\n","import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody, FormGroup, Label,\n  Input, Table,Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getStationsByCityAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,getFleetOperatorAPI,swappingTransactionReportAPI,downloadSwappingReportAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\n\nconst SwappingTransaction = ({}) => {\n  //date states\n  const [fromDate,setFromDate] = useState(null);\n  const [toDate,setToDate] = useState(null);\n  //time state\n  // const [startTime,setStartTime] = useState();\n  // const [endTime,setEndTime] = useState();\n  //station List\n  const [stationNames,setStationNames] = useState([]);\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(false);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [fleetOpNames,setFleetOpNames] = useState([]); \n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n  const [stationId,setStationId] = useState(\"\");\n  const [fleetOperatorId,setFleetOperatorId] = useState(\"\");\n  const [evQrCode,setEvQrCode] = useState(\"\");\n  const [report,setReport] = useState([]);\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n    GetFleetOperatorAPICall();\n  },[]);\n\n  useEffect(()=>{\n    GetStationNamesAPICall(countryId,stateId,cityId);\n  },[countryId,stateId,cityId]);\n\n  //API calls\n  const GetStationNamesAPICall = async(country,state,city) => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsByCityAPI+\"country_id=\"+country+\"&state_id=\"+state+\"&city_id=\"+city,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNames(responseData.data)\n      }else{\n        setStationNames([]);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetFleetOperatorAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n        if (responseData.status === 1) {\n         setFleetOpNames(responseData.data);\n      }else{\n        setFleetOpNames([]);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          setStateList([]);\n          setCityList([]);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          setCityList([]);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getSwappingTransactionReportAPICall = async() => {\n    setButtonDisabled(true);\n    setReport([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    let tempFromDate,tempToDate;\n    if (fromDate == null | fromDate ==\"\") {\n      tempFromDate = fromDate;\n    }else{\n      tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear()+\" \"+fromDate.getHours()+\":\"+fromDate.getMinutes()+\":\"+fromDate.getSeconds();\n    }\n    if (toDate == null) {\n      tempToDate = toDate;\n    }else{\n      tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear()+\" \"+toDate.getHours()+\":\"+toDate.getMinutes()+\":\"+toDate.getSeconds();\n    }\n    const params = {\n      country_id:countryId,\n      state_id:stateId,\n      city_id:cityId,\n      hub_id:stationId,\n      operator_id:fleetOperatorId,\n      ev_qr_code:evQrCode,\n      from_date:tempFromDate,\n      to_date:tempToDate,\n      page:pageCount\n    }\n    await axios.post(swappingTransactionReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n            setReport(responseData.data.data);\n        }else{\n            console.log(responseData.msg);\n        }\n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  const downloadSwappingReportAPICall = async() => {\n    setButtonDisabled(true);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    let tempFromDate,tempToDate;\n    if (fromDate == null | fromDate ==\"\") {\n      tempFromDate = fromDate;\n    }else{\n      tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear()+\" \"+fromDate.getHours()+\":\"+fromDate.getMinutes()+\":\"+fromDate.getSeconds();\n    }\n    if (toDate == null) {\n      tempToDate = toDate;\n    }else{\n      tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear()+\" \"+toDate.getHours()+\":\"+toDate.getMinutes()+\":\"+toDate.getSeconds();\n    }\n    const params = {\n      country_id:countryId,\n      state_id:stateId,\n      city_id:cityId,\n      hub_id:stationId,\n      operator_id:fleetOperatorId,\n      ev_qr_code:evQrCode,\n      from_date:tempFromDate,\n      to_date:tempToDate,\n      page:pageCount\n    }\n    await axios.post(downloadSwappingReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          const link = document.createElement('a');\n          link.href = responseData.data.file;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }else{\n          alert(responseData.msg);\n        }  \n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    setStateId(\"\");\n    setCityId(\"\");\n    setStationId(\"\");\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    setCityId(\"\");\n    setStationId(\"\");\n    getCityNamesAPICall(state);\n  }\n  //pagination method\n  const handlePageChange = (index) =>{\n    setPageCount(index+1)\n    getSwappingTransactionReportAPICall();\n  }\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={()=>handlePageChange(i)}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  // const ExampleCustomTimeInput = () => (\n  //   <input\n  //     value={startTime}\n  //     onChange={e => setStartTime(e.target.value)}\n  //     style={{ border: \"solid 1px pink\" }}\n  //   />\n  // );\n  \n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <span className=\"page_title\">Swapping Transaction</span>\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n            <Card>\n                <CardBody>\n                  <Row>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          Country\n                        </Label>\n                        <Input \n                        type=\"select\"\n                        name=\"country_id\"\n                        value={countryId}\n                        onChange={e=>handleCountrySelect(e.target.value)}\n                        >\n                          <option key=\"\" value=\"\">All Countries</option>\n                          {countryList.map((item,index)=>\n                            <option key={index} value={item.id}>{item.country_name}</option>\n                          )}\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          State\n                        </Label>\n                        <Input \n                        type=\"select\"\n                        name=\"state_id\"\n                        value={stateId}\n                        onChange={e=>handleStateSelect(e.target.value)}\n                        >\n                          <option key=\"\" value=\"\">All States</option>\n                          {stateList.map((item,index)=>\n                            <option key={index} value={item.id}>{item.state_name}</option>\n                          )}\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          City\n                        </Label>\n                        <Input \n                        type=\"select\"\n                        name=\"city_id\"\n                        value={cityId}\n                        onChange={e=>{setCityId(e.target.value);setStationId(\"\");}}\n                        >\n                          <option key=\"\" value=\"\">All Cities</option>\n                          {cityList.map((item,i)=>\n                            <option key={i} value={item.id}>{item.city_name}</option>\n                          )}\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          Station\n                        </Label>\n                        <Input \n                        type=\"select\"\n                        name=\"station\"\n                        value={stationId}\n                        onChange={e=>setStationId(e.target.value)}>\n                          <option key=\"\" value=\"\">All Stations</option>\n                          {stationNames.map((item,i)=>\n                            <option key={i} value={item.hub_master_id}>{item.name}</option>\n                          )}\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          Fleet Operator\n                        </Label>\n                        <Input \n                        type=\"select\"\n                        name=\"fleet_operator_id\"\n                        value={fleetOperatorId}\n                        onChange={e=>setFleetOperatorId(e.target.value)}\n                        >\n                          <option>All Fleet Operator</option>\n                          {fleetOpNames.map((item,i)=>\n                            <option key={i} value={item.fleet_operator_id}>{item.name}</option>\n                          )}\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          EV QR Code\n                        </Label>\n                        <Input \n                          type=\"number\"\n                          placeholder=\"EV QR Code\"\n                          name=\"ev_qr_code\"\n                          value={evQrCode}\n                          onChange={e=>setEvQrCode(e.target.value)}\n                        >\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          From Date\n                        </Label>\n                        <DatePicker\n                        placeholderText=\"From Date\"\n                        showTimeInput\n                        selected={fromDate}\n                        onChange={date=>setFromDate(date)}\n                        dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                        // customTimeInput={<ExampleCustomTimeInput />}\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          To Date\n                        </Label>\n                        <DatePicker\n                        placeholderText=\"To Date\"\n                        showTimeInput\n                        selected={toDate}\n                        onChange={date=>setToDate(date)}\n                        dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    {/* <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          Start Time\n                        </Label>\n                        <DatePicker\n                        showTimeSelect\n                        placeholderText=\"Start Time\"\n                        selected={startTime}\n                        onChange={date=>setStartTime(date)}\n                        />\n                      </FormGroup>\n                    </Colxx> */}\n                    {/* <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          End Time\n                        </Label>\n                        <DatePicker\n                        showTimeSelect\n                        placeholderText=\"End Time\"\n                        selected={endTime}\n                        onChange={date=>setEndTime(date)}\n                        />\n                      </FormGroup>\n                    </Colxx> */}\n                    <Colxx lg={6} sm={12}>\n                      <Button color=\"primary\" className=\"default mr-2\" onClick={() =>{setPageCount(1);getSwappingTransactionReportAPICall();}} disabled={buttonDisabled}>\n                        <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Generate Report</b>\n                      </Button>\n                      <Button color=\"success\" className=\"default\" onClick={() =>{downloadSwappingReportAPICall();}} disabled={buttonDisabled}>\n                        <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Download Report</b>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </CardBody>\n            </Card>\n        </Colxx>\n      </Row>\n      <Row>\n          <Colxx sm={12} lg={12}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Colxx md=\"6\">\n                    <h3>Swapping Transaction Report</h3>\n                  </Colxx>\n                  {report.length>0 &&\n                    <Colxx md=\"6\">\n                      <div className=\"text-right mr-2 \">\n                        <span>Page </span>\n                        <UncontrolledDropdown className=\"d-inline-block\">\n                          <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                            {pageCount}\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdownMenu\">\n                            {renderPageList()}\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <span> of </span>\n                        {lastPageCount}\n                      </div>\n                    </Colxx>\n                  }\n                </Row>\n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Station</th>\n                      <th>Operator</th>\n                      <th>Fleet Operator</th>\n                      <th>EV QR Code</th>\n                      <th>In Time Stamp</th>\n                      <th>Battery IN</th>\n                      <th>Soc</th>\n                      <th>BV</th>\t\t\t\t\t\t\t\t\t\n                      <th>Ahr</th>\n                      <th>Kwh</th>\n                      <th>Out Time Stamp</th>\n                      <th>Battery Out</th>\n                      <th>Soc</th>\n                      <th>BV</th>\t\t\t\t\t\t\t\t\t\n                      <th>Ahr</th>\n                      <th>Kwh</th>\n                      <th>Energy Sold</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"17\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                      report.length > 0 ?\n                          report.map((item,index)=>\n                          <>\n                            <tr key={index}>\n                              <th scope=\"row\" rowSpan=\"2\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                              <td rowSpan=\"2\">{item.station_name}</td>\n                              <td rowSpan=\"2\">{item.operator}</td>\n                              <td rowSpan=\"2\">{item.fleet_operator_name}</td>\n                              <td rowSpan=\"2\">{item.e_qr_code}</td>\n                              <td rowSpan=\"2\">{item.start_time}</td>\n                              <td>{item.discharged_battery_bin_1}</td>\n                              <td>{item.discharged_battery_soc_1}</td>\n                              <td>{item.discharged_battery_bv_1}</td>\n                              <td>{item.discharged_battery_rec_1}</td>\n                              <td>{(item.discharged_battery_bv_1*item.discharged_battery_rec_1).toFixed(2)}</td>\n                              <td rowSpan=\"2\">{item.end_time}</td>\n                              <td>{item.charged_battery_bin_1}</td>\n                              <td>{item.charged_battery_soc_1}</td>\n                              <td>{item.charged_battery_bv_1}</td>\n                              <td>{item.charged_battery_rec_1}</td>\n                              <td>{(item.charged_battery_bv_1*item.charged_battery_rec_1).toFixed(2)}</td>\n                              <td>{((item.charged_battery_bv_1*item.charged_battery_rec_1)-(item.discharged_battery_bv_1*item.discharged_battery_rec_1)).toFixed(2)}</td>\n                            </tr>\n                            <tr>\n                              <td>{item.discharged_battery_bin_2}</td>\n                              <td>{item.discharged_battery_soc_2}</td>\n                              <td>{item.discharged_battery_bv_2}</td>\n                              <td>{item.discharged_battery_rec_2}</td>\n                              <td>{(item.discharged_battery_bv_2*item.discharged_battery_rec_2).toFixed(2)}</td>\n                              <td>{item.charged_battery_bin_2}</td>\n                              <td>{item.charged_battery_soc_2}</td>\n                              <td>{item.charged_battery_bv_2}</td>\n                              <td>{item.charged_battery_rec_2}</td>\n                              <td>{(item.charged_battery_bv_2*item.charged_battery_rec_2).toFixed(2)}</td>\n                              <td>{((item.charged_battery_bv_2*item.charged_battery_rec_2)-(item.discharged_battery_bv_1*item.discharged_battery_rec_2)).toFixed(2)}</td>\n                            </tr>\n                          </>\n                          ):<>\n                          <tr>\n                          <td className=\"text-center text-danger\" colSpan=\"17\">Data  Not  Found</td>\n                          </tr>\n                          </>\n                  }\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default SwappingTransaction;","import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody, FormGroup, Label,\n  Input, Table,Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getStationsByCityAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,getFleetOperatorAPI,swapReportAPI,downloadSwapReportAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nconst SwapReport = ({}) => {\n  //date states\n  const [fromDate,setFromDate] = useState(null);\n  const [toDate,setToDate] = useState(null);\n  //time state\n  // const [startTime,setStartTime] = useState();\n  // const [endTime,setEndTime] = useState();\n  //station List\n  const [stationNames,setStationNames] = useState([]);\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(false);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [fleetOpNames,setFleetOpNames] = useState([]); \n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n  const [stationId,setStationId] = useState(\"\");\n  const [fleetOperatorId,setFleetOperatorId] = useState(\"\");\n  const [evQrCode,setEvQrCode] = useState(\"\");\n  const [report,setReport] = useState([]);\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n    GetFleetOperatorAPICall();\n  },[]);\n\n  useEffect(()=>{\n    GetStationNamesAPICall(countryId,stateId,cityId);\n  },[countryId,stateId,cityId]);\n\n  //API calls\n  const GetStationNamesAPICall = async(country,state,city) => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsByCityAPI+\"country_id=\"+country+\"&state_id=\"+state+\"&city_id=\"+city,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNames(responseData.data)\n      }else{\n        setStationNames([]);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const GetFleetOperatorAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getFleetOperatorAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n        if (responseData.status === 1) {\n         setFleetOpNames(responseData.data);\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          setStateList([]);\n          setCityList([]);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          setCityList([]);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getSwapReportAPICall = async() => {\n    setButtonDisabled(true);\n    setReport([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    let tempFromDate,tempToDate;\n    if (fromDate == null | fromDate ==\"\") {\n      tempFromDate = fromDate;\n    }else{\n      tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear()+\" \"+fromDate.getHours()+\":\"+fromDate.getMinutes()+\":\"+fromDate.getSeconds();\n    }\n    if (toDate == null) {\n      tempToDate = toDate;\n    }else{\n      tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear()+\" \"+toDate.getHours()+\":\"+toDate.getMinutes()+\":\"+toDate.getSeconds();\n    }\n    const params = {\n      country_id:countryId,\n      state_id:stateId,\n      city_id:cityId,\n      hub_id:stationId,\n      operator_id:fleetOperatorId,\n      ev_qr_code:evQrCode,\n      from_date:tempFromDate,\n      to_date:tempToDate,\n      page:pageCount\n    }\n    await axios.post(swapReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page)\n          setReport(responseData.data.data);\n        }else{\n          console.log(responseData.msg);\n        }\n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n  const downloadSwapReportAPICall = async() => {\n    setButtonDisabled(true);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    let tempFromDate,tempToDate;\n    if (fromDate == null | fromDate ==\"\") {\n      tempFromDate = fromDate;\n    }else{\n      tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear()+\" \"+fromDate.getHours()+\":\"+fromDate.getMinutes()+\":\"+fromDate.getSeconds();\n    }\n    if (toDate == null) {\n      tempToDate = toDate;\n    }else{\n      tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear()+\" \"+toDate.getHours()+\":\"+toDate.getMinutes()+\":\"+toDate.getSeconds();\n    }\n    const params = {\n      country_id:countryId,\n      state_id:stateId,\n      city_id:cityId,\n      hub_id:stationId,\n      operator_id:fleetOperatorId,\n      ev_qr_code:evQrCode,\n      from_date:tempFromDate,\n      to_date:tempToDate,\n      page:pageCount\n    }\n    await axios.post(downloadSwapReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          const link = document.createElement('a');\n          link.href = responseData.data.file;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }else{\n          alert(responseData.msg);\n        }  \n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    setStateId(\"\");\n    setCityId(\"\");\n    setStationId(\"\");\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    setCityId(\"\");\n    setStationId(\"\");\n    getCityNamesAPICall(state);\n  }\n  //pagination method\n  const handlePageChange = (index) =>{\n    setPageCount(index+1)\n    getSwapReportAPICall();\n  }\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={()=>handlePageChange(i)}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  \n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Swap Report</span>\n        <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx xxs=\"12\" className=\"mb-4\">\n            <Card>\n                <CardBody>\n                  <Row>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          Country\n                        </Label>\n                        <Input \n                        type=\"select\"\n                        name=\"country_id\"\n                        value={countryId}\n                        onChange={e=>handleCountrySelect(e.target.value)}\n                        >\n                          <option key=\"\" value=\"\">All Countries</option>\n                          {countryList.map((item,index)=>\n                            <option key={index} value={item.id}>{item.country_name}</option>\n                          )}\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          State\n                        </Label>\n                        <Input \n                        type=\"select\"\n                        name=\"state_id\"\n                        value={stateId}\n                        onChange={e=>handleStateSelect(e.target.value)}\n                        >\n                          <option key=\"\" value=\"\">All States</option>\n                          {stateList.map((item,index)=>\n                            <option key={index} value={item.id}>{item.state_name}</option>\n                          )}\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          City\n                        </Label>\n                        <Input \n                        type=\"select\"\n                        name=\"city_id\"\n                        value={cityId}\n                        onChange={e=>{setCityId(e.target.value);setStationId(\"\");}}\n                        >\n                          <option key=\"\" value=\"\">All Cities</option>\n                          {cityList.map((item,index)=>\n                            <option key={index} value={item.id}>{item.city_name}</option>\n                          )}\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          Station\n                        </Label>\n                        <Input \n                          type=\"select\"\n                          name=\"station\"\n                          value={stationId}\n                          onChange={e=>setStationId(e.target.value)}\n                        >\n                          <option key=\"\" value=\"\">All Stations</option>\n                          {stationNames.map((item,index)=>\n                            <option key={index} value={item.hub_master_id}>{item.name}</option>\n                          )}\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          Fleet Operator\n                        </Label>\n                        <Input \n                          type=\"select\"\n                          name=\"fleet_operator_id\"\n                          value={fleetOperatorId}\n                          onChange={e=>setFleetOperatorId(e.target.value)}\n                        >\n                          <option key=\"\" value=\"\">All Fleet</option>\n                          {fleetOpNames.map((item,index)=>\n                            <option key={index} value={item.fleet_operator_id}>{item.name}</option>\n                          )}\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          EV QR Code\n                        </Label>\n                        <Input \n                          type=\"number\"\n                          placeholder=\"EV QR Code\"\n                          name=\"ev_qr_code\"\n                          value={evQrCode}\n                          onChange={e=>setEvQrCode(e.target.value)}\n                        >\n                        </Input>\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          From Date\n                        </Label>\n                        <DatePicker\n                        placeholderText=\"From Date\"\n                        showTimeInput\n                        selected={fromDate}\n                        onChange={date=>setFromDate(date)}\n                        dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          To Date\n                        </Label>\n                        <DatePicker\n                        placeholderText=\"To Date\"\n                        showTimeInput\n                        selected={toDate}\n                        onChange={date=>setToDate(date)}\n                        dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    {/* <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          Start Time\n                        </Label>\n                        <DatePicker\n                        showTimeSelect\n                        placeholderText=\"Start Time\"\n                        selected={startTime}\n                        onChange={date=>setStartTime(date)}\n                        />\n                      </FormGroup>\n                    </Colxx>\n                    <Colxx lg={3} sm={12}>\n                      <FormGroup>\n                        <Label>\n                          End Time\n                        </Label>\n                        <DatePicker\n                        showTimeSelect\n                        placeholderText=\"End Time\"\n                        selected={endTime}\n                        onChange={date=>setEndTime(date)}\n                        />\n                      </FormGroup>\n                    </Colxx> */}\n                    <Colxx lg={6} sm={12}>\n                      <Button color=\"primary\" className=\"default mr-2\" onClick={() =>{setPageCount(1);getSwapReportAPICall();}} disabled={buttonDisabled}>\n                        <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Generate Report</b>\n                      </Button>\n                      <Button color=\"success\" className=\"default\" onClick={() =>{downloadSwapReportAPICall();}} disabled={buttonDisabled}>\n                        <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Download Report</b>\n                      </Button>\n                    </Colxx>\n                  </Row>\n                </CardBody>\n            </Card>\n        </Colxx>\n      </Row>\n      <Row>\n          <Colxx sm={12} lg={12}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Colxx md=\"6\">\n                    <h3>Swap Report</h3>\n                  </Colxx>\n                  {report.length>0 &&\n                    <Colxx md=\"6\">\n                      <div className=\"text-right mr-2 \">\n                        <span>Page </span>\n                        <UncontrolledDropdown className=\"d-inline-block\">\n                          <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                            {pageCount}\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdownMenu\">\n                            {renderPageList()}\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <span> of </span>\n                        {lastPageCount}\n                      </div>\n                    </Colxx>\n                  }\n                </Row>\n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Station</th>\n                      <th>Operator</th>\n                      <th>EV QR Code</th>\n                      <th>No. Of Swap</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"5\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                      report.length > 0 ?\n                          report.map((item,index)=>\n                            <tr key={index}>\n                              <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                              <td>{item.station_name}</td>\n                              <td>{item.operator}</td>\n                              <td>{item.e_qr_code}</td>\n                              <td>{item.total}</td>\n                            </tr>\n                          ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"5\">Data  Not  Found</td>\n                      </tr>\n                  }\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default SwapReport;","import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody, FormGroup, Label,\n  Input, Table,Button,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {getStationsAPI,weeklyBillRefReportAPI,downloadWeeklyBillRefReportAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\n\nconst WeeklyBillingRef = ({}) => {\n  const [buttonType,setButtonType] = useState(1);\n  //date states\n  const [fromDate,setFromDate] = useState();\n  const [toDate,setToDate] = useState();\n  //DTAE ERRORFLAGS\n  const [fromDateError,setFromDateError] = useState(false);\n  const [toDateError,setToDateError] = useState(false);\n  //time state\n  // const [startTime,setStartTime] = useState();\n  // const [endTime,setEndTime] = useState();\n  //station List\n  const [stationNames,setStationNames] = useState([]);\n  //report\n  const [report,setReport] = useState([]);\n  const [dates,setDates] = useState([]);\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(false);\n  //params\n  const [reportParams,setReportParams] = useState(null);\n\n  useEffect(()=>{\n    GetStationNamesAPICall();\n  },[])\n\n  //API calls\n  const GetStationNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNames(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getWeeklyBillRefReportAPICall = async(params) => {\n    setButtonDisabled(true);\n    setReport([]);\n    setDates([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.post(weeklyBillRefReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page);\n          setReport(responseData.data.data.energy_data);\n          setDates(responseData.data.data.selected_week_dates);\n        }else{\n            console.log(responseData.msg);\n        }\n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n  const downloadWeeklyBillRefReportAPICall = async(params) => {\n    setButtonDisabled(true);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.post(downloadWeeklyBillRefReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          const link = document.createElement('a');\n          link.href = responseData.data.file;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }else{\n          alert(responseData.msg);\n        }  \n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n        console.log(error);\n      })\n  }\n  //helper methods\n  //pagination method\n  const handlePageChange = (index) =>{\n    setPageCount(index+1)\n    getWeeklyBillRefReportAPICall(reportParams);\n  }\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={()=>handlePageChange(i)}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  //Forms\n  const initialValues = {\n    station:\"\",\n  };\n  \n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n          <span className=\"page_title\">Weekly Billing Report</span>\n          <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues} \n        onSubmit={(values)=>{\n          let tempFromDate,tempToDate;\n          if (fromDate == null || fromDate ==\"\" && toDate == null || toDate ==\"\") {\n            setFromDateError(true);\n            setToDateError(true);\n            return ;\n          }else if(fromDate == null || fromDate ==\"\" || toDate == null || toDate ==\"\"){\n            if (fromDate == null | fromDate ==\"\") {\n              setToDateError(false);\n              setFromDateError(true);\n              return;\n            }else if(toDate == null | toDate ==\"\"){\n              setFromDateError(false);\n              setToDateError(true);\n              return ;\n            }\n          }else{\n            setFromDateError(false);\n            setToDateError(false);\n            tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear();\n            tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear();\n          }\n          const params = {\n            hub_id:values.station,\n            from_date:tempFromDate,\n            to_date:tempToDate,\n            page:pageCount\n          }\n          setReportParams(params)\n          if(buttonType==1){\n            getWeeklyBillRefReportAPICall(params);\n          }else{\n            downloadWeeklyBillRefReportAPICall(params);\n          }\n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                    <Card>\n                        <CardBody>\n                          <Row>\n                            <Colxx lg={2} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Station\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"station\"\n                                value={values.station}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                  <option key={0} value={0}>All Station</option>\n                                  {stationNames.map((item,i)=>\n                                    <option key={i} value={item.hub_master_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.station && touched.station &&(\n                                  <span className=\"error\">{errors.station}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  From Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"From Date\"\n                                showTimeInput\n                                selected={fromDate}\n                                onChange={date=>setFromDate(date)}\n                                dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                                />\n                                {fromDateError &&\n                                  <span className=\"error\">{\"From date is required\"}</span>\n                                }\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  To Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"To Date\"\n                                showTimeInput\n                                selected={toDate}\n                                onChange={date=>setToDate(date)}\n                                dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                                />\n                                {toDateError &&\n                                  <span className=\"error\">{\"To date is required\"}</span>\n                                }\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={4} sm={12}>\n                                <Button color=\"primary\" className=\"default mt-4 mr-2\"  onClick={() =>{setButtonType(1);setPageCount(1);handleSubmit();}} disabled={buttonDisabled} >\n                                  <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Generate Report</b>\n                                </Button>\n                                <Button color=\"success\" className=\"default mt-4\"  onClick={() =>{setButtonType(2);handleSubmit();}} disabled={buttonDisabled} >\n                                  <b>Download Report</b>\n                                </Button>\n                            </Colxx>\n                          </Row>\n                        </CardBody>\n                    </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n      <Row>\n          <Colxx sm={12} lg={12}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Colxx md=\"6\">\n                  <h3>Weekly Billing Report</h3>\n                  </Colxx>\n                  {report.length>0 &&\n                    <Colxx md=\"6\">\n                      <div className=\"text-right mr-2 \">\n                        <span>Page </span>\n                        <UncontrolledDropdown className=\"d-inline-block\">\n                          <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                            {pageCount}\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdownMenu\">\n                            {renderPageList()}\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <span> of </span>\n                        {lastPageCount}\n                      </div>\n                    </Colxx>\n                  }\n                </Row>\n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Station</th>\n                      <th>EV Qr Code</th>\n                      {dates.length>0?\n                        <>\n                          <th>{dates[0]}</th>\n                          <th>{dates[1]}</th>\n                          <th>{dates[2]}</th>\n                          <th>{dates[3]}</th>\n                          <th>{dates[4]}</th>\n                          <th>{dates[5]}</th>\n                          <th>{dates[6]}</th>\n                        </>:\n                        <>\n                          <th>Date of Day1</th>\n                          <th>Date of Day2</th>\n                          <th>Date of Day3</th>\n                          <th>Date of Day4</th>\n                          <th>Date of Day5</th>\n                          <th>Date of Day6</th>\n                          <th>Date of Day7</th>\n                        </>\n                      }\n                      <th>Total Energy Supplied</th>\n                      <th>Total Amount  Billed</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {isLoading ?\n                      <tr>\n                          <td className=\"text-center\" colSpan=\"12\"><div className=\"custom-list-loading\" /></td>\n                      </tr> : \n                      report.length > 0 ?\n                          report.map((item,index)=>\n                            <tr key={index}>\n                              <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                              <td>{item.station_name}</td>\n                              <td>{item.e_qr_code}</td>\n                              <td>{item.Day_1}</td>\n                              <td>{item.Day_2}</td>\n                              <td>{item.Day_3}</td>\n                              <td>{item.Day_4}</td>\n                              <td>{item.Day_5}</td>\n                              <td>{item.Day_6}</td>\n                              <td>{item.Day_7}</td>\n                              <td>{item.total_energy_supp}</td>\n                              <td>{item.total_bill_amount}</td>\n                            </tr>\n                          ):<tr>\n                          <td className=\"text-center text-danger\" colSpan=\"12\">Data  Not  Found</td>\n                      </tr>\n                  }\n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default WeeklyBillingRef;","import React,{useState,useEffect} from 'react';\nimport {\n  Row, Card, CardBody, FormGroup, Label,\n  Input, Table,Button,DropdownItem,\n  DropdownMenu,\n  DropdownToggle,\n  UncontrolledDropdown,\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport {faultReportAPI,downloadfaultReportAPI,getStationsByCityAPI,getCountriesAPI,getStatesByCountryAPI,getCitiesByStateAPI,getOemAPI,getOwnersAPI} from '../../../constants/defaultValues'\nimport axios from 'axios';\nimport {Formik} from 'formik';\n\nconst FaultsAndAlerts = ({}) => {\n  const [buttonType,setButtonType] = useState(1);\n  //date states\n  const [fromDate,setFromDate] = useState();\n  const [toDate,setToDate] = useState();\n  //station List\n  const [stationNames,setStationNames] = useState([]);\n  //Pagination states\n  const [pageCount,setPageCount] = useState(\"1\");\n  const [lastPageCount,setLastPageCount] = useState(\"1\");\n  //state to disable button on click\n  const [buttonDisabled,setButtonDisabled] = useState(false);\n  //loader state\n  const [isLoading,setIsLoading] = useState(false);\n  // list state\n  const [countryList,setCountryList] = useState([]);\n  const [stateList,setStateList] = useState([]);\n  const [cityList,setCityList] = useState([]);\n  const [oemList,setOemList] = useState([]);\n  const [ownerList,setOwnerList] = useState([]);\n  const [countryId,setCountryId] = useState(\"\");\n  const [stateId,setStateId] = useState(\"\");\n  const [cityId,setCityId] = useState(\"\");\n  const [stationId,setStationId] = useState(\"\");\n  //params\n  const [reportParams,setReportParams] = useState(null);\n  const [report,setReport] = useState([]);\n\n  useEffect(()=>{\n    getCountryNamesAPICall();\n    getOemAPICall();\n    GetOwnerNamesAPICall();\n  },[]);\n\n  useEffect(()=>{\n    GetStationNamesAPICall(countryId,stateId,cityId);\n  },[countryId,stateId,cityId]);\n\n  //API calls\n  const GetStationNamesAPICall = async(country,state,city) => {\n    const currentUser = getCurrentUser();\n    await axios.get(getStationsByCityAPI+\"country_id=\"+country+\"&state_id=\"+state+\"&city_id=\"+city,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setStationNames(responseData.data)\n      }else{\n        setStationNames([]);\n      }\n    }).catch(error=>{\n      console.log(error);\n    });\n  }\n\n  const getOemAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getOemAPI,\n      {type:1},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {          \n          setOemList(responseData.data);\n        }else{\n          setOemList([])\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  const GetOwnerNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getOwnersAPI,\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n        setOwnerList(responseData.data)\n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n  const getCountryNamesAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.get(getCountriesAPI,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCountryList(responseData.data);\n        }else{\n            console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getStateNamesAPICall = async(country) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getStatesByCountryAPI,\n      {country_id:country},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setStateList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n  const getCityNamesAPICall = async(state) => {\n    const currentUser = getCurrentUser();\n    await axios.post(getCitiesByStateAPI,\n      {state_id:state},\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n            setCityList(responseData.data);\n        }else{\n          console.log(responseData.status,responseData.msg);\n        }\n      }).catch(error=>{\n        console.log(error);\n      })\n  }\n\n  //helper methods\n  //handle country select\n  const handleCountrySelect = (country) => {\n    setCountryId(country);\n    setStateId(\"\");\n    setCityId(\"\");\n    setStationId(\"\");\n    getStateNamesAPICall(country);\n  }\n  //handle state select\n  const handleStateSelect = (state) => {\n    setStateId(state);\n    setCityId(\"\");\n    setStationId(\"\");\n    getCityNamesAPICall(state);\n  }\n  //pagination method\n  const handlePageChange = (index) =>{\n    setPageCount(index+1)\n    getFaultReportAPICall(reportParams);\n  }\n  const renderPageList = () => {\n    const pageNumbers = [];\n    for (let i = 0; i <lastPageCount; i += 1) {\n      pageNumbers.push(\n        <DropdownItem key={i} onClick={()=>handlePageChange(i)}>\n          {i+1}\n        </DropdownItem>\n      );\n    }\n    return pageNumbers;\n  };\n  const getFaultReportAPICall = async(params) => {\n    setButtonDisabled(true);\n    setReport([]);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.post(faultReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          setLastPageCount(responseData.data.last_page);\n          setReport(responseData.data.data);\n        }else{\n            console.log(responseData.msg);\n        }\n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n      })\n  }\n  const downloadFaultReportAPICall = async(params) => {\n    setButtonDisabled(true);\n    setIsLoading(true);\n    const currentUser = getCurrentUser();\n    await axios.post(downloadfaultReportAPI,\n      params,\n      {headers:{Authorization: `Bearer ${currentUser.token}`}})\n      .then(response=>{\n        const responseData = response.data;\n        if (responseData.status === 1) {\n          const link = document.createElement('a');\n          link.href = responseData.data.file;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        }else{\n          alert(responseData.msg);\n        }  \n        setButtonDisabled(false);\n        setIsLoading(false);\n      }).catch(error=>{\n        setButtonDisabled(false);\n        setIsLoading(false);\n      })\n  }\n\n  const initialValues = {\n    bin:\"\",\n    oem_id:\"\",\n    owner_id:\"\",\n    charger_id:\"\",\n    connector_id:\"\",\n  };\n\n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n        <span className=\"page_title\">Faults and Alerts</span>\n        <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(values)=>{\n          let tempFromDate=null,tempToDate=null;\n          if (fromDate != null && fromDate !=\"\") {\n            tempFromDate = fromDate.getDate()+\"-\"+(fromDate.getMonth()+1)+\"-\"+fromDate.getFullYear()+\" \"+fromDate.getHours()+\":\"+fromDate.getMinutes()+\":\"+fromDate.getSeconds();\n          }\n          if (toDate != null && toDate !=\"\") {\n            tempToDate = toDate.getDate()+\"-\"+(toDate.getMonth()+1)+\"-\"+toDate.getFullYear()+\" \"+toDate.getHours()+\":\"+toDate.getMinutes()+\":\"+toDate.getSeconds();\n          }\n          const params = {\n            country_id:countryId,\n            state_id:stateId,\n            city_id:cityId,\n            hub_id:stationId,\n            bin:values.bin,\n            oem_id:values.oem_id,\n            owner_id:values.owner_id,\n            charger_id:values.charger_id,\n            connector_id:values.connector_id,\n            from_date:tempFromDate,\n            to_date:tempToDate,\n            page:pageCount\n          }\n          setReportParams(params);\n          if(buttonType==1){\n            getFaultReportAPICall(params);\n          }else{\n            downloadFaultReportAPICall(params);\n          }          \n        }} >\n          {({handleChange,handleBlur,handleSubmit,values,touched,errors})=>(\n            <>\n              <Row>\n                <Colxx xxs=\"12\" className=\"mb-4\">\n                    <Card>\n                        <CardBody>\n                          <Row>\n                          <Colxx md=\"6\">\n                            <h3>Select Option</h3>\n                          </Colxx>                            \n                          </Row>\n                          <hr/>\n                          <Row>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Country\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"country_id\"\n                                value={countryId}\n                                onChange={e=>handleCountrySelect(e.target.value)}\n                                >\n                                  <option>Select Country</option>\n                                  {countryList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.country_name}</option>\n                                  )}\n                                </Input>\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  State\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"state_id\"\n                                value={stateId}\n                                onChange={e=>handleStateSelect(e.target.value)}\n                                >\n                                  <option>Select State</option>\n                                  {stateList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.state_name}</option>\n                                  )}\n                                </Input>\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  City\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"city_id\"\n                                value={cityId}\n                                onChange={e=>{setCityId(e.target.value);setStationId(\"\");}}\n                                >\n                                  <option>Select City</option>\n                                  {cityList.map((item,index)=>\n                                    <option key={index} value={item.id}>{item.city_name}</option>\n                                  )}\n                                </Input>\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Station\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"station\"\n                                value={stationId}\n                                onChange={e=> setStationId(e.target.value)}>\n                                  <option>Select Station</option>\n                                  {stationNames.map((item,index)=>\n                                    <option key={index} value={item.hub_master_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  OEM\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"oem_id\"\n                                value={values.oem_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                  <option>Select OEM</option>\n                                  {oemList.map((item,index)=>\n                                    <option key={index} value={item.oem_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.oem_id && touched.oem_id &&(\n                                  <span className=\"error\">{errors.oem_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Owner\n                                </Label>\n                                <Input \n                                type=\"select\"\n                                name=\"owner_id\"\n                                value={values.owner_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                  <option>Select Owner</option>\n                                  {ownerList.map((item,index)=>\n                                    <option key={index} value={item.owner_master_id}>{item.name}</option>\n                                  )}\n                                </Input>\n                                {errors.owner_id && touched.owner_id &&(\n                                  <span className=\"error\">{errors.owner_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Charger\n                                </Label>\n                                <Input \n                                type=\"text\"\n                                placeholder=\"Charger Id\"\n                                name=\"charger_id\"\n                                value={values.charger_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                </Input>\n                                {errors.charger_id && touched.charger_id &&(\n                                  <span className=\"error\">{errors.charger_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  Connector\n                                </Label>\n                                <Input \n                                type=\"text\"\n                                placeholder=\"Connector Id\"\n                                name=\"connector_id\"\n                                value={values.connector_id}\n                                onChange={handleChange}\n                                onBlur={handleBlur}>\n                                </Input>\n                                {errors.connector_id && touched.connector_id &&(\n                                  <span className=\"error\">{errors.connector_id}</span>\n                                )}\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  From Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"From Date\"\n                                showTimeInput\n                                selected={fromDate}\n                                onChange={date=>setFromDate(date)}\n                                dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={3} sm={12}>\n                              <FormGroup>\n                                <Label>\n                                  To Date\n                                </Label>\n                                <DatePicker\n                                placeholderText=\"To Date\"\n                                showTimeInput\n                                selected={toDate}\n                                onChange={date=>setToDate(date)}\n                                dateFormat=\"dd/MM/yyyy hh:mm aa\"\n                                />\n                              </FormGroup>\n                            </Colxx>\n                            <Colxx lg={6} sm={12}>\n                              <Button color=\"primary\" className=\"default mt-4 mr-2\" disabled={buttonDisabled} onClick={() =>{setButtonType(1);setPageCount(1);handleSubmit();}} >\n                                <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Generate Report</b>\n                              </Button>\n                              <Button color=\"success\" className=\"default mt-4\" disabled={buttonDisabled} onClick={() =>{setButtonType(2);handleSubmit();}}  >\n                                <i className=\"glyph-icon simple-icon-check font-weight-bold\"></i> <b>Download Report</b>\n                              </Button>\n                            </Colxx>\n                          </Row>\n                        </CardBody>\n                    </Card>\n                </Colxx>\n              </Row>\n            </>\n          )}\n      </Formik>\n      <Row>\n          <Colxx sm={12} lg={12}>\n            <Card>\n              <CardBody>\n                <Row>\n                  <Colxx md=\"6\">\n                    <h3>Faults and Alerts Report</h3>\n                  </Colxx>\n                  {report.length>0 &&\n                    <Colxx md=\"6\">\n                      <div className=\"text-right mr-2 \">\n                        <span>Page </span>\n                        <UncontrolledDropdown className=\"d-inline-block\">\n                          <DropdownToggle caret color=\"outline-primary\" size=\"xs\" data-display=\"static\">\n                            {pageCount}\n                          </DropdownToggle>\n                          <DropdownMenu className=\"dropdownMenu\">\n                            {renderPageList()}\n                          </DropdownMenu>\n                        </UncontrolledDropdown>\n                        <span> of </span>\n                        {lastPageCount}\n                      </div>\n                    </Colxx>\n                  }\n                </Row>\n                <Table responsive bordered striped>\n                  <thead>\n                    <tr>\n                      <th>#</th>\n                      <th>Station</th>\n                      <th>Charger ID</th>\n                      <th>Connnector ID</th>\n                      <th>Date of occurrence</th>\n                      <th>Time of occurrence</th>\n                      <th>Alarm Detail</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {isLoading ?\n                        <tr>\n                            <td className=\"text-center\" colSpan=\"7\"><div className=\"custom-list-loading\" /></td>\n                        </tr> : \n                        report.length > 0 ?\n                            report.map((item,index)=>\n                            <tr key={index}>\n                              <th scope=\"row\">{pageCount==1?index+1:(pageCount-1)*10+index +1}</th>\n                              <td>{item.station_name}</td>\n                              <td>{item.charger_id}</td>\n                              <td>{item.connector_id}</td>\n                              <td>{item.occur_date}</td>\n                              <td>{item.occur_time}</td>\n                              <td>{item.alarms}</td>\n                            </tr>\n                            ):\n                            <tr>\n                            <td className=\"text-center text-danger\" colSpan=\"7\">Data  Not  Found</td>\n                            </tr>                            \n                    }                    \n                  </tbody>\n                </Table>\n              </CardBody>\n            </Card>\n          </Colxx>\n      </Row>\n    </>\n  );\n};\n\nexport default FaultsAndAlerts;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport IconCard from '../../../../components/cards/IconCard';\nimport GlideComponent from \"../../../../components/carousel/GlideComponent\";\nconst IconCardsCarousel = ({ className = 'icon-cards-row' }) => {\n   \n\n  return (\n    <div className={className}> \n      {/* <GlideComponent\n        settings={{\n          gap: 2,\n          perView: 5,\n          type: 'carousel',\n          breakpoints: {\n            320: { perView: 1 },\n            520: { perView: 2 },\n            620: { perView: 3 },\n            720: { perView: 4 },\n            \n          },\n          hideNav: true,\n        }}\n      >\n        {mgr_carousel_data.map((item, index) => {\n          return (\n            <div key={`icon_card_${index}`}>\n              <IconCard {...item} className=\"mb-3\" />\n            </div>\n          );\n        })}\n      </GlideComponent>  */}\n      <div className=\"dashboard-top-row\">\n        {mgr_carousel_data.map((item, index) => {\n            return (\n              <div key={`icon_card_${index}`} className=\"dashboard-top-cards\">\n                <IconCard {...item} className=\"mb-3\" />\n              </div>\n            );\n          })}\n      </div>\n    </div>\n  );\n};\nlet mgr_carousel_data = [\n    {title: 'dashboard.active-charger',icon: 'iconsminds-flash-2',value: 0,},\n    {title: 'dashboard.connector',icon: 'iconsminds-plug-in',value: 0,},\n    { title: 'dashboard.batteries', icon: 'iconsminds-battery-100', value: 0 },\n    {title: 'dashboard.ev',icon: 'iconsminds-car',value: 0, },\n    { title: 'dashboard.otp', icon: 'simple-icon-envelope', value: 0 },\n  ];  \n  const setChargerCount = (value) => {mgr_carousel_data[0].value=value;};\n  const setConnectorCount = (value) => {mgr_carousel_data[1].value=value;};\n  const setBatteriesCount = (value) => {mgr_carousel_data[2].value=value;};\n  const setEVCount = (value) => {mgr_carousel_data[3].value=value;};\n  const setOTP = (value) => {mgr_carousel_data[4].value=value;};\n\n\n\nexport  {IconCardsCarousel,setChargerCount,setConnectorCount,setBatteriesCount,setEVCount,setOTP};\n","import React,{useState,useEffect} from 'react';\nimport { \n  Row,\n } from 'reactstrap';\nimport { Colxx, Separator } from '../../../components/common/CustomBootstrap';\nimport {getDashboardDataAPI} from '../../../constants/defaultValues'\nimport { getCurrentUser } from '../../../helpers/Utils'\nimport axios from 'axios';\nimport { ThemeColors } from '../../../helpers/ThemeColors';\nimport {IconCardsCarousel,setChargerCount,setConnectorCount,setBatteriesCount,setEVCount} from './operator/cardCarousel';\nimport {ChargerDoughnut, setChargerChartData} from './operator/ChargerDoughnut';\nimport {ConnectorDoughnut,setConnectorChartData} from './operator/ConnectorDoughnut';\nimport {BatteryStatusChart,setBatteryChartData} from './operator/BatteryStatusChart';\n\n\nconst colors = ThemeColors();\n\nconst Operator_dashboard = ({ match }) => {\n \n  const [batteryStatus,setBatteryStatus] = useState('0'); //batteries chart dropdown\n   //Slots useState\n  const [refresh,setRefresh]= useState({});\n  useEffect(()=>{\n  \n    GetDashboardDataAPICall();\n  },[batteryStatus])\n\n  //API call\n  const GetDashboardDataAPICall = async() => {\n    const currentUser = getCurrentUser();\n    await axios.post(getDashboardDataAPI,\n    {battery_satus_id:batteryStatus},\n    {headers:{Authorization: `Bearer ${currentUser.token}`}})\n    .then(response=>{\n      const responseData = response.data;\n      if (responseData.status === 1) {\n     setBatteriesCount(responseData.data.batteries.total)\n       \n       setChargerCount(responseData.data.chargers.total);\n      \n        setEVCount(responseData.data.ev.total);\n        setConnectorCount(responseData.data.slots.total);\n\n       setBatteryChartData(0,responseData.data.batteries.total,responseData.data.batteries.in_charging);\n       setBatteryChartData(1,responseData.data.batteries.total,responseData.data.batteries.charged);\n       setBatteryChartData(2,responseData.data.batteries.total,responseData.data.batteries.discharged);\n       setBatteryChartData(3,responseData.data.batteries.total,responseData.data.batteries.faulty);\n       setBatteryChartData(4,responseData.data.batteries.total,responseData.data.batteries.faulty);\n       \n       setChargerChartData(responseData.data.chargers.operational,responseData.data.chargers.faulty);\n       setConnectorChartData( responseData.data.slots.inuse,responseData.data.slots.available,responseData.data.slots.faulty);\n       setRefresh(responseData);\n          \n      }else{\n        console.log(responseData.msg);\n      }\n    }).catch(error=>{\n      console.log(error);\n    })\n  }\n\n \n  return (\n    <>\n      <Row>\n        <Colxx xxs=\"12\">\n         <span className=\"page_title\">Operator Dashboard</span>\n         <Separator className=\"mb-5\" />\n        </Colxx>\n      </Row>\n      <Row>\n        <Colxx lg=\"12\" xl=\"12\" md=\"12\">\n          <IconCardsCarousel />         \n        </Colxx>       \n      </Row>\n      <Row className=\"mb-12\">\n        <Colxx sm=\"12\" md=\"4\" className=\"mb-4\">\n          <ChargerDoughnut />\n        </Colxx>\n        <Colxx sm=\"12\" md=\"4\" className=\"mb-4\">\n          <BatteryStatusChart cardClass=\"dashboard-progress\"  />\n        </Colxx>\n    \n        <Colxx sm=\"12\" md=\"4\" className=\"mb-4\">\n          <ConnectorDoughnut />\n        </Colxx>       \n    </Row>\n    </>\n  );\n};\n\nexport default Operator_dashboard;"],"sourceRoot":""}